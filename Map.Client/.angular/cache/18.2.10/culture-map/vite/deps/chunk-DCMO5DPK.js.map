{
  "version": 3,
  "sources": ["../../../../../../node_modules/@arcgis/core/layers/support/associatedFeatureServiceUtils.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { id as e } from \"../../kernel.js\";\nimport r from \"../../request.js\";\nimport t from \"../../core/Error.js\";\nimport { throwIfAbortError as n } from \"../../core/promiseUtils.js\";\nimport { parse as a } from \"./arcgisLayerUrl.js\";\nimport o from \"../../portal/Portal.js\";\nimport i from \"../../portal/PortalItem.js\";\nasync function s(e, r) {\n  const n = a(e);\n  if (!n) throw new t(\"invalid-url\", \"Invalid scene service url\");\n  const o = {\n    ...r,\n    sceneServerUrl: n.url.path,\n    layerId: n.sublayer ?? void 0\n  };\n  if (o.sceneLayerItem ??= await l(o), null == o.sceneLayerItem) return f(o.sceneServerUrl.replace(\"/SceneServer\", \"/FeatureServer\"), o);\n  const i = await y(o);\n  if (!i?.url) throw new t(\"related-service-not-found\", \"Could not find feature service through portal item relationship\");\n  o.featureServiceItem = i;\n  const s = await f(i.url, o);\n  return s.portalItem = i, s;\n}\nasync function l(e) {\n  const r = (await c(e)).serviceItemId;\n  if (!r) return null;\n  const t = new i({\n      id: r,\n      apiKey: e.apiKey\n    }),\n    a = await u(e);\n  null != a && (t.portal = new o({\n    url: a\n  }));\n  try {\n    return t.load({\n      signal: e.signal\n    });\n  } catch (s) {\n    return n(s), null;\n  }\n}\nasync function c(e) {\n  if (e.rootDocument) return e.rootDocument;\n  const t = {\n    query: {\n      f: \"json\",\n      ...e.customParameters,\n      token: e.apiKey\n    },\n    responseType: \"json\",\n    signal: e.signal\n  };\n  try {\n    const n = await r(e.sceneServerUrl, t);\n    e.rootDocument = n.data;\n  } catch {\n    e.rootDocument = {};\n  }\n  return e.rootDocument;\n}\nasync function u(t) {\n  const a = e?.findServerInfo(t.sceneServerUrl);\n  if (a?.owningSystemUrl) return a.owningSystemUrl;\n  const o = t.sceneServerUrl.replace(/(.*\\/rest)\\/.*/i, \"$1\") + \"/info\";\n  try {\n    const e = (await r(o, {\n      query: {\n        f: \"json\"\n      },\n      responseType: \"json\",\n      signal: t.signal\n    })).data.owningSystemUrl;\n    if (e) return e;\n  } catch (i) {\n    n(i);\n  }\n  return null;\n}\nasync function f(e, n) {\n  const o = a(e);\n  if (!o) throw new t(\"invalid-feature-service-url\", \"Invalid feature service url\");\n  const i = o.url.path,\n    s = n.layerId;\n  if (null == s) return {\n    serverUrl: i\n  };\n  const l = c(n),\n    u = n.featureServiceItem ? await n.featureServiceItem.fetchData(\"json\") : null,\n    f = (u?.layers?.[0] || u?.tables?.[0])?.customParameters,\n    y = e => {\n      const t = {\n        query: {\n          f: \"json\",\n          ...f\n        },\n        responseType: \"json\",\n        authMode: e,\n        signal: n.signal\n      };\n      return r(i, t);\n    },\n    m = y(\"anonymous\").catch(() => y(\"no-prompt\")),\n    [p, d] = await Promise.all([m, l]),\n    v = d?.layers,\n    w = p.data && p.data.layers;\n  if (!Array.isArray(w)) throw new Error(\"expected layers array\");\n  if (Array.isArray(v)) for (let r = 0; r < Math.min(v.length, w.length); r++) {\n    if (v[r].id === s) return {\n      serverUrl: i,\n      layerId: w[r].id\n    };\n  } else if (null != s && s < w.length) return {\n    serverUrl: i,\n    layerId: w[s].id\n  };\n  throw new Error(\"could not find matching associated sublayer\");\n}\nasync function y({\n  sceneLayerItem: e,\n  signal: r\n}) {\n  if (!e) return null;\n  try {\n    const t = (await e.fetchRelatedItems({\n      relationshipType: \"Service2Service\",\n      direction: \"reverse\"\n    }, {\n      signal: r\n    })).find(e => \"Feature Service\" === e.type) || null;\n    if (!t) return null;\n    const n = new i({\n      portal: t.portal,\n      id: t.id\n    });\n    return await n.load(), n;\n  } catch (t) {\n    return n(t), null;\n  }\n}\nexport { s as findAssociatedFeatureService };"],
  "mappings": "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",
  "names": ["s", "t", "a", "l", "u", "f", "y", "e", "d"]
}
