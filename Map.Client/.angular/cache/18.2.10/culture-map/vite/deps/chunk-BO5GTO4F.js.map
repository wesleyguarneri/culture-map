{
  "version": 3,
  "sources": ["../../../../../../node_modules/@arcgis/core/core/date.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nfunction e(e) {\n  return null != r(e) || null != u(e);\n}\nfunction t(e) {\n  return s.test(e);\n}\nfunction n(e) {\n  return r(e) ?? u(e);\n}\nfunction u(e) {\n  const t = new Date(e);\n  return o(t, e) ? Number.isNaN(t.getTime()) ? null : t.getTime() - 6e4 * t.getTimezoneOffset() : null;\n}\nfunction r(e) {\n  const t = s.exec(e);\n  if (!t?.groups) return null;\n  const n = t.groups,\n    u = +n.year,\n    r = +n.month - 1,\n    o = +n.day,\n    i = +(n.hours ?? \"0\"),\n    f = +(n.minutes ?? \"0\"),\n    l = +(n.seconds ?? \"0\");\n  if (i > 23) return null;\n  if (f > 59) return null;\n  if (l > 59) return null;\n  const m = n.ms ?? \"0\",\n    a = m ? +m.padEnd(3, \"0\").substring(0, 3) : 0;\n  let c;\n  if (n.isUTC || !n.offsetSign) c = Date.UTC(u, r, o, i, f, l, a);else {\n    const e = +n.offsetHours,\n      t = +n.offsetMinutes;\n    c = 6e4 * (\"+\" === n.offsetSign ? -1 : 1) * (60 * e + t) + Date.UTC(u, r, o, i, f, l, a);\n  }\n  return Number.isNaN(c) ? null : c;\n}\nconst s = /^(?:(?<year>-?\\d{4,})-(?<month>\\d{2})-(?<day>\\d{2}))(?:T(?<hours>\\d{2}):(?<minutes>\\d{2}):(?<seconds>\\d{2})(?:\\.(?<ms>\\d+))?)?(?:(?<isUTC>Z)|(?:(?<offsetSign>\\+|-)(?<offsetHours>\\d{2}):(?<offsetMinutes>\\d{2})))?$/;\nfunction o(e, t) {\n  if (Number.isNaN(e.getTime())) return !1;\n  let n = !0;\n  if (f && /\\d+\\W*$/.test(t)) {\n    const e = t.match(/[a-zA-Z]{2,}/);\n    if (e) {\n      let t = !1,\n        u = 0;\n      for (; !t && u <= e.length;) t = !i.test(e[u]), u++;\n      n = !t;\n    }\n  }\n  return n;\n}\nconst i = /^((jan(uary)?)|(feb(ruary)?)|(mar(ch)?)|(apr(il)?)|(may)|(jun(e)?)|(jul(y)?)|(aug(ust)?)|(sep(tember)?)|(oct(ober)?)|(nov(ember)?)|(dec(ember)?)|(am)|(pm)|(gmt)|(utc))$/i,\n  f = !Number.isNaN(new Date(\"technology 10\").getTime());\nexport { e as isDateString, t as isISO8601Date, n as parseDate };"],
  "mappings": ";AAIA,SAAS,EAAEA,IAAG;AACZ,SAAO,QAAQ,EAAEA,EAAC,KAAK,QAAQ,EAAEA,EAAC;AACpC;AACA,SAAS,EAAEA,IAAG;AACZ,SAAO,EAAE,KAAKA,EAAC;AACjB;AACA,SAAS,EAAEA,IAAG;AACZ,SAAO,EAAEA,EAAC,KAAK,EAAEA,EAAC;AACpB;AACA,SAAS,EAAEA,IAAG;AACZ,QAAMC,KAAI,IAAI,KAAKD,EAAC;AACpB,SAAO,EAAEC,IAAGD,EAAC,IAAI,OAAO,MAAMC,GAAE,QAAQ,CAAC,IAAI,OAAOA,GAAE,QAAQ,IAAI,MAAMA,GAAE,kBAAkB,IAAI;AAClG;AACA,SAAS,EAAED,IAAG;AACZ,QAAMC,KAAI,EAAE,KAAKD,EAAC;AAClB,MAAI,CAACC,IAAG,OAAQ,QAAO;AACvB,QAAMC,KAAID,GAAE,QACVE,KAAI,CAACD,GAAE,MACPE,KAAI,CAACF,GAAE,QAAQ,GACfG,KAAI,CAACH,GAAE,KACPI,KAAI,EAAEJ,GAAE,SAAS,MACjBK,KAAI,EAAEL,GAAE,WAAW,MACnB,IAAI,EAAEA,GAAE,WAAW;AACrB,MAAII,KAAI,GAAI,QAAO;AACnB,MAAIC,KAAI,GAAI,QAAO;AACnB,MAAI,IAAI,GAAI,QAAO;AACnB,QAAM,IAAIL,GAAE,MAAM,KAChB,IAAI,IAAI,CAAC,EAAE,OAAO,GAAG,GAAG,EAAE,UAAU,GAAG,CAAC,IAAI;AAC9C,MAAI;AACJ,MAAIA,GAAE,SAAS,CAACA,GAAE,WAAY,KAAI,KAAK,IAAIC,IAAGC,IAAGC,IAAGC,IAAGC,IAAG,GAAG,CAAC;AAAA,OAAO;AACnE,UAAMP,KAAI,CAACE,GAAE,aACXD,KAAI,CAACC,GAAE;AACT,QAAI,OAAO,QAAQA,GAAE,aAAa,KAAK,MAAM,KAAKF,KAAIC,MAAK,KAAK,IAAIE,IAAGC,IAAGC,IAAGC,IAAGC,IAAG,GAAG,CAAC;AAAA,EACzF;AACA,SAAO,OAAO,MAAM,CAAC,IAAI,OAAO;AAClC;AACA,IAAM,IAAI;AACV,SAAS,EAAEP,IAAGC,IAAG;AACf,MAAI,OAAO,MAAMD,GAAE,QAAQ,CAAC,EAAG,QAAO;AACtC,MAAIE,KAAI;AACR,MAAI,KAAK,UAAU,KAAKD,EAAC,GAAG;AAC1B,UAAMD,KAAIC,GAAE,MAAM,cAAc;AAChC,QAAID,IAAG;AACL,UAAIC,KAAI,OACNE,KAAI;AACN,aAAO,CAACF,MAAKE,MAAKH,GAAE,SAAS,CAAAC,KAAI,CAAC,EAAE,KAAKD,GAAEG,EAAC,CAAC,GAAGA;AAChD,MAAAD,KAAI,CAACD;AAAA,IACP;AAAA,EACF;AACA,SAAOC;AACT;AACA,IAAM,IAAI;AAAV,IACE,IAAI,CAAC,OAAO,OAAM,oBAAI,KAAK,eAAe,GAAE,QAAQ,CAAC;",
  "names": ["e", "t", "n", "u", "r", "o", "i", "f"]
}
