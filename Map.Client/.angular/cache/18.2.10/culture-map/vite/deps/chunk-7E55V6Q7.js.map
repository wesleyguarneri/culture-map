{
  "version": 3,
  "sources": ["../../../../../../node_modules/@arcgis/core/chunks/OITCompositing.glsl.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { ScreenSpacePass as e } from \"../views/3d/webgl-engine/core/shaderLibrary/ScreenSpacePass.glsl.js\";\nimport { NoParameters as r, glsl as o } from \"../views/3d/webgl-engine/core/shaderModules/interfaces.js\";\nimport { ShaderBuilder as a } from \"../views/3d/webgl-engine/core/shaderModules/ShaderBuilder.js\";\nimport { Texture2DPassUniform as t } from \"../views/3d/webgl-engine/core/shaderModules/Texture2DPassUniform.js\";\nclass s extends r {}\nfunction n() {\n  const r = new a();\n  return r.include(e), r.fragment.uniforms.add(new t(\"colorTexture\", e => e.colorTexture), new t(\"alphaTexture\", e => e.alphaTexture), new t(\"frontFaceTexture\", e => e.frontFaceTexture)), r.fragment.code.add(o`void main() {\nfloat srcAlpha = texture(alphaTexture, uv).r;\nif(srcAlpha <= 1e-5){\ndiscard;\n}\nvec4 srcColor = texture(colorTexture, uv);\nvec4 frontFace = texture(frontFaceTexture, uv);\nfragColor = vec4(mix(srcColor.rgb / srcAlpha, frontFace.rgb, frontFace.a), 1.0 - srcColor.a);\n}`), r;\n}\nconst c = Object.freeze(Object.defineProperty({\n  __proto__: null,\n  OITCompositingPassParameters: s,\n  build: n\n}, Symbol.toStringTag, {\n  value: \"Module\"\n}));\nexport { s as O, c as a, n as b };"],
  "mappings": ";;;;;;;;;;;;;;;AAQA,IAAMA,KAAN,cAAgB,EAAE;AAAC;AACnB,SAASC,KAAI;AACX,QAAM,IAAI,IAAIC,GAAE;AAChB,SAAO,EAAE,QAAQA,EAAC,GAAG,EAAE,SAAS,SAAS,IAAI,IAAI,EAAE,gBAAgB,OAAK,EAAE,YAAY,GAAG,IAAI,EAAE,gBAAgB,OAAK,EAAE,YAAY,GAAG,IAAI,EAAE,oBAAoB,OAAK,EAAE,gBAAgB,CAAC,GAAG,EAAE,SAAS,KAAK,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQ9M,GAAG;AACL;AACA,IAAM,IAAI,OAAO,OAAO,OAAO,eAAe;AAAA,EAC5C,WAAW;AAAA,EACX,8BAA8BF;AAAA,EAC9B,OAAOC;AACT,GAAG,OAAO,aAAa;AAAA,EACrB,OAAO;AACT,CAAC,CAAC;",
  "names": ["s", "n", "o"]
}
