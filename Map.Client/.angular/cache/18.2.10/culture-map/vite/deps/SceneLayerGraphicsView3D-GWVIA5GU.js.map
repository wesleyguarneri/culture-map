{
  "version": 3,
  "sources": ["../../../../../../node_modules/@arcgis/core/views/3d/layers/I3SPointsWorkerHandle.js", "../../../../../../node_modules/@arcgis/core/views/3d/layers/i3s/I3SGraphicsMap.js", "../../../../../../node_modules/@arcgis/core/views/3d/layers/SceneLayerGraphicsView3D.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { WorkerHandle as e } from \"../../../core/workers/WorkerHandle.js\";\nclass r extends e {\n  constructor(e) {\n    super(\"SceneLayerWorker\", \"dracoDecompressPointCloudData\", {\n      dracoDecompressPointCloudData: e => [e.geometryBuffer]\n    }, e, {\n      hasInitialize: !0\n    });\n  }\n}\nexport { r as I3SPointsWorkerHandle };", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport e from \"../../../../core/Evented.js\";\nimport \"../../../../core/has.js\";\nimport { someMap as t } from \"../../../../core/MapUtils.js\";\nclass s extends e {\n  constructor(e, t) {\n    super(), this._updateAndCompare = e, this._notifyUpdated = t, this._nodes = new Map(), this._graphics = new Map(), this._duplicates = new Map();\n  }\n  clear() {\n    if (this._graphics.size > 0) {\n      const e = this.toArray();\n      this._graphics.clear(), this.emit(\"change\", {\n        added: [],\n        removed: e\n      });\n    }\n    this._nodes.clear();\n  }\n  get length() {\n    return this._graphics.size;\n  }\n  get(e) {\n    return this._graphics.get(e);\n  }\n  getNode(e) {\n    return this._nodes.get(e);\n  }\n  hasNode(e) {\n    return this._nodes.has(e);\n  }\n  nodes() {\n    return this._nodes.values();\n  }\n  addNode(e, t) {\n    this._nodes.set(e, t);\n    const s = t.graphics;\n    if (0 === s.length) return;\n    const i = new Set();\n    for (let o = 0; o < s.length; o++) {\n      const t = s[o],\n        n = t.objectId,\n        h = this._graphics.get(n);\n      if (h) {\n        i.add(n), t !== h && (s[o] = h);\n        const r = this._duplicates.get(n);\n        r ? r.push(e) : this._duplicates.set(n, [h.nodeIndex, e]);\n      } else t.nodeIndex = e, this._graphics.set(n, t);\n    }\n    i.size && this._updateForeignGraphics(t);\n    const n = i.size > 0 ? s.filter(e => !i.has(e.objectId)) : s;\n    n.length > 0 && this.emit(\"change\", {\n      added: n,\n      removed: []\n    });\n  }\n  removeNode(e) {\n    const t = this._nodes.get(e);\n    if (!t) return;\n    this._nodes.delete(e);\n    const s = new Set(),\n      i = [];\n    for (const n of t.graphics) {\n      const t = n.objectId,\n        o = this._graphics.get(t);\n      if (!o) continue;\n      const h = this._duplicates.get(t);\n      if (h) {\n        const i = h.indexOf(e);\n        if (-1 === i) continue;\n        if (h.splice(i, 1), o.nodeIndex === e) {\n          let e = this.getNode(h[0]);\n          for (let t = 1; t < h.length; t++) {\n            const s = this.getNode(h[t]);\n            (null == e || null != s && s.node.level > e.node.level) && (e = s);\n          }\n          null != e && s.add(e);\n        }\n        1 === h.length && this._duplicates.delete(t);\n      } else this._graphics.delete(t), i.push(n);\n    }\n    i.length > 0 && this.emit(\"change\", {\n      added: [],\n      removed: i\n    }), s.forEach(e => this._updateForeignGraphics(e));\n  }\n  _updateForeignGraphics(e) {\n    const t = [],\n      s = e.node.index,\n      i = e.node.level;\n    let n = 0;\n    for (; n < e.graphics.length;) {\n      const o = e.graphics[n].nodeIndex;\n      if (o === s) {\n        n++;\n        continue;\n      }\n      let h = 1;\n      for (; n + h < e.graphics.length && e.graphics[n + h].nodeIndex === o;) h++;\n      const r = this.getNode(o);\n      if (null != r && r.node.level > i) n += h;else {\n        for (let i = n; i < n + h; i++) {\n          const n = e.graphics[i];\n          n.nodeIndex = s, this._updateAndCompare(n, e, i) && t.push(n);\n        }\n        n += h;\n      }\n    }\n    t.length > 0 && this._notifyUpdated(t);\n  }\n  toArray() {\n    return Array.from(this._graphics.values());\n  }\n  find(e) {\n    let s;\n    return t(this._graphics, t => !!e(t) && (s = t, !0)), s;\n  }\n  forEach(e) {\n    this._graphics.forEach(t => e(t));\n  }\n  forEachNode(e) {\n    this._nodes.forEach((t, s) => e(t, s));\n  }\n  get nodeCount() {\n    return this._nodes.size;\n  }\n  _checkInvariants() {\n    const e = new Map();\n    this._nodes.forEach((t, s) => {\n      t.graphics.forEach(t => {\n        e.set(t.objectId, 1 + (e.get(t.objectId) ?? 0)), this._duplicates.get(t.objectId);\n      });\n    }), e.forEach((e, t) => {\n      const s = this._graphics.get(t);\n      if (!s) return;\n      if (!this._nodes.get(s.nodeIndex)) return;\n      const i = this._duplicates.get(t);\n      i && i.forEach(e => {\n        this._nodes.get(e);\n      });\n    });\n  }\n}\nexport { s as I3SGraphicsMap };", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { _ as e } from \"../../../chunks/tslib.es6.js\";\nimport t from \"../../../Graphic.js\";\nimport { binaryIndexOf as r } from \"../../../core/arrayUtils.js\";\nimport \"../../../core/has.js\";\nimport i from \"../../../core/Logger.js\";\nimport { destroyMaybe as s } from \"../../../core/maybe.js\";\nimport { initial as o, watch as a } from \"../../../core/reactiveUtils.js\";\nimport { estimateSize as n } from \"../../../core/typedArrayUtil.js\";\nimport { property as l } from \"../../../core/accessorSupport/decorators/property.js\";\nimport { subclass as d } from \"../../../core/accessorSupport/decorators/subclass.js\";\nimport { s as u } from \"../../../chunks/vec32.js\";\nimport { ZEROS as h, create as p } from \"../../../core/libs/gl-matrix-2/factories/vec3f64.js\";\nimport { projectBuffer as c } from \"../../../geometry/projection/projectBuffer.js\";\nimport { projectVectorToVector as g } from \"../../../geometry/projection/projectVectorToVector.js\";\nimport { extentContainsCoords3D as m, extentContainsCoords2D as y } from \"../../../geometry/support/contains.js\";\nimport { newDoubleArray as f, doubleArrayFrom as _ } from \"../../../geometry/support/DoubleArray.js\";\nimport { getGeometryZScaler as b } from \"../../../geometry/support/zscale.js\";\nimport { fallbackObjectIDAttribute as v } from \"../../../layers/LayerConstants.js\";\nimport { estimateSize as I } from \"../../../layers/graphics/dehydratedFeatures.js\";\nimport { makeDehydratedPoint as x } from \"../../../layers/graphics/dehydratedPoint.js\";\nimport { hydrateGraphic as E } from \"../../../layers/graphics/hydratedFeatures.js\";\nimport w from \"../../../layers/graphics/controllers/I3SOnDemandController.js\";\nimport N from \"../../../layers/support/FeatureFilter.js\";\nimport j from \"../../../rest/support/Query.js\";\nimport { isBasemapLayer as O } from \"../../../support/basemapUtils.js\";\nimport { I3SPointsWorkerHandle as C } from \"./I3SPointsWorkerHandle.js\";\nimport { LayerView3D as D } from \"./LayerView3D.js\";\nimport { Graphics3DFeatureProcessor as S } from \"./graphics/Graphics3DFeatureProcessor.js\";\nimport { QueryEngine as F } from \"./graphics/QueryEngine.js\";\nimport { createInteractiveEditSession as G, normalizeEditResultsEvent as A, processAttributeEdits as P } from \"./i3s/featureEditing.js\";\nimport { I3SGraphicsMap as L } from \"./i3s/I3SGraphicsMap.js\";\nimport { I3SOverrides as V } from \"./i3s/I3SOverrides.js\";\nimport { checkRecyclable as R, checkSpatialReferences as M, containsDraco as H, whenGraphicAttributes as Q, getCachedAttributeValue as U } from \"./i3s/I3SUtil.js\";\nimport { DefinitionExpressionSceneLayerView as q } from \"./support/DefinitionExpressionSceneLayerView.js\";\nimport { defineFieldProperties as T } from \"./support/fieldProperties.js\";\nimport { LayerViewPerformanceInfo as B } from \"./support/LayerViewPerformanceInfo.js\";\nimport { PopupSceneLayerView as k } from \"./support/PopupSceneLayerView.js\";\nimport { SceneLayerViewRequiredFields as z } from \"./support/SceneLayerViewRequiredFields.js\";\nimport { TemporalSceneLayerView as W } from \"./support/TemporalSceneLayerView.js\";\nimport { debugFlags as Z } from \"../support/debugFlags.js\";\nimport { compute as K } from \"../support/orientedBoundingBox.js\";\nimport { updatingProgress as Y } from \"../support/updatingProperties.js\";\nimport { Vertices as $ } from \"../webgl-engine/lib/Attribute.js\";\nimport { UpdatePolicy as J } from \"../webgl-engine/lib/UpdatePolicy.js\";\nimport X from \"../../layers/SceneLayerView.js\";\nimport { hasPopupTemplate as ee } from \"../../layers/support/popupUtils.js\";\nimport { TaskPriority as te } from \"../../support/Scheduler.js\";\nconst re = T();\nclass ie {\n  constructor(e, t, r, i) {\n    this.graphics = e, this.featureIds = t, this.attributeInfo = r, this.node = i;\n  }\n}\nlet se = class extends W(q(k(D(X)))) {\n  constructor() {\n    super(...arguments), this.type = \"scene-layer-graphics-3d\", this._queryEngine = null, this._memCache = null, this._interactiveEditingSessions = new Map(), this._pendingEditsQueue = Promise.resolve(), this.loadedGraphics = new L((e, t, r) => le(e, t, r), e => this.processor.graphicsCore.recreateGraphics(e)), this.holeFilling = \"always\", this.progressiveLoadFactor = 1, this.supportsHeightUnitConversion = !0, this._coordinatesOutsideExtentErrors = 0, this._maxCoordinatesOutsideExtentErrors = 20;\n  }\n  tryRecycleWith(e, t) {\n    return e.url === this.layer.url && this._i3sOverrides.isEmpty ? e.load(t).then(() => {\n      R(this.layer, e, this._i3sOverrides), this.layer = e, this._i3sOverrides.destroy();\n      const t = this.view.resourceController?.memoryController;\n      this._i3sOverrides = new V({\n        view: this.view,\n        layer: e,\n        memoryController: t\n      }), s(this._queryEngine), this._setupQueryEngine(), this.processor.resetObjectStates();\n    }) : null;\n  }\n  initialize() {\n    this.addResolvingPromise(this.layer.indexInfo);\n    const e = this.view.resourceController?.memoryController;\n    this._i3sOverrides = new V({\n      view: this.view,\n      layer: this.layer,\n      memoryController: e\n    }), M(this.layer, this.view.spatialReference, this.view.viewingMode), this._fieldsHelper = new z({\n      layerView: this\n    }), this._updatingHandles.add(() => this.layer.rangeInfos, e => this._rangeInfosChanged(e), o), this._updatingHandles.add(() => this.layer.renderer, (e, t) => this._rendererChange(e, t)), this._updatingHandles.add(() => [this.parsedDefinitionExpression, this._excludeObjectIdsSorted], () => this._filterChange()), this.addHandles(a(() => Z.I3S_TREE_SHOW_TILES, e => {\n      if (e && !this._treeDebugger) {\n        const e = this._controller.crsIndex;\n        import(\"./support/I3STreeDebugger.js\").then(({\n          I3STreeDebugger: t\n        }) => {\n          !this._treeDebugger && Z.I3S_TREE_SHOW_TILES && (this._treeDebugger = new t({\n            lv: this,\n            view: this.view,\n            nodeSR: e\n          }));\n        });\n      } else e || !this._treeDebugger || Z.I3S_TREE_SHOW_TILES || (this._treeDebugger.destroy(), this._treeDebugger = null);\n    }, o)), this._set(\"processor\", new S({\n      owner: this,\n      preferredUpdatePolicy: J.ASYNC,\n      scaleVisibilityEnabled: !0,\n      filterVisibilityEnabled: !0,\n      timeExtentEnabled: !1,\n      frustumVisibilityEnabled: !1,\n      elevationAlignmentEnabled: !0,\n      elevationFeatureExpressionEnabled: !1,\n      setUidToIdOnAdd: !1,\n      dataExtent: this.layer.fullExtent,\n      updateClippingExtent: e => this._updateClippingExtent(e)\n    })), this.processor.elevationAlignment?.events.on(\"invalidate-elevation\", ({\n      extent: e,\n      spatialReference: t\n    }) => this._controller.updateElevationChanged(e, t)), this.supportsHeightUnitConversion && (this._verticalScale = b(\"point\", this.layer.spatialReference, this.view.spatialReference)), this.addResolvingPromise(this.processor.initializePromise), this._memCache = this.view.resourceController.memoryController.newCache(`psl-${this.uid}`), this._controller = new w({\n      layerView: this\n    }), H(this.layer.geometryDefinitions) && (this._worker = new C(e => this.view.resourceController.immediate.schedule(e))), this.addHandles(this.layer.on(\"apply-edits\", e => this._updatingHandles.addPromise(e.result))), this.addHandles(this.layer.on(\"edits\", e => {\n      const t = this._pendingEditsQueue.then(() => this._handleEdits(e)).then();\n      this._pendingEditsQueue = t, this._updatingHandles.addPromise(t);\n    })), this.when(() => {\n      this._setupQueryEngine(), this._updatingHandles.add(() => this.maximumNumberOfFeatures, e => this._controller.featureTarget = e, o), this._updatingHandles.add(() => this.suspended, e => {\n        e && this._removeAllNodeData();\n      });\n    });\n  }\n  destroy() {\n    this._treeDebugger = s(this._treeDebugger), this._i3sOverrides = s(this._i3sOverrides), this._set(\"processor\", s(this.processor)), this._controller = s(this._controller), this._queryEngine = s(this._queryEngine), this._worker = s(this._worker), this._memCache = s(this._memCache), this.loadedGraphics.clear(), this._fieldsHelper = s(this._fieldsHelper);\n  }\n  get i3slayer() {\n    return this.layer;\n  }\n  get updatingProgressValue() {\n    return this._controller?.updatingProgress ?? 1;\n  }\n  get requiredFields() {\n    return this._fieldsHelper?.requiredFields ?? [];\n  }\n  get maximumNumberOfFeatures() {\n    const e = this.processor?.graphicsCore?.displayFeatureLimit;\n    return e?.maximumNumberOfFeatures ?? 0;\n  }\n  set maximumNumberOfFeatures(e) {\n    null != e ? (this._override(\"maximumNumberOfFeatures\", e), this._controller.fixedFeatureTarget = !0) : (this._clearOverride(\"maximumNumberOfFeatures\"), this._controller.fixedFeatureTarget = !1);\n  }\n  get maximumNumberOfFeaturesExceeded() {\n    return !this.suspended && !!this._controller?.useMaximumNumberOfFeatures && !this._controller.leavesReached;\n  }\n  get _excludeObjectIdsSorted() {\n    const e = this.layer.excludeObjectIds;\n    return e.length ? e.toArray().sort((e, t) => e - t) : null;\n  }\n  get lodFactor() {\n    return \"Labels\" === this.layer.semantic ? 1 : this.view.qualitySettings.sceneService.point.lodFactor;\n  }\n  get hasM() {\n    return !1;\n  }\n  get hasZ() {\n    return !0;\n  }\n  get contentVisible() {\n    return !this.suspended && !!this._controller?.rootNodeVisible;\n  }\n  get legendEnabled() {\n    return this.contentVisible && !0 === this.i3slayer?.legendEnabled;\n  }\n  async whenGraphicAttributes(e, t) {\n    return Q(this.layer, e, this._getObjectIdField(), t, () => [...this.loadedGraphics.nodes()]);\n  }\n  getHit(e) {\n    if (!this.loadedGraphics) return null;\n    const t = E(this.loadedGraphics.find(t => t.uid === e), this.layer),\n      r = this._getObjectIdField();\n    return t?.attributes?.[r] ? (t.layer = this.layer, t.sourceLayer = this.layer, {\n      type: \"graphic\",\n      graphic: t,\n      layer: t.layer\n    }) : null;\n  }\n  whenGraphicBounds(e, t) {\n    return this.processor.whenGraphicBounds(e, t);\n  }\n  computeAttachmentOrigin(e, t) {\n    return this.processor.computeAttachmentOrigin(e, t);\n  }\n  isUpdating() {\n    return !!(this._controller?.updating || this.processor?.updating || this._fieldsHelper?.updating || this.layerFilterUpdating);\n  }\n  highlight(e) {\n    return this.processor.highlight(e, this.layer.objectIdField);\n  }\n  get updatePolicy() {\n    return this.processor.graphicsCore.effectiveUpdatePolicy;\n  }\n  createInteractiveEditSession(e) {\n    return G(this._attributeEditingContext, e);\n  }\n  async _decompressBinaryPointData(e, t) {\n    const r = {\n      geometryBuffer: e.geometryBuffer\n    };\n    null == this._worker && (this._worker = new C(e => this.view.resourceController.immediate.schedule(e)));\n    const i = await this._worker.invoke(r, t);\n    if (null == i) throw new Error(\"Failed to decompress Draco point data\");\n    return {\n      positionData: i.positions,\n      featureIds: i.featureIds\n    };\n  }\n  async addNode(e, t, r) {\n    if (!ne(t) && !ae(t)) throw new Error();\n    if (this.loadedGraphics.hasNode(e.index)) return void i.getLogger(this).error(\"I3S node \" + e.id + \" already added\");\n    const s = null != this.layer.fullExtent ? ue(this.layer.fullExtent.clone(), .5) : null,\n      {\n        featureIds: o,\n        pointPositions: a\n      } = ne(t) ? await this._extractBinaryPointPositions(e, t, r) : this._extractLegacyPointPositions(t),\n      n = new Array();\n    this._validatePositions(e, o, a, s, n);\n    const l = this._controller.crsVertex,\n      d = this.view.spatialReference;\n    c(a, l, 0, a, d, 0, o.length);\n    const u = ne(t) ? e.level : 0,\n      h = this._createGraphics(o, a, e.index, u),\n      p = new ie(h, o, t.attributeDataInfo, e);\n    if (await this._i3sOverrides.applyAttributeOverrides(p.featureIds, t.attributeDataInfo, r), e.numFeatures = p.graphics.length, this._updateNodeMemory(e), de(p), n.length > 0 && (this._computeObb(e, n, l), this._controller.updateVisibility(e.index)), !this._controller.isGeometryVisible(e)) return void this._cacheNodeData(p);\n    if (null != this._verticalScale) for (const i of p.graphics) this._verticalScale(i.geometry);\n    const g = this.view._stage.renderView.objectAndLayerIdRenderHelper;\n    if (null != g) {\n      const e = O(this.view.map, this.layer.uid);\n      for (let t = 0; t < p.featureIds.length; t++) {\n        const r = p.featureIds[t];\n        g.setUidToObjectAndLayerId(r, p.graphics[t].uid, this.layer.id, this.layer.uid, this.layer.popupEnabled && !e && ee(this.layer, this.view.popup?.defaultPopupTemplateEnabled), p.node.resources.attributes, t);\n      }\n    }\n    this.loadedGraphics.addNode(e.index, p), this._controller.updateLoadStatus(e.index, !0), this._filterNode(p), this._treeDebugger && this._treeDebugger.update();\n  }\n  _computeObb(e, t, r) {\n    const i = this._controller.crsIndex,\n      s = i.isGeographic ? this.view.renderSpatialReference : i;\n    c(t, r, 0, t, s, 0, t.length / 3), e.serviceObbInIndexSR = K(new $(t, 3)), i.isGeographic && (g(e.serviceObbInIndexSR.center, s, pe, i), e.serviceObbInIndexSR.center = pe);\n  }\n  isNodeLoaded(e) {\n    return this.loadedGraphics.hasNode(e);\n  }\n  isNodeReloading() {\n    return !1;\n  }\n  updateNodeState() {}\n  async _extractBinaryPointPositions(e, t, r) {\n    const i = await this._decompressBinaryPointData(t, r),\n      s = i.positionData,\n      o = 3,\n      a = s.length / o,\n      n = f(3 * a),\n      l = null != e.serviceObbInIndexSR ? e.serviceObbInIndexSR.center : h,\n      d = Math.abs(l[2]) * 2 ** -20;\n    for (let u = 0; u < a; u++) {\n      const e = u * o;\n      n[e] = s[e] + l[0], n[e + 1] = s[e + 1] + l[1], n[e + 2] = s[e + 2] + l[2], Math.abs(n[e + 2]) < d && (n[e + 2] = 0);\n    }\n    return {\n      featureIds: i.featureIds ? _(i.featureIds) : [],\n      pointPositions: n\n    };\n  }\n  _extractLegacyPointPositions(e) {\n    const t = e.pointData.length,\n      r = f(3 * t),\n      i = new Array();\n    for (let s = 0; s < t; s++) {\n      const t = e.pointData[s],\n        o = t.featureDataPosition,\n        a = o.length,\n        n = t.geometries?.[0] ?? he[a],\n        l = t.featureIds[0];\n      if (\"Embedded\" !== n.type || \"points\" !== n.params.type || a < 2 || a > 3) continue;\n      const d = n.params.vertexAttributes?.position ?? [0, 0, 0],\n        u = 3 * i.length;\n      r[u] = o[0] + d[0], r[u + 1] = o[1] + d[1], r[u + 2] = 3 === a ? o[2] + d[2] : NaN, i.push(l);\n    }\n    return {\n      featureIds: i,\n      pointPositions: r\n    };\n  }\n  _validatePositions(e, t, r, s, o) {\n    if (null == s && e.serviceObbInIndexSR) return;\n    const a = t.length,\n      n = 3;\n    for (let l = 0; l < a; l++) {\n      const t = l * n;\n      u(pe, r[t], r[t + 1], r[t + 2]);\n      const a = !Number.isNaN(r[2]);\n      null == s || (a ? m(s, pe) : y(s, pe)) || (this._coordinatesOutsideExtentErrors < this._maxCoordinatesOutsideExtentErrors && i.getLogger(this).error(\"Service Error: Coordinates outside of layer extent\"), this._coordinatesOutsideExtentErrors + 1 === this._maxCoordinatesOutsideExtentErrors && i.getLogger(this).error(\"Maximum number of errors reached. Further errors are ignored.\"), this._coordinatesOutsideExtentErrors++), e.serviceObbInIndexSR || o.push(pe[0], pe[1], pe[2]);\n    }\n  }\n  _createGraphics(e, r, i, s) {\n    const o = e.length,\n      a = 3,\n      n = this._getObjectIdField(),\n      l = this.processor.graphicsCore,\n      d = new Array(),\n      u = this.view.spatialReference;\n    for (let h = 0; h < o; h++) {\n      const o = e[h],\n        p = {};\n      null != o && (p[n] = o);\n      const c = o ?? t.generateUID(),\n        g = h * a,\n        m = isNaN(r[g + 2]) ? void 0 : r[g + 2],\n        y = x(r[g], r[g + 1], m, u),\n        f = this.loadedGraphics.get(c);\n      if (null != f) (null == f.level || f.level < s) && (ce.property = \"geometry\", ce.graphic = f, ce.oldValue = f.geometry, ce.newValue = y, f.geometry = y, f.level = s, l.graphicUpdateHandler(ce)), d.push(f);else {\n        const e = t.generateUID();\n        d.push({\n          objectId: c,\n          uid: e,\n          geometry: y,\n          attributes: p,\n          visible: !0,\n          nodeIndex: i,\n          level: s\n        });\n      }\n    }\n    return d;\n  }\n  _updateNodeMemory(e) {\n    e.memory = 4096 + (null != e.numFeatures ? e.numFeatures * this.processor.graphicsCore.usedMemoryPerGraphic : 0);\n  }\n  _cacheNodeData(e) {\n    const t = e.graphics.reduce((e, t) => I(t) + e, n(e.featureIds) + 1024);\n    this._memCache.put(this._getMemCacheKey(e.node), e, t);\n  }\n  _getMemCacheKey(e) {\n    return `${e.index}`;\n  }\n  _removeAllNodeData() {\n    this.loadedGraphics.forEachNode((e, t) => {\n      if (e) {\n        const t = e.node;\n        this._updateNodeMemory(t), this._cacheNodeData(e);\n      }\n      this._controller.updateLoadStatus(t, !1);\n    }), this._treeDebugger && this._treeDebugger.update(), this.loadedGraphics.clear();\n  }\n  removeNode(e) {\n    const t = this._removeNodeStageData(e);\n    t && (this._updateNodeMemory(t.node), this._cacheNodeData(t));\n  }\n  _removeNodeStageData(e) {\n    const t = this.loadedGraphics.getNode(e);\n    return null == t ? null : (this._controller.updateLoadStatus(e, !1), this.loadedGraphics.removeNode(e), this._treeDebugger && this._treeDebugger.update(), t);\n  }\n  async loadCachedNodeData(e) {\n    return this._memCache?.pop(this._getMemCacheKey(e));\n  }\n  async addCachedNodeData(e, t, r, s) {\n    this.loadedGraphics.hasNode(e.index) ? i.getLogger(this).error(\"I3S node \" + e.id + \" already added\") : (await this._i3sOverrides.applyAttributeOverrides(t.featureIds, r, s), t.attributeInfo = r, this.loadedGraphics.addNode(e.index, t), this._controller.updateLoadStatus(e.index, !0), this._updateNodeMemory(e), de(t), this._filterNode(t), this._treeDebugger && this._treeDebugger.update());\n  }\n  getLoadedNodeIds() {\n    const e = [];\n    return this.loadedGraphics.forEachNode(t => e.push(t.node.id)), e.sort();\n  }\n  getVisibleNodes() {\n    const e = new Array();\n    return this.loadedGraphics.forEachNode(t => e.push(t.node)), e;\n  }\n  getLoadedNodeIndices(e) {\n    this.loadedGraphics.forEachNode((t, r) => e.push(r));\n  }\n  getLoadedAttributes(e) {\n    const t = this.loadedGraphics.getNode(e);\n    if (null != t?.attributeInfo) return t.attributeInfo.loadedAttributes;\n  }\n  getAttributeData(e) {\n    const t = this.loadedGraphics.getNode(e);\n    if (null != t?.attributeInfo) return t.attributeInfo.attributeData;\n  }\n  _setAttributeData(e, t) {\n    const r = this.loadedGraphics.getNode(e);\n    null != r?.attributeInfo && (r.attributeInfo.attributeData = t, this._attributeValuesChanged(r));\n  }\n  async updateAttributes(e, t, r) {\n    const i = this.loadedGraphics.getNode(e);\n    null != i && (await this._i3sOverrides.applyAttributeOverrides(i.featureIds, t, r), i.attributeInfo = t, this._attributeValuesChanged(i));\n  }\n  _attributeValuesChanged(e) {\n    if (de(e), this._filterNode(e), this.processor.graphicsCore.labelsEnabled) {\n      const t = e.node.index,\n        r = new Array();\n      e.graphics.forEach(e => e.nodeIndex === t && r.push(e.uid)), this.processor.graphicsCore.updateLabelingInfo(r);\n    }\n  }\n  _updateClippingExtent(e) {\n    return this._controller && this._controller.updateClippingArea(e), !1;\n  }\n  _getObjectIdField() {\n    return this.layer.objectIdField || v;\n  }\n  _getGlobalIdField() {\n    return this.layer.associatedLayer?.globalIdField;\n  }\n  async _rendererChange(e, t) {\n    const {\n        layer: {\n          fieldsIndex: r\n        }\n      } = this,\n      i = new Set();\n    let s, o;\n    e ? (await e.collectRequiredFields(i, r), s = Array.from(i).sort()) : s = [], i.clear(), t ? (await t.collectRequiredFields(i, r), o = Array.from(i).sort()) : o = [], s.length === o.length && s.every((e, t) => s[t] === o[t]) || this._reloadAllNodes();\n  }\n  _rangeInfosChanged(e) {\n    null != e && e.length > 0 && i.getLogger(this).warn(\"Unsupported property: rangeInfos are currently only serialized to and from web scenes but do not affect rendering.\");\n  }\n  _filterChange() {\n    this.loadedGraphics.forEachNode(e => this._filterNode(e));\n  }\n  _reloadAllNodes() {\n    this._removeAllNodeData(), this._controller && this._controller.restartNodeLoading();\n  }\n  _filterNode(e) {\n    const t = this.parsedDefinitionExpression,\n      i = this._excludeObjectIdsSorted,\n      s = this._getObjectIdField();\n    for (const o of e.graphics) {\n      const e = o.visible,\n        a = !t || this._evaluateClause(t, o),\n        n = null == i || r(i, o.attributes[s]) < 0;\n      o.visible = a && n, e !== o.visible && (ce.graphic = o, ce.property = \"visible\", ce.oldValue = e, ce.newValue = o.visible, this.processor.graphicsCore.graphicUpdateHandler(ce));\n    }\n  }\n  createQuery() {\n    const e = {\n      outFields: [\"*\"],\n      returnGeometry: !0,\n      outSpatialReference: this.view.spatialReference\n    };\n    return null != this.filter ? this.filter.createQuery(e) : new j(e);\n  }\n  queryFeatures(e, t) {\n    return this._queryEngine.executeQuery(this._ensureQuery(e), t?.signal);\n  }\n  queryObjectIds(e, t) {\n    return this._queryEngine.executeQueryForIds(this._ensureQuery(e), t?.signal);\n  }\n  queryFeatureCount(e, t) {\n    return this._queryEngine.executeQueryForCount(this._ensureQuery(e), t?.signal);\n  }\n  queryExtent(e, t) {\n    return this._queryEngine.executeQueryForExtent(this._ensureQuery(e), t?.signal);\n  }\n  _ensureQuery(e) {\n    return this._addDefinitionExpressionToQuery(null == e ? this.createQuery() : j.from(e));\n  }\n  _setupQueryEngine() {\n    const e = () => this.processor.featureStore;\n    this._queryEngine = new F({\n      context: {\n        spatialReference: this.view.spatialReference,\n        layer: this.layer,\n        scheduler: this.view.resourceController.scheduler,\n        get featureStore() {\n          return e();\n        },\n        hasZ: this.hasZ,\n        hasM: this.hasM\n      },\n      priority: te.FEATURE_QUERY_ENGINE\n    });\n  }\n  get usedMemory() {\n    return this.processor?.graphicsCore?.usedMemory ?? 0;\n  }\n  get unloadedMemory() {\n    return .8 * ((this._controller?.unloadedMemoryEstimate ?? 0) + (this.processor?.graphicsCore?.unprocessedMemoryEstimate ?? 0));\n  }\n  get ignoresMemoryFactor() {\n    return this._controller && this._controller.fixedFeatureTarget;\n  }\n  async _handleEdits(e) {\n    const t = this._attributeEditingContext,\n      r = await A(t, e);\n    P(t, r);\n  }\n  get _attributeEditingContext() {\n    const e = this._getObjectIdField(),\n      t = this._getGlobalIdField();\n    return {\n      sessions: this._interactiveEditingSessions,\n      fieldsIndex: this.layer.fieldsIndex,\n      objectIdField: e,\n      globalIdField: t,\n      forEachNode: e => this.loadedGraphics.forEachNode(t => e(t.node, t.featureIds)),\n      attributeStorageInfo: this.i3slayer.attributeStorageInfo ?? [],\n      i3sOverrides: this._i3sOverrides,\n      getAttributeData: e => this.getAttributeData(e),\n      setAttributeData: (t, r, i) => {\n        this._setAttributeData(t, r);\n        const s = this.loadedGraphics.getNode(t);\n        if (null != i) {\n          const t = this.loadedGraphics.get(i.attributes[e]);\n          null != t && this.processor.graphicsCore.recreateGraphics([t]);\n        } else null != s && this.processor.graphicsCore.recreateGraphics(s.graphics);\n      },\n      clearMemCache: () => {}\n    };\n  }\n  get performanceInfo() {\n    return new B(this.usedMemory, this.loadedGraphics.length, -1, this.maximumNumberOfFeatures, this.loadedGraphics.nodeCount, this.processor.graphicsCore.performanceInfo);\n  }\n  get test() {}\n};\ne([l()], se.prototype, \"processor\", void 0), e([l({\n  type: N\n})], se.prototype, \"filter\", void 0), e([l()], se.prototype, \"loadedGraphics\", void 0), e([l()], se.prototype, \"i3slayer\", null), e([l()], se.prototype, \"_controller\", void 0), e([l()], se.prototype, \"updating\", void 0), e([l()], se.prototype, \"suspended\", void 0), e([l()], se.prototype, \"holeFilling\", void 0), e([l(Y)], se.prototype, \"updatingProgress\", void 0), e([l()], se.prototype, \"updatingProgressValue\", null), e([l(re.requiredFields)], se.prototype, \"requiredFields\", null), e([l(re.availableFields)], se.prototype, \"availableFields\", void 0), e([l()], se.prototype, \"_fieldsHelper\", void 0), e([l({\n  type: Number\n})], se.prototype, \"maximumNumberOfFeatures\", null), e([l({\n  readOnly: !0\n})], se.prototype, \"maximumNumberOfFeaturesExceeded\", null), e([l()], se.prototype, \"_excludeObjectIdsSorted\", null), e([l({\n  readOnly: !0\n})], se.prototype, \"lodFactor\", null), e([l({\n  readOnly: !0\n})], se.prototype, \"hasM\", null), e([l({\n  readOnly: !0\n})], se.prototype, \"hasZ\", null), e([l()], se.prototype, \"contentVisible\", null), e([l({\n  readOnly: !0\n})], se.prototype, \"legendEnabled\", null), se = e([d(\"esri.views.3d.layers.SceneLayerGraphicsView3D\")], se);\nconst oe = se;\nfunction ae(e) {\n  return \"pointData\" in e;\n}\nfunction ne(e) {\n  return \"geometryBuffer\" in e && null !== e.geometryBuffer;\n}\nfunction le(e, t, r) {\n  const i = t.attributeInfo;\n  if (null == i?.loadedAttributes || null == i.attributeData) return !1;\n  let s = !1;\n  for (const {\n    name: o\n  } of i.loadedAttributes) if (i.attributeData[o]) {\n    const t = U(i.attributeData[o], r);\n    t !== e.attributes[o] && (e.attributes[o] = t, s = !0);\n  }\n  return s;\n}\nfunction de(e) {\n  const t = e.attributeInfo,\n    r = e.node.index;\n  if (null != t?.loadedAttributes && null != t.attributeData) for (let i = 0; i < e.graphics.length; i++) {\n    const s = e.graphics[i];\n    if (s.nodeIndex === r) {\n      s.attributes || (s.attributes = {});\n      for (const {\n        name: e\n      } of t.loadedAttributes) t.attributeData[e] && (s.attributes[e] = U(t.attributeData[e], i));\n    }\n  }\n}\nfunction ue(e, t) {\n  return e.xmin -= t, e.ymin -= t, e.xmax += t, e.ymax += t, null != e.zmin && null != e.zmax && (e.zmin -= t, e.zmax += t), null != e.mmin && null != e.mmax && (e.mmin -= t, e.mmax += t), e;\n}\nconst he = {\n    2: {\n      type: \"Embedded\",\n      params: {\n        type: \"points\",\n        vertexAttributes: {\n          position: [0, 0]\n        }\n      }\n    },\n    3: {\n      type: \"Embedded\",\n      params: {\n        type: \"points\",\n        vertexAttributes: {\n          position: [0, 0, 0]\n        }\n      }\n    }\n  },\n  pe = p(),\n  ce = {\n    graphic: null,\n    property: null,\n    oldValue: null,\n    newValue: null\n  };\nexport { oe as default };"],
  "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",
  "names": ["e", "s", "e", "t", "i", "o", "n", "h", "r", "i", "e", "t", "r", "u", "l", "w", "s", "a", "P", "o", "A", "n", "d", "h", "c", "y", "f"]
}
