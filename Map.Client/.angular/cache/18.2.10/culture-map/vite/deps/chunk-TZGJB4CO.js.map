{
  "version": 3,
  "sources": ["../../../../../../node_modules/@arcgis/core/views/2d/engine/BitmapContainer.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { brushes as e } from \"./brushes.js\";\nimport { WGLDrawPhase as r } from \"./webgl/enums.js\";\nimport s from \"./webgl/WGLContainer.js\";\nclass a extends s {\n  constructor() {\n    super(...arguments), this._hasCrossfade = !1;\n  }\n  get requiresDedicatedFBO() {\n    return super.requiresDedicatedFBO || this._hasCrossfade;\n  }\n  beforeRender(e) {\n    super.beforeRender(e), this._manageFade();\n  }\n  prepareRenderPasses(s) {\n    const a = s.registerRenderPass({\n      name: \"bitmap\",\n      brushes: [e.bitmap],\n      target: () => this.children,\n      drawPhase: r.MAP\n    });\n    return [...super.prepareRenderPasses(s), a];\n  }\n  _manageFade() {\n    this.children.reduce((e, r) => e + (r.inFadeTransition ? 1 : 0), 0) >= 2 ? (this.children.forEach(e => e.blendFunction = \"additive\"), this._hasCrossfade = !0) : (this.children.forEach(e => e.blendFunction = \"standard\"), this._hasCrossfade = !1);\n  }\n}\nexport { a as BitmapContainer };"],
  "mappings": ";;;;;;;;;AAOA,IAAM,IAAN,cAAgB,EAAE;AAAA,EAChB,cAAc;AACZ,UAAM,GAAG,SAAS,GAAG,KAAK,gBAAgB;AAAA,EAC5C;AAAA,EACA,IAAI,uBAAuB;AACzB,WAAO,MAAM,wBAAwB,KAAK;AAAA,EAC5C;AAAA,EACA,aAAa,GAAG;AACd,UAAM,aAAa,CAAC,GAAG,KAAK,YAAY;AAAA,EAC1C;AAAA,EACA,oBAAoB,GAAG;AACrB,UAAMA,KAAI,EAAE,mBAAmB;AAAA,MAC7B,MAAM;AAAA,MACN,SAAS,CAAC,EAAE,MAAM;AAAA,MAClB,QAAQ,MAAM,KAAK;AAAA,MACnB,WAAW,EAAE;AAAA,IACf,CAAC;AACD,WAAO,CAAC,GAAG,MAAM,oBAAoB,CAAC,GAAGA,EAAC;AAAA,EAC5C;AAAA,EACA,cAAc;AACZ,SAAK,SAAS,OAAO,CAAC,GAAG,MAAM,KAAK,EAAE,mBAAmB,IAAI,IAAI,CAAC,KAAK,KAAK,KAAK,SAAS,QAAQ,OAAK,EAAE,gBAAgB,UAAU,GAAG,KAAK,gBAAgB,SAAO,KAAK,SAAS,QAAQ,OAAK,EAAE,gBAAgB,UAAU,GAAG,KAAK,gBAAgB;AAAA,EACnP;AACF;",
  "names": ["a"]
}
