{
  "version": 3,
  "sources": ["../../../../../../node_modules/@arcgis/core/views/3d/layers/graphics/elevationAlignPointsInFeatures.js", "../../../../../../node_modules/@arcgis/core/views/3d/layers/graphics/queryForSymbologySnapping.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport \"../../../../geometry.js\";\nimport { throwIfAborted as e } from \"../../../../core/promiseUtils.js\";\nimport { create as o } from \"../../../../core/libs/gl-matrix-2/factories/vec3f64.js\";\nimport { projectPointToVectorAsync as t } from \"../../../../geometry/projection/projectPointToVector.js\";\nimport { makeDehydratedPoint as r } from \"../../../../layers/graphics/dehydratedPoint.js\";\nimport { getGeometryEffectiveElevationInfo as i } from \"../../../../support/elevationInfoUtils.js\";\nimport { evaluateElevationInfoAtPoint as n, SampleElevationInfo as s } from \"./elevationAlignmentUtils.js\";\nimport { ElevationContext as a } from \"./ElevationContext.js\";\nimport { extractExpressionInfo as p, createContext as f } from \"./featureExpressionInfoUtils.js\";\nimport c from \"../../../../geometry/SpatialReference.js\";\nasync function m(m, l, d, j, u) {\n  const {\n      elevationProvider: v,\n      renderCoordsHelper: g\n    } = m,\n    {\n      elevationInfo: y\n    } = l,\n    {\n      pointsInFeatures: I,\n      spatialReference: x\n    } = j,\n    h = c.fromJSON(x),\n    w = p(y, !0),\n    R = await f(w, h, u);\n  e(u);\n  const S = [],\n    b = new Set(),\n    z = new Set(),\n    E = new a(),\n    P = r(0, 0, 0, c.WGS84),\n    U = new s(),\n    C = o();\n  P.spatialReference = h;\n  const F = m.elevationProvider.spatialReference ?? m.spatialReference;\n  for (const {\n    objectId: e,\n    points: o\n  } of I) {\n    const r = d(e);\n    if (null == r) {\n      for (const e of o) S.push(e.z ?? 0);\n      b.add(e);\n      continue;\n    }\n    r.isDraped && z.add(e);\n    const s = r.graphic.geometry;\n    E.setFromElevationInfo(i(s, y)), E.updateFeatureExpressionInfoContext(R, r.graphic, l);\n    for (const {\n      x: e,\n      y: i,\n      z: a\n    } of o) P.x = e, P.y = i, P.z = a ?? 0, await t(P, C, F, 0, {\n      signal: u\n    }), n(C, v, E, g, U), S.push(U.z);\n  }\n  return {\n    elevations: S,\n    drapedObjectIds: z,\n    failedObjectIds: b\n  };\n}\nexport { m as elevationAlignPointsInFeatures };", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { throwIfAborted as n } from \"../../../../core/promiseUtils.js\";\nimport { loadArcade as e } from \"../../../../support/arcadeOnDemand.js\";\nasync function r(r, a, s) {\n  if (null == r || 0 === a.candidates.length) return t;\n  const i = r.graphics3DGraphicsByObjectID ?? r.graphics3DGraphics,\n    c = [],\n    o = [],\n    {\n      renderer: d\n    } = r,\n    p = null != d && \"arcadeRequired\" in d && d.arcadeRequired ? e() : null,\n    l = async (n, {\n      graphic: e,\n      graphics3DSymbol: t\n    }) => {\n      const a = await p,\n        i = await r.getRenderingInfoAsync(e, d, a, {\n          signal: s\n        });\n      return null == i ? [] : t.queryForSnapping(n, g, i, s);\n    },\n    {\n      candidates: u,\n      spatialReference: g\n    } = a;\n  for (let n = 0; n < u.length; ++n) {\n    const e = u[n],\n      {\n        objectId: r\n      } = e,\n      t = \"number\" == typeof r ? i?.get(r) : void 0;\n    if (null == t) continue;\n    const {\n      graphics3DSymbol: a\n    } = t;\n    a.symbologySnappingSupported && (c.push(l(e, t)), o.push(n));\n  }\n  if (0 === c.length) return t;\n  const h = await Promise.all(c);\n  n(s);\n  const f = [],\n    m = [];\n  for (let n = 0; n < h.length; ++n) {\n    const e = h[n],\n      r = o[n];\n    for (const n of e) f.push(n), m.push(r);\n  }\n  return {\n    candidates: f,\n    sourceCandidateIndices: m\n  };\n}\nconst t = {\n  candidates: [],\n  sourceCandidateIndices: []\n};\nexport { r as queryForSymbologySnapping };"],
  "mappings": "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",
  "names": ["m", "d", "R", "e", "o", "r", "s", "i", "a", "r", "a", "s", "i", "c", "o", "d", "n", "e", "t", "f", "m"]
}
