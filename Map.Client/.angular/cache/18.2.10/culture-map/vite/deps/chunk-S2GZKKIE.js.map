{
  "version": 3,
  "sources": ["../../../../../../node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/attributes/PathVertexPosition.glsl.js", "../../../../../../node_modules/@arcgis/core/chunks/Path.glsl.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { fromValues as e } from \"../../../../../../core/libs/gl-matrix-2/factories/vec2f64.js\";\nimport { PositionAttribute as o } from \"./PositionAttribute.glsl.js\";\nimport { Float2PassUniform as i } from \"../../shaderModules/Float2PassUniform.js\";\nimport { Float3PassUniform as r } from \"../../shaderModules/Float3PassUniform.js\";\nimport { Float4sPassUniform as t } from \"../../shaderModules/Float4sPassUniform.js\";\nimport { FloatsPassUniform as a } from \"../../shaderModules/FloatsPassUniform.js\";\nimport { glsl as l } from \"../../shaderModules/interfaces.js\";\nimport { VertexAttribute as v } from \"../../../lib/VertexAttribute.js\";\nimport { vvColorNumber as s, VisualVariablePassParameters as c } from \"../../../materials/VisualVariablePassParameters.js\";\nconst p = 8;\nfunction f(e, c) {\n  const f = v.FEATUREVALUE;\n  e.attributes.add(f, \"vec4\");\n  const n = e.vertex;\n  n.code.add(l`\n  bool isCapVertex() {\n    return ${f}.w == 1.0;\n  }\n  `), n.uniforms.add(new i(\"size\", e => e.size)), c.vvSize ? (n.uniforms.add(new r(\"vvSizeMinSize\", e => e.vvSize.minSize), new r(\"vvSizeMaxSize\", e => e.vvSize.maxSize), new r(\"vvSizeOffset\", e => e.vvSize.offset), new r(\"vvSizeFactor\", e => e.vvSize.factor)), n.code.add(l`\n    vec2 getSize() {\n      return size * clamp(vvSizeOffset + ${f}.x * vvSizeFactor, vvSizeMinSize, vvSizeMaxSize).xz;\n    }\n    `)) : n.code.add(l`vec2 getSize(){\nreturn size;\n}`), c.vvOpacity ? (n.constants.add(\"vvOpacityNumber\", \"int\", p), n.uniforms.add(new a(\"vvOpacityValues\", e => e.vvOpacity.values, p), new a(\"vvOpacityOpacities\", e => e.vvOpacity.opacityValues, p)), n.code.add(l`\n    vec4 applyOpacity(vec4 color) {\n      float value = ${f}.z;\n      if (value <= vvOpacityValues[0]) {\n        return vec4( color.xyz, vvOpacityOpacities[0]);\n      }\n\n      for (int i = 1; i < vvOpacityNumber; ++i) {\n        if (vvOpacityValues[i] >= value) {\n          float f = (value - vvOpacityValues[i-1]) / (vvOpacityValues[i] - vvOpacityValues[i-1]);\n          return vec4( color.xyz, mix(vvOpacityOpacities[i-1], vvOpacityOpacities[i], f));\n        }\n      }\n\n      return vec4( color.xyz, vvOpacityOpacities[vvOpacityNumber - 1]);\n    }\n    `)) : n.code.add(l`vec4 applyOpacity(vec4 color){\nreturn color;\n}`), c.vvColor ? (n.constants.add(\"vvColorNumber\", \"int\", s), n.uniforms.add(new a(\"vvColorValues\", e => e.vvColor.values, s), new t(\"vvColorColors\", e => e.vvColor.colors, s)), n.code.add(l`\n    vec4 getColor() {\n      float value = ${f}.y;\n      if (value <= vvColorValues[0]) {\n        return applyOpacity(vvColorColors[0]);\n      }\n\n      for (int i = 1; i < vvColorNumber; ++i) {\n        if (vvColorValues[i] >= value) {\n          float f = (value - vvColorValues[i-1]) / (vvColorValues[i] - vvColorValues[i-1]);\n          return applyOpacity(mix(vvColorColors[i-1], vvColorColors[i], f));\n        }\n      }\n\n      return applyOpacity(vvColorColors[vvColorNumber - 1]);\n    }\n    `)) : n.code.add(l`vec4 getColor(){\nreturn applyOpacity(vec4(1, 1, 1, 1));\n}`), e.include(o), e.attributes.add(v.PROFILERIGHT, \"vec4\"), e.attributes.add(v.PROFILEUP, \"vec4\"), e.attributes.add(v.PROFILEVERTEXANDNORMAL, \"vec4\"), n.code.add(l`vec3 calculateVPos() {\nvec2 size = getSize();\nvec3 origin = position;\nvec3 right = profileRight.xyz;\nvec3 up = profileUp.xyz;\nvec3 forward = cross(up, right);\nvec2 profileVertex = profileVertexAndNormal.xy * size;\nvec2 profileNormal = profileVertexAndNormal.zw;\nfloat positionOffsetAlongProfilePlaneNormal = 0.0;\nfloat normalOffsetAlongProfilePlaneNormal = 0.0;`), n.code.add(l`if(!isCapVertex()) {\nvec2 rotationRight = vec2(profileRight.w, profileUp.w);\nfloat maxDistance = length(rotationRight);`), n.code.add(l`rotationRight = maxDistance > 0.0 ? normalize(rotationRight) : vec2(0, 0);\nfloat rx = dot(profileVertex, rotationRight);\nif (abs(rx) > maxDistance) {\nvec2 rotationUp = vec2(-rotationRight.y, rotationRight.x);\nfloat ry = dot(profileVertex, rotationUp);\nprofileVertex = rotationRight * maxDistance * sign(rx) + rotationUp * ry;\n}\n}else{\npositionOffsetAlongProfilePlaneNormal = profileRight.w * size[0];\nnormalOffsetAlongProfilePlaneNormal = profileUp.w;\n}\nvec3 offset = right * profileVertex.x + up * profileVertex.y + forward * positionOffsetAlongProfilePlaneNormal;\nreturn origin + offset;\n}`), n.code.add(l`vec3 localNormal() {\nvec3 right = profileRight.xyz;\nvec3 up = profileUp.xyz;\nvec3 forward = cross(up, right);\nvec2 profileNormal = profileVertexAndNormal.zw;\nvec3 normal = right * profileNormal.x + up * profileNormal.y;\nif(isCapVertex()) {\nnormal += forward * profileUp.w;\n}\nreturn normal;\n}`);\n}\nclass n extends c {\n  constructor() {\n    super(...arguments), this.size = e(1, 1);\n  }\n}\nexport { f as PathVertexPosition, n as PathVertexPositionPassParameters };", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { ForwardLinearDepth as e, addNearFar as o } from \"../views/3d/webgl-engine/core/shaderLibrary/ForwardLinearDepth.glsl.js\";\nimport { ShaderOutput as i } from \"../views/3d/webgl-engine/core/shaderLibrary/ShaderOutput.js\";\nimport { SliceDraw as a } from \"../views/3d/webgl-engine/core/shaderLibrary/Slice.glsl.js\";\nimport { Transform as r } from \"../views/3d/webgl-engine/core/shaderLibrary/Transform.glsl.js\";\nimport { ObjectAndLayerIdColor as l } from \"../views/3d/webgl-engine/core/shaderLibrary/attributes/ObjectAndLayerIdColor.glsl.js\";\nimport { PathVertexPosition as s } from \"../views/3d/webgl-engine/core/shaderLibrary/attributes/PathVertexPosition.glsl.js\";\nimport { OutputDepth as d } from \"../views/3d/webgl-engine/core/shaderLibrary/output/OutputDepth.glsl.js\";\nimport { OutputHighlight as n } from \"../views/3d/webgl-engine/core/shaderLibrary/output/OutputHighlight.glsl.js\";\nimport { EvaluateAmbientOcclusion as t } from \"../views/3d/webgl-engine/core/shaderLibrary/shading/EvaluateAmbientOcclusion.glsl.js\";\nimport { EvaluateSceneLighting as c, addAmbientBoostFactor as g, addLightingGlobalFactor as m } from \"../views/3d/webgl-engine/core/shaderLibrary/shading/EvaluateSceneLighting.glsl.js\";\nimport { addMainLightIntensity as p } from \"../views/3d/webgl-engine/core/shaderLibrary/shading/MainLighting.glsl.js\";\nimport { multipassTerrainTest as v } from \"../views/3d/webgl-engine/core/shaderLibrary/shading/MultipassTerrainTest.glsl.js\";\nimport { Normals as h } from \"../views/3d/webgl-engine/core/shaderLibrary/shading/Normals.glsl.js\";\nimport { NormalUtils as u } from \"../views/3d/webgl-engine/core/shaderLibrary/shading/NormalUtils.glsl.js\";\nimport { ReadShadowMapDraw as b } from \"../views/3d/webgl-engine/core/shaderLibrary/shading/ReadShadowMap.glsl.js\";\nimport { ColorConversion as w } from \"../views/3d/webgl-engine/core/shaderLibrary/util/ColorConversion.glsl.js\";\nimport { addProjViewLocalOrigin as f, addViewNormal as y, addCameraPosition as j } from \"../views/3d/webgl-engine/core/shaderLibrary/util/View.glsl.js\";\nimport { Float3PassUniform as L } from \"../views/3d/webgl-engine/core/shaderModules/Float3PassUniform.js\";\nimport { FloatPassUniform as P } from \"../views/3d/webgl-engine/core/shaderModules/FloatPassUniform.js\";\nimport { glsl as S } from \"../views/3d/webgl-engine/core/shaderModules/interfaces.js\";\nimport { ShaderBuilder as C } from \"../views/3d/webgl-engine/core/shaderModules/ShaderBuilder.js\";\nimport { TransparencyPassType as A } from \"../views/3d/webgl-engine/lib/TransparencyPassType.js\";\nfunction O(O) {\n  const D = new C(),\n    {\n      vertex: _,\n      fragment: F\n    } = D;\n  switch (f(_, O), D.varyings.add(\"vpos\", \"vec3\"), D.include(s, O), O.output !== i.Color && O.output !== i.ObjectAndLayerIdColor || (D.include(r, O), D.include(b, O), D.include(e, O), D.include(l, O), D.varyings.add(\"vnormal\", \"vec3\"), D.varyings.add(\"vcolor\", \"vec4\"), O.multipassEnabled && D.varyings.add(\"depth\", \"float\"), _.code.add(S`\n      void main() {\n        vpos = calculateVPos();\n        vnormal = normalize(localNormal());\n\n        ${O.multipassEnabled ? \"depth = (view * vec4(vpos, 1.0)).z;\" : \"\"}\n        gl_Position = transformPosition(proj, view, vpos);\n\n        ${O.output === i.Color ? \"forwardLinearDepth();\" : \"\"}\n        forwardObjectAndLayerIdColor();\n\n        vcolor = getColor();\n      }\n    `)), D.include(v, O), O.output) {\n    case i.Color:\n      D.include(a, O), D.include(c, O), D.include(t, O), D.include(b, O), D.include(h, O), j(F, O), g(F), m(F), F.uniforms.add(_.uniforms.get(\"localOrigin\"), new L(\"ambient\", e => e.ambient), new L(\"diffuse\", e => e.diffuse), new L(\"specular\", e => e.specular), new P(\"opacity\", e => e.opacity)), F.include(w), O.transparencyPassType === A.ColorAlpha && (D.outputs.add(\"fragColor\", \"vec4\", 0), D.outputs.add(\"fragAlpha\", \"float\", 1)), p(F), F.code.add(S`\n        void main() {\n          discardBySlice(vpos);\n          ${O.multipassEnabled ? \"terrainDepthTest(depth);\" : \"\"}\n\n          shadingParams.viewDirection = normalize(vpos - cameraPosition);\n          shadingParams.normalView = vnormal;\n          vec3 normal = shadingNormal(shadingParams);\n          float ssao = evaluateAmbientOcclusionInverse();\n\n          float additionalAmbientScale = additionalDirectedAmbientLight(vpos + localOrigin);\n          vec3 additionalLight = ssao * mainLightIntensity * additionalAmbientScale * ambientBoostFactor * lightingGlobalFactor;\n          ${O.receiveShadows ? \"float shadow = readShadowMap(vpos, linearDepth);\" : O.spherical ? \"float shadow = lightingGlobalFactor * (1.0 - additionalAmbientScale);\" : \"float shadow = 0.0;\"}\n          vec3 albedo = vcolor.rgb * max(ambient, diffuse); // combine the old material parameters into a single one\n          float combinedOpacity = vcolor.a * opacity;\n          albedo += 0.25 * specular; // don't completely ignore specular for now\n\n          vec3 shadedColor = evaluateSceneLighting(normal, albedo, shadow, 1.0 - ssao, additionalLight);\n          fragColor = vec4(shadedColor, combinedOpacity);\n          fragColor = highlightSlice(fragColor, vpos);\n          ${O.transparencyPassType === A.ColorAlpha ? S`\n                  fragColor = premultiplyAlpha(fragColor);\n                  fragAlpha = fragColor.a;` : \"\"}\n        }\n      `);\n      break;\n    case i.Depth:\n      D.include(r, O), _.code.add(S`void main() {\nvpos = calculateVPos();\ngl_Position = transformPosition(proj, view, vpos);\n}`), D.include(a, O), F.code.add(S`void main() {\ndiscardBySlice(vpos);\n}`);\n      break;\n    case i.Shadow:\n    case i.ShadowHighlight:\n    case i.ShadowExcludeHighlight:\n    case i.ViewshedShadow:\n      D.include(r, O), o(D), D.varyings.add(\"depth\", \"float\"), _.code.add(S`void main() {\nvpos = calculateVPos();\ngl_Position = transformPositionWithDepth(proj, view, vpos, nearFar, depth);\n}`), D.include(a, O), D.include(d, O), F.code.add(S`void main() {\ndiscardBySlice(vpos);\noutputDepth(depth);\n}`);\n      break;\n    case i.ObjectAndLayerIdColor:\n      D.include(a, O), F.code.add(S`void main() {\ndiscardBySlice(vpos);\noutputObjectAndLayerIdColor();\n}`);\n      break;\n    case i.Normal:\n      D.include(r, O), D.include(u, O), y(_), D.varyings.add(\"vnormal\", \"vec3\"), _.code.add(S`void main(void) {\nvpos = calculateVPos();\nvnormal = normalize((viewNormal * vec4(localNormal(), 1.0)).xyz);\ngl_Position = transformPosition(proj, view, vpos);\n}`), D.include(a, O), F.code.add(S`void main() {\ndiscardBySlice(vpos);\nvec3 normal = normalize(vnormal);\nif (gl_FrontFacing == false) normal = -normal;\nfragColor = vec4(vec3(0.5) + 0.5 * normal, 1.0);\n}`);\n      break;\n    case i.Highlight:\n      D.include(r, O), D.include(u, O), D.varyings.add(\"vnormal\", \"vec3\"), _.code.add(S`void main(void) {\nvpos = calculateVPos();\ngl_Position = transformPosition(proj, view, vpos);\n}`), D.include(a, O), D.include(n, O), F.code.add(S`void main() {\ndiscardBySlice(vpos);\noutputHighlight();\n}`);\n  }\n  return D;\n}\nconst D = Object.freeze(Object.defineProperty({\n  __proto__: null,\n  build: O\n}, Symbol.toStringTag, {\n  value: \"Module\"\n}));\nexport { D as P, O as b };"],
  "mappings": "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",
  "names": ["p", "f", "e", "n", "o", "O", "D", "o", "f", "d", "a", "p", "t", "e", "r"]
}
