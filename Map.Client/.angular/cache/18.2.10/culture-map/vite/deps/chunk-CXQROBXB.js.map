{
  "version": 3,
  "sources": ["../../../../../../node_modules/@arcgis/core/arcade/functions/centroid.js", "../../../../../../node_modules/@arcgis/core/arcade/functions/measures.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { rad2deg as t } from \"../../core/mathUtils.js\";\nimport n from \"../../geometry/Point.js\";\nimport { segmentIntersects as e } from \"../../geometry/support/intersectsBase.js\";\nfunction r(t, n, e) {\n  return Math.sqrt((t[0] - n[0]) ** 2 + (t[1] - n[1]) ** 2 + (void 0 !== t[2] && void 0 !== n[2] ? (t[2] * e - n[2] * e) ** 2 : 0));\n}\nfunction o(t, n, e) {\n  return (t[0] - n[0]) ** 2 + (t[1] - n[1]) ** 2 + (void 0 !== t[2] && void 0 !== n[2] ? (t[2] * e - n[2] * e) ** 2 : 0);\n}\nconst s = [];\nfor (const N of [[9002, 56146130, 6131, 6132, 8050, 8051, 8228], [9003, 5702, 6358, 6359, 6360, 8052, 8053], [9095, 5754]]) {\n  const t = N[0];\n  for (let n = 1; n < N.length; n++) s[N[n]] = t;\n}\nconst i = [];\nfunction c(t) {\n  return t.vcsWkid && void 0 !== s[t.vcsWkid] ? i[s[t.vcsWkid]] : t.latestVcsWkid && void 0 !== s[t.latestVcsWkid] ? i[s[t.latestVcsWkid]] : 1;\n}\nfunction f(t, n, e) {\n  const r = {\n    x: 0,\n    y: 0\n  };\n  n && (r.z = 0), e && (r.m = 0);\n  let o = 0,\n    s = t[0];\n  for (let i = 0; i < t.length; i++) {\n    const c = t[i];\n    if (!1 === x(c, s)) {\n      const t = h(s, c, n),\n        i = u(s, c, n, e);\n      i.x *= t, i.y *= t, r.x += i.x, r.y += i.y, n && (i.z *= t, r.z += i.z), e && (i.m *= t, r.m += i.m), o += t, s = c;\n    }\n  }\n  return o > 0 ? (r.x /= o, r.y /= o, n && (r.z /= o), e && (r.m /= o)) : (r.x = t[0][0], r.y = t[0][1], n && (r.z = t[0][2]), e && n ? r.m = t[0][3] : e && (r.m = t[0][2])), r;\n}\nfunction u(t, n, e, r) {\n  const o = {\n    x: (t[0] + n[0]) / 2,\n    y: (t[1] + n[1]) / 2\n  };\n  return e && (o.z = (t[2] + n[2]) / 2), e && r ? o.m = (t[3] + n[3]) / 2 : r && (o.m = (t[2] + n[2]) / 2), o;\n}\nfunction a(t, n) {\n  if (t.length <= 1) return 0;\n  let e = 0;\n  for (let r = 1; r < t.length; r++) e += h(t[r - 1], t[r], n);\n  return e;\n}\nfunction h(t, n, e) {\n  const r = n[0] - t[0],\n    o = n[1] - t[1];\n  if (e) {\n    const t = n[2] - n[2];\n    return Math.sqrt(r * r + o * o + t * t);\n  }\n  return Math.sqrt(r * r + o * o);\n}\nfunction l(t, n, e) {\n  const r = n[0] - t[0],\n    o = n[1] - t[1];\n  if (e) {\n    const t = n[2] - n[2];\n    return r * r + o * o + t * t;\n  }\n  return r * r + o * o;\n}\nfunction x(t, n) {\n  if (t.length !== n.length) return !1;\n  for (let e = 0; e < t.length; e++) if (t[e] !== n[e]) return !1;\n  return !0;\n}\nfunction y(t) {\n  const e = {\n      x: 0,\n      y: 0,\n      spatialReference: t.spatialReference.toJSON()\n    },\n    r = {\n      x: 0,\n      y: 0,\n      spatialReference: t.spatialReference.toJSON()\n    };\n  let o = 0,\n    s = 0;\n  for (let n = 0; n < t.paths.length; n++) {\n    if (0 === t.paths[n].length) continue;\n    const i = a(t.paths[n], !0 === t.hasZ);\n    if (0 === i) {\n      const r = f(t.paths[n], !0 === t.hasZ, !0 === t.hasM);\n      e.x += r.x, e.y += r.y, !0 === t.hasZ && (e.z += r.z), !0 === t.hasM && (e.m += r.m), ++o;\n    } else {\n      const e = f(t.paths[n], !0 === t.hasZ, !0 === t.hasM);\n      r.x += e.x * i, r.y += e.y * i, !0 === t.hasZ && (r.z += e.z * i), !0 === t.hasM && (r.m += e.m * i), s += i;\n    }\n  }\n  return s > 0 ? (r.x /= s, r.y /= s, !0 === t.hasZ && (r.z /= s), !0 === t.hasM && (r.m /= s), new n(r)) : o > 0 ? (e.x /= o, e.y /= o, !0 === t.hasZ && (r.z /= o), !0 === t.hasM && (e.m /= o), new n(e)) : null;\n}\nfunction m(t) {\n  if (0 === t.points.length) return null;\n  let e = 0,\n    r = 0,\n    o = 0,\n    s = 0;\n  for (let n = 0; n < t.points.length; n++) {\n    const i = t.getPoint(n);\n    !0 === i.hasZ && (o += i.z), !0 === i.hasM && (s += i.m), e += i.x, r += i.y, s += i.m;\n  }\n  const i = {\n    x: e / t.points.length,\n    y: r / t.points.length,\n    spatialReference: null\n  };\n  return i.spatialReference = t.spatialReference.toJSON(), !0 === t.hasZ && (i.z = o / t.points.length), !0 === t.hasM && (i.m = s / t.points.length), new n(i);\n}\nfunction p(t, n) {\n  return t.x * n.x + t.y * n.y;\n}\nfunction g(t, n) {\n  return t.x * n.y - n.x * t.y;\n}\nfunction M(t, n, e = 0) {\n  for (; t < e;) t += n;\n  const r = e + n;\n  for (; t >= r;) t -= n;\n  return t;\n}\nfunction z(t, n) {\n  return Math.atan2(n.y - t.y, n.x - t.x);\n}\nfunction d(t, n) {\n  return M(z(t, n), 2 * Math.PI) * (180 / Math.PI);\n}\nfunction v(t, n) {\n  return M(Math.PI / 2 - z(t, n), 2 * Math.PI) * (180 / Math.PI);\n}\nfunction P(t, n, e) {\n  const r = {\n      x: t.x - n.x,\n      y: t.y - n.y\n    },\n    o = {\n      x: e.x - n.x,\n      y: e.y - n.y\n    };\n  return Math.atan2(g(r, o), p(r, o));\n}\nfunction Z(n, e, r) {\n  return t(M(P(n, e, r), 2 * Math.PI));\n}\nfunction I(n, e, r) {\n  return t(M(-1 * P(n, e, r), 2 * Math.PI));\n}\ni[9002] = .3048, i[9003] = .3048006096012192, i[9095] = .3048007491;\nconst R = [0, 0];\nfunction k(t) {\n  for (let n = 0; n < t.length; n++) {\n    const r = t[n];\n    for (let s = 0; s < r.length - 1; s++) {\n      const o = r[s],\n        i = r[s + 1];\n      for (let r = n + 1; r < t.length; r++) for (let n = 0; n < t[r].length - 1; n++) {\n        const s = t[r][n],\n          c = t[r][n + 1];\n        if (e(o, i, s, c, R) && !(R[0] === o[0] && R[1] === o[1] || R[0] === s[0] && R[1] === s[1] || R[0] === i[0] && R[1] === i[1] || R[0] === c[0] && R[1] === c[1])) return !0;\n      }\n    }\n    const o = r.length;\n    if (!(o < 3)) for (let t = 0; t <= o - 2; t++) {\n      const n = r[t],\n        s = r[t + 1];\n      for (let i = t + 2; i <= o - 2; i++) {\n        const t = r[i],\n          o = r[i + 1];\n        if (e(n, s, t, o, R) && !(R[0] === n[0] && R[1] === n[1] || R[0] === t[0] && R[1] === t[1] || R[0] === s[0] && R[1] === s[1] || R[0] === o[0] && R[1] === o[1])) return !0;\n      }\n    }\n  }\n  return !1;\n}\nfunction W(t, n, e) {\n  return Math.max(n, Math.min(e, t));\n}\nfunction j(t, n) {\n  return t[0] * n[0] + t[1] * n[1] + t[2] * n[2];\n}\nfunction q(t) {\n  return t[0] * t[0] + t[1] * t[1] + t[2] * t[2];\n}\nfunction w(t, n, e) {\n  const r = [e[0] - n[0], e[1] - n[1], e[2] - n[2]],\n    o = W(j(r, [t[0] - n[0], t[1] - n[1], t[2] - n[2]]) / q(r), 0, 1);\n  return [n[0] + (e[0] - n[0]) * o, n[1] + (e[1] - n[1]) * o, n[2] + (e[2] - n[2]) * o];\n}\nfunction J(t, n, e) {\n  let r = 0;\n  const o = e[0] - n[0],\n    s = e[1] - n[1],\n    i = o * o + s * s;\n  if (0 === i) r = .5;else {\n    r = ((t[0] - n[0]) * o + (t[1] - n[1]) * s) / i, r < 0 ? r = 0 : r > 1 && (r = 1);\n  }\n  return r <= .5 ? [n[0] + (e[0] - n[0]) * r, n[1] + (e[1] - n[1]) * r] : [e[0] - (e[0] - n[0]) * (1 - r), e[1] - (e[1] - n[1]) * (1 - r)];\n}\nexport { d as angle2D, Z as angleBetween2D, P as angleBetweenRad, z as angleRad, v as bearing2D, I as bearingBetween2D, m as centroidMultiPoint, y as centroidPolyline, J as closestPointOnLineSegment, w as closestPointOnLineSegmentWithZ, c as getMetersPerVerticalUnitForSR, k as pathsSelfIntersecting, h as segmentLength, r as segmentLength3d, o as segmentLength3dSqr, l as segmentLengthSqr };", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { getMetersPerVerticalUnitForSR as e, segmentLength3d as t, segmentLength as n, segmentLength3dSqr as s, segmentLengthSqr as a, closestPointOnLineSegmentWithZ as r, closestPointOnLineSegment as l } from \"./centroid.js\";\nimport { getMetersPerUnitForSR as i } from \"../../core/unitUtils.js\";\nimport c from \"../../geometry/Point.js\";\nimport o from \"../../geometry/Polygon.js\";\nfunction f(e, t, n) {\n  const s = t[0] - e[0],\n    a = t[1] - e[1];\n  return Math.sqrt(s * s + a * a);\n}\nfunction u(e) {\n  return Math.sqrt(e[0] * e[0] + e[1] * e[1] + e[2] * e[2]);\n}\nfunction h(e) {\n  const t = u(e);\n  return [e[0] / t, e[1] / t, e[2] / t];\n}\nfunction p(e, t, n, s) {\n  const a = h([t[0] - e[0], t[1] - e[1], t[2] * s - e[2] * s]);\n  return [e[0] + a[0] * n, e[1] + a[1] * n, e[2] + a[2] * n];\n}\nfunction m(e, t, n, s) {\n  return e + (t - e) / n * s;\n}\nfunction d(e, t, n) {\n  let s = t[0] - e[0],\n    a = t[1] - e[1];\n  const r = Math.sqrt(s * s + a * a);\n  return s /= r, a /= r, s *= n, a *= n, [e[0] + s, e[1] + a];\n}\nfunction y(n, s) {\n  if (!n) return null;\n  switch (n.type) {\n    case \"extent\":\n    case \"multipoint\":\n    case \"mesh\":\n    case \"point\":\n      return null;\n  }\n  const a = \"polygon\" === n.type ? n.rings : n.paths;\n  let r = 1;\n  if (n.spatialReference.vcsWkid || n.spatialReference.latestVcsWkid) {\n    r = e(n.spatialReference) / i(n.spatialReference);\n  }\n  if (0 === a.length) return null;\n  if (0 === a[0].length) return null;\n  if (!1 === n.hasM) return null;\n  let l = -1,\n    o = 0;\n  const u = n.hasZ ? t : f,\n    h = n.hasZ ? 3 : 2,\n    m = 2;\n  for (const e of a) {\n    if (l++, e.length > 0 && e[0][h] === s) return {\n      partId: l,\n      distanceAlong: o,\n      coordinate: new c({\n        hasZ: n.hasZ,\n        hasM: n.hasM,\n        spatialReference: n.spatialReference,\n        x: e[0][0],\n        y: e[0][1],\n        ...(n.hasZ ? {\n          z: e[0][m]\n        } : {}),\n        ...(n.hasM ? {\n          m: e[0][h]\n        } : {})\n      }),\n      segmentId: 0\n    };\n    let t = -1;\n    for (let a = 1; a < e.length; a++) {\n      const i = u(e[a - 1], e[a], r);\n      t++;\n      const f = e[a][h] - e[a - 1][h],\n        y = e[a][h];\n      if (y === s) return {\n        partId: l,\n        distanceAlong: i + o,\n        coordinate: new c({\n          hasZ: n.hasZ,\n          hasM: n.hasM,\n          spatialReference: n.spatialReference,\n          x: e[a][0],\n          y: e[a][1],\n          ...(n.hasZ ? {\n            z: e[a][m]\n          } : {}),\n          ...(n.hasM ? {\n            m: e[a][h]\n          } : {})\n        }),\n        segmentId: t\n      };\n      if (y > s && s > e[a - 1][h]) {\n        const y = (s - e[a - 1][h]) / f * i;\n        let Z = n.hasZ ? p(e[a - 1], e[a], y, r) : d(e[a - 1], e[a], y);\n        Z = [...Z, s];\n        const R = new c({\n          hasZ: n.hasZ,\n          hasM: n.hasM,\n          spatialReference: n.spatialReference,\n          x: Z[0],\n          y: Z[1],\n          ...(n.hasZ ? {\n            z: Z[m]\n          } : {}),\n          ...(n.hasM ? {\n            m: Z[h]\n          } : {})\n        });\n        return {\n          partId: l,\n          distanceAlong: o + u(e[a - 1], [R.x, R.y, ...(R.hasZ ? [R.z] : []), ...(R.hasM ? [R.m] : [])], r),\n          coordinate: R,\n          segmentId: t\n        };\n      }\n      o += i;\n    }\n  }\n  return null;\n}\nfunction Z(n, s) {\n  if (!n) return null;\n  switch (n.type) {\n    case \"extent\":\n    case \"multipoint\":\n    case \"mesh\":\n    case \"point\":\n      return null;\n  }\n  const a = \"polygon\" === n.type ? n.rings : n.paths;\n  if (s < 0) return null;\n  let r = 1;\n  if (n.spatialReference.vcsWkid || n.spatialReference.latestVcsWkid) {\n    r = e(n.spatialReference) / i(n.spatialReference);\n  }\n  let l = 0;\n  const o = n.hasZ ? 3 : 2,\n    u = 2,\n    h = n.hasZ ? t : f;\n  let y = -1;\n  if (0 === s) return 0 === a.length || 0 === a[0].length ? null : {\n    partId: 0,\n    coordinate: new c({\n      hasZ: n.hasZ,\n      hasM: n.hasM,\n      spatialReference: n.spatialReference,\n      x: a[0][0][0],\n      y: a[0][0][1],\n      ...(n.hasZ ? {\n        z: a[0][0][u]\n      } : {}),\n      ...(n.hasM ? {\n        m: a[0][0][o]\n      } : {})\n    }),\n    segmentId: 0\n  };\n  for (const e of a) {\n    y++;\n    let t = -1;\n    for (let a = 1; a < e.length; a++) {\n      t++;\n      const i = h(e[a - 1], e[a], r),\n        f = l + i;\n      if (f === s) return {\n        partId: y,\n        coordinate: new c({\n          hasZ: n.hasZ,\n          hasM: n.hasM,\n          spatialReference: n.spatialReference,\n          x: e[a][0],\n          y: e[a][1],\n          ...(n.hasZ ? {\n            z: e[a][u]\n          } : {}),\n          ...(n.hasM ? {\n            m: e[a][o]\n          } : {})\n        }),\n        segmentId: t\n      };\n      if (f > s) {\n        let f = n.hasZ ? p(e[a - 1], e[a], s - l, r) : d(e[a - 1], e[a], s - l);\n        return f = [...f, m(e[a - 1][o], e[a][o], i, s - l)], {\n          partId: y,\n          coordinate: new c({\n            hasZ: n.hasZ,\n            hasM: n.hasM,\n            spatialReference: n.spatialReference,\n            x: f[0],\n            y: f[1],\n            ...(n.hasZ ? {\n              z: f[u]\n            } : {}),\n            ...(n.hasM ? {\n              m: f[o]\n            } : {})\n          }),\n          segmentId: t\n        };\n      }\n      l = f;\n    }\n  }\n  return null;\n}\nfunction R(s, a) {\n  if (!s) return null;\n  if (!a) return null;\n  let r = 1;\n  if (a.spatialReference.vcsWkid || a.spatialReference.latestVcsWkid) {\n    r = e(a.spatialReference) / i(a.spatialReference);\n  }\n  let l = null,\n    c = 0;\n  return l = s, c = s.hasZ && a.hasZ ? t([a.x, a.y, a.z], [s.x, s.y, s.z], r) : n([a.x, a.y], [s.x, s.y], !1), {\n    coordinate: l,\n    distance: c\n  };\n}\nfunction g(t, n) {\n  if (!t) return null;\n  if (!n) return null;\n  let r = 1;\n  if (n.spatialReference.vcsWkid || n.spatialReference.latestVcsWkid) {\n    r = e(n.spatialReference) / i(n.spatialReference);\n  }\n  let l = null,\n    c = 0,\n    o = Number.MAX_VALUE,\n    f = -1,\n    u = -1;\n  for (const e of t.points || []) {\n    u++;\n    const l = t.hasZ && n.hasZ ? s([e[0], e[1], e[2]], [n.x, n.y, n.z], r) : a([e[0], e[1]], [n.x, n.y], !1);\n    l < o && (o = l, f = u);\n  }\n  return f < 0 ? null : (c = o, l = t.getPoint(f), {\n    coordinate: l,\n    distance: Math.sqrt(c)\n  });\n}\nfunction M(o, f) {\n  if (!o) return null;\n  if (!f) return null;\n  const u = \"polygon\" === o.type ? o.rings : o.paths;\n  let h = 1;\n  if (f.spatialReference.vcsWkid || f.spatialReference.latestVcsWkid) {\n    h = e(f.spatialReference) / i(f.spatialReference);\n  }\n  let p = Number.MAX_VALUE,\n    d = -1,\n    y = -1,\n    Z = -1;\n  const R = o.hasZ && f.hasZ;\n  let g = null;\n  const M = R ? [f.x, f.y, f.z] : [f.x, f.y];\n  for (const e of u) {\n    y++;\n    for (let t = 1; t < e.length; t++) {\n      const n = R ? r(M, e[t - 1], e[t]) : l(M, e[t - 1], e[t]),\n        i = R ? s(n, M, h) : a(n, M, !1);\n      i < p && (p = i, g = n, Z = y, d = t - 1);\n    }\n  }\n  if (d < 0) return null;\n  const x = o.hasM && o.hasZ ? 3 : 2,\n    I = 2,\n    z = u[Z][d],\n    w = u[Z][d + 1];\n  let k = null,\n    W = null,\n    A = R ? g[2] : null;\n  o.hasM && (W = m(z[x], w[x], R ? t(z, w, h) : n(z, w, !1), R ? t(z, g, h) : n(z, g, !1))), o.hasZ && !1 === f.hasZ && (A = m(z[I], w[I], R ? t(z, w, h) : n(z, w, !1), R ? t(z, g, h) : n(z, g, !1))), k = new c({\n    hasZ: R,\n    hasM: o.hasM,\n    spatialReference: f.spatialReference,\n    x: g[0],\n    y: g[1],\n    ...(o.hasZ ? {\n      z: A\n    } : {}),\n    ...(o.hasM ? {\n      m: W\n    } : {})\n  });\n  let V = 0;\n  for (let e = 0; e <= Z; e++) {\n    const s = u[e],\n      a = e === Z ? d : s.length - 1;\n    for (let e = 1; e <= a; e++) V += o.hasZ ? t(s[e - 1], s[e], h) : n([s[e - 1][0], s[e - 1][1]], [s[e][0], s[e][1]], !1);\n  }\n  return V += o.hasZ ? t(z, [k.x, k.y, k.z], h) : n(z, [k.x, k.y], !1), {\n    partId: Z,\n    segmentId: d,\n    coordinate: k,\n    distance: Math.sqrt(p),\n    distanceAlong: V\n  };\n}\nfunction x(e, t) {\n  if (!e) return null;\n  if (!t) return null;\n  if (\"extent\" === e.type) {\n    const t = e;\n    e = new o({\n      spatialReference: e.spatialReference,\n      rings: [[[t.xmin, t.ymin], [t.xmin, t.ymax], [t.xmax, t.ymax], [t.xmax, t.ymin], [t.xmin, t.ymin]]]\n    });\n  }\n  switch (e.type) {\n    case \"point\":\n      return R(e, t) ?? null;\n    case \"multipoint\":\n      return g(e, t) ?? null;\n    case \"polygon\":\n    case \"polyline\":\n      return M(e, t) ?? null;\n    default:\n      return null;\n  }\n}\nexport { Z as distanceToCoordinate, y as measureToCoordinate, x as pointToCoordinate };"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAOA,SAAS,EAAE,GAAG,GAAG,GAAG;AAClB,SAAO,KAAK,MAAM,EAAE,CAAC,IAAI,EAAE,CAAC,MAAM,KAAK,EAAE,CAAC,IAAI,EAAE,CAAC,MAAM,KAAK,WAAW,EAAE,CAAC,KAAK,WAAW,EAAE,CAAC,KAAK,EAAE,CAAC,IAAI,IAAI,EAAE,CAAC,IAAI,MAAM,IAAI,EAAE;AAClI;AACA,SAAS,EAAE,GAAG,GAAG,GAAG;AAClB,UAAQ,EAAE,CAAC,IAAI,EAAE,CAAC,MAAM,KAAK,EAAE,CAAC,IAAI,EAAE,CAAC,MAAM,KAAK,WAAW,EAAE,CAAC,KAAK,WAAW,EAAE,CAAC,KAAK,EAAE,CAAC,IAAI,IAAI,EAAE,CAAC,IAAI,MAAM,IAAI;AACtH;AACA,IAAM,IAAI,CAAC;AACX,WAAW,KAAK,CAAC,CAAC,MAAM,UAAU,MAAM,MAAM,MAAM,MAAM,IAAI,GAAG,CAAC,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,IAAI,GAAG,CAAC,MAAM,IAAI,CAAC,GAAG;AAC1H,QAAM,IAAI,EAAE,CAAC;AACb,WAAS,IAAI,GAAG,IAAI,EAAE,QAAQ,IAAK,GAAE,EAAE,CAAC,CAAC,IAAI;AAC/C;AACA,IAAM,IAAI,CAAC;AACX,SAAS,EAAE,GAAG;AACZ,SAAO,EAAE,WAAW,WAAW,EAAE,EAAE,OAAO,IAAI,EAAE,EAAE,EAAE,OAAO,CAAC,IAAI,EAAE,iBAAiB,WAAW,EAAE,EAAE,aAAa,IAAI,EAAE,EAAE,EAAE,aAAa,CAAC,IAAI;AAC7I;AACA,SAAS,EAAE,GAAG,GAAG,GAAG;AAClB,QAAMA,KAAI;AAAA,IACR,GAAG;AAAA,IACH,GAAG;AAAA,EACL;AACA,QAAMA,GAAE,IAAI,IAAI,MAAMA,GAAE,IAAI;AAC5B,MAAIC,KAAI,GACNC,KAAI,EAAE,CAAC;AACT,WAASC,KAAI,GAAGA,KAAI,EAAE,QAAQA,MAAK;AACjC,UAAMC,KAAI,EAAED,EAAC;AACb,QAAI,UAAO,EAAEC,IAAGF,EAAC,GAAG;AAClB,YAAMG,KAAI,EAAEH,IAAGE,IAAG,CAAC,GACjBD,KAAI,EAAED,IAAGE,IAAG,GAAG,CAAC;AAClB,MAAAD,GAAE,KAAKE,IAAGF,GAAE,KAAKE,IAAGL,GAAE,KAAKG,GAAE,GAAGH,GAAE,KAAKG,GAAE,GAAG,MAAMA,GAAE,KAAKE,IAAGL,GAAE,KAAKG,GAAE,IAAI,MAAMA,GAAE,KAAKE,IAAGL,GAAE,KAAKG,GAAE,IAAIF,MAAKI,IAAGH,KAAIE;AAAA,IACpH;AAAA,EACF;AACA,SAAOH,KAAI,KAAKD,GAAE,KAAKC,IAAGD,GAAE,KAAKC,IAAG,MAAMD,GAAE,KAAKC,KAAI,MAAMD,GAAE,KAAKC,QAAOD,GAAE,IAAI,EAAE,CAAC,EAAE,CAAC,GAAGA,GAAE,IAAI,EAAE,CAAC,EAAE,CAAC,GAAG,MAAMA,GAAE,IAAI,EAAE,CAAC,EAAE,CAAC,IAAI,KAAK,IAAIA,GAAE,IAAI,EAAE,CAAC,EAAE,CAAC,IAAI,MAAMA,GAAE,IAAI,EAAE,CAAC,EAAE,CAAC,KAAKA;AAC/K;AACA,SAAS,EAAE,GAAG,GAAG,GAAGA,IAAG;AACrB,QAAMC,KAAI;AAAA,IACR,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC,KAAK;AAAA,IACnB,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC,KAAK;AAAA,EACrB;AACA,SAAO,MAAMA,GAAE,KAAK,EAAE,CAAC,IAAI,EAAE,CAAC,KAAK,IAAI,KAAKD,KAAIC,GAAE,KAAK,EAAE,CAAC,IAAI,EAAE,CAAC,KAAK,IAAID,OAAMC,GAAE,KAAK,EAAE,CAAC,IAAI,EAAE,CAAC,KAAK,IAAIA;AAC5G;AACA,SAAS,EAAE,GAAG,GAAG;AACf,MAAI,EAAE,UAAU,EAAG,QAAO;AAC1B,MAAI,IAAI;AACR,WAASD,KAAI,GAAGA,KAAI,EAAE,QAAQA,KAAK,MAAK,EAAE,EAAEA,KAAI,CAAC,GAAG,EAAEA,EAAC,GAAG,CAAC;AAC3D,SAAO;AACT;AACA,SAAS,EAAE,GAAG,GAAG,GAAG;AAClB,QAAMA,KAAI,EAAE,CAAC,IAAI,EAAE,CAAC,GAClBC,KAAI,EAAE,CAAC,IAAI,EAAE,CAAC;AAChB,MAAI,GAAG;AACL,UAAMI,KAAI,EAAE,CAAC,IAAI,EAAE,CAAC;AACpB,WAAO,KAAK,KAAKL,KAAIA,KAAIC,KAAIA,KAAII,KAAIA,EAAC;AAAA,EACxC;AACA,SAAO,KAAK,KAAKL,KAAIA,KAAIC,KAAIA,EAAC;AAChC;AACA,SAAS,EAAE,GAAG,GAAG,GAAG;AAClB,QAAMD,KAAI,EAAE,CAAC,IAAI,EAAE,CAAC,GAClBC,KAAI,EAAE,CAAC,IAAI,EAAE,CAAC;AAChB,MAAI,GAAG;AACL,UAAMI,KAAI,EAAE,CAAC,IAAI,EAAE,CAAC;AACpB,WAAOL,KAAIA,KAAIC,KAAIA,KAAII,KAAIA;AAAA,EAC7B;AACA,SAAOL,KAAIA,KAAIC,KAAIA;AACrB;AACA,SAAS,EAAE,GAAG,GAAG;AACf,MAAI,EAAE,WAAW,EAAE,OAAQ,QAAO;AAClC,WAAS,IAAI,GAAG,IAAI,EAAE,QAAQ,IAAK,KAAI,EAAE,CAAC,MAAM,EAAE,CAAC,EAAG,QAAO;AAC7D,SAAO;AACT;AACA,SAAS,EAAE,GAAG;AACZ,QAAM,IAAI;AAAA,IACN,GAAG;AAAA,IACH,GAAG;AAAA,IACH,kBAAkB,EAAE,iBAAiB,OAAO;AAAA,EAC9C,GACAD,KAAI;AAAA,IACF,GAAG;AAAA,IACH,GAAG;AAAA,IACH,kBAAkB,EAAE,iBAAiB,OAAO;AAAA,EAC9C;AACF,MAAIC,KAAI,GACNC,KAAI;AACN,WAAS,IAAI,GAAG,IAAI,EAAE,MAAM,QAAQ,KAAK;AACvC,QAAI,MAAM,EAAE,MAAM,CAAC,EAAE,OAAQ;AAC7B,UAAMC,KAAI,EAAE,EAAE,MAAM,CAAC,GAAG,SAAO,EAAE,IAAI;AACrC,QAAI,MAAMA,IAAG;AACX,YAAMH,KAAI,EAAE,EAAE,MAAM,CAAC,GAAG,SAAO,EAAE,MAAM,SAAO,EAAE,IAAI;AACpD,QAAE,KAAKA,GAAE,GAAG,EAAE,KAAKA,GAAE,GAAG,SAAO,EAAE,SAAS,EAAE,KAAKA,GAAE,IAAI,SAAO,EAAE,SAAS,EAAE,KAAKA,GAAE,IAAI,EAAEC;AAAA,IAC1F,OAAO;AACL,YAAMK,KAAI,EAAE,EAAE,MAAM,CAAC,GAAG,SAAO,EAAE,MAAM,SAAO,EAAE,IAAI;AACpD,MAAAN,GAAE,KAAKM,GAAE,IAAIH,IAAGH,GAAE,KAAKM,GAAE,IAAIH,IAAG,SAAO,EAAE,SAASH,GAAE,KAAKM,GAAE,IAAIH,KAAI,SAAO,EAAE,SAASH,GAAE,KAAKM,GAAE,IAAIH,KAAID,MAAKC;AAAA,IAC7G;AAAA,EACF;AACA,SAAOD,KAAI,KAAKF,GAAE,KAAKE,IAAGF,GAAE,KAAKE,IAAG,SAAO,EAAE,SAASF,GAAE,KAAKE,KAAI,SAAO,EAAE,SAASF,GAAE,KAAKE,KAAI,IAAI,EAAEF,EAAC,KAAKC,KAAI,KAAK,EAAE,KAAKA,IAAG,EAAE,KAAKA,IAAG,SAAO,EAAE,SAASD,GAAE,KAAKC,KAAI,SAAO,EAAE,SAAS,EAAE,KAAKA,KAAI,IAAI,EAAE,CAAC,KAAK;AAC/M;AACA,SAAS,EAAE,GAAG;AACZ,MAAI,MAAM,EAAE,OAAO,OAAQ,QAAO;AAClC,MAAI,IAAI,GACND,KAAI,GACJC,KAAI,GACJC,KAAI;AACN,WAAS,IAAI,GAAG,IAAI,EAAE,OAAO,QAAQ,KAAK;AACxC,UAAMC,KAAI,EAAE,SAAS,CAAC;AACtB,aAAOA,GAAE,SAASF,MAAKE,GAAE,IAAI,SAAOA,GAAE,SAASD,MAAKC,GAAE,IAAI,KAAKA,GAAE,GAAGH,MAAKG,GAAE,GAAGD,MAAKC,GAAE;AAAA,EACvF;AACA,QAAMA,KAAI;AAAA,IACR,GAAG,IAAI,EAAE,OAAO;AAAA,IAChB,GAAGH,KAAI,EAAE,OAAO;AAAA,IAChB,kBAAkB;AAAA,EACpB;AACA,SAAOG,GAAE,mBAAmB,EAAE,iBAAiB,OAAO,GAAG,SAAO,EAAE,SAASA,GAAE,IAAIF,KAAI,EAAE,OAAO,SAAS,SAAO,EAAE,SAASE,GAAE,IAAID,KAAI,EAAE,OAAO,SAAS,IAAI,EAAEC,EAAC;AAC9J;AACA,SAAS,EAAE,GAAG,GAAG;AACf,SAAO,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;AAC7B;AACA,SAAS,EAAE,GAAG,GAAG;AACf,SAAO,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;AAC7B;AACA,SAASI,GAAE,GAAG,GAAG,IAAI,GAAG;AACtB,SAAO,IAAI,IAAI,MAAK;AACpB,QAAMP,KAAI,IAAI;AACd,SAAO,KAAKA,KAAI,MAAK;AACrB,SAAO;AACT;AACA,SAAS,EAAE,GAAG,GAAG;AACf,SAAO,KAAK,MAAM,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC;AACxC;AACA,SAAS,EAAE,GAAG,GAAG;AACf,SAAOO,GAAE,EAAE,GAAG,CAAC,GAAG,IAAI,KAAK,EAAE,KAAK,MAAM,KAAK;AAC/C;AACA,SAAS,EAAE,GAAG,GAAG;AACf,SAAOA,GAAE,KAAK,KAAK,IAAI,EAAE,GAAG,CAAC,GAAG,IAAI,KAAK,EAAE,KAAK,MAAM,KAAK;AAC7D;AACA,SAAS,EAAE,GAAG,GAAG,GAAG;AAClB,QAAMP,KAAI;AAAA,IACN,GAAG,EAAE,IAAI,EAAE;AAAA,IACX,GAAG,EAAE,IAAI,EAAE;AAAA,EACb,GACAC,KAAI;AAAA,IACF,GAAG,EAAE,IAAI,EAAE;AAAA,IACX,GAAG,EAAE,IAAI,EAAE;AAAA,EACb;AACF,SAAO,KAAK,MAAM,EAAED,IAAGC,EAAC,GAAG,EAAED,IAAGC,EAAC,CAAC;AACpC;AACA,SAAS,EAAE,GAAG,GAAGD,IAAG;AAClB,SAAO,EAAEO,GAAE,EAAE,GAAG,GAAGP,EAAC,GAAG,IAAI,KAAK,EAAE,CAAC;AACrC;AACA,SAAS,EAAE,GAAG,GAAGA,IAAG;AAClB,SAAO,EAAEO,GAAE,KAAK,EAAE,GAAG,GAAGP,EAAC,GAAG,IAAI,KAAK,EAAE,CAAC;AAC1C;AACA,EAAE,IAAI,IAAI,QAAO,EAAE,IAAI,IAAI,oBAAmB,EAAE,IAAI,IAAI;AACxD,IAAM,IAAI,CAAC,GAAG,CAAC;AACf,SAAS,EAAE,GAAG;AACZ,WAAS,IAAI,GAAG,IAAI,EAAE,QAAQ,KAAK;AACjC,UAAMA,KAAI,EAAE,CAAC;AACb,aAASE,KAAI,GAAGA,KAAIF,GAAE,SAAS,GAAGE,MAAK;AACrC,YAAMD,KAAID,GAAEE,EAAC,GACXC,KAAIH,GAAEE,KAAI,CAAC;AACb,eAASF,KAAI,IAAI,GAAGA,KAAI,EAAE,QAAQA,KAAK,UAASQ,KAAI,GAAGA,KAAI,EAAER,EAAC,EAAE,SAAS,GAAGQ,MAAK;AAC/E,cAAMN,KAAI,EAAEF,EAAC,EAAEQ,EAAC,GACdJ,KAAI,EAAEJ,EAAC,EAAEQ,KAAI,CAAC;AAChB,YAAI,EAAEP,IAAGE,IAAGD,IAAGE,IAAG,CAAC,KAAK,EAAE,EAAE,CAAC,MAAMH,GAAE,CAAC,KAAK,EAAE,CAAC,MAAMA,GAAE,CAAC,KAAK,EAAE,CAAC,MAAMC,GAAE,CAAC,KAAK,EAAE,CAAC,MAAMA,GAAE,CAAC,KAAK,EAAE,CAAC,MAAMC,GAAE,CAAC,KAAK,EAAE,CAAC,MAAMA,GAAE,CAAC,KAAK,EAAE,CAAC,MAAMC,GAAE,CAAC,KAAK,EAAE,CAAC,MAAMA,GAAE,CAAC,GAAI,QAAO;AAAA,MAC1K;AAAA,IACF;AACA,UAAMH,KAAID,GAAE;AACZ,QAAI,EAAEC,KAAI,GAAI,UAASI,KAAI,GAAGA,MAAKJ,KAAI,GAAGI,MAAK;AAC7C,YAAMG,KAAIR,GAAEK,EAAC,GACXH,KAAIF,GAAEK,KAAI,CAAC;AACb,eAASF,KAAIE,KAAI,GAAGF,MAAKF,KAAI,GAAGE,MAAK;AACnC,cAAME,KAAIL,GAAEG,EAAC,GACXF,KAAID,GAAEG,KAAI,CAAC;AACb,YAAI,EAAEK,IAAGN,IAAGG,IAAGJ,IAAG,CAAC,KAAK,EAAE,EAAE,CAAC,MAAMO,GAAE,CAAC,KAAK,EAAE,CAAC,MAAMA,GAAE,CAAC,KAAK,EAAE,CAAC,MAAMH,GAAE,CAAC,KAAK,EAAE,CAAC,MAAMA,GAAE,CAAC,KAAK,EAAE,CAAC,MAAMH,GAAE,CAAC,KAAK,EAAE,CAAC,MAAMA,GAAE,CAAC,KAAK,EAAE,CAAC,MAAMD,GAAE,CAAC,KAAK,EAAE,CAAC,MAAMA,GAAE,CAAC,GAAI,QAAO;AAAA,MAC1K;AAAA,IACF;AAAA,EACF;AACA,SAAO;AACT;AACA,SAASQ,GAAE,GAAG,GAAG,GAAG;AAClB,SAAO,KAAK,IAAI,GAAG,KAAK,IAAI,GAAG,CAAC,CAAC;AACnC;AACA,SAASC,GAAE,GAAG,GAAG;AACf,SAAO,EAAE,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC;AAC/C;AACA,SAAS,EAAE,GAAG;AACZ,SAAO,EAAE,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC;AAC/C;AACA,SAAS,EAAE,GAAG,GAAG,GAAG;AAClB,QAAMV,KAAI,CAAC,EAAE,CAAC,IAAI,EAAE,CAAC,GAAG,EAAE,CAAC,IAAI,EAAE,CAAC,GAAG,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC,GAC9CC,KAAIQ,GAAEC,GAAEV,IAAG,CAAC,EAAE,CAAC,IAAI,EAAE,CAAC,GAAG,EAAE,CAAC,IAAI,EAAE,CAAC,GAAG,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,EAAEA,EAAC,GAAG,GAAG,CAAC;AAClE,SAAO,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,IAAI,EAAE,CAAC,KAAKC,IAAG,EAAE,CAAC,KAAK,EAAE,CAAC,IAAI,EAAE,CAAC,KAAKA,IAAG,EAAE,CAAC,KAAK,EAAE,CAAC,IAAI,EAAE,CAAC,KAAKA,EAAC;AACtF;AACA,SAAS,EAAE,GAAG,GAAG,GAAG;AAClB,MAAID,KAAI;AACR,QAAMC,KAAI,EAAE,CAAC,IAAI,EAAE,CAAC,GAClBC,KAAI,EAAE,CAAC,IAAI,EAAE,CAAC,GACdC,KAAIF,KAAIA,KAAIC,KAAIA;AAClB,MAAI,MAAMC,GAAG,CAAAH,KAAI;AAAA,OAAQ;AACvB,IAAAA,OAAM,EAAE,CAAC,IAAI,EAAE,CAAC,KAAKC,MAAK,EAAE,CAAC,IAAI,EAAE,CAAC,KAAKC,MAAKC,IAAGH,KAAI,IAAIA,KAAI,IAAIA,KAAI,MAAMA,KAAI;AAAA,EACjF;AACA,SAAOA,MAAK,MAAK,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,IAAI,EAAE,CAAC,KAAKA,IAAG,EAAE,CAAC,KAAK,EAAE,CAAC,IAAI,EAAE,CAAC,KAAKA,EAAC,IAAI,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,IAAI,EAAE,CAAC,MAAM,IAAIA,KAAI,EAAE,CAAC,KAAK,EAAE,CAAC,IAAI,EAAE,CAAC,MAAM,IAAIA,GAAE;AACzI;;;ACvMA,SAASW,GAAE,GAAG,GAAG,GAAG;AAClB,QAAMC,KAAI,EAAE,CAAC,IAAI,EAAE,CAAC,GAClBC,KAAI,EAAE,CAAC,IAAI,EAAE,CAAC;AAChB,SAAO,KAAK,KAAKD,KAAIA,KAAIC,KAAIA,EAAC;AAChC;AACA,SAASC,GAAE,GAAG;AACZ,SAAO,KAAK,KAAK,EAAE,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC;AAC1D;AACA,SAASC,GAAE,GAAG;AACZ,QAAM,IAAID,GAAE,CAAC;AACb,SAAO,CAAC,EAAE,CAAC,IAAI,GAAG,EAAE,CAAC,IAAI,GAAG,EAAE,CAAC,IAAI,CAAC;AACtC;AACA,SAASE,GAAE,GAAG,GAAG,GAAGJ,IAAG;AACrB,QAAMC,KAAIE,GAAE,CAAC,EAAE,CAAC,IAAI,EAAE,CAAC,GAAG,EAAE,CAAC,IAAI,EAAE,CAAC,GAAG,EAAE,CAAC,IAAIH,KAAI,EAAE,CAAC,IAAIA,EAAC,CAAC;AAC3D,SAAO,CAAC,EAAE,CAAC,IAAIC,GAAE,CAAC,IAAI,GAAG,EAAE,CAAC,IAAIA,GAAE,CAAC,IAAI,GAAG,EAAE,CAAC,IAAIA,GAAE,CAAC,IAAI,CAAC;AAC3D;AACA,SAASI,GAAE,GAAG,GAAG,GAAGL,IAAG;AACrB,SAAO,KAAK,IAAI,KAAK,IAAIA;AAC3B;AACA,SAASM,GAAE,GAAG,GAAG,GAAG;AAClB,MAAIN,KAAI,EAAE,CAAC,IAAI,EAAE,CAAC,GAChBC,KAAI,EAAE,CAAC,IAAI,EAAE,CAAC;AAChB,QAAMM,KAAI,KAAK,KAAKP,KAAIA,KAAIC,KAAIA,EAAC;AACjC,SAAOD,MAAKO,IAAGN,MAAKM,IAAGP,MAAK,GAAGC,MAAK,GAAG,CAAC,EAAE,CAAC,IAAID,IAAG,EAAE,CAAC,IAAIC,EAAC;AAC5D;AACA,SAASO,GAAE,GAAGR,IAAG;AACf,MAAI,CAAC,EAAG,QAAO;AACf,UAAQ,EAAE,MAAM;AAAA,IACd,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AACH,aAAO;AAAA,EACX;AACA,QAAMC,KAAI,cAAc,EAAE,OAAO,EAAE,QAAQ,EAAE;AAC7C,MAAIM,KAAI;AACR,MAAI,EAAE,iBAAiB,WAAW,EAAE,iBAAiB,eAAe;AAClE,IAAAA,KAAI,EAAE,EAAE,gBAAgB,IAAI,EAAE,EAAE,gBAAgB;AAAA,EAClD;AACA,MAAI,MAAMN,GAAE,OAAQ,QAAO;AAC3B,MAAI,MAAMA,GAAE,CAAC,EAAE,OAAQ,QAAO;AAC9B,MAAI,UAAO,EAAE,KAAM,QAAO;AAC1B,MAAIQ,KAAI,IACNC,KAAI;AACN,QAAMR,KAAI,EAAE,OAAO,IAAIH,IACrBI,KAAI,EAAE,OAAO,IAAI,GACjBE,KAAI;AACN,aAAW,KAAKJ,IAAG;AACjB,QAAIQ,MAAK,EAAE,SAAS,KAAK,EAAE,CAAC,EAAEN,EAAC,MAAMH,GAAG,QAAO;AAAA,MAC7C,QAAQS;AAAA,MACR,eAAeC;AAAA,MACf,YAAY,IAAI,EAAE;AAAA,QAChB,MAAM,EAAE;AAAA,QACR,MAAM,EAAE;AAAA,QACR,kBAAkB,EAAE;AAAA,QACpB,GAAG,EAAE,CAAC,EAAE,CAAC;AAAA,QACT,GAAG,EAAE,CAAC,EAAE,CAAC;AAAA,SACL,EAAE,OAAO;AAAA,QACX,GAAG,EAAE,CAAC,EAAEL,EAAC;AAAA,MACX,IAAI,CAAC,IACD,EAAE,OAAO;AAAA,QACX,GAAG,EAAE,CAAC,EAAEF,EAAC;AAAA,MACX,IAAI,CAAC,EACN;AAAA,MACD,WAAW;AAAA,IACb;AACA,QAAI,IAAI;AACR,aAASF,KAAI,GAAGA,KAAI,EAAE,QAAQA,MAAK;AACjC,YAAMU,KAAIT,GAAE,EAAED,KAAI,CAAC,GAAG,EAAEA,EAAC,GAAGM,EAAC;AAC7B;AACA,YAAMR,KAAI,EAAEE,EAAC,EAAEE,EAAC,IAAI,EAAEF,KAAI,CAAC,EAAEE,EAAC,GAC5BK,KAAI,EAAEP,EAAC,EAAEE,EAAC;AACZ,UAAIK,OAAMR,GAAG,QAAO;AAAA,QAClB,QAAQS;AAAA,QACR,eAAeE,KAAID;AAAA,QACnB,YAAY,IAAI,EAAE;AAAA,UAChB,MAAM,EAAE;AAAA,UACR,MAAM,EAAE;AAAA,UACR,kBAAkB,EAAE;AAAA,UACpB,GAAG,EAAET,EAAC,EAAE,CAAC;AAAA,UACT,GAAG,EAAEA,EAAC,EAAE,CAAC;AAAA,WACL,EAAE,OAAO;AAAA,UACX,GAAG,EAAEA,EAAC,EAAEI,EAAC;AAAA,QACX,IAAI,CAAC,IACD,EAAE,OAAO;AAAA,UACX,GAAG,EAAEJ,EAAC,EAAEE,EAAC;AAAA,QACX,IAAI,CAAC,EACN;AAAA,QACD,WAAW;AAAA,MACb;AACA,UAAIK,KAAIR,MAAKA,KAAI,EAAEC,KAAI,CAAC,EAAEE,EAAC,GAAG;AAC5B,cAAMK,MAAKR,KAAI,EAAEC,KAAI,CAAC,EAAEE,EAAC,KAAKJ,KAAIY;AAClC,YAAIC,KAAI,EAAE,OAAOR,GAAE,EAAEH,KAAI,CAAC,GAAG,EAAEA,EAAC,GAAGO,IAAGD,EAAC,IAAID,GAAE,EAAEL,KAAI,CAAC,GAAG,EAAEA,EAAC,GAAGO,EAAC;AAC9D,QAAAI,KAAI,CAAC,GAAGA,IAAGZ,EAAC;AACZ,cAAMa,KAAI,IAAI,EAAE;AAAA,UACd,MAAM,EAAE;AAAA,UACR,MAAM,EAAE;AAAA,UACR,kBAAkB,EAAE;AAAA,UACpB,GAAGD,GAAE,CAAC;AAAA,UACN,GAAGA,GAAE,CAAC;AAAA,WACF,EAAE,OAAO;AAAA,UACX,GAAGA,GAAEP,EAAC;AAAA,QACR,IAAI,CAAC,IACD,EAAE,OAAO;AAAA,UACX,GAAGO,GAAET,EAAC;AAAA,QACR,IAAI,CAAC,EACN;AACD,eAAO;AAAA,UACL,QAAQM;AAAA,UACR,eAAeC,KAAIR,GAAE,EAAED,KAAI,CAAC,GAAG,CAACY,GAAE,GAAGA,GAAE,GAAG,GAAIA,GAAE,OAAO,CAACA,GAAE,CAAC,IAAI,CAAC,GAAI,GAAIA,GAAE,OAAO,CAACA,GAAE,CAAC,IAAI,CAAC,CAAE,GAAGN,EAAC;AAAA,UAChG,YAAYM;AAAA,UACZ,WAAW;AAAA,QACb;AAAA,MACF;AACA,MAAAH,MAAKC;AAAA,IACP;AAAA,EACF;AACA,SAAO;AACT;AACA,SAASC,GAAE,GAAGZ,IAAG;AACf,MAAI,CAAC,EAAG,QAAO;AACf,UAAQ,EAAE,MAAM;AAAA,IACd,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AACH,aAAO;AAAA,EACX;AACA,QAAMC,KAAI,cAAc,EAAE,OAAO,EAAE,QAAQ,EAAE;AAC7C,MAAID,KAAI,EAAG,QAAO;AAClB,MAAIO,KAAI;AACR,MAAI,EAAE,iBAAiB,WAAW,EAAE,iBAAiB,eAAe;AAClE,IAAAA,KAAI,EAAE,EAAE,gBAAgB,IAAI,EAAE,EAAE,gBAAgB;AAAA,EAClD;AACA,MAAIE,KAAI;AACR,QAAMC,KAAI,EAAE,OAAO,IAAI,GACrBR,KAAI,GACJC,KAAI,EAAE,OAAO,IAAIJ;AACnB,MAAIS,KAAI;AACR,MAAI,MAAMR,GAAG,QAAO,MAAMC,GAAE,UAAU,MAAMA,GAAE,CAAC,EAAE,SAAS,OAAO;AAAA,IAC/D,QAAQ;AAAA,IACR,YAAY,IAAI,EAAE;AAAA,MAChB,MAAM,EAAE;AAAA,MACR,MAAM,EAAE;AAAA,MACR,kBAAkB,EAAE;AAAA,MACpB,GAAGA,GAAE,CAAC,EAAE,CAAC,EAAE,CAAC;AAAA,MACZ,GAAGA,GAAE,CAAC,EAAE,CAAC,EAAE,CAAC;AAAA,OACR,EAAE,OAAO;AAAA,MACX,GAAGA,GAAE,CAAC,EAAE,CAAC,EAAEC,EAAC;AAAA,IACd,IAAI,CAAC,IACD,EAAE,OAAO;AAAA,MACX,GAAGD,GAAE,CAAC,EAAE,CAAC,EAAES,EAAC;AAAA,IACd,IAAI,CAAC,EACN;AAAA,IACD,WAAW;AAAA,EACb;AACA,aAAW,KAAKT,IAAG;AACjB,IAAAO;AACA,QAAI,IAAI;AACR,aAASP,KAAI,GAAGA,KAAI,EAAE,QAAQA,MAAK;AACjC;AACA,YAAMU,KAAIR,GAAE,EAAEF,KAAI,CAAC,GAAG,EAAEA,EAAC,GAAGM,EAAC,GAC3BR,KAAIU,KAAIE;AACV,UAAIZ,OAAMC,GAAG,QAAO;AAAA,QAClB,QAAQQ;AAAA,QACR,YAAY,IAAI,EAAE;AAAA,UAChB,MAAM,EAAE;AAAA,UACR,MAAM,EAAE;AAAA,UACR,kBAAkB,EAAE;AAAA,UACpB,GAAG,EAAEP,EAAC,EAAE,CAAC;AAAA,UACT,GAAG,EAAEA,EAAC,EAAE,CAAC;AAAA,WACL,EAAE,OAAO;AAAA,UACX,GAAG,EAAEA,EAAC,EAAEC,EAAC;AAAA,QACX,IAAI,CAAC,IACD,EAAE,OAAO;AAAA,UACX,GAAG,EAAED,EAAC,EAAES,EAAC;AAAA,QACX,IAAI,CAAC,EACN;AAAA,QACD,WAAW;AAAA,MACb;AACA,UAAIX,KAAIC,IAAG;AACT,YAAID,KAAI,EAAE,OAAOK,GAAE,EAAEH,KAAI,CAAC,GAAG,EAAEA,EAAC,GAAGD,KAAIS,IAAGF,EAAC,IAAID,GAAE,EAAEL,KAAI,CAAC,GAAG,EAAEA,EAAC,GAAGD,KAAIS,EAAC;AACtE,eAAOV,KAAI,CAAC,GAAGA,IAAGM,GAAE,EAAEJ,KAAI,CAAC,EAAES,EAAC,GAAG,EAAET,EAAC,EAAES,EAAC,GAAGC,IAAGX,KAAIS,EAAC,CAAC,GAAG;AAAA,UACpD,QAAQD;AAAA,UACR,YAAY,IAAI,EAAE;AAAA,YAChB,MAAM,EAAE;AAAA,YACR,MAAM,EAAE;AAAA,YACR,kBAAkB,EAAE;AAAA,YACpB,GAAGT,GAAE,CAAC;AAAA,YACN,GAAGA,GAAE,CAAC;AAAA,aACF,EAAE,OAAO;AAAA,YACX,GAAGA,GAAEG,EAAC;AAAA,UACR,IAAI,CAAC,IACD,EAAE,OAAO;AAAA,YACX,GAAGH,GAAEW,EAAC;AAAA,UACR,IAAI,CAAC,EACN;AAAA,UACD,WAAW;AAAA,QACb;AAAA,MACF;AACA,MAAAD,KAAIV;AAAA,IACN;AAAA,EACF;AACA,SAAO;AACT;AACA,SAASc,GAAEb,IAAGC,IAAG;AACf,MAAI,CAACD,GAAG,QAAO;AACf,MAAI,CAACC,GAAG,QAAO;AACf,MAAIM,KAAI;AACR,MAAIN,GAAE,iBAAiB,WAAWA,GAAE,iBAAiB,eAAe;AAClE,IAAAM,KAAI,EAAEN,GAAE,gBAAgB,IAAI,EAAEA,GAAE,gBAAgB;AAAA,EAClD;AACA,MAAIQ,KAAI,MACNK,KAAI;AACN,SAAOL,KAAIT,IAAGc,KAAId,GAAE,QAAQC,GAAE,OAAO,EAAE,CAACA,GAAE,GAAGA,GAAE,GAAGA,GAAE,CAAC,GAAG,CAACD,GAAE,GAAGA,GAAE,GAAGA,GAAE,CAAC,GAAGO,EAAC,IAAI,EAAE,CAACN,GAAE,GAAGA,GAAE,CAAC,GAAG,CAACD,GAAE,GAAGA,GAAE,CAAC,GAAG,KAAE,GAAG;AAAA,IAC3G,YAAYS;AAAA,IACZ,UAAUK;AAAA,EACZ;AACF;AACA,SAASC,GAAE,GAAG,GAAG;AACf,MAAI,CAAC,EAAG,QAAO;AACf,MAAI,CAAC,EAAG,QAAO;AACf,MAAIR,KAAI;AACR,MAAI,EAAE,iBAAiB,WAAW,EAAE,iBAAiB,eAAe;AAClE,IAAAA,KAAI,EAAE,EAAE,gBAAgB,IAAI,EAAE,EAAE,gBAAgB;AAAA,EAClD;AACA,MAAIE,KAAI,MACNK,KAAI,GACJJ,KAAI,OAAO,WACXX,KAAI,IACJG,KAAI;AACN,aAAW,KAAK,EAAE,UAAU,CAAC,GAAG;AAC9B,IAAAA;AACA,UAAMO,KAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,GAAGF,EAAC,IAAI,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,GAAG,KAAE;AACvG,IAAAE,KAAIC,OAAMA,KAAID,IAAGV,KAAIG;AAAA,EACvB;AACA,SAAOH,KAAI,IAAI,QAAQe,KAAIJ,IAAGD,KAAI,EAAE,SAASV,EAAC,GAAG;AAAA,IAC/C,YAAYU;AAAA,IACZ,UAAU,KAAK,KAAKK,EAAC;AAAA,EACvB;AACF;AACA,SAASE,GAAEN,IAAGX,IAAG;AACf,MAAI,CAACW,GAAG,QAAO;AACf,MAAI,CAACX,GAAG,QAAO;AACf,QAAMG,KAAI,cAAcQ,GAAE,OAAOA,GAAE,QAAQA,GAAE;AAC7C,MAAIP,KAAI;AACR,MAAIJ,GAAE,iBAAiB,WAAWA,GAAE,iBAAiB,eAAe;AAClE,IAAAI,KAAI,EAAEJ,GAAE,gBAAgB,IAAI,EAAEA,GAAE,gBAAgB;AAAA,EAClD;AACA,MAAIK,KAAI,OAAO,WACbE,KAAI,IACJE,KAAI,IACJI,KAAI;AACN,QAAMC,KAAIH,GAAE,QAAQX,GAAE;AACtB,MAAIgB,KAAI;AACR,QAAMC,KAAIH,KAAI,CAACd,GAAE,GAAGA,GAAE,GAAGA,GAAE,CAAC,IAAI,CAACA,GAAE,GAAGA,GAAE,CAAC;AACzC,aAAW,KAAKG,IAAG;AACjB,IAAAM;AACA,aAAS,IAAI,GAAG,IAAI,EAAE,QAAQ,KAAK;AACjC,YAAM,IAAIK,KAAI,EAAEG,IAAG,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,IAAI,EAAEA,IAAG,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,GACtDL,KAAIE,KAAI,EAAE,GAAGG,IAAGb,EAAC,IAAI,EAAE,GAAGa,IAAG,KAAE;AACjC,MAAAL,KAAIP,OAAMA,KAAIO,IAAGI,KAAI,GAAGH,KAAIJ,IAAGF,KAAI,IAAI;AAAA,IACzC;AAAA,EACF;AACA,MAAIA,KAAI,EAAG,QAAO;AAClB,QAAMW,KAAIP,GAAE,QAAQA,GAAE,OAAO,IAAI,GAC/BQ,KAAI,GACJC,KAAIjB,GAAEU,EAAC,EAAEN,EAAC,GACVc,KAAIlB,GAAEU,EAAC,EAAEN,KAAI,CAAC;AAChB,MAAIe,KAAI,MACNC,KAAI,MACJ,IAAIT,KAAIE,GAAE,CAAC,IAAI;AACjB,EAAAL,GAAE,SAASY,KAAIjB,GAAEc,GAAEF,EAAC,GAAGG,GAAEH,EAAC,GAAGJ,KAAI,EAAEM,IAAGC,IAAGjB,EAAC,IAAI,EAAEgB,IAAGC,IAAG,KAAE,GAAGP,KAAI,EAAEM,IAAGJ,IAAGZ,EAAC,IAAI,EAAEgB,IAAGJ,IAAG,KAAE,CAAC,IAAIL,GAAE,QAAQ,UAAOX,GAAE,SAAS,IAAIM,GAAEc,GAAED,EAAC,GAAGE,GAAEF,EAAC,GAAGL,KAAI,EAAEM,IAAGC,IAAGjB,EAAC,IAAI,EAAEgB,IAAGC,IAAG,KAAE,GAAGP,KAAI,EAAEM,IAAGJ,IAAGZ,EAAC,IAAI,EAAEgB,IAAGJ,IAAG,KAAE,CAAC,IAAIM,KAAI,IAAI,EAAE;AAAA,IAC/M,MAAMR;AAAA,IACN,MAAMH,GAAE;AAAA,IACR,kBAAkBX,GAAE;AAAA,IACpB,GAAGgB,GAAE,CAAC;AAAA,IACN,GAAGA,GAAE,CAAC;AAAA,KACFL,GAAE,OAAO;AAAA,IACX,GAAG;AAAA,EACL,IAAI,CAAC,IACDA,GAAE,OAAO;AAAA,IACX,GAAGY;AAAA,EACL,IAAI,CAAC,EACN;AACD,MAAI,IAAI;AACR,WAAS,IAAI,GAAG,KAAKV,IAAG,KAAK;AAC3B,UAAMZ,KAAIE,GAAE,CAAC,GACXD,KAAI,MAAMW,KAAIN,KAAIN,GAAE,SAAS;AAC/B,aAASuB,KAAI,GAAGA,MAAKtB,IAAGsB,KAAK,MAAKb,GAAE,OAAO,EAAEV,GAAEuB,KAAI,CAAC,GAAGvB,GAAEuB,EAAC,GAAGpB,EAAC,IAAI,EAAE,CAACH,GAAEuB,KAAI,CAAC,EAAE,CAAC,GAAGvB,GAAEuB,KAAI,CAAC,EAAE,CAAC,CAAC,GAAG,CAACvB,GAAEuB,EAAC,EAAE,CAAC,GAAGvB,GAAEuB,EAAC,EAAE,CAAC,CAAC,GAAG,KAAE;AAAA,EACxH;AACA,SAAO,KAAKb,GAAE,OAAO,EAAES,IAAG,CAACE,GAAE,GAAGA,GAAE,GAAGA,GAAE,CAAC,GAAGlB,EAAC,IAAI,EAAEgB,IAAG,CAACE,GAAE,GAAGA,GAAE,CAAC,GAAG,KAAE,GAAG;AAAA,IACpE,QAAQT;AAAA,IACR,WAAWN;AAAA,IACX,YAAYe;AAAA,IACZ,UAAU,KAAK,KAAKjB,EAAC;AAAA,IACrB,eAAe;AAAA,EACjB;AACF;AACA,SAASa,GAAE,GAAG,GAAG;AACf,MAAI,CAAC,EAAG,QAAO;AACf,MAAI,CAAC,EAAG,QAAO;AACf,MAAI,aAAa,EAAE,MAAM;AACvB,UAAMO,KAAI;AACV,QAAI,IAAI,EAAE;AAAA,MACR,kBAAkB,EAAE;AAAA,MACpB,OAAO,CAAC,CAAC,CAACA,GAAE,MAAMA,GAAE,IAAI,GAAG,CAACA,GAAE,MAAMA,GAAE,IAAI,GAAG,CAACA,GAAE,MAAMA,GAAE,IAAI,GAAG,CAACA,GAAE,MAAMA,GAAE,IAAI,GAAG,CAACA,GAAE,MAAMA,GAAE,IAAI,CAAC,CAAC;AAAA,IACpG,CAAC;AAAA,EACH;AACA,UAAQ,EAAE,MAAM;AAAA,IACd,KAAK;AACH,aAAOX,GAAE,GAAG,CAAC,KAAK;AAAA,IACpB,KAAK;AACH,aAAOE,GAAE,GAAG,CAAC,KAAK;AAAA,IACpB,KAAK;AAAA,IACL,KAAK;AACH,aAAOC,GAAE,GAAG,CAAC,KAAK;AAAA,IACpB;AACE,aAAO;AAAA,EACX;AACF;",
  "names": ["r", "o", "s", "i", "c", "t", "e", "M", "n", "W", "j", "f", "s", "a", "u", "h", "p", "m", "d", "r", "y", "l", "o", "i", "Z", "R", "c", "g", "M", "x", "I", "z", "w", "k", "W", "e", "t"]
}
