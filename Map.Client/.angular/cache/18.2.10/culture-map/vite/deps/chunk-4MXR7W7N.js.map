{
  "version": 3,
  "sources": ["../../../../../../node_modules/@arcgis/core/core/sql/WhereClauseCache.js", "../../../../../../node_modules/@arcgis/core/layers/graphics/data/attributeSupport.js", "../../../../../../node_modules/@arcgis/core/layers/graphics/data/AttributesBuilder.js", "../../../../../../node_modules/@arcgis/core/layers/graphics/data/QueryEngineResult.js", "../../../../../../node_modules/@arcgis/core/layers/graphics/data/queryValidationUtils.js", "../../../../../../node_modules/@arcgis/core/layers/graphics/data/QueryEngine.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { LRUCache as t } from \"../LRUCache.js\";\nimport { WhereClause as e } from \"./WhereClause.js\";\nclass r {\n  constructor(e, r) {\n    this._cache = new t(e), this._invalidCache = new t(r);\n  }\n  get(t, r) {\n    const i = `${r.uid}:${t}`,\n      c = this._cache.get(i);\n    if (c) return c;\n    if (null != this._invalidCache.get(i)) return null;\n    try {\n      const c = e.create(t, r);\n      return this._cache.put(i, c), c;\n    } catch (n) {\n      return this._invalidCache.put(i, n), null;\n    }\n  }\n  getError(t, e) {\n    const r = `${e.uid}:${t}`;\n    return this._invalidCache.get(r) ?? null;\n  }\n}\nexport { r as WhereClauseCache };", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport e from \"../../../core/Error.js\";\nimport { WhereClauseCache as i } from \"../../../core/sql/WhereClauseCache.js\";\nimport { kebabDict as r } from \"../../support/fieldType.js\";\nconst s = new i(50, 500),\n  t = \"unsupported-query\",\n  n = \" as \",\n  o = new Set([\"esriFieldTypeOID\", \"esriFieldTypeSmallInteger\", \"esriFieldTypeBigInteger\", \"esriFieldTypeInteger\", \"esriFieldTypeSingle\", \"esriFieldTypeDouble\", \"esriFieldTypeLong\"]),\n  a = new Set([\"esriFieldTypeDate\", \"esriFieldTypeDateOnly\", \"esriFieldTypeTimeOnly\", \"esriFieldTypeTimestampOffset\"]),\n  l = new Set([\"esriFieldTypeString\", \"esriFieldTypeGUID\", \"esriFieldTypeGlobalID\", ...o, ...a]);\nfunction d(i, r, n = {}) {\n  const o = c(r, i);\n  if (!o) {\n    const n = s.getError(r, i);\n    throw new e(t, \"invalid SQL expression\", {\n      expression: r,\n      error: n\n    });\n  }\n  const a = n.expressionName || \"expression\";\n  if (n.validateStandardized && !o.isStandardized) throw new e(t, `${a} is not standard`, {\n    expression: r\n  });\n  if (n.validateAggregate && !o.isAggregate) throw new e(t, `${a} does not contain a valid aggregate function`, {\n    expression: r\n  });\n  return o.fieldNames;\n}\nfunction p(e, i, r, s) {\n  if (!r) return !0;\n  const t = \"where clause\";\n  return g(e, i, d(e, r, {\n    validateStandardized: !0,\n    expressionName: t\n  }), {\n    expressionName: t,\n    query: s\n  }), !0;\n}\nfunction f(i, r, s, n, o) {\n  if (!s) return !0;\n  const a = \"having clause\",\n    l = d(i, s, {\n      validateAggregate: !0,\n      expressionName: a\n    });\n  g(i, r, l, {\n    expressionName: a,\n    query: o\n  });\n  const p = c(s, i),\n    f = p?.getExpressions().every(e => {\n      const {\n          aggregateType: r,\n          field: s\n        } = e,\n        t = i.get(s)?.name;\n      return n.some(e => {\n        const {\n            onStatisticField: s,\n            statisticType: n\n          } = e,\n          o = i.get(s)?.name;\n        return o === t && n.toLowerCase().trim() === r;\n      });\n    });\n  if (!f) throw new e(t, \"expressions in having clause should also exist in outStatistics\", {\n    having: s\n  });\n  return !0;\n}\nfunction c(e, i) {\n  return e ? s.get(e, i) : null;\n}\nfunction u(e) {\n  return /\\((.*?)\\)/.test(e) ? e : e.split(n)[0];\n}\nfunction y(e) {\n  return e.split(n)[1];\n}\nfunction g(i, r, s, n = {}) {\n  const o = new Map();\n  if (m(o, i, r, n.allowedFieldTypes ?? l, s), o.size) {\n    const i = n.expressionName ?? \"expression\";\n    throw new e(t, `${i} contains invalid or missing fields`, {\n      errors: Array.from(o.values()),\n      query: n.query\n    });\n  }\n}\nfunction m(e, i, r, s, t) {\n  const n = t.includes(\"*\") ? [...r, ...t.filter(e => \"*\" !== e)] : t;\n  for (const a of n) {\n    if (i.get(a)) T(e, i, r, s, a);else try {\n      const t = d(i, u(a), {\n        validateStandardized: !0\n      });\n      for (const n of t) T(e, i, r, s, n);\n    } catch (o) {\n      e.set(a, {\n        type: \"expression-error\",\n        expression: a,\n        error: o\n      });\n    }\n  }\n}\nfunction T(e, i, s, t, n) {\n  const o = i.get(n);\n  o ? s.has(o.name) ? \"all\" !== t && !1 === t?.has(o.type) && e.set(n, {\n    type: \"invalid-type\",\n    fieldName: o.name,\n    fieldType: r.fromJSON(o.type),\n    allowedFieldTypes: Array.from(t, e => r.fromJSON(e))\n  }) : e.set(n, {\n    type: \"missing-field\",\n    fieldName: o.name\n  }) : e.set(n, {\n    type: \"invalid-field\",\n    fieldName: n\n  });\n}\nexport { a as allDateAndTimeFieldTypes, y as getAliasFromFieldName, u as getExpressionFromFieldName, c as getWhereClause, o as numericFieldTypes, g as validateFields, f as validateHaving, p as validateWhere };", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { getExpressionFromFieldName as t, getWhereClause as e, getAliasFromFieldName as i } from \"./attributeSupport.js\";\nimport { getGeometry as s } from \"./geometryUtils.js\";\nimport { isDateOnlyField as a, isTimestampOffsetField as l, isTimeOnlyField as r } from \"../../support/fieldUtils.js\";\nimport { timeOnlyToMilliseconds as n } from \"../../../smartMapping/statistics/support/utils.js\";\nimport { processNullValue as u, getNormalizedValue as o } from \"../../../statistics/utils.js\";\nimport { loadArcade as d } from \"../../../support/arcadeOnDemand.js\";\nclass c {\n  constructor(s, a, l) {\n    this._fieldDataCache = new Map(), this._returnDistinctMap = new Map(), this.returnDistinctValues = s.returnDistinctValues ?? !1, this.fieldsIndex = l, this.featureAdapter = a;\n    const r = s.outFields;\n    if (r && !r.includes(\"*\")) {\n      this.outFields = r;\n      let s = 0;\n      for (const a of r) {\n        const r = t(a),\n          n = this.fieldsIndex.get(r),\n          u = n ? null : e(r, l),\n          o = n ? n.name : i(a) || \"FIELD_EXP_\" + s++;\n        this._fieldDataCache.set(a, {\n          alias: o,\n          clause: u\n        });\n      }\n    }\n  }\n  countDistinctValues(t) {\n    return this.returnDistinctValues ? (t.forEach(t => this.getAttributes(t)), this._returnDistinctMap.size) : t.length;\n  }\n  getAttributes(t) {\n    const e = this._processAttributesForOutFields(t);\n    return this._processAttributesForDistinctValues(e);\n  }\n  getFieldValue(t, i, s) {\n    const a = s ? s.name : i;\n    let l = null;\n    return this._fieldDataCache.has(a) ? l = this._fieldDataCache.get(a)?.clause : s || (l = e(i, this.fieldsIndex), this._fieldDataCache.set(a, {\n      alias: a,\n      clause: l\n    })), s ? this.featureAdapter.getAttribute(t, a) : l?.calculateValue(t, this.featureAdapter);\n  }\n  getDataValues(t, e, i = !0) {\n    const s = e.normalizationType,\n      d = e.normalizationTotal,\n      c = this.fieldsIndex.get(e.field),\n      h = a(c) || l(c),\n      f = r(c);\n    return t.map(t => {\n      let a = e.field && this.getFieldValue(t, e.field, this.fieldsIndex.get(e.field));\n      if (e.field2 ? (a = `${u(a)}${e.fieldDelimiter}${u(this.getFieldValue(t, e.field2, this.fieldsIndex.get(e.field2)))}`, e.field3 && (a = `${a}${e.fieldDelimiter}${u(this.getFieldValue(t, e.field3, this.fieldsIndex.get(e.field3)))}`)) : \"string\" == typeof a && i && (h ? a = a ? new Date(a).getTime() : null : f && (a = a ? n(a) : null)), s && Number.isFinite(a)) {\n        const i = \"field\" === s && e.normalizationField ? this.getFieldValue(t, e.normalizationField, this.fieldsIndex.get(e.normalizationField)) : null;\n        a = o(a, s, i, d);\n      }\n      return a;\n    });\n  }\n  async getExpressionValues(t, e, i, a, l) {\n    const {\n        arcadeUtils: r\n      } = await d(),\n      n = r.hasGeometryOperations(e);\n    n && (await r.enableGeometryOperations());\n    const u = r.createFunction(e),\n      o = r.getViewInfo(i),\n      c = {\n        fields: this.fieldsIndex.fields\n      };\n    return t.map(t => {\n      const e = {\n          attributes: this.featureAdapter.getAttributes(t),\n          layer: c,\n          geometry: n ? {\n            ...s(a.geometryType, a.hasZ, a.hasM, this.featureAdapter.getGeometry(t)),\n            spatialReference: i?.spatialReference\n          } : null\n        },\n        d = r.createExecContext(e, o, l);\n      return r.executeFunction(u, d);\n    });\n  }\n  validateItem(t, i) {\n    return this._fieldDataCache.has(i) || this._fieldDataCache.set(i, {\n      alias: i,\n      clause: e(i, this.fieldsIndex)\n    }), this._fieldDataCache.get(i)?.clause?.testFeature(t, this.featureAdapter) ?? !1;\n  }\n  validateItems(t, i) {\n    return this._fieldDataCache.has(i) || this._fieldDataCache.set(i, {\n      alias: i,\n      clause: e(i, this.fieldsIndex)\n    }), this._fieldDataCache.get(i)?.clause?.testSet(t, this.featureAdapter) ?? !1;\n  }\n  _processAttributesForOutFields(t) {\n    const e = this.outFields;\n    if (!e?.length) return this.featureAdapter.getAttributes(t);\n    const i = {};\n    for (const s of e) {\n      const {\n        alias: e,\n        clause: a\n      } = this._fieldDataCache.get(s);\n      i[e] = a ? a.calculateValue(t, this.featureAdapter) : this.featureAdapter.getAttribute(t, e);\n    }\n    return i;\n  }\n  _processAttributesForDistinctValues(t) {\n    if (null == t || !this.returnDistinctValues) return t;\n    const e = this.outFields,\n      i = [];\n    if (e) for (const l of e) {\n      const {\n        alias: e\n      } = this._fieldDataCache.get(l);\n      i.push(t[e]);\n    } else for (const l in t) i.push(t[l]);\n    const s = `${(e || [\"*\"]).join(\",\")}=${i.join(\",\")}`;\n    let a = this._returnDistinctMap.get(s) || 0;\n    return this._returnDistinctMap.set(s, ++a), a > 1 ? null : t;\n  }\n}\nexport { c as default };", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { clone as e } from \"../../../core/lang.js\";\nimport { polygonCentroid as t, extentCentroid as s } from \"../../../geometry/support/centroid.js\";\nimport { getPolygonExtent as i, getGeometryExtent as a } from \"../../../geometry/support/extentUtils.js\";\nimport { toQuantizationTransform as r } from \"../../../geometry/support/quantizationUtils.js\";\nimport { isValid as n, equals as o } from \"../../../geometry/support/spatialReferenceUtils.js\";\nimport l from \"./AttributesBuilder.js\";\nimport { cleanFromGeometryEngine as u, getGeometry as c, transformCentroid as d } from \"./geometryUtils.js\";\nimport { project as m } from \"./projectionSupport.js\";\nimport { makeEdgeCandidate as h, makeVertexCandidate as g } from \"./SnappingCandidate.js\";\nimport { isDateField as f, isDateOnlyField as p, isTimestampOffsetField as y, isStringField as x, isTimeOnlyField as I } from \"../../support/fieldUtils.js\";\nimport { isNullCountSupported as T, calculateStringStatistics as V, calculateStatistics as F, processSummaryStatisticsResult as S, calculateUniqueValuesCount as _, createUVResult as v, calculateClassBreaks as b, resolveCBResult as R, calculateHistogram as A, getAttributeComparator as z, calculatePercentile as M } from \"../../../statistics/utils.js\";\nclass q {\n  constructor(e, t, s) {\n    this.items = e, this.query = t, this.geometryType = s.geometryType, this.hasM = s.hasM, this.hasZ = s.hasZ, this.fieldsIndex = s.fieldsIndex, this.objectIdField = s.objectIdField, this.spatialReference = s.spatialReference, this.featureAdapter = s.featureAdapter;\n  }\n  get size() {\n    return this.items.length;\n  }\n  createQueryResponseForCount() {\n    const e = new l(this.query, this.featureAdapter, this.fieldsIndex);\n    if (!this.query.outStatistics) return e.countDistinctValues(this.items);\n    const {\n        groupByFieldsForStatistics: t,\n        having: s,\n        outStatistics: i\n      } = this.query,\n      a = t?.length;\n    if (!!!a) return 1;\n    const r = new Map(),\n      n = new Map(),\n      o = new Set();\n    for (const l of i) {\n      const {\n          statisticType: i\n        } = l,\n        a = \"exceedslimit\" !== i ? l.onStatisticField : void 0;\n      if (!n.has(a)) {\n        const s = [];\n        for (const i of t) {\n          const t = this._getAttributeValues(e, i, r);\n          s.push(t);\n        }\n        n.set(a, this._calculateUniqueValues(s, e.returnDistinctValues));\n      }\n      const u = n.get(a);\n      for (const t in u) {\n        const {\n            data: i,\n            items: a\n          } = u[t],\n          r = i.join(\",\");\n        s && !e.validateItems(a, s) || o.add(r);\n      }\n    }\n    return o.size;\n  }\n  async createQueryResponse() {\n    let e;\n    if (this.query.outStatistics) {\n      e = this.query.outStatistics.some(e => \"exceedslimit\" === e.statisticType) ? this._createExceedsLimitQueryResponse(this.query) : await this._createStatisticsQueryResponse(this.query);\n    } else e = this._createFeatureQueryResponse(this.query);\n    if (this.query.returnQueryGeometry) {\n      const t = this.query.geometry;\n      n(this.query.outSR) && !o(t.spatialReference, this.query.outSR) ? e.queryGeometry = u({\n        spatialReference: this.query.outSR,\n        ...m(t, t.spatialReference, this.query.outSR)\n      }) : e.queryGeometry = u({\n        spatialReference: this.query.outSR,\n        ...t\n      });\n    }\n    return e;\n  }\n  createSnappingResponse(e, t) {\n    const s = this.featureAdapter,\n      i = C(this.hasZ, this.hasM),\n      {\n        point: a,\n        mode: r\n      } = e,\n      n = \"number\" == typeof e.distance ? e.distance : e.distance.x,\n      o = \"number\" == typeof e.distance ? e.distance : e.distance.y,\n      l = {\n        candidates: []\n      },\n      u = \"esriGeometryPolygon\" === this.geometryType,\n      c = this._getPointCreator(r, this.spatialReference, t),\n      d = new G(null, 0),\n      m = new G(null, 0),\n      f = {\n        x: 0,\n        y: 0,\n        z: 0\n      };\n    for (const p of this.items) {\n      const t = s.getGeometry(p);\n      if (null == t) continue;\n      const {\n        coords: r,\n        lengths: y\n      } = t;\n      if (d.coords = r, m.coords = r, e.returnEdge) {\n        let e = 0;\n        for (let t = 0; t < y.length; t++) {\n          const r = y[t];\n          for (let t = 0; t < r; t++, e += i) {\n            const u = d;\n            if (u.coordsIndex = e, t !== r - 1) {\n              const t = m;\n              t.coordsIndex = e + i;\n              const r = f;\n              N(f, a, u, t);\n              const d = (a.x - r.x) / n,\n                g = (a.y - r.y) / o,\n                y = d * d + g * g;\n              y <= 1 && l.candidates.push(h(s.getObjectId(p), c(r), Math.sqrt(y), c(u), c(t)));\n            }\n          }\n        }\n      }\n      if (\"none\" !== e.vertexMode) {\n        const t = u ? r.length - i : r.length;\n        if (\"all\" === e.vertexMode) for (let e = 0; e < t; e += i) {\n          const t = d;\n          t.coordsIndex = e;\n          const i = (a.x - t.x) / n,\n            r = (a.y - t.y) / o,\n            u = i * i + r * r;\n          u <= 1 && l.candidates.push(g(s.getObjectId(p), c(t), Math.sqrt(u)));\n        } else if (\"ends\" === e.vertexMode) {\n          const e = [0];\n          u || e.push(r.length - i);\n          for (const t of e) {\n            const e = d;\n            e.coordsIndex = t;\n            const i = (a.x - e.x) / n,\n              r = (a.y - e.y) / o,\n              u = i * i + r * r;\n            u <= 1 && l.candidates.push(g(s.getObjectId(p), c(e), Math.sqrt(u)));\n          }\n        }\n      }\n    }\n    return l.candidates.sort((e, t) => e.distance - t.distance), l;\n  }\n  _getPointCreator(e, t, s) {\n    const i = null == s || o(t, s) ? e => e : e => m(e, t, s),\n      {\n        hasZ: a\n      } = this,\n      r = 0;\n    return \"3d\" === e ? a ? ({\n      x: e,\n      y: t,\n      z: s\n    }) => i({\n      x: e,\n      y: t,\n      z: s\n    }) : ({\n      x: e,\n      y: t\n    }) => i({\n      x: e,\n      y: t,\n      z: r\n    }) : ({\n      x: e,\n      y: t\n    }) => i({\n      x: e,\n      y: t\n    });\n  }\n  async createSummaryStatisticsResponse(e) {\n    const {\n        field: t,\n        valueExpression: s,\n        normalizationField: i,\n        normalizationType: a,\n        normalizationTotal: r,\n        minValue: n,\n        maxValue: o,\n        scale: l,\n        timeZone: u\n      } = e,\n      c = this.fieldsIndex.get(t),\n      d = f(c) || p(c) || y(c),\n      m = await this._getDataValues({\n        field: t,\n        valueExpression: s,\n        normalizationField: i,\n        normalizationType: a,\n        normalizationTotal: r,\n        scale: l,\n        timeZone: u\n      }),\n      h = T({\n        normalizationType: a,\n        normalizationField: i,\n        minValue: n,\n        maxValue: o\n      }),\n      g = {\n        value: .5,\n        fieldType: c?.type\n      },\n      I = x(c) ? V({\n        values: m,\n        supportsNullCount: h,\n        percentileParams: g\n      }) : F({\n        values: m,\n        minValue: n,\n        maxValue: o,\n        useSampleStdDev: !a,\n        supportsNullCount: h,\n        percentileParams: g\n      });\n    return S(I, d);\n  }\n  async createUniqueValuesResponse(e) {\n    const {\n        field: t,\n        valueExpression: s,\n        domains: i,\n        returnAllCodedValues: a,\n        scale: r,\n        timeZone: n\n      } = e,\n      o = await this._getDataValues({\n        field: t,\n        field2: e.field2,\n        field3: e.field3,\n        fieldDelimiter: e.fieldDelimiter,\n        valueExpression: s,\n        scale: r,\n        timeZone: n\n      }, !1),\n      l = _(o);\n    return v(l, i, a, e.fieldDelimiter);\n  }\n  async createClassBreaksResponse(e) {\n    const {\n        field: t,\n        valueExpression: s,\n        normalizationField: i,\n        normalizationType: a,\n        normalizationTotal: r,\n        classificationMethod: n,\n        standardDeviationInterval: o,\n        minValue: l,\n        maxValue: u,\n        numClasses: c,\n        scale: d,\n        timeZone: m\n      } = e,\n      h = await this._getDataValues({\n        field: t,\n        valueExpression: s,\n        normalizationField: i,\n        normalizationType: a,\n        normalizationTotal: r,\n        scale: d,\n        timeZone: m\n      }),\n      g = b(h, {\n        field: t,\n        normalizationField: i,\n        normalizationType: a,\n        normalizationTotal: r,\n        classificationMethod: n,\n        standardDeviationInterval: o,\n        minValue: l,\n        maxValue: u,\n        numClasses: c\n      });\n    return R(g, n);\n  }\n  async createHistogramResponse(e) {\n    const {\n        field: t,\n        valueExpression: s,\n        normalizationField: i,\n        normalizationType: a,\n        normalizationTotal: r,\n        classificationMethod: n,\n        standardDeviationInterval: o,\n        minValue: l,\n        maxValue: u,\n        numBins: c,\n        scale: d,\n        timeZone: m\n      } = e,\n      h = await this._getDataValues({\n        field: t,\n        valueExpression: s,\n        normalizationField: i,\n        normalizationType: a,\n        normalizationTotal: r,\n        scale: d,\n        timeZone: m\n      });\n    return A(h, {\n      field: t,\n      normalizationField: i,\n      normalizationType: a,\n      normalizationTotal: r,\n      classificationMethod: n,\n      standardDeviationInterval: o,\n      minValue: l,\n      maxValue: u,\n      numBins: c\n    });\n  }\n  _sortFeatures(e, t, s) {\n    if (e.length > 1 && t?.length) for (const i of t.reverse()) {\n      const t = i.split(\" \"),\n        a = t[0],\n        r = this.fieldsIndex.get(a),\n        n = !!t[1] && \"desc\" === t[1].toLowerCase(),\n        o = z(r?.type, n);\n      e.sort((e, t) => {\n        const i = s(e, a, r),\n          n = s(t, a, r);\n        return o(i, n);\n      });\n    }\n  }\n  _createFeatureQueryResponse(e) {\n    const t = this.items,\n      {\n        geometryType: s,\n        hasM: i,\n        hasZ: a,\n        objectIdField: n,\n        spatialReference: o\n      } = this,\n      {\n        outFields: l,\n        outSR: c,\n        quantizationParameters: d,\n        resultRecordCount: m,\n        resultOffset: h,\n        returnZ: g,\n        returnM: f\n      } = e,\n      p = null != m && t.length > (h || 0) + m,\n      y = l && (l.includes(\"*\") ? [...this.fieldsIndex.fields] : l.map(e => this.fieldsIndex.get(e)));\n    return {\n      exceededTransferLimit: p,\n      features: this._createFeatures(e, t),\n      fields: y,\n      geometryType: s,\n      hasM: i && f,\n      hasZ: a && g,\n      objectIdFieldName: n,\n      spatialReference: u(c || o),\n      transform: d && r(d) || null\n    };\n  }\n  _createFeatures(e, t) {\n    const s = new l(e, this.featureAdapter, this.fieldsIndex),\n      {\n        hasM: i,\n        hasZ: a\n      } = this,\n      {\n        orderByFields: n,\n        quantizationParameters: o,\n        returnGeometry: u,\n        returnCentroid: m,\n        maxAllowableOffset: h,\n        resultOffset: g,\n        resultRecordCount: f,\n        returnZ: p = !1,\n        returnM: y = !1\n      } = e,\n      x = a && p,\n      I = i && y;\n    let T = [],\n      V = 0;\n    const F = [...t];\n    if (this._sortFeatures(F, n, (e, t, i) => s.getFieldValue(e, t, i)), this.geometryType && (u || m)) {\n      const e = r(o) ?? void 0,\n        t = \"esriGeometryPolygon\" === this.geometryType || \"esriGeometryPolyline\" === this.geometryType;\n      if (u && !m) for (const i of F) {\n        const a = this.featureAdapter.getGeometry(i),\n          r = {\n            attributes: s.getAttributes(i),\n            geometry: c(this.geometryType, this.hasZ, this.hasM, a, h, e, x, I)\n          };\n        t && a && !r.geometry && (r.centroid = d(this, this.featureAdapter.getCentroid(i, this), e)), T[V++] = r;\n      } else if (!u && m) for (const i of F) T[V++] = {\n        attributes: s.getAttributes(i),\n        centroid: d(this, this.featureAdapter.getCentroid(i, this), e)\n      };else for (const i of F) T[V++] = {\n        attributes: s.getAttributes(i),\n        centroid: d(this, this.featureAdapter.getCentroid(i, this), e),\n        geometry: c(this.geometryType, this.hasZ, this.hasM, this.featureAdapter.getGeometry(i), h, e, x, I)\n      };\n    } else for (const r of F) {\n      const e = s.getAttributes(r);\n      e && (T[V++] = {\n        attributes: e\n      });\n    }\n    const S = g || 0;\n    if (null != f) {\n      const e = S + f;\n      T = T.slice(S, Math.min(T.length, e));\n    }\n    return T;\n  }\n  _createExceedsLimitQueryResponse(e) {\n    let t = !1,\n      s = Number.POSITIVE_INFINITY,\n      i = Number.POSITIVE_INFINITY,\n      a = Number.POSITIVE_INFINITY;\n    for (const r of e.outStatistics ?? []) if (\"exceedslimit\" === r.statisticType) {\n      s = null != r.maxPointCount ? r.maxPointCount : Number.POSITIVE_INFINITY, i = null != r.maxRecordCount ? r.maxRecordCount : Number.POSITIVE_INFINITY, a = null != r.maxVertexCount ? r.maxVertexCount : Number.POSITIVE_INFINITY;\n      break;\n    }\n    if (\"esriGeometryPoint\" === this.geometryType) t = this.items.length > s;else if (this.items.length > i) t = !0;else {\n      const e = C(this.hasZ, this.hasM),\n        s = this.featureAdapter;\n      t = this.items.reduce((e, t) => {\n        const i = s.getGeometry(t);\n        return e + (null != i && i.coords.length || 0);\n      }, 0) / e > a;\n    }\n    return {\n      fields: [{\n        name: \"exceedslimit\",\n        type: \"esriFieldTypeInteger\",\n        alias: \"exceedslimit\",\n        sqlType: \"sqlTypeInteger\",\n        domain: null,\n        defaultValue: null\n      }],\n      features: [{\n        attributes: {\n          exceedslimit: Number(t)\n        }\n      }]\n    };\n  }\n  async _createStatisticsQueryResponse(e) {\n    const t = {\n        attributes: {}\n      },\n      s = [],\n      i = new Map(),\n      a = new Map(),\n      r = new Map(),\n      n = new Map(),\n      o = new l(e, this.featureAdapter, this.fieldsIndex),\n      u = e.outStatistics,\n      {\n        groupByFieldsForStatistics: c,\n        having: d,\n        orderByFields: m,\n        resultRecordCount: h\n      } = e,\n      g = c?.length,\n      f = !!g,\n      p = f ? c[0] : null,\n      y = f && !this.fieldsIndex.get(p);\n    for (const l of u ?? []) {\n      const {\n          outStatisticFieldName: e,\n          statisticType: u\n        } = l,\n        m = l,\n        h = \"exceedslimit\" !== u ? l.onStatisticField : void 0,\n        I = \"percentile_disc\" === u || \"percentile_cont\" === u,\n        T = \"EnvelopeAggregate\" === u || \"CentroidAggregate\" === u || \"ConvexHullAggregate\" === u,\n        V = f && 1 === g && (h === p || y) && \"count\" === u;\n      if (f) {\n        if (!r.has(h)) {\n          const e = [];\n          for (const t of c) {\n            const s = this._getAttributeValues(o, t, i);\n            e.push(s);\n          }\n          r.set(h, this._calculateUniqueValues(e, !T && o.returnDistinctValues));\n        }\n        const t = r.get(h);\n        if (!t) continue;\n        const s = Object.keys(t);\n        for (const a of s) {\n          const {\n              count: s,\n              data: r,\n              items: l,\n              itemPositions: u\n            } = t[a],\n            g = r.join(\",\");\n          if (!d || o.validateItems(l, d)) {\n            const t = n.get(g) || {\n              attributes: {}\n            };\n            if (T) {\n              t.aggregateGeometries || (t.aggregateGeometries = {});\n              const {\n                aggregateGeometries: e,\n                outStatisticFieldName: s\n              } = await this._getAggregateGeometry(m, l);\n              t.aggregateGeometries[s] = e;\n            } else {\n              let a = null;\n              if (V) a = s;else {\n                const e = this._getAttributeValues(o, h, i),\n                  t = u.map(t => e[t]);\n                a = I && \"statisticParameters\" in m ? this._getPercentileValue(m, t) : this._getStatisticValue(m, t, null, o.returnDistinctValues);\n              }\n              t.attributes[e] = a;\n            }\n            let a = 0;\n            c.forEach((e, s) => t.attributes[this.fieldsIndex.get(e) ? e : \"EXPR_\" + ++a] = r[s]), n.set(g, t);\n          }\n        }\n      } else if (T) {\n        t.aggregateGeometries || (t.aggregateGeometries = {});\n        const {\n          aggregateGeometries: e,\n          outStatisticFieldName: s\n        } = await this._getAggregateGeometry(m, this.items);\n        t.aggregateGeometries[s] = e;\n      } else {\n        const s = this._getAttributeValues(o, h, i);\n        t.attributes[e] = I && \"statisticParameters\" in m ? this._getPercentileValue(m, s) : this._getStatisticValue(m, s, a, o.returnDistinctValues);\n      }\n      const F = \"min\" !== u && \"max\" !== u || !x(this.fieldsIndex.get(h)) && !this._isAnyDateField(h) ? null : this.fieldsIndex.get(h)?.type;\n      s.push({\n        name: e,\n        alias: e,\n        type: F || \"esriFieldTypeDouble\"\n      });\n    }\n    const I = f ? Array.from(n.values()) : [t];\n    return this._sortFeatures(I, m, (e, t) => e.attributes[t]), h && (I.length = Math.min(h, I.length)), {\n      fields: s,\n      features: I\n    };\n  }\n  _isAnyDateField(e) {\n    const t = this.fieldsIndex.get(e);\n    return f(t) || p(t) || y(t) || I(t);\n  }\n  async _getAggregateGeometry(e, r) {\n    const {\n        convexHull: n,\n        union: o\n      } = await import(\"../../../geometry/geometryEngineJSON.js\"),\n      {\n        statisticType: l,\n        outStatisticFieldName: u\n      } = e,\n      {\n        featureAdapter: d,\n        spatialReference: m,\n        geometryType: h,\n        hasZ: g,\n        hasM: f\n      } = this,\n      p = r.map(e => c(h, g, f, d.getGeometry(e))),\n      y = n(m, p, !0)[0],\n      x = {\n        aggregateGeometries: null,\n        outStatisticFieldName: null\n      };\n    if (\"EnvelopeAggregate\" === l) {\n      const e = y ? i(y) : a(o(m, p));\n      x.aggregateGeometries = {\n        ...e,\n        spatialReference: m\n      }, x.outStatisticFieldName = u || \"extent\";\n    } else if (\"CentroidAggregate\" === l) {\n      const e = y ? t(y) : s(a(o(m, p)));\n      x.aggregateGeometries = {\n        x: e[0],\n        y: e[1],\n        spatialReference: m\n      }, x.outStatisticFieldName = u || \"centroid\";\n    } else \"ConvexHullAggregate\" === l && (x.aggregateGeometries = y, x.outStatisticFieldName = u || \"convexHull\");\n    return x;\n  }\n  _getStatisticValue(e, t, s, i) {\n    const {\n      onStatisticField: a,\n      statisticType: r\n    } = e;\n    let n = null;\n    n = s?.has(a) ? s.get(a) : x(this.fieldsIndex.get(a)) || this._isAnyDateField(a) ? V({\n      values: t,\n      returnDistinct: i\n    }) : F({\n      values: i ? [...new Set(t)] : t,\n      minValue: null,\n      maxValue: null,\n      useSampleStdDev: !0\n    }), s && s.set(a, n);\n    return n[\"var\" === r ? \"variance\" : r];\n  }\n  _getPercentileValue(e, t) {\n    const {\n        onStatisticField: s,\n        statisticParameters: i,\n        statisticType: a\n      } = e,\n      {\n        value: r,\n        orderBy: n\n      } = i,\n      o = this.fieldsIndex.get(s);\n    return M(t, {\n      value: r,\n      orderBy: n,\n      fieldType: o?.type,\n      isDiscrete: \"percentile_disc\" === a\n    });\n  }\n  _getAttributeValues(e, t, s) {\n    if (s.has(t)) return s.get(t);\n    const i = this.fieldsIndex.get(t),\n      a = this.items.map(s => e.getFieldValue(s, t, i));\n    return s.set(t, a), a;\n  }\n  _calculateUniqueValues(e, t) {\n    const s = {},\n      i = this.items,\n      a = i.length;\n    for (let r = 0; r < a; r++) {\n      const a = i[r],\n        n = [];\n      for (const t of e) n.push(t[r]);\n      const o = n.join(\",\");\n      null == s[o] ? s[o] = {\n        count: 1,\n        data: n,\n        items: [a],\n        itemPositions: [r]\n      } : (t || s[o].count++, s[o].items.push(a), s[o].itemPositions.push(r));\n    }\n    return s;\n  }\n  async _getDataValues(t, s = !0) {\n    const i = new l(this.query, this.featureAdapter, this.fieldsIndex),\n      {\n        valueExpression: a,\n        scale: r,\n        timeZone: n\n      } = t;\n    return a ? i.getExpressionValues(this.items, a, {\n      viewingMode: \"map\",\n      scale: r,\n      spatialReference: this.query.outSR || this.spatialReference\n    }, {\n      geometryType: this.geometryType,\n      hasZ: this.hasZ,\n      hasM: this.hasM\n    }, n) : i.getDataValues(this.items, e(t), s);\n  }\n}\nfunction N(e, t, s, i) {\n  const a = i.x - s.x,\n    r = i.y - s.y,\n    n = a * a + r * r,\n    o = (t.x - s.x) * a + (t.y - s.y) * r,\n    l = Math.min(1, Math.max(0, o / n));\n  e.x = s.x + a * l, e.y = s.y + r * l;\n}\nfunction C(e, t) {\n  return e ? t ? 4 : 3 : t ? 3 : 2;\n}\nclass G {\n  constructor(e, t) {\n    this.coords = e, this.coordsIndex = t;\n  }\n  get x() {\n    return this.coords[this.coordsIndex];\n  }\n  get y() {\n    return this.coords[this.coordsIndex + 1];\n  }\n  get z() {\n    return this.coords[this.coordsIndex + 2];\n  }\n}\nexport { q as QueryEngineResult };", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport e from \"../../../core/Error.js\";\nimport { numericFieldTypes as t, allDateAndTimeFieldTypes as i, validateFields as s, validateWhere as r, validateHaving as o } from \"./attributeSupport.js\";\nimport { checkProjectionSupport as n } from \"./projectionSupport.js\";\nimport { checkSpatialQuerySupport as a } from \"./spatialQuerySupport.js\";\nimport { loadArcade as l } from \"../../../support/arcadeOnDemand.js\";\nconst u = \"unsupported-query\";\nasync function p(t, {\n  fieldsIndex: i,\n  geometryType: s,\n  spatialReference: r,\n  availableFields: o\n}) {\n  if ((t.distance ?? 0) < 0 || null != t.geometryPrecision || t.multipatchOption && \"xyFootprint\" !== t.multipatchOption || t.pixelSize || t.relationParam || t.text) throw new e(u, \"Unsupported query options\", {\n    query: t\n  });\n  return c(i, o, t), f(i, o, t), Promise.all([a(t, s, r), n(r, t.outSR)]).then(() => t);\n}\nfunction c(t, i, o) {\n  const {\n      outFields: n,\n      orderByFields: a,\n      returnDistinctValues: l,\n      outStatistics: p\n    } = o,\n    c = p ? p.map(e => e.outStatisticFieldName && e.outStatisticFieldName.toLowerCase()).filter(Boolean) : [];\n  if (a && a.length > 0) {\n    const e = \" asc\",\n      r = \" desc\",\n      n = a.map(t => {\n        const i = t.toLowerCase();\n        return i.includes(e) ? i.split(e)[0] : i.includes(r) ? i.split(r)[0] : t;\n      }).filter(e => !c.includes(e));\n    s(t, i, n, {\n      expressionName: \"orderByFields\",\n      query: o\n    });\n  }\n  if (n && n.length > 0) s(t, i, n, {\n    expressionName: \"outFields\",\n    query: o,\n    allowedFieldTypes: \"all\"\n  });else if (l) throw new e(u, \"outFields should be specified for returnDistinctValues\", {\n    query: o\n  });\n  r(t, i, o.where, o);\n}\nconst d = new Set([...t, ...i]);\nfunction f(t, i, r) {\n  const {\n      outStatistics: n,\n      groupByFieldsForStatistics: a,\n      having: l\n    } = r,\n    p = a?.length,\n    c = n?.length;\n  if (l) {\n    if (!p || !c) throw new e(u, \"outStatistics and groupByFieldsForStatistics should be specified with having\", {\n      query: r\n    });\n    o(t, i, l, n, r);\n  }\n  if (c) {\n    if (!h(n)) return;\n    const o = n.map(e => e.onStatisticField).filter(Boolean);\n    s(t, i, o, {\n      expressionName: \"onStatisticFields\",\n      query: r\n    }), p && s(t, i, a, {\n      expressionName: \"groupByFieldsForStatistics\",\n      query: r\n    });\n    for (const a of n) {\n      const {\n        onStatisticField: o,\n        statisticType: n\n      } = a;\n      if ((\"percentile_disc\" === n || \"percentile_cont\" === n) && \"statisticParameters\" in a) {\n        const {\n          statisticParameters: t\n        } = a;\n        if (!t) throw new e(u, \"statisticParameters should be set for percentile type\", {\n          definition: a,\n          query: r\n        });\n      } else t.get(o) && \"count\" !== n && \"min\" !== n && \"max\" !== n && s(t, i, [o], {\n        expressionName: `outStatistics with '${n}' statistic type`,\n        allowedFieldTypes: d,\n        query: r\n      });\n    }\n  }\n}\nasync function m(t, i, {\n  fieldsIndex: s,\n  geometryType: r,\n  spatialReference: o,\n  availableFields: l\n}) {\n  if ((t.distance ?? 0) < 0 || null != t.geometryPrecision || t.multipatchOption || t.pixelSize || t.relationParam || t.text || t.outStatistics || t.groupByFieldsForStatistics || t.having || t.orderByFields) throw new e(u, \"Unsupported query options\", {\n    query: t\n  });\n  return c(s, l, t), Promise.all([y(s, l, i, t), a(t, r, o), n(o, t.outSR)]).then(() => t);\n}\nasync function y(t, i, r, o) {\n  let n = [];\n  if (r.valueExpression) {\n    const {\n      arcadeUtils: e\n    } = await l();\n    n = e.extractFieldNames(r.valueExpression);\n  }\n  if (r.field && n.push(r.field), r.field2 && n.push(r.field2), r.field3 && n.push(r.field3), r.normalizationField && n.push(r.normalizationField), !n.length && !r.valueExpression) throw new e(u, \"field or valueExpression is required\", {\n    params: r\n  });\n  s(t, i, n, {\n    expressionName: \"statistics\",\n    query: o\n  });\n}\nfunction h(e) {\n  return null != e && e.every(e => \"exceedslimit\" !== e.statisticType);\n}\nexport { p as validateQuery, m as validateStatisticsQuery };", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { indexOf as e, PositionHint as t } from \"../../../core/arrayUtils.js\";\nimport i from \"../../../core/Error.js\";\nimport { isSerializable as s } from \"../../../core/JSONSupport.js\";\nimport { clone as r } from \"../../../core/lang.js\";\nimport { removeMaybe as a, destroyMaybe as n } from \"../../../core/maybe.js\";\nimport { MemCacheStorage as l, MemCache as u } from \"../../../core/MemCache.js\";\nimport { signalFromSignalOrOptions as o, throwIfAborted as h } from \"../../../core/promiseUtils.js\";\nimport { getMetersPerUnitForSR as c } from \"../../../core/unitUtils.js\";\nimport { getTransformation as m } from \"../../../geometry/projection.js\";\nimport { set as f, negativeInfinity as y, create as p, expandWithAABB as d } from \"../../../geometry/support/aaBoundingBox.js\";\nimport { fromValues as g, create as x } from \"../../../geometry/support/aaBoundingRect.js\";\nimport { getBoundsXY as _ } from \"../../../geometry/support/boundsUtils.js\";\nimport { fromJSON as w, isExtent as F, isPolygon as S } from \"../../../geometry/support/jsonUtils.js\";\nimport { normalizeCentralMeridian as R } from \"../../../geometry/support/normalizeUtils.js\";\nimport { equals as Q, isValid as I } from \"../../../geometry/support/spatialReferenceUtils.js\";\nimport { convertFromGeometry as j } from \"../featureConversionUtils.js\";\nimport { getWhereClause as E } from \"./attributeSupport.js\";\nimport { cleanFromGeometryEngine as b, getGeometry as A } from \"./geometryUtils.js\";\nimport { checkProjectionSupport as T, project as v, projectMany as C } from \"./projectionSupport.js\";\nimport { queryCapabilities as M } from \"./QueryEngineCapabilities.js\";\nimport { QueryEngineResult as G } from \"./QueryEngineResult.js\";\nimport { queryEngineEmptyResult as O, normalizeQueryLike as P, normalizeQuery as z } from \"./queryUtils.js\";\nimport { validateQuery as q, validateStatisticsQuery as k } from \"./queryValidationUtils.js\";\nimport { getSpatialQueryOperator as U, canQueryWithRBush as Z } from \"./spatialQuerySupport.js\";\nimport { getTimeExtent as B, getTimeOperator as H } from \"./timeSupport.js\";\nimport J from \"../../support/FieldsIndex.js\";\nimport { noBudget as N } from \"../../../views/support/Scheduler.js\";\nconst L = \"unsupported-query\";\nclass V {\n  constructor(e, t = null, i, s, r) {\n    this.attributes = e, this.geometry = i, this.centroid = s, this.filterFlags = r, this.groupId = -1, this.displayId = t;\n  }\n}\nconst D = new l(2e6);\nlet W = 0;\nclass $ {\n  constructor(e) {\n    this._geometryQueryCache = null, this._changeHandle = null, this.capabilities = {\n      query: M\n    }, this.geometryType = e.geometryType, this.hasM = !!e.hasM, this.hasZ = !!e.hasZ, this.objectIdField = e.objectIdField, this.spatialReference = e.spatialReference, this.definitionExpression = e.definitionExpression, this.featureStore = e.featureStore, this.aggregateAdapter = e.aggregateAdapter, this._changeHandle = this.featureStore.events.on(\"changed\", () => this.clearCache()), this.timeInfo = e.timeInfo, e.cacheSpatialQueries && (this._geometryQueryCache = new u(W++ + \"$$\", D)), this.fieldsIndex = s(e.fieldsIndex) ? e.fieldsIndex : J.fromJSON(e.fieldsIndex), !e.availableFields || 1 === e.availableFields.length && \"*\" === e.availableFields[0] ? this.availableFields = new Set(this.fieldsIndex.fields.map(e => e.name)) : this.availableFields = new Set(e.availableFields.map(e => this.fieldsIndex.get(e)?.name).filter(e => null != e)), e.scheduler && e.priority && (this._frameTask = e.scheduler.registerTask(e.priority));\n  }\n  destroy() {\n    this._frameTask = a(this._frameTask), this.clearCache(), n(this._geometryQueryCache), this._changeHandle = a(this._changeHandle);\n  }\n  get featureAdapter() {\n    return this.featureStore.featureAdapter;\n  }\n  clearCache() {\n    this._geometryQueryCache?.clear(), this._allFeaturesPromise = null, this._timeExtentPromise = null, this._fullExtentPromise = null;\n  }\n  async executeQuery(e, t) {\n    const i = o(t);\n    try {\n      return (await this._executeQuery(e, {}, i)).createQueryResponse();\n    } catch (s) {\n      if (s !== O) throw s;\n      return new G([], e, this).createQueryResponse();\n    }\n  }\n  async executeQueryForCount(e = {}, t) {\n    const i = o(t);\n    try {\n      return (await this._executeQuery(e, {\n        returnGeometry: !1,\n        returnCentroid: !1,\n        outSR: null\n      }, i)).createQueryResponseForCount();\n    } catch (s) {\n      if (s !== O) throw s;\n      return 0;\n    }\n  }\n  async executeQueryForExtent(e, t) {\n    const i = o(t),\n      s = e.outSR;\n    try {\n      const t = await this._executeQuery(e, {\n          returnGeometry: !0,\n          returnCentroid: !1,\n          outSR: null\n        }, i),\n        r = t.size;\n      if (!r) return {\n        count: 0,\n        extent: null\n      };\n      return {\n        count: r,\n        extent: await this._getBounds(t.items, t.spatialReference, s || this.spatialReference)\n      };\n    } catch (r) {\n      if (r === O) return {\n        count: 0,\n        extent: null\n      };\n      throw r;\n    }\n  }\n  async executeQueryForIds(e, t) {\n    return this.executeQueryForIdSet(e, t).then(e => Array.from(e));\n  }\n  async executeQueryForIdSet(e, t) {\n    const i = o(t);\n    try {\n      const t = await this._executeQuery(e, {\n          returnGeometry: !0,\n          returnCentroid: !1,\n          outSR: null\n        }, i),\n        s = t.items,\n        r = new Set();\n      return await this._reschedule(() => {\n        for (const e of s) r.add(t.featureAdapter.getObjectId(e));\n      }, i), r;\n    } catch (s) {\n      if (s === O) return new Set();\n      throw s;\n    }\n  }\n  async executeQueryForSnapping(e, t) {\n    const i = o(t),\n      {\n        point: s,\n        distance: a,\n        returnEdge: n,\n        vertexMode: l\n      } = e;\n    if (!n && \"none\" === l) return {\n      candidates: []\n    };\n    let u = r(e.query);\n    u = await this._schedule(() => P(u, this.definitionExpression, this.spatialReference), i), u = await this._reschedule(() => q(u, {\n      availableFields: this.availableFields,\n      fieldsIndex: this.fieldsIndex,\n      geometryType: this.geometryType,\n      spatialReference: this.spatialReference\n    }), i);\n    const h = !Q(s.spatialReference, this.spatialReference);\n    h && (await T(s.spatialReference, this.spatialReference));\n    const c = \"number\" == typeof a ? a : a.x,\n      m = \"number\" == typeof a ? a : a.y,\n      f = {\n        xmin: s.x - c,\n        xmax: s.x + c,\n        ymin: s.y - m,\n        ymax: s.y + m,\n        spatialReference: s.spatialReference\n      },\n      y = h ? v(f, this.spatialReference) : f;\n    if (!y) return {\n      candidates: []\n    };\n    const p = (await R(w(s), null, {\n        signal: i\n      }))[0],\n      d = (await R(w(y), null, {\n        signal: i\n      }))[0];\n    if (null == p || null == d) return {\n      candidates: []\n    };\n    const g = new G(await this._reschedule(() => this._searchFeatures(K(d.toJSON())), i), u, this);\n    await this._reschedule(() => this._executeObjectIdsQuery(g), i), await this._reschedule(() => this._executeTimeQuery(g), i), await this._reschedule(() => this._executeAttributesQuery(g), i), await this._reschedule(() => this._executeGeometryQueryForSnapping(g, i), i);\n    const x = p.toJSON(),\n      _ = h ? v(x, this.spatialReference) : x,\n      F = h ? Math.max(y.xmax - y.xmin, y.ymax - y.ymin) / 2 : a;\n    return g.createSnappingResponse({\n      ...e,\n      point: _,\n      distance: F\n    }, s.spatialReference);\n  }\n  async executeQueryForLatestObservations(e, t) {\n    const s = o(t);\n    if (!this.timeInfo?.trackIdField) throw new i(L, \"Missing timeInfo or timeInfo.trackIdField\", {\n      query: e,\n      timeInfo: this.timeInfo\n    });\n    try {\n      const t = await this._executeQuery(e, {}, s);\n      return await this._reschedule(() => this._filterLatest(t), s), t.createQueryResponse();\n    } catch (r) {\n      if (r !== O) throw r;\n      return new G([], e, this).createQueryResponse();\n    }\n  }\n  async executeQueryForSummaryStatistics(e = {}, t, i) {\n    const s = o(i),\n      {\n        field: r,\n        normalizationField: a,\n        valueExpression: n\n      } = t;\n    return (await this._executeQueryForStatistics(e, {\n      field: r,\n      normalizationField: a,\n      valueExpression: n\n    }, s)).createSummaryStatisticsResponse(t);\n  }\n  async executeQueryForUniqueValues(e = {}, t, i) {\n    const s = o(i),\n      {\n        field: r,\n        field2: a,\n        field3: n,\n        valueExpression: l\n      } = t;\n    return (await this._executeQueryForStatistics(e, {\n      field: r,\n      field2: a,\n      field3: n,\n      valueExpression: l\n    }, s)).createUniqueValuesResponse(t);\n  }\n  async executeQueryForClassBreaks(e = {}, t, i) {\n    const s = o(i),\n      {\n        field: r,\n        normalizationField: a,\n        valueExpression: n\n      } = t;\n    return (await this._executeQueryForStatistics(e, {\n      field: r,\n      normalizationField: a,\n      valueExpression: n\n    }, s)).createClassBreaksResponse(t);\n  }\n  async executeQueryForHistogram(e = {}, t, i) {\n    const s = o(i),\n      {\n        field: r,\n        normalizationField: a,\n        valueExpression: n\n      } = t;\n    return (await this._executeQueryForStatistics(e, {\n      field: r,\n      normalizationField: a,\n      valueExpression: n\n    }, s)).createHistogramResponse(t);\n  }\n  async fetchRecomputedExtents(e) {\n    const t = o(e);\n    this._timeExtentPromise ||= B(this.timeInfo, this.featureStore);\n    const [i, s] = await Promise.all([this._getFullExtent(), this._timeExtentPromise]);\n    return h(t), {\n      fullExtent: i,\n      timeExtent: s\n    };\n  }\n  async _getBounds(e, t, i) {\n    const s = f(p(), y);\n    await this.featureStore.forEachBounds(e, e => d(s, e));\n    const r = {\n      xmin: s[0],\n      ymin: s[1],\n      xmax: s[3],\n      ymax: s[4],\n      spatialReference: b(this.spatialReference)\n    };\n    this.hasZ && isFinite(s[2]) && isFinite(s[5]) && (r.zmin = s[2], r.zmax = s[5], r.hasZ = !0);\n    const a = v(r, t, i);\n    if (a.spatialReference = b(i), a.xmax - a.xmin == 0) {\n      const e = c(a.spatialReference);\n      a.xmin -= e, a.xmax += e;\n    }\n    if (a.ymax - a.ymin == 0) {\n      const e = c(a.spatialReference);\n      a.ymin -= e, a.ymax += e;\n    }\n    if (this.hasZ && null != a.zmin && null != a.zmax && a.zmax - a.zmin == 0) {\n      const e = c(a.spatialReference);\n      a.zmin -= e, a.zmax += e;\n    }\n    return a;\n  }\n  _getFullExtent() {\n    return this._fullExtentPromise ||= \"getFullExtent\" in this.featureStore && this.featureStore.getFullExtent ? Promise.resolve(this.featureStore.getFullExtent(this.spatialReference)) : this._getAllFeatures().then(e => this._getBounds(e, this.spatialReference, this.spatialReference)), this._fullExtentPromise;\n  }\n  async _schedule(e, t) {\n    return null != this._frameTask ? this._frameTask.schedule(e, t) : e(N);\n  }\n  async _reschedule(e, t) {\n    return null != this._frameTask ? this._frameTask.reschedule(e, t) : e(N);\n  }\n  async _getAllFeaturesQueryEngineResult(e) {\n    return new G(await this._getAllFeatures(), e, this);\n  }\n  async _getAllFeatures() {\n    if (null == this._allFeaturesPromise) {\n      const e = [];\n      this._allFeaturesPromise = (async () => {\n        await this.featureStore.forEach(t => e.push(t));\n      })().then(() => e);\n    }\n    const e = this._allFeaturesPromise,\n      t = await e;\n    return e === this._allFeaturesPromise ? t.slice() : this._getAllFeatures();\n  }\n  async _executeQuery(e, t, i) {\n    e = r(e), e = await this._schedule(() => z(e, this.definitionExpression, this.spatialReference), i), e = await this._reschedule(() => q(e, {\n      availableFields: this.availableFields,\n      fieldsIndex: this.fieldsIndex,\n      geometryType: this.geometryType,\n      spatialReference: this.spatialReference\n    }), i), e = {\n      ...e,\n      ...t\n    };\n    const s = await this._reschedule(() => this._executeSceneFilterQuery(e, i), i),\n      a = await this._reschedule(() => this._executeGeometryQuery(e, s, i), i);\n    return await this._reschedule(() => this._executeAggregateIdsQuery(a), i), await this._reschedule(() => this._executeObjectIdsQuery(a), i), await this._reschedule(() => this._executeTimeQuery(a), i), await this._reschedule(() => this._executeAttributesQuery(a), i), a;\n  }\n  async _executeSceneFilterQuery(e, t) {\n    if (null == e.sceneFilter) return null;\n    const {\n        outSR: i,\n        returnGeometry: s,\n        returnCentroid: r\n      } = e,\n      a = this.featureStore.featureSpatialReference,\n      n = e.sceneFilter.geometry,\n      l = null == a || Q(a, n.spatialReference) ? n : v(n, a);\n    if (!l) return null;\n    const u = s || r,\n      o = I(i) && !Q(this.spatialReference, i) && u ? async e => this._project(e, i) : e => e,\n      h = this.featureAdapter,\n      c = await this._reschedule(() => this._searchFeatures(K(l)), t);\n    if (\"disjoint\" === e.sceneFilter.spatialRelationship) {\n      if (!c.length) return null;\n      const i = new Set();\n      for (const e of c) i.add(h.getObjectId(e));\n      const s = await this._reschedule(() => this._getAllFeatures(), t),\n        r = await this._reschedule(async () => {\n          const r = await U(\"esriSpatialRelDisjoint\", l, this.geometryType, this.hasZ, this.hasM),\n            a = e => !i.has(h.getObjectId(e)) || r(h.getGeometry(e)),\n            n = await this._runSpatialFilter(s, a, t);\n          return new G(n, e, this);\n        }, t);\n      return o(r);\n    }\n    if (!c.length) return new G([], e, this);\n    if (this._canExecuteSinglePass(l, e)) return o(new G(c, e, this));\n    const m = await U(\"esriSpatialRelContains\", l, this.geometryType, this.hasZ, this.hasM),\n      f = await this._runSpatialFilter(c, e => m(h.getGeometry(e)), t);\n    return o(new G(f, e, this));\n  }\n  async _executeGeometryQuery(i, s, r) {\n    if (null != s && 0 === s.items.length) return s;\n    i = null != s ? s.query : i;\n    const {\n        geometry: a,\n        outSR: n,\n        spatialRel: l,\n        returnGeometry: u,\n        returnCentroid: o\n      } = i,\n      h = this.featureStore.featureSpatialReference,\n      c = !a || null == h || Q(h, a.spatialReference) ? a : v(a, h),\n      m = u || o,\n      f = I(n) && !Q(this.spatialReference, n),\n      y = this._geometryQueryCache && null == s ? f && m ? JSON.stringify({\n        originalFilterGeometry: a,\n        spatialRelationship: l,\n        outSpatialReference: n\n      }) : JSON.stringify({\n        originalFilterGeometry: a,\n        spatialRelationship: l\n      }) : null,\n      p = y ? this._geometryQueryCache.get(y) : null;\n    if (null != p) return new G(p, i, this);\n    const d = async e => (f && m && (await this._project(e, n)), y && this._geometryQueryCache.put(y, e.items, e.items.length + 1), e);\n    if (!c) return d(null != s ? s : await this._getAllFeaturesQueryEngineResult(i));\n    const g = this.featureAdapter;\n    let x = await this._reschedule(() => this._searchFeatures(K(a)), r);\n    if (\"esriSpatialRelDisjoint\" === l) {\n      if (!x.length) return d(null != s ? s : await this._getAllFeaturesQueryEngineResult(i));\n      const e = new Set();\n      for (const i of x) e.add(g.getObjectId(i));\n      const t = null != s ? s.items : await this._reschedule(() => this._getAllFeatures(), r),\n        a = await this._reschedule(async () => {\n          const s = await U(l, c, this.geometryType, this.hasZ, this.hasM),\n            a = t => !e.has(g.getObjectId(t)) || s(g.getGeometry(t)),\n            n = await this._runSpatialFilter(t, a, r);\n          return new G(n, i, this);\n        }, r);\n      return d(a);\n    }\n    if (null != s) {\n      const i = new t();\n      x = x.filter(t => e(s.items, t, s.items.length, i) >= 0);\n    }\n    if (!x.length) {\n      const e = new G([], i, this);\n      return y && this._geometryQueryCache.put(y, e.items, 1), e;\n    }\n    if (this._canExecuteSinglePass(c, i)) return d(new G(x, i, this));\n    const _ = await U(l, c, this.geometryType, this.hasZ, this.hasM),\n      w = await this._runSpatialFilter(x, e => _(g.getGeometry(e)), r);\n    return d(new G(w, i, this));\n  }\n  async _executeGeometryQueryForSnapping(e, t) {\n    const {\n        query: i\n      } = e,\n      {\n        spatialRel: s\n      } = i;\n    if (!e?.items?.length || !i.geometry || !s) return;\n    const r = await U(s, i.geometry, this.geometryType, this.hasZ, this.hasM),\n      a = await this._runSpatialFilter(e.items, e => r(e.geometry), t);\n    e.items = a;\n  }\n  _executeAggregateIdsQuery(e) {\n    if (0 === e.items.length || !e.query.aggregateIds?.length || null == this.aggregateAdapter) return;\n    const t = new Set();\n    for (const s of e.query.aggregateIds) {\n      this.aggregateAdapter.getFeatureObjectIds(s).forEach(e => t.add(e));\n    }\n    const i = this.featureAdapter.getObjectId;\n    e.items = e.items.filter(e => t.has(i(e)));\n  }\n  _executeObjectIdsQuery(e) {\n    if (0 === e.items.length || !e.query.objectIds?.length) return;\n    const t = new Set(e.query.objectIds),\n      i = this.featureAdapter.getObjectId;\n    e.items = e.items.filter(e => t.has(i(e)));\n  }\n  _executeTimeQuery(e) {\n    if (0 === e.items.length) return;\n    const t = H(this.timeInfo, e.query.timeExtent, this.featureAdapter);\n    null != t && (e.items = e.items.filter(t));\n  }\n  _executeAttributesQuery(e) {\n    if (0 === e.items.length) return;\n    const t = E(e.query.where, this.fieldsIndex);\n    if (t) {\n      if (!t.isStandardized) throw new TypeError(\"Where clause is not standardized\");\n      e.items = e.items.filter(e => t.testFeature(e, this.featureAdapter));\n    }\n  }\n  async _runSpatialFilter(e, t, i) {\n    if (!t) return e;\n    if (null == this._frameTask) return e.filter(e => t(e));\n    let s = 0;\n    const r = new Array(),\n      a = async n => {\n        for (; s < e.length;) {\n          const l = e[s++];\n          t(l) && (r.push(l), n.madeProgress()), n.done && (await this._reschedule(e => a(e), i));\n        }\n      };\n    return this._reschedule(e => a(e), i).then(() => r);\n  }\n  _filterLatest(e) {\n    const {\n        trackIdField: t,\n        startTimeField: i,\n        endTimeField: s\n      } = this.timeInfo,\n      r = s || i,\n      a = new Map(),\n      n = this.featureAdapter.getAttribute;\n    for (const l of e.items) {\n      const e = n(l, t),\n        i = n(l, r),\n        s = a.get(e);\n      (!s || i > n(s, r)) && a.set(e, l);\n    }\n    e.items = Array.from(a.values());\n  }\n  _canExecuteSinglePass(e, t) {\n    const {\n      spatialRel: i\n    } = t;\n    return Z(e) && (\"esriSpatialRelEnvelopeIntersects\" === i || \"esriGeometryPoint\" === this.geometryType && (\"esriSpatialRelIntersects\" === i || \"esriSpatialRelContains\" === i));\n  }\n  async _project(e, t) {\n    if (!t || Q(this.spatialReference, t)) return e;\n    const i = this.featureAdapter;\n    let s;\n    try {\n      const e = await this._getFullExtent();\n      s = m(this.spatialReference, t, e);\n    } catch {}\n    const r = await C(e.items.map(e => A(this.geometryType, this.hasZ, this.hasM, i.getGeometry(e))), this.spatialReference, t, s);\n    return e.items = r.map((t, s) => i.cloneWithGeometry(e.items[s], j(t, this.hasZ, this.hasM))), e;\n  }\n  async _searchFeatures(e) {\n    const t = new Set();\n    await Promise.all(e.map(e => this.featureStore.forEachInBounds(e, e => t.add(e))));\n    const i = Array.from(t.values());\n    return t.clear(), i;\n  }\n  async _executeQueryForStatistics(e, t, i) {\n    e = r(e);\n    try {\n      e = await this._schedule(() => z(e, this.definitionExpression, this.spatialReference), i), e = await this._reschedule(() => k(e, t, {\n        availableFields: this.availableFields,\n        fieldsIndex: this.fieldsIndex,\n        geometryType: this.geometryType,\n        spatialReference: this.spatialReference\n      }), i);\n      const s = await this._reschedule(() => this._executeSceneFilterQuery(e, i), i),\n        r = await this._reschedule(() => this._executeGeometryQuery(e, s, i), i);\n      return await this._reschedule(() => this._executeAggregateIdsQuery(r), i), await this._reschedule(() => this._executeObjectIdsQuery(r), i), await this._reschedule(() => this._executeTimeQuery(r), i), await this._reschedule(() => this._executeAttributesQuery(r), i), r;\n    } catch (s) {\n      if (s !== O) throw s;\n      return new G([], e, this);\n    }\n  }\n}\nfunction K(e) {\n  if (Z(e)) {\n    if (F(e)) return [g(Math.min(e.xmin, e.xmax), Math.min(e.ymin, e.ymax), Math.max(e.xmin, e.xmax), Math.max(e.ymin, e.ymax))];\n    if (S(e)) return e.rings.map(e => g(Math.min(e[0][0], e[2][0]), Math.min(e[0][1], e[2][1]), Math.max(e[0][0], e[2][0]), Math.max(e[0][1], e[2][1])));\n  }\n  return [_(x(), e)];\n}\nexport { V as Feature, $ as QueryEngine };"],
  "mappings": "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",
  "names": ["r", "e", "t", "i", "c", "n", "s", "r", "t", "n", "o", "a", "l", "d", "i", "c", "p", "e", "g", "f", "u", "y", "m", "T", "c", "s", "a", "l", "r", "u", "n", "o", "y", "t", "e", "i", "d", "h", "f", "e", "t", "s", "c", "i", "a", "r", "n", "o", "l", "u", "h", "C", "d", "G", "m", "f", "p", "y", "N", "g", "I", "x", "T", "S", "v", "u", "p", "t", "i", "s", "r", "o", "c", "f", "P", "n", "a", "l", "e", "g", "d", "h", "m", "y", "W", "$", "e", "r", "a", "t", "i", "l", "s", "n", "u", "j", "p", "h", "c", "m", "f", "y", "d", "g", "x", "O", "C", "o", "v", "w"]
}
