{
  "version": 3,
  "sources": ["../../../../../../node_modules/@arcgis/core/views/3d/webgl-engine/lib/verticalOffsetUtils.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { normalFromMat4Legacy as t } from \"../../../../core/libs/gl-matrix-2/math/mat3.js\";\nimport { create as s } from \"../../../../core/libs/gl-matrix-2/factories/mat3f64.js\";\nimport { invert as r, transpose as e, copy as i, multiply as o } from \"../../../../core/libs/gl-matrix-2/math/mat4.js\";\nimport { create as a } from \"../../../../core/libs/gl-matrix-2/factories/mat4f64.js\";\nimport { s as n, g as h, l as f, r as l, h as m } from \"../../../../chunks/vec32.js\";\nimport { create as p } from \"../../../../core/libs/gl-matrix-2/factories/vec3f64.js\";\nimport { c, g as _ } from \"../../../../chunks/sphere.js\";\nimport { ViewingMode as u } from \"../../../ViewingMode.js\";\nimport { Obb as g, computeOffsetObb as M } from \"../../support/orientedBoundingBox.js\";\nclass v {\n  constructor() {\n    this._transform = a(), this._transformInverse = new b({\n      value: this._transform\n    }, r, a), this._transformInverseTranspose = new b(this._transformInverse, e, a), this._transformTranspose = new b({\n      value: this._transform\n    }, e, a), this._transformInverseRotation = new b({\n      value: this._transform\n    }, t, s);\n  }\n  _invalidateLazyTransforms() {\n    this._transformInverse.invalidate(), this._transformInverseTranspose.invalidate(), this._transformTranspose.invalidate(), this._transformInverseRotation.invalidate();\n  }\n  get transform() {\n    return this._transform;\n  }\n  get inverse() {\n    return this._transformInverse.value;\n  }\n  get inverseTranspose() {\n    return this._transformInverseTranspose.value;\n  }\n  get inverseRotation() {\n    return this._transformInverseRotation.value;\n  }\n  get transpose() {\n    return this._transformTranspose.value;\n  }\n  setTransformMatrix(t) {\n    i(this._transform, t);\n  }\n  multiplyTransform(t) {\n    o(this._transform, this._transform, t);\n  }\n  set(t) {\n    i(this._transform, t), this._invalidateLazyTransforms();\n  }\n  setAndInvalidateLazyTransforms(t, s) {\n    this.setTransformMatrix(t), this.multiplyTransform(s), this._invalidateLazyTransforms();\n  }\n}\nclass b {\n  constructor(t, s, r) {\n    this._original = t, this._update = s, this._dirty = !0, this._transform = r();\n  }\n  invalidate() {\n    this._dirty = !0;\n  }\n  get value() {\n    return this._dirty && (this._update(this._transform, this._original.value), this._dirty = !1), this._transform;\n  }\n}\nclass T {\n  constructor(t = 0) {\n    this.offset = t, this.tmpVertex = p();\n  }\n  applyToVertex(t, s, r) {\n    const e = n(q, t, s, r),\n      i = h(z, e, this.localOrigin),\n      o = this.offset / f(i);\n    return l(this.tmpVertex, e, i, o), this.tmpVertex;\n  }\n  applyToAabb(t) {\n    const s = A,\n      r = R,\n      e = B;\n    for (let n = 0; n < 3; ++n) s[n] = t[0 + n] + this.localOrigin[n], r[n] = t[3 + n] + this.localOrigin[n], e[n] = s[n];\n    const i = this.applyToVertex(s[0], s[1], s[2]);\n    for (let n = 0; n < 3; ++n) t[n] = i[n], t[n + 3] = i[n];\n    const o = s => {\n      const r = this.applyToVertex(s[0], s[1], s[2]);\n      for (let e = 0; e < 3; ++e) t[e] = Math.min(t[e], r[e]), t[e + 3] = Math.max(t[e + 3], r[e]);\n    };\n    for (let n = 1; n < 8; ++n) {\n      for (let t = 0; t < 3; ++t) e[t] = n & 1 << t ? r[t] : s[t];\n      o(e);\n    }\n    let a = 0;\n    for (let n = 0; n < 3; ++n) {\n      s[n] * r[n] < 0 && (a |= 1 << n);\n    }\n    if (0 !== a && 7 !== a) for (let n = 0; n < 8; ++n) if (!(a & n)) {\n      for (let t = 0; t < 3; ++t) e[t] = a & 1 << t ? 0 : n & 1 << t ? s[t] : r[t];\n      o(e);\n    }\n    for (let n = 0; n < 3; ++n) t[n] -= this.localOrigin[n], t[n + 3] -= this.localOrigin[n];\n    return t;\n  }\n}\nclass x {\n  constructor(t = 0) {\n    this.componentLocalOriginLength = 0, this._totalOffset = 0, this._offset = 0, this._tmpVertex = p(), this._tmpMbs = c(), this._tmpObb = new g(), this._resetOffset(t);\n  }\n  _resetOffset(t) {\n    this._offset = t, this._totalOffset = t;\n  }\n  set offset(t) {\n    this._resetOffset(t);\n  }\n  get offset() {\n    return this._offset;\n  }\n  set componentOffset(t) {\n    this._totalOffset = this._offset + t;\n  }\n  set localOrigin(t) {\n    this.componentLocalOriginLength = f(t);\n  }\n  applyToVertex(t, s, r) {\n    const e = n(q, t, s, r),\n      i = n(z, t, s, r + this.componentLocalOriginLength),\n      o = this._totalOffset / f(i);\n    return l(this._tmpVertex, e, i, o), this._tmpVertex;\n  }\n  applyToAabb(t) {\n    const s = this.componentLocalOriginLength,\n      r = t[0],\n      e = t[1],\n      i = t[2] + s,\n      o = t[3],\n      a = t[4],\n      n = t[5] + s,\n      h = Math.abs(r),\n      f = Math.abs(e),\n      l = Math.abs(i),\n      m = Math.abs(o),\n      p = Math.abs(a),\n      c = Math.abs(n),\n      _ = .5 * (1 + Math.sign(r * o)) * Math.min(h, m),\n      u = .5 * (1 + Math.sign(e * a)) * Math.min(f, p),\n      g = .5 * (1 + Math.sign(i * n)) * Math.min(l, c),\n      M = Math.max(h, m),\n      v = Math.max(f, p),\n      b = Math.max(l, c),\n      T = Math.sqrt(_ * _ + u * u + g * g),\n      x = Math.sign(h + r),\n      O = Math.sign(f + e),\n      y = Math.sign(l + i),\n      d = Math.sign(m + o),\n      V = Math.sign(p + a),\n      L = Math.sign(c + n),\n      j = this._totalOffset;\n    if (T < j) return t[0] -= (1 - x) * j, t[1] -= (1 - O) * j, t[2] -= (1 - y) * j, t[3] += d * j, t[4] += V * j, t[5] += L * j, t;\n    const I = j / Math.sqrt(M * M + v * v + b * b),\n      w = j / T,\n      q = w - I,\n      z = -q;\n    return t[0] += r * (x * z + w), t[1] += e * (O * z + w), t[2] += i * (y * z + w), t[3] += o * (d * q + I), t[4] += a * (V * q + I), t[5] += n * (L * q + I), t;\n  }\n  applyToMbs(t) {\n    const s = f(_(t)),\n      r = this._totalOffset / s;\n    return l(_(this._tmpMbs), _(t), _(t), r), this._tmpMbs[3] = t[3] + t[3] * this._totalOffset / s, this._tmpMbs;\n  }\n  applyToObb(t) {\n    return M(t, this._totalOffset, this._totalOffset, u.Global, this._tmpObb), this._tmpObb;\n  }\n}\nclass O {\n  constructor(t = 0) {\n    this.offset = t, this.sphere = c(), this.tmpVertex = p();\n  }\n  applyToVertex(t, s, r) {\n    const e = this.objectTransform.transform,\n      i = n(q, t, s, r),\n      o = m(i, i, e),\n      a = this.offset / f(o);\n    l(o, o, o, a);\n    const h = this.objectTransform.inverse;\n    return m(this.tmpVertex, o, h), this.tmpVertex;\n  }\n  applyToMinMax(t, s) {\n    const r = this.offset / f(t);\n    l(t, t, t, r);\n    const e = this.offset / f(s);\n    l(s, s, s, e);\n  }\n  applyToAabb(t) {\n    const s = this.offset / Math.sqrt(t[0] * t[0] + t[1] * t[1] + t[2] * t[2]);\n    t[0] += t[0] * s, t[1] += t[1] * s, t[2] += t[2] * s;\n    const r = this.offset / Math.sqrt(t[3] * t[3] + t[4] * t[4] + t[5] * t[5]);\n    return t[3] += t[3] * r, t[4] += t[4] * r, t[5] += t[5] * r, t;\n  }\n  applyToBoundingSphere(t) {\n    const s = f(_(t)),\n      r = this.offset / s;\n    return l(_(this.sphere), _(t), _(t), r), this.sphere[3] = t[3] + t[3] * this.offset / s, this.sphere;\n  }\n}\nconst y = new O();\nfunction d(t) {\n  return null != t ? (y.offset = t, y) : null;\n}\nconst V = new x();\nfunction L(t) {\n  return null != t ? (V.offset = t, V) : null;\n}\nconst j = new T();\nfunction I(t) {\n  return null != t ? (j.offset = t, j) : null;\n}\nconst w = \"terrain\",\n  q = p(),\n  z = p(),\n  A = p(),\n  R = p(),\n  B = p();\nexport { x as I3SVerticalOffsetGlobalViewingMode, v as IntersectorTransform, O as Object3DVerticalOffsetGlobalViewingMode, T as TerrainVerticalOffsetGlobalViewingMode, L as getVerticalOffsetI3S, d as getVerticalOffsetObject3D, I as getVerticalOffsetTerrain, w as terrainId };"],
  "mappings": "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",
  "names": ["s", "e", "n", "q", "o", "r", "t", "h", "l", "c", "_", "u", "v", "b", "T", "x", "O", "y", "d", "V", "L", "j", "I", "w", "z"]
}
