{
  "version": 3,
  "sources": ["../../../../../../node_modules/@arcgis/core/views/3d/webgl-engine/lib/edgeRendering/EdgeWorkerHandle.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { isArray as e, isUint32Array as t } from \"../../../../../core/typedArrayUtil.js\";\nimport { WorkerHandle as r } from \"../../../../../core/workers/WorkerHandle.js\";\nimport { unpackInterleavedBuffer as n } from \"../../../support/buffer/workerHelper.js\";\nimport { extract as s } from \"./edgeProcessing.js\";\nclass a extends r {\n  constructor(e) {\n    super(\"EdgeProcessingWorker\", \"extract\", {\n      extract: e => [e.dataBuffer],\n      extractComponentsEdgeLocations: e => [e.dataBuffer],\n      extractEdgeLocations: e => [e.dataBuffer]\n    }, e);\n  }\n  async process(e, t, r) {\n    if (r) return s(e);\n    return i(await this.invoke(new o(e), t));\n  }\n  async extractEdgeLocations(e, t) {\n    const r = await this.invokeMethod(\"extractEdgeLocations\", new o(e), t);\n    return n(r);\n  }\n  async extractComponentsEdgeLocations(e, t) {\n    const r = await this.invokeMethod(\"extractComponentsEdgeLocations\", new o(e), t);\n    return n(r);\n  }\n}\nfunction i(e) {\n  return {\n    regular: {\n      instancesData: n(e.regular.instancesData),\n      lodInfo: {\n        lengths: new Float32Array(e.regular.lodInfo.lengths)\n      }\n    },\n    silhouette: {\n      instancesData: n(e.silhouette.instancesData),\n      lodInfo: {\n        lengths: new Float32Array(e.silhouette.lodInfo.lengths)\n      }\n    },\n    averageEdgeLength: e.averageEdgeLength\n  };\n}\nclass o {\n  constructor(r) {\n    this.dataBuffer = r.data.buffer, this.writerSettings = r.writerSettings, this.skipDeduplicate = r.skipDeduplicate, this.indices = e(r.indices) ? r.indices : r.indices.buffer, this.indicesType = e(r.indices) ? \"Array\" : t(r.indices) ? \"Uint32Array\" : \"Uint16Array\", this.indicesLength = r.indicesLength;\n  }\n}\nexport { a as EdgeWorkerHandle, o as PackedInput };"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAQA,IAAM,IAAN,cAAgB,EAAE;AAAA,EAChB,YAAY,GAAG;AACb,UAAM,wBAAwB,WAAW;AAAA,MACvC,SAAS,CAAAA,OAAK,CAACA,GAAE,UAAU;AAAA,MAC3B,gCAAgC,CAAAA,OAAK,CAACA,GAAE,UAAU;AAAA,MAClD,sBAAsB,CAAAA,OAAK,CAACA,GAAE,UAAU;AAAA,IAC1C,GAAG,CAAC;AAAA,EACN;AAAA,EACM,QAAQ,GAAGC,IAAG,GAAG;AAAA;AACrB,UAAI,EAAG,QAAOC,GAAE,CAAC;AACjB,aAAO,EAAE,MAAM,KAAK,OAAO,IAAI,EAAE,CAAC,GAAGD,EAAC,CAAC;AAAA,IACzC;AAAA;AAAA,EACM,qBAAqB,GAAGA,IAAG;AAAA;AAC/B,YAAM,IAAI,MAAM,KAAK,aAAa,wBAAwB,IAAI,EAAE,CAAC,GAAGA,EAAC;AACrE,aAAO,EAAE,CAAC;AAAA,IACZ;AAAA;AAAA,EACM,+BAA+B,GAAGA,IAAG;AAAA;AACzC,YAAM,IAAI,MAAM,KAAK,aAAa,kCAAkC,IAAI,EAAE,CAAC,GAAGA,EAAC;AAC/E,aAAO,EAAE,CAAC;AAAA,IACZ;AAAA;AACF;AACA,SAAS,EAAE,GAAG;AACZ,SAAO;AAAA,IACL,SAAS;AAAA,MACP,eAAe,EAAE,EAAE,QAAQ,aAAa;AAAA,MACxC,SAAS;AAAA,QACP,SAAS,IAAI,aAAa,EAAE,QAAQ,QAAQ,OAAO;AAAA,MACrD;AAAA,IACF;AAAA,IACA,YAAY;AAAA,MACV,eAAe,EAAE,EAAE,WAAW,aAAa;AAAA,MAC3C,SAAS;AAAA,QACP,SAAS,IAAI,aAAa,EAAE,WAAW,QAAQ,OAAO;AAAA,MACxD;AAAA,IACF;AAAA,IACA,mBAAmB,EAAE;AAAA,EACvB;AACF;AACA,IAAM,IAAN,MAAQ;AAAA,EACN,YAAY,GAAG;AACb,SAAK,aAAa,EAAE,KAAK,QAAQ,KAAK,iBAAiB,EAAE,gBAAgB,KAAK,kBAAkB,EAAE,iBAAiB,KAAK,UAAU,EAAE,EAAE,OAAO,IAAI,EAAE,UAAU,EAAE,QAAQ,QAAQ,KAAK,cAAc,EAAE,EAAE,OAAO,IAAI,UAAU,EAAE,EAAE,OAAO,IAAI,gBAAgB,eAAe,KAAK,gBAAgB,EAAE;AAAA,EAClS;AACF;",
  "names": ["e", "t", "f"]
}
