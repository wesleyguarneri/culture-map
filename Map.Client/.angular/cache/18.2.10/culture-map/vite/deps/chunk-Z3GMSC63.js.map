{
  "version": 3,
  "sources": ["../../../../../../node_modules/@arcgis/core/rest/geometryService/cut.js", "../../../../../../node_modules/@arcgis/core/rest/geometryService/simplify.js", "../../../../../../node_modules/@arcgis/core/geometry/support/normalizeUtils.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport \"../../geometry.js\";\nimport e from \"../../request.js\";\nimport { getJsonType as t, fromJSON as r } from \"../../geometry/support/jsonUtils.js\";\nimport { srToRESTValue as s } from \"../../geometry/support/spatialReferenceUtils.js\";\nimport { parseUrl as o } from \"../utils.js\";\nasync function i(i, n, p, m) {\n  const a = o(i),\n    u = n[0].spatialReference,\n    c = {\n      ...m,\n      responseType: \"json\",\n      query: {\n        ...a.query,\n        f: \"json\",\n        sr: s(u),\n        target: JSON.stringify({\n          geometryType: t(n[0]),\n          geometries: n\n        }),\n        cutter: JSON.stringify(p)\n      }\n    },\n    f = await e(a.path + \"/cut\", c),\n    {\n      cutIndexes: y,\n      geometries: g = []\n    } = f.data;\n  return {\n    cutIndexes: y,\n    geometries: g.map(e => {\n      const t = r(e);\n      return t.spatialReference = u, t;\n    })\n  };\n}\nexport { i as cut };", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport r from \"../../request.js\";\nimport { urlToObject as t } from \"../../core/urlUtils.js\";\nimport { getJsonType as e } from \"../../geometry/support/jsonUtils.js\";\nimport { srToRESTValue as s } from \"../../geometry/support/spatialReferenceUtils.js\";\nimport { encodeGeometries as o, decodeGeometries as i } from \"./utils.js\";\nasync function m(m, p, f) {\n  const n = \"string\" == typeof m ? t(m) : m,\n    a = p[0].spatialReference,\n    u = e(p[0]),\n    l = {\n      ...f,\n      query: {\n        ...n.query,\n        f: \"json\",\n        sr: s(a),\n        geometries: JSON.stringify(o(p))\n      }\n    },\n    {\n      data: y\n    } = await r(n.path + \"/simplify\", l);\n  return i(y.geometries, u, a);\n}\nexport { m as simplify };", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport t from \"../../config.js\";\nimport e from \"../../core/Error.js\";\nimport n from \"../../core/Logger.js\";\nimport o from \"../Polygon.js\";\nimport s from \"../Polyline.js\";\nimport { getGeometryParts as r, cutParams as i, offsetMagnitude as l, updatePolyGeometry as c } from \"./normalizeUtilsCommon.js\";\nimport { getInfo as f } from \"./spatialReferenceUtils.js\";\nimport { geographicToWebMercator as u, webMercatorToGeographic as p } from \"./webMercatorUtils.js\";\nimport { cut as a } from \"../../rest/geometryService/cut.js\";\nimport { simplify as h } from \"../../rest/geometryService/simplify.js\";\nconst m = () => n.getLogger(\"esri.geometry.support.normalizeUtils\");\nfunction g(t) {\n  return \"polygon\" === t.type;\n}\nfunction y(t) {\n  return \"polygon\" === t[0].type;\n}\nfunction x(t) {\n  return \"polyline\" === t[0].type;\n}\nfunction d(t) {\n  const e = [];\n  let n = 0,\n    o = 0;\n  for (let s = 0; s < t.length; s++) {\n    const r = t[s];\n    let i = null;\n    for (let t = 0; t < r.length; t++) i = r[t], e.push(i), 0 === t ? (n = i[0], o = n) : (n = Math.min(n, i[0]), o = Math.max(o, i[0]));\n    i && e.push([(n + o) / 2, 0]);\n  }\n  return e;\n}\nfunction M(t, n) {\n  if (!(t instanceof s || t instanceof o)) {\n    const t = \"straightLineDensify: the input geometry is neither polyline nor polygon\";\n    throw m().error(t), new e(t);\n  }\n  const i = r(t),\n    l = [];\n  for (const e of i) {\n    const t = [];\n    l.push(t), t.push([e[0][0], e[0][1]]);\n    for (let o = 0; o < e.length - 1; o++) {\n      const s = e[o][0],\n        r = e[o][1],\n        i = e[o + 1][0],\n        l = e[o + 1][1],\n        c = Math.sqrt((i - s) * (i - s) + (l - r) * (l - r)),\n        f = (l - r) / c,\n        u = (i - s) / c,\n        p = c / n;\n      if (p > 1) {\n        for (let l = 1; l <= p - 1; l++) {\n          const e = l * n,\n            o = u * e + s,\n            i = f * e + r;\n          t.push([o, i]);\n        }\n        const e = (c + Math.floor(p - 1) * n) / 2,\n          o = u * e + s,\n          i = f * e + r;\n        t.push([o, i]);\n      }\n      t.push([i, l]);\n    }\n  }\n  return g(t) ? new o({\n    rings: l,\n    spatialReference: t.spatialReference\n  }) : new s({\n    paths: l,\n    spatialReference: t.spatialReference\n  });\n}\nfunction w(t, e, n) {\n  if (e) {\n    const e = M(t, 1e6);\n    t = p(e, !0);\n  }\n  return n && (t = c(t, n)), t;\n}\nfunction b(t, e, n) {\n  if (Array.isArray(t)) {\n    const o = t[0];\n    if (o > e) {\n      const n = l(o, e);\n      t[0] = o + n * (-2 * e);\n    } else if (o < n) {\n      const e = l(o, n);\n      t[0] = o + e * (-2 * n);\n    }\n  } else {\n    const o = t.x;\n    if (o > e) {\n      const n = l(o, e);\n      t = t.clone().offset(n * (-2 * e), 0);\n    } else if (o < n) {\n      const e = l(o, n);\n      t = t.clone().offset(e * (-2 * n), 0);\n    }\n  }\n  return t;\n}\nfunction j(t, e) {\n  let n = -1;\n  for (let o = 0; o < e.cutIndexes.length; o++) {\n    const s = e.cutIndexes[o],\n      i = e.geometries[o],\n      c = r(i);\n    for (let t = 0; t < c.length; t++) {\n      const e = c[t];\n      e.some(n => {\n        if (n[0] < 180) return !0;\n        {\n          let n = 0;\n          for (let t = 0; t < e.length; t++) {\n            const o = e[t][0];\n            n = o > n ? o : n;\n          }\n          n = Number(n.toFixed(9));\n          const o = -360 * l(n, 180);\n          for (let s = 0; s < e.length; s++) {\n            const e = i.getPoint(t, s);\n            i.setPoint(t, s, e.clone().offset(o, 0));\n          }\n          return !0;\n        }\n      });\n    }\n    if (s === n) {\n      if (y(t)) for (const e of r(i)) t[s] = t[s].addRing(e);else if (x(t)) for (const e of r(i)) t[s] = t[s].addPath(e);\n    } else n = s, t[s] = i;\n  }\n  return t;\n}\nasync function R(e, n, r) {\n  if (!Array.isArray(e)) return R([e], n);\n  n && \"string\" != typeof n && m().warn(\"normalizeCentralMeridian()\", \"The url object is deprecated, use the url string instead\");\n  const p = \"string\" == typeof n ? n : n?.url ?? t.geometryServiceUrl;\n  let g,\n    y,\n    x,\n    d,\n    M,\n    v,\n    P,\n    L,\n    U = 0;\n  const z = [],\n    A = [];\n  for (const t of e) if (null != t) {\n    if (g || (g = t.spatialReference, y = f(g), x = g.isWebMercator, v = x ? 102100 : 4326, d = i[v].maxX, M = i[v].minX, P = i[v].plus180Line, L = i[v].minus180Line), y) {\n      if (\"mesh\" === t.type) A.push(t);else if (\"point\" === t.type) A.push(b(t.clone(), d, M));else if (\"multipoint\" === t.type) {\n        const e = t.clone();\n        e.points = e.points.map(t => b(t, d, M)), A.push(e);\n      } else if (\"extent\" === t.type) {\n        const e = t.clone()._normalize(!1, !1, y);\n        A.push(e.rings ? new o(e) : e);\n      } else if (t.extent) {\n        const e = t.extent,\n          n = l(e.xmin, M) * (2 * d);\n        let o = 0 === n ? t.clone() : c(t.clone(), n);\n        e.offset(n, 0);\n        let {\n          xmin: s,\n          xmax: r\n        } = e;\n        s = Number(s.toFixed(9)), r = Number(r.toFixed(9)), e.intersects(P) && r !== d ? (U = r > U ? r : U, o = w(o, x), z.push(o), A.push(\"cut\")) : e.intersects(L) && s !== M ? (U = r * (2 * d) > U ? r * (2 * d) : U, o = w(o, x, 360), z.push(o), A.push(\"cut\")) : A.push(o);\n      } else A.push(t.clone());\n    } else A.push(t);\n  } else A.push(t);\n  let F = l(U, d),\n    N = -90;\n  const S = F,\n    k = new s();\n  for (; F > 0;) {\n    const t = 360 * F - 180;\n    k.addPath([[t, N], [t, -1 * N]]), N *= -1, F--;\n  }\n  if (z.length > 0 && S > 0) {\n    const t = j(z, await a(p, z, k, r)),\n      n = [],\n      o = [];\n    for (let r = 0; r < A.length; r++) {\n      const s = A[r];\n      if (\"cut\" !== s) o.push(s);else {\n        const s = t.shift(),\n          i = e[r];\n        null != i && \"polygon\" === i.type && i.rings && i.rings.length > 1 && s.rings.length >= i.rings.length ? (n.push(s), o.push(\"simplify\")) : o.push(x ? u(s) : s);\n      }\n    }\n    if (!n.length) return o;\n    const s = await h(p, n, r),\n      i = [];\n    for (let e = 0; e < o.length; e++) {\n      const t = o[e];\n      \"simplify\" !== t ? i.push(t) : i.push(x ? u(s.shift()) : s.shift());\n    }\n    return i;\n  }\n  const C = [];\n  for (let t = 0; t < A.length; t++) {\n    const e = A[t];\n    if (\"cut\" !== e) C.push(e);else {\n      const t = z.shift();\n      C.push(!0 === x ? u(t) : t);\n    }\n  }\n  return C;\n}\nfunction v(t) {\n  if (!t) return null;\n  const e = t.extent;\n  if (!e) return null;\n  const n = t.spatialReference && f(t.spatialReference);\n  if (!n) return e;\n  const [o, s] = n.valid,\n    r = 2 * s,\n    {\n      width: i\n    } = e;\n  let l,\n    {\n      xmin: c,\n      xmax: u\n    } = e;\n  if ([c, u] = [u, c], \"extent\" === t.type || 0 === i || i <= s || i > r || c < o || u > s) return e;\n  switch (t.type) {\n    case \"polygon\":\n      if (!(t.rings.length > 1)) return e;\n      l = d(t.rings);\n      break;\n    case \"polyline\":\n      if (!(t.paths.length > 1)) return e;\n      l = d(t.paths);\n      break;\n    case \"multipoint\":\n      l = t.points;\n  }\n  const p = e.clone();\n  for (let f = 0; f < l.length; f++) {\n    let t = l[f][0];\n    t < 0 ? (t += s, u = Math.max(t, u)) : (t -= s, c = Math.min(t, c));\n  }\n  return p.xmin = c, p.xmax = u, p.width < i ? (p.xmin -= s, p.xmax -= s, p) : e;\n}\nfunction P(t, e, n) {\n  const o = f(n);\n  if (null == o) return t;\n  const [s, r] = o.valid,\n    i = 2 * r;\n  let l = 0,\n    c = 0;\n  e > r ? l = Math.ceil(Math.abs(e - r) / i) : e < s && (l = -Math.ceil(Math.abs(e - s) / i)), t > r ? c = Math.ceil(Math.abs(t - r) / i) : t < s && (c = -Math.ceil(Math.abs(t - s) / i));\n  let u = t + (l - c) * i;\n  const p = u - e;\n  return p > r ? u -= i : p < s && (u += i), u;\n}\nfunction L(t, e) {\n  const n = f(e);\n  if (n) {\n    const [e, o] = n.valid,\n      s = o - e;\n    if (t < e) for (; t < e;) t += s;\n    if (t > o) for (; t > o;) t -= s;\n  }\n  return t;\n}\nexport { P as getClosestDenormalizedXToReference, v as getDenormalizedExtent, R as normalizeCentralMeridian, L as normalizeMapX, M as straightLineDensify };"],
  "mappings": "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",
  "names": ["i", "n", "p", "m", "f", "y", "g", "m", "p", "f", "n", "r", "y", "o", "m", "y", "d", "n", "o", "s", "r", "i", "t", "l", "f", "p", "e", "j", "R", "g", "x", "M", "v", "P", "L", "U"]
}
