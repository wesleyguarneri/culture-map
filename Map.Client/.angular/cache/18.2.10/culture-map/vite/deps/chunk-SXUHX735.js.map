{
  "version": 3,
  "sources": ["../../../../../../node_modules/@arcgis/core/layers/ElevationLayer.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { _ as e } from \"../chunks/tslib.es6.js\";\nimport r from \"../request.js\";\nimport t from \"../core/Error.js\";\nimport { releaseMaybe as i } from \"../core/maybe.js\";\nimport { MultiOriginJSONMixin as o } from \"../core/MultiOriginJSONSupport.js\";\nimport { throwIfAbortError as s, throwIfAborted as a } from \"../core/promiseUtils.js\";\nimport { objectToQuery as p } from \"../core/urlUtils.js\";\nimport { property as l } from \"../core/accessorSupport/decorators/property.js\";\nimport \"../core/has.js\";\nimport \"../core/Logger.js\";\nimport \"../core/RandomLCG.js\";\nimport { reader as n } from \"../core/accessorSupport/decorators/reader.js\";\nimport { subclass as c } from \"../core/accessorSupport/decorators/subclass.js\";\nimport d from \"../geometry/HeightModelInfo.js\";\nimport u from \"./Layer.js\";\nimport { ArcGISCachedService as y } from \"./mixins/ArcGISCachedService.js\";\nimport { ArcGISService as m } from \"./mixins/ArcGISService.js\";\nimport { OperationalLayer as h } from \"./mixins/OperationalLayer.js\";\nimport { PortalLayer as v } from \"./mixins/PortalLayer.js\";\nimport { url as f } from \"./support/commonProperties.js\";\nimport { ElevationTileData as g } from \"./support/ElevationTileData.js\";\nimport { acquireDecoder as j } from \"./support/LercDecoder.js\";\nlet w = class extends y(m(h(v(o(u))))) {\n  constructor(...e) {\n    super(...e), this.capabilities = {\n      operations: {\n        supportsTileMap: !1\n      }\n    }, this.copyright = null, this.heightModelInfo = null, this.path = null, this.minScale = void 0, this.maxScale = void 0, this.opacity = 1, this.operationalLayerType = \"ArcGISTiledElevationServiceLayer\", this.sourceJSON = null, this.type = \"elevation\", this.url = null, this.version = null, this._lercDecoder = j();\n  }\n  normalizeCtorArgs(e, r) {\n    return \"string\" == typeof e ? {\n      url: e,\n      ...r\n    } : e;\n  }\n  destroy() {\n    this._lercDecoder = i(this._lercDecoder);\n  }\n  readCapabilities(e, r) {\n    const t = r.capabilities && r.capabilities.split(\",\").map(e => e.toLowerCase().trim());\n    if (!t) return {\n      operations: {\n        supportsTileMap: !1\n      }\n    };\n    return {\n      operations: {\n        supportsTileMap: t.includes(\"tilemap\")\n      }\n    };\n  }\n  readVersion(e, r) {\n    let t = r.currentVersion;\n    return t || (t = 9.3), t;\n  }\n  load(e) {\n    const r = null != e ? e.signal : null;\n    return this.addResolvingPromise(this.loadFromPortal({\n      supportedTypes: [\"Image Service\"],\n      supportsData: !1,\n      validateItem: e => {\n        if (e.typeKeywords) for (let r = 0; r < e.typeKeywords.length; r++) if (\"elevation 3d layer\" === e.typeKeywords[r].toLowerCase()) return !0;\n        throw new t(\"portal:invalid-layer-item-type\", \"Invalid layer item type '${type}', expected '${expectedType}' \", {\n          type: \"Image Service\",\n          expectedType: \"Image Service Elevation 3D Layer\"\n        });\n      }\n    }, e).catch(s).then(() => this._fetchImageService(r))), Promise.resolve(this);\n  }\n  fetchTile(e, t, i, o) {\n    const s = null != (o = o || {\n        signal: null\n      }).signal ? o.signal : o.signal = new AbortController().signal,\n      a = {\n        responseType: \"array-buffer\",\n        signal: s\n      },\n      p = {\n        noDataValue: o.noDataValue,\n        returnFileInfo: !0\n      };\n    return this.load().then(() => this._fetchTileAvailability(e, t, i, o)).then(() => r(this.getTileUrl(e, t, i), a)).then(e => this._lercDecoder.decode(e.data, p, s)).then(e => new g(e));\n  }\n  getTileUrl(e, r, t) {\n    const i = !this.capabilities.operations.supportsTileMap && this.supportsBlankTile,\n      o = p({\n        ...this.parsedUrl.query,\n        blankTile: !i && null\n      });\n    return `${this.parsedUrl.path}/tile/${e}/${r}/${t}${o ? \"?\" + o : \"\"}`;\n  }\n  async queryElevation(e, r) {\n    const {\n      ElevationQuery: t\n    } = await import(\"./support/ElevationQuery.js\");\n    a(r);\n    return new t().query(this, e, r);\n  }\n  async createElevationSampler(e, r) {\n    const {\n      ElevationQuery: t\n    } = await import(\"./support/ElevationQuery.js\");\n    a(r);\n    return new t().createSampler(this, e, r);\n  }\n  _fetchTileAvailability(e, r, t, i) {\n    return this.tilemapCache ? this.tilemapCache.fetchAvailability(e, r, t, i) : Promise.resolve(\"unknown\");\n  }\n  async _fetchImageService(e) {\n    if (this.sourceJSON) return this.sourceJSON;\n    const t = {\n        query: {\n          f: \"json\",\n          ...this.parsedUrl.query\n        },\n        responseType: \"json\",\n        signal: e\n      },\n      i = await r(this.parsedUrl.path, t);\n    i.ssl && (this.url = this.url?.replace(/^http:/i, \"https:\")), this.sourceJSON = i.data, this.read(i.data, {\n      origin: \"service\",\n      url: this.parsedUrl\n    });\n  }\n  get hasOverriddenFetchTile() {\n    return !this.fetchTile[S];\n  }\n};\ne([l({\n  readOnly: !0\n})], w.prototype, \"capabilities\", void 0), e([n(\"service\", \"capabilities\", [\"capabilities\"])], w.prototype, \"readCapabilities\", null), e([l({\n  json: {\n    read: {\n      source: \"copyrightText\"\n    }\n  }\n})], w.prototype, \"copyright\", void 0), e([l({\n  readOnly: !0,\n  type: d\n})], w.prototype, \"heightModelInfo\", void 0), e([l({\n  type: String,\n  json: {\n    origins: {\n      \"web-scene\": {\n        read: !0,\n        write: !0\n      }\n    },\n    read: !1\n  }\n})], w.prototype, \"path\", void 0), e([l({\n  type: [\"show\", \"hide\"]\n})], w.prototype, \"listMode\", void 0), e([l({\n  json: {\n    read: !1,\n    write: !1,\n    origins: {\n      service: {\n        read: !1,\n        write: !1\n      },\n      \"portal-item\": {\n        read: !1,\n        write: !1\n      },\n      \"web-document\": {\n        read: !1,\n        write: !1\n      }\n    }\n  },\n  readOnly: !0\n})], w.prototype, \"minScale\", void 0), e([l({\n  json: {\n    read: !1,\n    write: !1,\n    origins: {\n      service: {\n        read: !1,\n        write: !1\n      },\n      \"portal-item\": {\n        read: !1,\n        write: !1\n      },\n      \"web-document\": {\n        read: !1,\n        write: !1\n      }\n    }\n  },\n  readOnly: !0\n})], w.prototype, \"maxScale\", void 0), e([l({\n  json: {\n    read: !1,\n    write: !1,\n    origins: {\n      \"web-document\": {\n        read: !1,\n        write: !1\n      }\n    }\n  }\n})], w.prototype, \"opacity\", void 0), e([l({\n  type: [\"ArcGISTiledElevationServiceLayer\"]\n})], w.prototype, \"operationalLayerType\", void 0), e([l()], w.prototype, \"sourceJSON\", void 0), e([l({\n  json: {\n    read: !1\n  },\n  value: \"elevation\",\n  readOnly: !0\n})], w.prototype, \"type\", void 0), e([l(f)], w.prototype, \"url\", void 0), e([l()], w.prototype, \"version\", void 0), e([n(\"version\", [\"currentVersion\"])], w.prototype, \"readVersion\", null), w = e([c(\"esri.layers.ElevationLayer\")], w);\nconst S = Symbol(\"default-fetch-tile\");\nw.prototype.fetchTile[S] = !0;\nconst T = w;\nexport { T as default };"],
  "mappings": "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",
  "names": ["p", "e", "s", "t", "r", "o", "a", "S", "v"]
}
