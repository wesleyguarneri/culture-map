{
  "version": 3,
  "sources": ["../../../../../../node_modules/@arcgis/map-components/dist/esm/arcgis-version-management.entry.js"],
  "sourcesContent": ["/*!\n * All material copyright Esri, All Rights Reserved, unless otherwise specified.\n * See https://js.arcgis.com/4.30/esri/copyright.txt for details.\n * v4.30.7\n */\nimport { r as registerInstance, c as createEvent, h, F as Fragment, g as getElement } from './index-7d33cc26.js';\nimport { l as load } from './chunk-PVEVZB4O-2c3b8893.js';\nimport { u as useControllerManager } from './index-c99fc80c.js';\nimport { i as importCoreReactiveUtils, ag as newWidgetsVersionManagementVersionManagementViewModel } from './index-d2df902e.js';\nimport { u as useT9n, m as makeViewModelController } from './useT9n-e78c8d12.js';\nimport './component-utils-de9339fe.js';\nconst versionManagementCss = \".calcite-flow-widget{width:350px}calcite-block{margin:0}calcite-pagination{justify-content:center}\";\nconst ArcgisVersionManagementStyle0 = versionManagementCss;\nconst useVersionManagementViewModel = makeViewModelController(newWidgetsVersionManagementVersionManagementViewModel);\nconst ArcgisVersionManagement = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.arcgisReady = createEvent(this, \"arcgisReady\", 7);\n    this.arcgisVersioningStateChanged = createEvent(this, \"arcgisVersioningStateChanged\", 7);\n    this.manager = useControllerManager(this);\n    this.reactiveUtils = load(importCoreReactiveUtils);\n    this.viewModel = useVersionManagementViewModel(this);\n    this.messages = this.manager.readonly(useT9n({\n      blocking: true\n    }));\n    this.allowEditingDisabled = false;\n    this.autoDestroyDisabled = false;\n    this.closable = false;\n    this.icon = undefined;\n    this.label = undefined;\n    this.mode = undefined;\n    this.pageSize = 5;\n    this.position = \"top-right\";\n    this.referenceElement = undefined;\n    this.state = this.viewModel.state;\n    this.versioningStates = this.viewModel.versioningStates;\n    this.view = this.viewModel.view;\n  }\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n  async componentWillLoad() {\n    const {\n      watch\n    } = this.reactiveUtils;\n    this.manager.onLifecycle(() => [watch(() => this.viewModel.state, state => {\n      const {\n        flowElement\n      } = this;\n      const versionProperties = flowElement?.getElementsByTagName(\"arcgis-version-management-version-properties\")[0];\n      const versionList = flowElement?.getElementsByTagName(\"arcgis-version-management-version-list\")[0];\n      if (state === \"disabled\") {\n        if (versionProperties) {\n          this._removeVersionPropertiesFlowItem(flowElement);\n        }\n        if (versionList) {\n          this._removeVersionListFlowItem(flowElement);\n        }\n        return;\n      }\n      if (versionList) {\n        versionList.versionListElementProps = {\n          ...versionList.versionListElementProps,\n          executionError: this.viewModel.executionError\n        };\n        versionList.versionListElementProps = {\n          ...versionList.versionListElementProps,\n          state\n        };\n      }\n      if (versionProperties) {\n        versionProperties.versionPropertiesElementProps = {\n          ...versionProperties.versionPropertiesElementProps,\n          state\n        };\n      }\n    })]);\n  }\n  /** Permanently destroy the component */\n  async destroy() {\n    await this.manager.destroy();\n  }\n  render() {\n    const {\n      allowEditingDisabled,\n      closable,\n      flowElement,\n      label,\n      messages,\n      pageSize,\n      viewModel,\n      viewModel: {\n        loadError,\n        state\n      }\n    } = this;\n    const arrayServiceNames = Array.from(viewModel.serviceNameLookup, ([url, name]) => ({\n      url,\n      name\n    }));\n    const serviceItems = state !== \"disabled\" ? h(Fragment, null, arrayServiceNames.map(service => {\n      const serviceItemElementProps = {\n        allowEditing: !allowEditingDisabled,\n        closable,\n        currentUser: viewModel.userLookup.get(service.url),\n        currentVersionIdentifier: viewModel.versioningStateLookup.get(service.url).currentVersionInfo.versionIdentifier,\n        executionError: undefined,\n        flowElement: flowElement,\n        hasAdvEditingUte: viewModel.advancedEditingUserTypeExtensionLookup.get(service.url),\n        heading: label,\n        isVersioningApiAvailable: (viewModel.serverVersionLookup.get(service.url) ?? 0) >= 11.2,\n        pageSize,\n        serviceName: service.name,\n        state,\n        serviceUrl: service.url,\n        strings: messages,\n        versionInfos: viewModel.versioningStateLookup.get(service.url)?.versionInfos ?? []\n      };\n      return h(\"arcgis-version-management-service-item\", {\n        serviceItemElementProps: serviceItemElementProps,\n        onArcgisGetVersions: async event => {\n          await this._refreshVersionList(event.detail.serviceUrl);\n        },\n        onArcgisFlowItemBack: () => {\n          this._removeVersionListFlowItem(flowElement);\n        },\n        onArcgisFlowItemClose: () => {\n          this._handleFlowItemClose();\n        },\n        onArcgisManageVersion: event => {\n          this._handleManageVersionAction(event, flowElement);\n        },\n        onArcgisNewVersion: event => {\n          const versionPropertiesFlow = this._createVersionPropertiesFlowItem(event.detail.serviceUrl, undefined);\n          flowElement?.appendChild(versionPropertiesFlow);\n        }\n      });\n    })) : undefined;\n    const notice = state === \"disabled\" ? h(\"calcite-notice\", {\n      class: \"notice\",\n      closable: false,\n      kind: \"warning\",\n      open: true,\n      scale: \"s\",\n      slot: \"footer\",\n      width: \"full\"\n    }, h(\"div\", {\n      slot: \"message\"\n    }, this._getLoadError(loadError))) : undefined;\n    return h(\"calcite-flow\", {\n      ref: node => {\n        this.flowElement = node;\n      },\n      class: this.mode === \"dialog\" ? \"\" : \"calcite-flow-widget\"\n    }, h(\"calcite-flow-item\", {\n      closable: this.closable,\n      heading: label,\n      onCalciteFlowItemClose: () => {\n        this._handleFlowItemClose();\n      }\n    }, h(\"calcite-panel\", {\n      loading: state === \"loading\" || state === \"executing\"\n    }, serviceItems, notice)));\n  }\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n  _createVersionPropertiesFlowItem(serviceUrl, versionInfo) {\n    const {\n      closable,\n      flowElement,\n      viewModel,\n      viewModel: {\n        state\n      }\n    } = this;\n    const versionProperties = document.createElement(\"arcgis-version-management-version-properties\");\n    versionProperties.versionPropertiesElementProps = {\n      closable,\n      currentUser: viewModel.userLookup.get(serviceUrl),\n      hasAdvEditingUte: viewModel.advancedEditingUserTypeExtensionLookup.get(serviceUrl),\n      serviceUrl,\n      state,\n      strings: this.messages,\n      versionInfo\n    };\n    versionProperties.addEventListener(\"arcgisCreateVersion\", event => {\n      const {\n        createVersionParameters,\n        switchToVersion\n      } = event.detail;\n      viewModel.createVersion(createVersionParameters).then(async createVersionResult => {\n        if (createVersionResult) {\n          this.arcgisVersioningStateChanged.emit({\n            type: \"version-created\",\n            versionIdentifier: createVersionResult.versionIdentifier,\n            versioningState: viewModel.versioningStateLookup.get(serviceUrl)\n          });\n        }\n        if (switchToVersion) {\n          await this.viewModel.changeVersion(serviceUrl, createVersionResult.versionIdentifier.name, createVersionResult.versionIdentifier.guid).then(changeVersionResult => {\n            if (changeVersionResult) {\n              this.arcgisVersioningStateChanged.emit({\n                type: \"version-switched\",\n                versionIdentifier: createVersionResult.versionIdentifier,\n                versioningState: viewModel.versioningStateLookup.get(serviceUrl)\n              });\n            }\n          });\n        }\n      }).finally(async () => {\n        await this._refreshVersionList(serviceUrl);\n        this._removeVersionPropertiesFlowItem(flowElement);\n      });\n    });\n    versionProperties.addEventListener(\"arcgisAlterVersion\", async event => {\n      const {\n        flowElement\n      } = this;\n      const {\n        alterVersionParameters\n      } = event.detail;\n      await viewModel.alterVersion(alterVersionParameters).then(async alterVersionResult => {\n        if (alterVersionResult) {\n          this.arcgisVersioningStateChanged.emit({\n            type: \"version-changed\",\n            versionIdentifier: alterVersionParameters.versionIdentifier,\n            versioningState: viewModel.versioningStateLookup.get(serviceUrl)\n          });\n        }\n        await this._refreshVersionList(serviceUrl);\n      }).finally(() => {\n        this._removeVersionPropertiesFlowItem(flowElement);\n      });\n    });\n    versionProperties.addEventListener(\"arcgisFlowItemBack\", () => {\n      this._removeVersionPropertiesFlowItem(this.flowElement);\n    });\n    versionProperties.addEventListener(\"calciteFlowItemBack\", event => {\n      event.preventDefault();\n      this._removeVersionPropertiesFlowItem(this.flowElement);\n    });\n    versionProperties.addEventListener(\"calciteFlowItemClose\", () => {\n      this._handleFlowItemClose();\n    });\n    return versionProperties;\n  }\n  _getLoadError(loadError) {\n    const {\n      messages\n    } = this;\n    switch (loadError) {\n      case \"no-feature-services\":\n        return messages.loadErrors.noFeatureServices;\n      case \"no-view-property\":\n        return messages.loadErrors.noViewProperty;\n      default:\n        return loadError;\n    }\n  }\n  _handleFlowItemClose() {\n    const versionManagementComponent = document.querySelector(\"arcgis-version-management\");\n    const parentElement = versionManagementComponent.parentElement;\n    parentElement?.removeChild(versionManagementComponent);\n  }\n  async _handleManageVersionAction(e, flowElement) {\n    const {\n      actionType,\n      serviceUrl,\n      versionInfo\n    } = e.detail;\n    const {\n      viewModel\n    } = this;\n    switch (actionType) {\n      case \"changeVersion\":\n        {\n          viewModel.changeVersion(serviceUrl, versionInfo.versionIdentifier.name, versionInfo.versionIdentifier.guid).then(changeVersionResult => {\n            if (changeVersionResult) {\n              this.arcgisVersioningStateChanged.emit({\n                type: \"version-switched\",\n                versionIdentifier: versionInfo.versionIdentifier,\n                versioningState: viewModel.versioningStateLookup.get(serviceUrl)\n              });\n            }\n            const versionList = flowElement?.getElementsByTagName(\"arcgis-version-management-version-list\")[0];\n            if (versionList) {\n              if (versionList) {\n                versionList.versionListElementProps = {\n                  ...versionList.versionListElementProps,\n                  currentVersionIdentifier: viewModel.versioningStateLookup.get(serviceUrl).currentVersionInfo.versionIdentifier\n                };\n              }\n            }\n          });\n          break;\n        }\n      case \"deleteVersion\":\n        {\n          viewModel.deleteVersion(serviceUrl, versionInfo.versionIdentifier.name, versionInfo.versionIdentifier.guid).then(async deleteVersionResult => {\n            if (deleteVersionResult) {\n              this.arcgisVersioningStateChanged.emit({\n                type: \"version-deleted\",\n                versionIdentifier: versionInfo.versionIdentifier,\n                versioningState: viewModel.versioningStateLookup.get(serviceUrl)\n              });\n            }\n            await this._refreshVersionList(serviceUrl);\n          });\n          break;\n        }\n      case \"editVersion\":\n        {\n          const versionPropertiesFlow = this._createVersionPropertiesFlowItem(serviceUrl, versionInfo);\n          flowElement.appendChild(versionPropertiesFlow);\n          break;\n        }\n    }\n  }\n  async _refreshVersionList(serviceUrl) {\n    const {\n      flowElement,\n      viewModel\n    } = this;\n    if (flowElement) {\n      const versionInfos = await viewModel.getVersionInfos(serviceUrl);\n      const serviceItemElements = flowElement.getElementsByTagName(\"arcgis-version-management-service-item\");\n      for (const serviceItemElement of serviceItemElements) {\n        if (serviceItemElement.serviceItemElementProps.serviceUrl === serviceUrl) {\n          serviceItemElement.serviceItemElementProps = {\n            ...serviceItemElement.serviceItemElementProps,\n            versionInfos\n          };\n        }\n      }\n      const versionListElement = flowElement.getElementsByTagName(\"arcgis-version-management-version-list\")[0];\n      if (versionListElement) {\n        versionListElement.versionListElementProps = {\n          ...versionListElement.versionListElementProps,\n          currentVersionIdentifier: viewModel.versioningStateLookup.get(serviceUrl).currentVersionInfo.versionIdentifier,\n          versionInfos\n        };\n      }\n    }\n  }\n  _removeVersionListFlowItem(flowElement) {\n    for (const childNode of flowElement.childNodes) {\n      if (childNode.nodeName.toUpperCase() === \"ARCGIS-VERSION-MANAGEMENT-VERSION-LIST\") {\n        flowElement.removeChild(childNode);\n      }\n      if (childNode.nodeName.toUpperCase() === \"CALCITE-FLOW-ITEM\") {\n        childNode.hidden = false;\n      }\n    }\n  }\n  _removeVersionPropertiesFlowItem(flowElement) {\n    for (const childNode of flowElement.childNodes) {\n      if (childNode.nodeName.toUpperCase() === \"ARCGIS-VERSION-MANAGEMENT-VERSION-PROPERTIES\") {\n        flowElement.removeChild(childNode);\n      }\n      if (childNode.nodeName.toUpperCase() === \"ARCGIS-VERSION-MANAGEMENT-VERSION-LIST\") {\n        childNode.getElementsByTagName(\"calcite-flow-item\")[0].hidden = false;\n      }\n    }\n  }\n  static get assetsDirs() {\n    return [\"assets\"];\n  }\n  get el() {\n    return getElement(this);\n  }\n};\nArcgisVersionManagement.style = ArcgisVersionManagementStyle0;\nexport { ArcgisVersionManagement as arcgis_version_management };"],
  "mappings": "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",
  "names": ["flowElement"]
}
