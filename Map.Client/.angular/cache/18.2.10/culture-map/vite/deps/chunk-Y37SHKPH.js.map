{
  "version": 3,
  "sources": ["../../../../../../node_modules/@arcgis/core/core/workers/WorkerHandle.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { remove as e } from \"../arrayUtils.js\";\nimport { makeHandle as t } from \"../handleUtils.js\";\nimport s from \"../Logger.js\";\nimport { throwIfAborted as r } from \"../promiseUtils.js\";\nimport { open as i } from \"./workers.js\";\nclass h {\n  constructor(e, t, r, h, o = {}) {\n    this._mainMethod = t, this._transferLists = r, this._listeners = [], this._promise = i(e, {\n      ...o,\n      schedule: h\n    }).then(e => {\n      if (void 0 === this._thread) {\n        this._thread = e, this._promise = null, o.hasInitialize && this.broadcast({}, \"initialize\");\n        for (const e of this._listeners) this._connectListener(e);\n      } else e.close();\n    }), this._promise.catch(t => s.getLogger(\"esri.core.workers.WorkerHandle\").error(`Failed to initialize ${e} worker: ${t}`));\n  }\n  on(s, r) {\n    const i = {\n      removed: !1,\n      eventName: s,\n      callback: r,\n      threadHandle: null\n    };\n    return this._listeners.push(i), this._connectListener(i), t(() => {\n      i.removed = !0, e(this._listeners, i), this._thread && null != i.threadHandle && i.threadHandle.remove();\n    });\n  }\n  destroy() {\n    this._thread && (this._thread.close(), this._thread = null), this._promise = null, this._listeners.length = 0, this._transferLists = {};\n  }\n  invoke(e, t) {\n    return this.invokeMethod(this._mainMethod, e, t);\n  }\n  invokeMethod(e, t, s) {\n    if (this._thread) {\n      const r = this._transferLists[e],\n        i = r ? r(t) : [];\n      return this._thread.invoke(e, t, {\n        transferList: i,\n        signal: s\n      });\n    }\n    return this._promise ? this._promise.then(() => (r(s), this.invokeMethod(e, t, s))) : Promise.reject(null);\n  }\n  broadcast(e, t) {\n    return this._thread ? Promise.all(this._thread.broadcast(t, e)).then(() => {}) : this._promise ? this._promise.then(() => this.broadcast(e, t)) : Promise.reject();\n  }\n  get promise() {\n    return this._promise;\n  }\n  _connectListener(e) {\n    this._thread && this._thread.on(e.eventName, e.callback).then(t => {\n      e.removed || (e.threadHandle = t);\n    });\n  }\n}\nexport { h as WorkerHandle };"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;AASA,IAAM,IAAN,MAAQ;AAAA,EACN,YAAYA,IAAG,GAAG,GAAGC,IAAG,IAAI,CAAC,GAAG;AAC9B,SAAK,cAAc,GAAG,KAAK,iBAAiB,GAAG,KAAK,aAAa,CAAC,GAAG,KAAK,WAAW,EAAED,IAAG,iCACrF,IADqF;AAAA,MAExF,UAAUC;AAAA,IACZ,EAAC,EAAE,KAAK,CAAAD,OAAK;AACX,UAAI,WAAW,KAAK,SAAS;AAC3B,aAAK,UAAUA,IAAG,KAAK,WAAW,MAAM,EAAE,iBAAiB,KAAK,UAAU,CAAC,GAAG,YAAY;AAC1F,mBAAWA,MAAK,KAAK,WAAY,MAAK,iBAAiBA,EAAC;AAAA,MAC1D,MAAO,CAAAA,GAAE,MAAM;AAAA,IACjB,CAAC,GAAG,KAAK,SAAS,MAAM,CAAAE,OAAK,EAAE,UAAU,gCAAgC,EAAE,MAAM,wBAAwBF,EAAC,YAAYE,EAAC,EAAE,CAAC;AAAA,EAC5H;AAAA,EACA,GAAGC,IAAG,GAAG;AACP,UAAM,IAAI;AAAA,MACR,SAAS;AAAA,MACT,WAAWA;AAAA,MACX,UAAU;AAAA,MACV,cAAc;AAAA,IAChB;AACA,WAAO,KAAK,WAAW,KAAK,CAAC,GAAG,KAAK,iBAAiB,CAAC,GAAG,EAAE,MAAM;AAChE,QAAE,UAAU,MAAI,EAAE,KAAK,YAAY,CAAC,GAAG,KAAK,WAAW,QAAQ,EAAE,gBAAgB,EAAE,aAAa,OAAO;AAAA,IACzG,CAAC;AAAA,EACH;AAAA,EACA,UAAU;AACR,SAAK,YAAY,KAAK,QAAQ,MAAM,GAAG,KAAK,UAAU,OAAO,KAAK,WAAW,MAAM,KAAK,WAAW,SAAS,GAAG,KAAK,iBAAiB,CAAC;AAAA,EACxI;AAAA,EACA,OAAOH,IAAG,GAAG;AACX,WAAO,KAAK,aAAa,KAAK,aAAaA,IAAG,CAAC;AAAA,EACjD;AAAA,EACA,aAAaA,IAAG,GAAGG,IAAG;AACpB,QAAI,KAAK,SAAS;AAChB,YAAM,IAAI,KAAK,eAAeH,EAAC,GAC7B,IAAI,IAAI,EAAE,CAAC,IAAI,CAAC;AAClB,aAAO,KAAK,QAAQ,OAAOA,IAAG,GAAG;AAAA,QAC/B,cAAc;AAAA,QACd,QAAQG;AAAA,MACV,CAAC;AAAA,IACH;AACA,WAAO,KAAK,WAAW,KAAK,SAAS,KAAK,OAAO,EAAEA,EAAC,GAAG,KAAK,aAAaH,IAAG,GAAGG,EAAC,EAAE,IAAI,QAAQ,OAAO,IAAI;AAAA,EAC3G;AAAA,EACA,UAAUH,IAAG,GAAG;AACd,WAAO,KAAK,UAAU,QAAQ,IAAI,KAAK,QAAQ,UAAU,GAAGA,EAAC,CAAC,EAAE,KAAK,MAAM;AAAA,IAAC,CAAC,IAAI,KAAK,WAAW,KAAK,SAAS,KAAK,MAAM,KAAK,UAAUA,IAAG,CAAC,CAAC,IAAI,QAAQ,OAAO;AAAA,EACnK;AAAA,EACA,IAAI,UAAU;AACZ,WAAO,KAAK;AAAA,EACd;AAAA,EACA,iBAAiBA,IAAG;AAClB,SAAK,WAAW,KAAK,QAAQ,GAAGA,GAAE,WAAWA,GAAE,QAAQ,EAAE,KAAK,OAAK;AACjE,MAAAA,GAAE,YAAYA,GAAE,eAAe;AAAA,IACjC,CAAC;AAAA,EACH;AACF;",
  "names": ["e", "h", "t", "s"]
}
