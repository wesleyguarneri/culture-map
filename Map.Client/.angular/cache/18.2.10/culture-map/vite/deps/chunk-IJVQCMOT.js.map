{
  "version": 3,
  "sources": ["../../../../../../node_modules/@arcgis/core/portal/support/geometryServiceUtils.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport r from \"../../config.js\";\nimport e from \"../../core/Error.js\";\nimport t from \"../Portal.js\";\nimport { project as o } from \"../../rest/geometryService/project.js\";\nimport i from \"../../rest/support/ProjectParameters.js\";\nasync function n(o = null, i) {\n  if (r.geometryServiceUrl) return r.geometryServiceUrl;\n  if (!o) throw new e(\"internal:geometry-service-url-not-configured\");\n  let n;\n  n = \"portal\" in o ? o.portal || t.getDefault() : o, await n.load({\n    signal: i\n  });\n  const a = n.helperServices?.geometry?.url;\n  if (!a) throw new e(\"internal:geometry-service-url-not-configured\");\n  return a;\n}\nasync function a(r, t, a = null, l) {\n  const c = await n(a, l),\n    s = new i({\n      geometries: [r],\n      outSpatialReference: t\n    }),\n    m = await o(c, s, {\n      signal: l\n    });\n  if (m && Array.isArray(m) && 1 === m.length) return m[0];\n  throw new e(\"internal:geometry-service-projection-failed\");\n}\nexport { n as getGeometryServiceURL, a as projectGeometry };"],
  "mappings": ";;;;;;;;;;;;;;;;AASA,SAAeA,GAAE,IAAI,MAAM,GAAG;AAAA;AAC5B,QAAI,EAAE,mBAAoB,QAAO,EAAE;AACnC,QAAI,CAAC,EAAG,OAAM,IAAIC,GAAE,8CAA8C;AAClE,QAAID;AACJ,IAAAA,KAAI,YAAY,IAAI,EAAE,UAAU,EAAE,WAAW,IAAI,GAAG,MAAMA,GAAE,KAAK;AAAA,MAC/D,QAAQ;AAAA,IACV,CAAC;AACD,UAAME,KAAIF,GAAE,gBAAgB,UAAU;AACtC,QAAI,CAACE,GAAG,OAAM,IAAID,GAAE,8CAA8C;AAClE,WAAOC;AAAA,EACT;AAAA;AACA,SAAe,EAAE,GAAG,GAAGA,KAAI,MAAM,GAAG;AAAA;AAClC,UAAM,IAAI,MAAMF,GAAEE,IAAG,CAAC,GACpBD,KAAI,IAAI,EAAE;AAAA,MACR,YAAY,CAAC,CAAC;AAAA,MACd,qBAAqB;AAAA,IACvB,CAAC,GACD,IAAI,MAAM,EAAE,GAAGA,IAAG;AAAA,MAChB,QAAQ;AAAA,IACV,CAAC;AACH,QAAI,KAAK,MAAM,QAAQ,CAAC,KAAK,MAAM,EAAE,OAAQ,QAAO,EAAE,CAAC;AACvD,UAAM,IAAIA,GAAE,6CAA6C;AAAA,EAC3D;AAAA;",
  "names": ["n", "s", "a"]
}
