{
  "version": 3,
  "sources": ["../../../../../../node_modules/@arcgis/core/layers/support/rasterDatasets/BaseRaster.js", "../../../../../../node_modules/@arcgis/core/layers/support/rasterFunctions/clipUtils.js", "../../../../../../node_modules/@arcgis/core/layers/support/rasterDatasets/FunctionRaster.js", "../../../../../../node_modules/@arcgis/core/layers/mixins/ImageryTileMixin.js", "../../../../../../node_modules/@arcgis/core/layers/support/rasterDatasets/covJSONParser.js", "../../../../../../node_modules/@arcgis/core/layers/support/rasterDatasets/InMemoryRaster.js", "../../../../../../node_modules/@arcgis/core/layers/support/rasterDatasets/CovJSONRaster.js", "../../../../../../node_modules/@arcgis/core/layers/support/rasterDatasets/xmlUtilities.js", "../../../../../../node_modules/@arcgis/core/layers/support/rasterDatasets/pamParser.js", "../../../../../../node_modules/@arcgis/core/layers/support/rasterDatasets/ImageAuxRaster.js", "../../../../../../node_modules/@arcgis/core/layers/support/rasterDatasets/ImageServerRaster.js", "../../../../../../node_modules/@arcgis/core/layers/support/rasterDatasets/MRFRaster.js", "../../../../../../node_modules/@arcgis/core/layers/support/rasterDatasets/DBFParser.js", "../../../../../../node_modules/@arcgis/core/layers/support/rasterDatasets/TIFFRaster.js", "../../../../../../node_modules/@arcgis/core/layers/support/rasterDatasets/RasterFactory.js", "../../../../../../node_modules/@arcgis/core/layers/ImageryTileLayer.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { _ as e } from \"../../../chunks/tslib.es6.js\";\nimport \"../../../geometry.js\";\nimport t from \"../../../request.js\";\nimport i from \"../../../core/Error.js\";\nimport { JSONSupport as o } from \"../../../core/JSONSupport.js\";\nimport r from \"../../../core/Logger.js\";\nimport { EsriPromiseMixin as n } from \"../../../core/Promise.js\";\nimport { onAbort as s } from \"../../../core/promiseUtils.js\";\nimport { property as l } from \"../../../core/accessorSupport/decorators/property.js\";\nimport { ensureClass as a } from \"../../../core/accessorSupport/ensureType.js\";\nimport \"../../../core/RandomLCG.js\";\nimport \"../../../core/has.js\";\nimport { subclass as c } from \"../../../core/accessorSupport/decorators/subclass.js\";\nimport { sanitizeUrl as m } from \"../arcgisLayerUrl.js\";\nimport { url as f } from \"../commonProperties.js\";\nimport u from \"../DimensionalDefinition.js\";\nimport h from \"../LOD.js\";\nimport p from \"../RasterStorageInfo.js\";\nimport d from \"../TileInfo.js\";\nimport { isMultiSliceOrRangeDefinition as x, getSliceIndex as y, createSlices as g, getSliceIds as I } from \"./multidimensionalUtils.js\";\nimport { getRasterId as R, getBlock as w, putBlock as S, deleteBlock as k, decreaseRefCount as v } from \"./RawBlockCache.js\";\nimport { convertNoDataToMask as T } from \"../rasterFormats/pixelRangeUtils.js\";\nimport { decode as b } from \"../rasterFormats/RasterCodec.js\";\nimport { mosaic as P, approximateTransform as B, getLocalArithmeticNorthRotations as M } from \"../rasterFunctions/pixelUtils.js\";\nimport { load as _, getWorldWidth as C, projectPoint as W, snapPyramid as j, shiftExtent as z, getWorldWrapCount as H, projectExtent as L, getProjectionOffsetGrid as E, getRasterDatasetAlignmentInfo as D, projectResolution as F } from \"../rasterFunctions/rasterProjectionHelper.js\";\nimport { convertToLocalDirections as O, uvComponentToVector as A } from \"../rasterFunctions/vectorFieldUtils.js\";\nimport { QueueProcessor as G } from \"../../../views/support/QueueProcessor.js\";\nimport q from \"../../../geometry/Extent.js\";\nimport J from \"../../../geometry/Point.js\";\nimport N from \"../../../geometry/SpatialReference.js\";\nconst V = 8,\n  U = 256;\nlet $ = 0,\n  Q = class extends n(o) {\n    constructor() {\n      super(...arguments), this._tileFetchQueue = new G({\n        concurrency: 32,\n        process: (e, t) => this._fetchRawTile(e.pyramidLevel, e.row, e.col, {\n          ...e.options,\n          signal: t\n        })\n      }), this.datasetName = null, this.datasetFormat = null, this.hasUniqueSourceStorageInfo = !0, this.rasterInfo = null, this.ioConfig = {\n        sampling: \"closest\"\n      };\n    }\n    async init() {\n      const e = _();\n      this.addResolvingPromise(e), await this.when();\n    }\n    normalizeCtorArgs(e) {\n      return e?.ioConfig && (e = {\n        ...e,\n        ioConfig: {\n          resolution: null,\n          bandIds: null,\n          sampling: \"closest\",\n          tileInfo: d.create(),\n          ...e.ioConfig\n        }\n      }), e;\n    }\n    get _isGlobalWrappableSource() {\n      const {\n          rasterInfo: e\n        } = this,\n        t = C(e.spatialReference);\n      return null != t && e.extent.width >= t / 2;\n    }\n    get _hasNoneOrGCSShiftTransform() {\n      const {\n        transform: e\n      } = this.rasterInfo;\n      return null == e || \"gcs-shift\" === e.type;\n    }\n    set rasterJobHandler(e) {\n      this._set(\"rasterJobHandler\", e), \"Function\" === this.datasetFormat && this.primaryRasters?.rasters?.forEach(t => t.rasterJobHandler = e);\n    }\n    get rasterId() {\n      return this.url || \"rasterId-\" + $++;\n    }\n    set url(e) {\n      this._set(\"url\", m(e, r.getLogger(this)));\n    }\n    async open(e) {\n      throw new i(\"BaseRaster:open-not-implemented\", \"open() is not implemented\");\n    }\n    async fetchTile(e, t, i, o = {}) {\n      const r = o.tileInfo || this.rasterInfo.storageInfo.tileInfo,\n        n = this.getTileExtentFromTileInfo(e, t, i, r);\n      return o = {\n        noClip: !0,\n        ...o\n      }, this.fetchPixels(n, r.size[0], r.size[1], o);\n    }\n    async identify(e, t = {}) {\n      e = a(J, e).clone().normalize();\n      const {\n          multidimensionalDefinition: i,\n          timeExtent: o\n        } = t,\n        {\n          rasterInfo: r\n        } = this,\n        {\n          hasMultidimensionalTranspose: n,\n          multidimensionalInfo: s\n        } = r;\n      let {\n        transposedVariableName: l\n      } = t;\n      const c = null != s && n && (null != o || x(i));\n      if (c && !l) {\n        l = null != i && i.length > 0 ? i[0].variableName ?? void 0 : s.variables[0].name, t = {\n          ...t,\n          transposedVariableName: l\n        };\n      }\n      t = this._getRequestOptionsWithSliceId(t);\n      const {\n          spatialReference: m,\n          extent: f\n        } = r,\n        {\n          datumTransformation: u\n        } = t;\n      let h = W(e, m, u);\n      if (!f.intersects(h)) return {\n        location: h,\n        value: null\n      };\n      if (null != r.transform) {\n        const e = r.transform.inverseTransform(h);\n        if (!r.nativeExtent.intersects(e)) return {\n          location: e,\n          value: null\n        };\n        h = e;\n      }\n      let p = 0;\n      const d = null != l && null != s && r.hasMultidimensionalTranspose;\n      if (\"Function\" === this.datasetFormat) {\n        const e = this.primaryRasters.rasters[0];\n        if (d) return e.identify(h, t);\n        const {\n            pixelSize: o\n          } = r,\n          n = 3,\n          s = o.x * n / 2,\n          l = o.y * n / 2,\n          a = new q({\n            xmin: h.x - s,\n            xmax: h.x + s,\n            ymin: h.y - l,\n            ymax: h.y + l,\n            spatialReference: m\n          }),\n          c = {\n            interpolation: \"nearest\",\n            multidimensionalDefinition: i,\n            sliceId: t.sliceId\n          },\n          {\n            pixelBlock: f\n          } = await e.fetchPixels(a, n, n, c),\n          {\n            pixelBlock: u\n          } = await this.fetchPixels(a, n, n, c);\n        if (null == f) return {\n          location: h,\n          value: null\n        };\n        const p = Math.floor(n * n * .5),\n          x = !f.mask || f.mask[p] ? f.pixels.map(e => e[p]) : null;\n        let y;\n        return null != u && (y = !u.mask || u.mask[p] ? u.pixels.map(e => e[p]) : void 0), {\n          location: h,\n          value: x,\n          processedValue: y,\n          pyramidLevel: 0\n        };\n      }\n      if (!d) if (t.srcResolution) {\n        p = j(t.srcResolution, r, this.ioConfig.sampling).pyramidLevel;\n      } else if (p = await this.computeBestPyramidLevelForLocation(e, t), null == p) return {\n        location: h,\n        value: null\n      };\n      const y = this.identifyPixelLocation(h, p, null, d);\n      if (null === y) return {\n        location: h,\n        value: null\n      };\n      const {\n          row: g,\n          col: I,\n          rowOffset: k,\n          colOffset: v,\n          blockWidth: T\n        } = y,\n        b = l ?? t.sliceId,\n        P = R(this.rasterId, b),\n        B = `${p}/${g}/${I}`;\n      let M = w(P, null, B);\n      null == M && (M = this.fetchRawTile(p, g, I, t), S(P, null, B, M));\n      const _ = await M;\n      if (!_?.pixels?.length) return {\n        location: h,\n        value: null\n      };\n      const C = k * T + v;\n      return this._processIdentifyResult(_, {\n        srcLocation: h,\n        position: C,\n        pyramidLevel: p,\n        useTransposedTile: !!d,\n        requestSomeSlices: c,\n        identifyOptions: t\n      });\n    }\n    async fetchPixels(e, t, i, o = {}) {\n      e = z(e), o = this._getRequestOptionsWithSliceId(o);\n      const {\n        _hasNoneOrGCSShiftTransform: r\n      } = this;\n      if (o.requestRawData && r) return this._fetchPixels(e, t, i, o);\n      const n = C(e.spatialReference),\n        s = H(e);\n      if (null == n || 0 === s || 1 === s && this._isGlobalWrappableSource && r) return this._fetchPixels(e, t, i, o);\n      if (s >= 3) return {\n        extent: e,\n        pixelBlock: null\n      };\n      const l = [],\n        {\n          xmin: a,\n          xmax: c\n        } = e,\n        m = Math.round(n / (c - a) * t),\n        f = m - Math.round((n / 2 - a) / (c - a) * t);\n      let u = 0;\n      const h = [];\n      for (let y = 0; y <= s; y++) {\n        const r = new q({\n            xmin: 0 === y ? a : -n / 2,\n            xmax: y === s ? c - n * y : n / 2,\n            ymin: e.ymin,\n            ymax: e.ymax,\n            spatialReference: e.spatialReference\n          }),\n          p = 0 === y ? m - f : y === s ? t - u : m;\n        u += p, h.push(p);\n        const d = o.disableWrapAround && y > 0 ? null : this._fetchPixels(r, p, i, o);\n        l.push(d);\n      }\n      const p = (await Promise.all(l)).map(e => e?.pixelBlock);\n      let d = null;\n      const x = {\n        width: t,\n        height: i\n      };\n      if (this.rasterJobHandler) {\n        d = (await this.rasterJobHandler.mosaicAndTransform({\n          srcPixelBlocks: p,\n          srcMosaicSize: x,\n          destDimension: null,\n          coefs: null,\n          sampleSpacing: null,\n          interpolation: \"nearest\",\n          alignmentInfo: null,\n          blockWidths: h\n        }, o)).pixelBlock;\n      } else d = P(p, x, {\n        blockWidths: h\n      });\n      return {\n        extent: e,\n        srcExtent: L(e, this.rasterInfo.spatialReference, o.datumTransformation),\n        pixelBlock: d\n      };\n    }\n    async fetchRawPixels(e, t, i, o = {}) {\n      t = {\n        x: Math.floor(t.x),\n        y: Math.floor(t.y)\n      };\n      const r = await this._fetchRawTiles(e, t, i, o),\n        {\n          nativeExtent: n,\n          nativePixelSize: s,\n          storageInfo: l\n        } = this.rasterInfo,\n        a = 2 ** e,\n        c = s.x * a,\n        m = s.y * a,\n        f = new q({\n          xmin: n.xmin + c * t.x,\n          xmax: n.xmin + c * (t.x + i.width - 1),\n          ymin: n.ymax - m * (t.y + i.height - 1),\n          ymax: n.ymax - m * t.y,\n          spatialReference: n.spatialReference\n        });\n      if (!r) return {\n        extent: f,\n        srcExtent: f,\n        pixelBlock: null\n      };\n      const {\n        pixelBlocks: u,\n        mosaicSize: h\n      } = r;\n      if (1 === u.length && null != u[0] && u[0].width === i.width && u[0].height === i.height) return {\n        extent: f,\n        srcExtent: f,\n        pixelBlock: r.pixelBlocks[0]\n      };\n      const p = e > 0 ? l.pyramidBlockWidth : l.blockWidth,\n        d = e > 0 ? l.pyramidBlockHeight : l.blockHeight,\n        x = {\n          x: t.x % p,\n          y: t.y % d\n        };\n      let y;\n      if (this.rasterJobHandler) {\n        y = (await this.rasterJobHandler.mosaicAndTransform({\n          srcPixelBlocks: u,\n          srcMosaicSize: h,\n          destDimension: i,\n          clipOffset: x,\n          clipSize: i,\n          coefs: null,\n          sampleSpacing: null,\n          interpolation: o.interpolation,\n          alignmentInfo: null,\n          blockWidths: null\n        }, o)).pixelBlock;\n      } else y = P(u, h, {\n        clipOffset: x,\n        clipSize: i\n      });\n      return {\n        extent: f,\n        srcExtent: f,\n        pixelBlock: y\n      };\n    }\n    fetchRawTile(e, t, o, r) {\n      throw new i(\"BaseRaster:read-not-implemented\", \"fetchRawTile() is not implemented\");\n    }\n    computeExtent(e) {\n      return L(this.rasterInfo.extent, e);\n    }\n    decodePixelBlock(e, t) {\n      return !this.rasterJobHandler || t.useCanvas ? b(e, t) : this.rasterJobHandler.decode({\n        data: e,\n        options: t\n      });\n    }\n    async request(e, i, o = 0) {\n      const {\n          customFetchParameters: r\n        } = this.ioConfig,\n        {\n          range: n,\n          query: s,\n          headers: l\n        } = i;\n      o = o ?? i.retryCount ?? this.ioConfig.retryCount;\n      const a = n ? {\n        Range: `bytes=${n.from}-${n.to}`\n      } : null;\n      try {\n        return await t(e, {\n          ...i,\n          query: {\n            ...s,\n            ...r\n          },\n          headers: {\n            ...l,\n            ...a\n          }\n        });\n      } catch (c) {\n        if (o > 0) return o--, this.request(e, i, o);\n        throw c;\n      }\n    }\n    getSliceIndex(e) {\n      const {\n        multidimensionalInfo: t\n      } = this.rasterInfo;\n      return null == t || null == e || 0 === e.length ? null : y(e, t);\n    }\n    getTileExtentFromTileInfo(e, t, i, o) {\n      const r = o.lodAt(e);\n      return this.getTileExtent({\n        x: r.resolution,\n        y: r.resolution\n      }, t, i, o.origin, o.spatialReference, o.size);\n    }\n    updateTileInfo() {\n      const {\n          storageInfo: e,\n          spatialReference: t,\n          extent: i,\n          pixelSize: o\n        } = this.rasterInfo,\n        {\n          pyramidResolutions: r\n        } = e;\n      if (!e.tileInfo) {\n        const n = [],\n          s = e.maximumPyramidLevel || 0;\n        let l = (o.x + o.y) / 2,\n          a = 1 / .0254 * 96 * l;\n        for (let e = 0; e <= s && (n.unshift(new h({\n          level: s - e,\n          resolution: l,\n          scale: a\n        })), e !== s); e++) if (r) {\n          const t = (r[e].x + r[e].y) / 2;\n          a *= t / l, l = t;\n        } else l *= 2, a *= 2;\n        const c = new J({\n          x: i.xmin,\n          y: i.ymax,\n          spatialReference: t\n        });\n        e.tileInfo = new d({\n          origin: c,\n          size: [e.blockWidth, e.blockHeight],\n          spatialReference: t,\n          lods: n\n        }), e.isVirtualTileInfo = !0;\n      }\n    }\n    createRemoteDatasetStorageInfo(e, t = 512, i = 512, o) {\n      const {\n          width: r,\n          height: n,\n          nativeExtent: s,\n          pixelSize: l,\n          spatialReference: a\n        } = e,\n        c = new J({\n          x: s.xmin,\n          y: s.ymax,\n          spatialReference: a\n        });\n      null == o && (o = Math.max(0, Math.round(Math.log(Math.max(r, n)) / Math.LN2 - 8)));\n      const m = this.computeBlockBoundary(s, 512, 512, {\n        x: s.xmin,\n        y: s.ymax\n      }, [l], o);\n      e.storageInfo = new p({\n        blockWidth: t,\n        blockHeight: i,\n        pyramidBlockWidth: t,\n        pyramidBlockHeight: i,\n        origin: c,\n        firstPyramidLevel: 1,\n        maximumPyramidLevel: o,\n        blockBoundary: m\n      });\n    }\n    async computeBestPyramidLevelForLocation(e, t = {}) {\n      return 0;\n    }\n    computeBlockBoundary(e, t, i, o, r, n = 0, s = 2) {\n      if (1 === r.length && n > 0) {\n        r = [...r];\n        let {\n          x: e,\n          y: t\n        } = r[0];\n        for (let i = 0; i < n; i++) e *= s, t *= s, r.push({\n          x: e,\n          y: t\n        });\n      }\n      const l = [],\n        {\n          x: a,\n          y: c\n        } = o;\n      for (let m = 0; m < r.length; m++) {\n        const {\n          x: o,\n          y: n\n        } = r[m];\n        l.push({\n          minCol: Math.floor((e.xmin - a + .1 * o) / t / o),\n          maxCol: Math.floor((e.xmax - a - .1 * o) / t / o),\n          minRow: Math.floor((c - e.ymax + .1 * n) / i / n),\n          maxRow: Math.floor((c - e.ymin - .1 * n) / i / n)\n        });\n      }\n      return l;\n    }\n    getPyramidPixelSize(e) {\n      const {\n          nativePixelSize: t\n        } = this.rasterInfo,\n        {\n          pyramidResolutions: i,\n          pyramidScalingFactor: o\n        } = this.rasterInfo.storageInfo;\n      if (0 === e) return t;\n      if (null != i && i.length) return i[e - 1];\n      const r = o ** e;\n      return {\n        x: t.x * r,\n        y: t.y * r\n      };\n    }\n    identifyPixelLocation(e, t, i, o) {\n      const {\n          spatialReference: r,\n          nativeExtent: n,\n          storageInfo: s\n        } = this.rasterInfo,\n        {\n          maximumPyramidLevel: l,\n          origin: a,\n          transposeInfo: c\n        } = s,\n        m = o && null != c ? c.tileSize[0] : s.blockWidth,\n        f = o && null != c ? c.tileSize[1] : s.blockHeight,\n        u = W(e, r, i);\n      if (!n.intersects(u)) return null;\n      if (t < 0 || t > l) return null;\n      const h = this.getPyramidPixelSize(t),\n        {\n          x: p,\n          y: d\n        } = h,\n        x = (a.y - u.y) / d / f,\n        y = (u.x - a.x) / p / m,\n        g = Math.min(f - 1, Math.floor((x - Math.floor(x)) * f)),\n        I = Math.min(m - 1, Math.floor((y - Math.floor(y)) * m));\n      return {\n        pyramidLevel: t,\n        row: Math.floor(x),\n        col: Math.floor(y),\n        rowOffset: g,\n        colOffset: I,\n        blockWidth: m,\n        srcLocation: u\n      };\n    }\n    getTileExtent(e, t, i, o, r, n) {\n      const [s, l] = n,\n        a = o.x + i * s * e.x,\n        c = a + s * e.x,\n        m = o.y - t * l * e.y,\n        f = m - l * e.y;\n      return new q({\n        xmin: a,\n        xmax: c,\n        ymin: f,\n        ymax: m,\n        spatialReference: r\n      });\n    }\n    getBlockWidthHeight(e) {\n      return {\n        blockWidth: e > 0 ? this.rasterInfo.storageInfo.pyramidBlockWidth : this.rasterInfo.storageInfo.blockWidth,\n        blockHeight: e > 0 ? this.rasterInfo.storageInfo.pyramidBlockHeight : this.rasterInfo.storageInfo.blockHeight\n      };\n    }\n    isBlockOutside(e, t, i) {\n      const o = this.rasterInfo.storageInfo.blockBoundary[e];\n      return !o || o.maxRow < t || o.maxCol < i || o.minRow > t || o.minCol > i;\n    }\n    updateImageSpaceRasterInfo(e) {\n      const {\n        extent: t,\n        pixelSize: i\n      } = e;\n      if (-.5 === t.xmin && .5 === t.ymax && 1 === i.x && 1 === i.y && null == e.transform) return;\n      const {\n          width: o,\n          height: r\n        } = e,\n        n = N.WebMercator;\n      e.spatialReference = n, e.extent = e.nativeExtent = new q({\n        xmin: -.5,\n        ymax: .5,\n        xmax: o - .5,\n        ymin: .5 - r,\n        spatialReference: n\n      }), e.isPseudoSpatialReference = !0, e.transform = null, e.pixelSize = new J({\n        x: 1,\n        y: 1,\n        spatialReference: n\n      });\n      const {\n        extent: s,\n        storageInfo: l\n      } = e;\n      if (l) {\n        l.origin = new J({\n          x: s.xmin,\n          y: s.ymax,\n          spatialReference: n\n        });\n        const {\n          pyramidResolutions: t,\n          tileInfo: o\n        } = l;\n        if (t && t.forEach(e => {\n          e.x /= i.x, e.y /= i.y;\n        }), o) {\n          o.origin = l.origin;\n          const t = (e.nativePixelSize.x + e.nativePixelSize.y) / 2;\n          o.lods.forEach((e, i) => {\n            e.resolution = t * 2 ** i, e.scale = 96 * e.resolution / .0254;\n          });\n        }\n      }\n    }\n    async _fetchPixels(e, t, i, o = {}) {\n      let r = H(e);\n      if (r >= 2) return {\n        extent: e,\n        pixelBlock: null\n      };\n      const n = this._getSourceDataInfo(e, t, i, o),\n        {\n          pyramidLevel: s,\n          srcResolution: l,\n          srcExtent: a,\n          srcWidth: c,\n          srcHeight: m,\n          ul: f\n        } = n;\n      if (0 === c || 0 === m) return {\n        extent: e,\n        srcExtent: a,\n        pixelBlock: null\n      };\n      const {\n          rasterInfo: u\n        } = this,\n        h = u.transform,\n        p = \"gcs-shift\" === h?.type,\n        d = null != C(e.spatialReference);\n      !p && d || (r = H(n.srcExtent, p));\n      const x = await this._fetchRawTiles(s, f, {\n        width: c,\n        height: m,\n        wrapCount: r\n      }, o);\n      if (!x) return {\n        extent: e,\n        srcExtent: a,\n        pixelBlock: null\n      };\n      const y = u.storageInfo,\n        g = s > 0 ? y.pyramidBlockWidth : y.blockWidth,\n        I = s > 0 ? y.pyramidBlockHeight : y.blockHeight;\n      let {\n        x: R,\n        y: w\n      } = u.pixelSize;\n      if (s > 0) {\n        const {\n          pyramidResolutions: e,\n          pyramidScalingFactor: t\n        } = y;\n        if (null != e && e[s - 1]) ({\n          x: R,\n          y: w\n        } = e[s - 1]);else {\n          const e = t ** s;\n          R *= e, w *= e;\n        }\n      }\n      const S = u.spatialReference,\n        k = new J({\n          x: R,\n          y: w,\n          spatialReference: S\n        }),\n        v = g === c && I === m && f.x % g == 0 && f.y % I == 0,\n        T = new J({\n          x: (e.xmax - e.xmin) / t,\n          y: (e.ymax - e.ymin) / i,\n          spatialReference: e.spatialReference\n        }),\n        b = !e.spatialReference.equals(S),\n        W = S.isGeographic ? 1e-9 : 1e-4,\n        {\n          datumTransformation: j\n        } = o;\n      if (!b && v && 1 === x.pixelBlocks.length && g === t && I === i && X(l, T, W)) return {\n        extent: e,\n        srcExtent: a,\n        srcTilePixelSize: k,\n        pixelBlock: x.pixelBlocks[0]\n      };\n      const z = d && null != C(a.spatialReference) && this._hasNoneOrGCSShiftTransform,\n        L = o.requestProjectedLocalDirections && this.rasterInfo.dataType.startsWith(\"vector\");\n      L && !this.rasterJobHandler && (await _());\n      const D = this.rasterJobHandler ? await this.rasterJobHandler.getProjectionOffsetGrid({\n        projectedExtent: e,\n        srcBufferExtent: x.extent,\n        pixelSize: T.toJSON(),\n        datumTransformation: j,\n        rasterTransform: h,\n        hasWrapAround: r > 0 || z,\n        isAdaptive: !1 !== this.ioConfig.optimizeProjectionAccuracy,\n        includeGCSGrid: L\n      }, o) : E({\n        projectedExtent: e,\n        srcBufferExtent: x.extent,\n        pixelSize: T,\n        datumTransformation: j,\n        rasterTransform: h,\n        hasWrapAround: r > 0 || z,\n        isAdaptive: !1,\n        includeGCSGrid: L\n      });\n      let F;\n      const A = !o.requestRawData,\n        G = {\n          rows: D.spacing[0],\n          cols: D.spacing[1]\n        },\n        q = this._hasNoneOrGCSShiftTransform ? this._getRasterTileAlignmentInfo(s, x.extent.xmin) : void 0,\n        {\n          pixelBlocks: N,\n          mosaicSize: V,\n          isPartiallyFilled: U\n        } = x;\n      let $ = null;\n      if (this.rasterJobHandler) {\n        const e = await this.rasterJobHandler.mosaicAndTransform({\n          srcPixelBlocks: N,\n          srcMosaicSize: V,\n          destDimension: A ? {\n            width: t,\n            height: i\n          } : null,\n          coefs: A ? D.coefficients : null,\n          sampleSpacing: A ? G : null,\n          projectDirections: L,\n          gcsGrid: L ? D.gcsGrid : null,\n          isUV: \"vector-uv\" === this.rasterInfo.dataType,\n          interpolation: o.interpolation,\n          alignmentInfo: q,\n          blockWidths: null\n        }, o);\n        ({\n          pixelBlock: F,\n          localNorthDirections: $\n        } = e);\n      } else {\n        const e = P(N, V, {\n          alignmentInfo: q\n        });\n        F = A ? B(e, {\n          width: t,\n          height: i\n        }, D.coefficients, G, o.interpolation) : e, L && D.gcsGrid && ($ = M({\n          width: t,\n          height: i\n        }, D.gcsGrid), F = O(F, this.rasterInfo.dataType, $));\n      }\n      return o.requestRawData || L ? {\n        extent: e,\n        srcExtent: a,\n        srcTilePixelSize: k,\n        pixelBlock: F,\n        transformGrid: D,\n        localNorthDirections: $,\n        isPartiallyFilled: U\n      } : {\n        extent: e,\n        srcExtent: a,\n        srcTilePixelSize: k,\n        pixelBlock: F\n      };\n    }\n    async _fetchRawTiles(e, t, i, o) {\n      const {\n          origin: r,\n          blockBoundary: n\n        } = this.rasterInfo.storageInfo,\n        {\n          blockWidth: s,\n          blockHeight: l\n        } = this.getBlockWidthHeight(e);\n      let {\n          x: a,\n          y: c\n        } = t,\n        {\n          width: m,\n          height: f,\n          wrapCount: u\n        } = i;\n      const h = this._getRasterTileAlignmentInfo(e, 0);\n      o.buffer && (a -= o.buffer.cols, c -= o.buffer.rows, m += 2 * o.buffer.cols, f += 2 * o.buffer.rows);\n      let p = 0,\n        d = 0,\n        x = 0;\n      if (u && null != h) {\n        ({\n          worldColumnCountFromOrigin: d,\n          originColumnOffset: x,\n          rightPadding: p\n        } = h);\n        d * h.blockWidth - p >= a + m && (p = 0);\n      }\n      const y = Math.floor(a / s),\n        g = Math.floor(c / l),\n        I = Math.floor((a + m + p - 1) / s),\n        R = Math.floor((c + f + p - 1) / l),\n        w = n[e];\n      if (!w) return null;\n      const {\n        minRow: S,\n        minCol: k,\n        maxCol: v,\n        maxRow: T\n      } = w;\n      if (0 === u && (R < S || I < k || g > T || y > v)) return null;\n      const b = new Array();\n      let P = !1;\n      const B = null == this.ioConfig.allowPartialFill ? o.allowPartialFill : this.ioConfig.allowPartialFill;\n      for (let H = g; H <= R; H++) for (let t = y; t <= I; t++) {\n        let i = t;\n        if (!o.disableWrapAround && u && null != h && d <= t && (i = t - d - x), H >= S && i >= k && T >= H && v >= i) {\n          const t = this._tileFetchQueue.push({\n            pyramidLevel: e,\n            row: H,\n            col: i,\n            options: o\n          }, {\n            signal: o.signal\n          });\n          B ? b.push(new Promise(e => {\n            t.then(t => e(t)).catch(() => {\n              P = !0, e(null);\n            });\n          })) : b.push(t);\n        } else b.push(Promise.resolve(null));\n      }\n      if (0 === b.length) return null;\n      const M = await Promise.all(b),\n        _ = {\n          height: (R - g + 1) * l,\n          width: (I - y + 1) * s\n        },\n        {\n          spatialReference: C\n        } = this.rasterInfo,\n        W = this.getPyramidPixelSize(e),\n        {\n          x: j,\n          y: z\n        } = W;\n      return {\n        extent: new q({\n          xmin: r.x + y * s * j,\n          xmax: r.x + (I + 1) * s * j,\n          ymin: r.y - (R + 1) * l * z,\n          ymax: r.y - g * l * z,\n          spatialReference: C\n        }),\n        pixelBlocks: M,\n        mosaicSize: _,\n        isPartiallyFilled: P\n      };\n    }\n    _fetchRawTile(e, t, i, o) {\n      const r = this.rasterInfo.storageInfo.blockBoundary[e];\n      if (!r) return Promise.resolve(null);\n      const {\n        minRow: n,\n        minCol: l,\n        maxCol: a,\n        maxRow: c\n      } = r;\n      if (t < n || i < l || t > c || i > a) return Promise.resolve(null);\n      const m = R(this.rasterId, o.sliceId),\n        f = `${e}/${t}/${i}`;\n      let u = w(m, o.registryId, f);\n      if (null == u) {\n        const r = new AbortController();\n        u = this.fetchRawTile(e, t, i, {\n          ...o,\n          signal: r.signal\n        }), S(m, o.registryId, f, u, r), u.catch(() => k(m, o.registryId, f));\n      }\n      return o.signal && s(o, () => {\n        v(m, o.registryId, f);\n      }), u;\n    }\n    _computeMagDirValues(e) {\n      const {\n        bandCount: t,\n        dataType: i\n      } = this.rasterInfo;\n      if (!(2 === t && \"vector-magdir\" === i || \"vector-uv\" === i) || 2 !== e?.length || !e[0]?.length) return null;\n      const o = e[0].length;\n      if (\"vector-magdir\" === i) {\n        const t = e[1].map(e => (e + 360) % 360);\n        return [e[0], t];\n      }\n      const [r, n] = e,\n        s = [],\n        l = [];\n      for (let a = 0; a < o; a++) {\n        const [e, t] = A([r[a], n[a]]);\n        s.push(e), l.push(t);\n      }\n      return [s, l];\n    }\n    _getRasterTileAlignmentInfo(e, t) {\n      return null == this._rasterTileAlignmentInfo && (this._rasterTileAlignmentInfo = D(this.rasterInfo)), null == this._rasterTileAlignmentInfo.pyramidsInfo ? null : {\n        startX: t,\n        halfWorldWidth: this._rasterTileAlignmentInfo.halfWorldWidth,\n        hasGCSSShiftTransform: this._rasterTileAlignmentInfo.hasGCSSShiftTransform,\n        ...this._rasterTileAlignmentInfo.pyramidsInfo[e]\n      };\n    }\n    _getSourceDataInfo(e, t, i, o = {}) {\n      const r = {\n        datumTransformation: o.datumTransformation,\n        pyramidLevel: 0,\n        pyramidResolution: null,\n        srcExtent: null,\n        srcHeight: 0,\n        srcResolution: null,\n        srcWidth: 0,\n        ul: {\n          x: 0,\n          y: 0\n        }\n      };\n      o.srcResolution && (r.srcResolution = o.srcResolution, this._updateSourceDataInfo(e, r));\n      const n = this.rasterInfo.storageInfo.maximumPyramidLevel || 0,\n        {\n          srcWidth: s,\n          srcHeight: l,\n          pyramidLevel: a\n        } = r,\n        c = s / t,\n        m = l / i,\n        f = a < n && c * m >= 16,\n        u = a === n && this._requireTooManySrcTiles(s, l, t, i);\n      if (f || u || 0 === s || 0 === l) {\n        const s = new J({\n          x: (e.xmax - e.xmin) / t,\n          y: (e.ymax - e.ymin) / i,\n          spatialReference: e.spatialReference\n        });\n        let l = F(s, this.rasterInfo.spatialReference, e, r.datumTransformation);\n        const u = !l || o.srcResolution && l.x + l.y < o.srcResolution.x + o.srcResolution.y;\n        if (f && o.srcResolution && u) {\n          const e = Math.round(Math.log(Math.max(c, m)) / Math.LN2) - 1;\n          if (n - a + 3 >= e) {\n            const t = 2 ** e;\n            l = {\n              x: o.srcResolution.x * t,\n              y: o.srcResolution.y * t\n            };\n          }\n        }\n        l && (r.srcResolution = l, this._updateSourceDataInfo(e, r));\n      }\n      return this._requireTooManySrcTiles(r.srcWidth, r.srcHeight, t, i) && (r.srcWidth = 0, r.srcHeight = 0), r;\n    }\n    _requireTooManySrcTiles(e, t, i, o) {\n      const {\n          tileInfo: r\n        } = this.rasterInfo.storageInfo,\n        n = Math.ceil(e / r.size[0]) * Math.ceil(t / r.size[1]),\n        s = e / i,\n        l = t / o,\n        a = Math.max(1, (i + o) / 1024);\n      return n >= U * a || s > V || l > V;\n    }\n    _updateSourceDataInfo(e, t) {\n      t.srcWidth = 0, t.srcHeight = 0;\n      const {\n          rasterInfo: i\n        } = this,\n        o = i.spatialReference,\n        {\n          srcResolution: r,\n          datumTransformation: n\n        } = t,\n        {\n          pyramidLevel: s,\n          pyramidResolution: l,\n          excessiveReading: a\n        } = j(r, i, this.ioConfig.sampling);\n      if (a) return;\n      let c = t.srcExtent || L(e, o, n);\n      if (null == c) return;\n      const m = i.transform;\n      m && (c = m.inverseTransform(c)), t.srcExtent = c;\n      const {\n          x: f,\n          y: u\n        } = i.storageInfo.origin,\n        h = Math.floor((c.xmin - f) / l.x + .1),\n        p = Math.floor((u - c.ymax) / l.y + .1),\n        d = Math.floor((c.xmax - f) / l.x - .1),\n        x = Math.floor((u - c.ymin) / l.y - .1),\n        y = c.width < .1 * l.x ? 0 : d - h + 1,\n        g = c.height < .1 * l.y ? 0 : x - p + 1;\n      t.pyramidLevel = s, t.pyramidResolution = l, t.srcWidth = y, t.srcHeight = g, t.ul = {\n        x: h,\n        y: p\n      };\n    }\n    _getRequestOptionsWithSliceId(e) {\n      return null != this.rasterInfo.multidimensionalInfo && null == e.sliceId && (e = {\n        ...e,\n        sliceId: this.getSliceIndex(e.multidimensionalDefinition)\n      }), e;\n    }\n    _processIdentifyResult(e, t) {\n      const {\n          srcLocation: i,\n          position: o,\n          pyramidLevel: r,\n          useTransposedTile: n\n        } = t,\n        s = e.pixels[0].length / e.width / e.height;\n      if (!(!e.mask || e.mask[o])) return {\n        location: i,\n        value: null\n      };\n      const {\n        multidimensionalInfo: l\n      } = this.rasterInfo;\n      if (null == l || !n) {\n        const t = e.pixels.map(e => e[o]),\n          n = {\n            location: i,\n            value: t,\n            pyramidLevel: r\n          },\n          s = this._computeMagDirValues(t.map(e => [e]));\n        return s?.length && (n.magdirValue = s.map(e => e[0])), n;\n      }\n      let a = e.pixels.map(e => e.slice(o * s, o * s + s)),\n        c = this._computeMagDirValues(a);\n      const {\n        requestSomeSlices: m,\n        identifyOptions: f\n      } = t;\n      let h = g(l, f.transposedVariableName);\n      if (m) {\n        const e = I(h, f.multidimensionalDefinition, f.timeExtent);\n        a = a.map(t => e.map(e => t[e])), c = c?.map(t => e.map(e => t[e])), h = e.map(e => h[e]);\n      }\n      const p = e.noDataValues || this.rasterInfo.noDataValue,\n        d = {\n          pixels: a,\n          pixelType: e.pixelType\n        };\n      let x;\n      null != p && (T(d, p), x = d.mask);\n      return {\n        location: i,\n        value: null,\n        dataSeries: h.map((e, t) => {\n          const i = {\n            value: 0 === x?.[t] ? null : a.map(e => e[t]),\n            multidimensionalDefinition: e.multidimensionalDefinition.map(e => new u({\n              ...e,\n              isSlice: !0\n            }))\n          };\n          return c?.length && (i.magdirValue = [c[0][t], c[1][t]]), i;\n        }),\n        pyramidLevel: r\n      };\n    }\n  };\nfunction X(e, t, i) {\n  return Math.abs(e.x - t.x) < i && Math.abs(e.y - t.y) < i;\n}\ne([l()], Q.prototype, \"_rasterTileAlignmentInfo\", void 0), e([l()], Q.prototype, \"_tileFetchQueue\", void 0), e([l({\n  readOnly: !0\n})], Q.prototype, \"_isGlobalWrappableSource\", null), e([l({\n  readOnly: !0\n})], Q.prototype, \"_hasNoneOrGCSShiftTransform\", null), e([l()], Q.prototype, \"rasterJobHandler\", null), e([l({\n  readOnly: !0\n})], Q.prototype, \"rasterId\", null), e([l(f)], Q.prototype, \"url\", null), e([l({\n  type: String,\n  json: {\n    write: !0\n  }\n})], Q.prototype, \"datasetName\", void 0), e([l({\n  type: String,\n  json: {\n    write: !0\n  }\n})], Q.prototype, \"datasetFormat\", void 0), e([l()], Q.prototype, \"hasUniqueSourceStorageInfo\", void 0), e([l()], Q.prototype, \"rasterInfo\", void 0), e([l()], Q.prototype, \"ioConfig\", void 0), e([l()], Q.prototype, \"sourceJSON\", void 0), Q = e([c(\"esri.layers.support.rasterDatasets.BaseRaster\")], Q);\nconst K = Q;\nexport { K as default };", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { getMetersPerUnitForSR as t } from \"../../../core/unitUtils.js\";\nimport e from \"../../../geometry/Extent.js\";\nimport i from \"../PixelBlock.js\";\nfunction n(e, i) {\n  if (e.spatialReference.equals(i)) return e;\n  const n = t(e.spatialReference),\n    a = t(i);\n  if (n === a) return e;\n  const h = n / a;\n  return {\n    x: e.x * h,\n    y: e.y * h\n  };\n}\nasync function a(t, e, n) {\n  if (\"extent\" === n.type) return o(t, e, n);\n  const {\n      width: a,\n      height: x\n    } = t,\n    l = new Uint8Array(a * x),\n    {\n      contains: m,\n      intersects: s\n    } = await import(\"../../../geometry/geometryEngine.js\");\n  return s(e, n) ? \"polyline\" === n.type ? r(t, e, n) : m(n, e) ? t : h(t, e, n) : new i({\n    pixelType: t.pixelType,\n    width: a,\n    height: x,\n    mask: l,\n    maskIsAlpha: !1,\n    pixels: [...t.pixels]\n  });\n}\nfunction h(t, e, n) {\n  if (!t) return t;\n  const {\n      width: a,\n      height: h\n    } = t,\n    o = e.width / a,\n    r = e.height / h,\n    {\n      xmin: x,\n      ymax: l\n    } = e;\n  let m;\n  if (\"extent\" === n.type) {\n    const t = (n.xmin - x) / o,\n      e = (n.xmax - x) / o,\n      i = (l - n.ymax) / r,\n      a = (l - n.ymin) / r;\n    m = [[[t, i], [t, a], [e, a], [e, i], [t, i]]];\n  } else m = n.rings.map(t => t.map(([t, e]) => [(t - x) / o, (l - e) / r]));\n  const s = document.createElement(\"canvas\");\n  s.width = a, s.height = h;\n  const p = s.getContext(\"2d\");\n  p.fillStyle = \"#f00\", p.beginPath(), m.forEach(t => {\n    p.moveTo(t[0][0], t[0][1]);\n    for (let e = 0; e < t.length; e++) p.lineTo(t[e][0], t[e][1]);\n    p.closePath();\n  }), p.fill();\n  const f = p.getImageData(0, 0, a, h).data,\n    y = t.mask,\n    c = a * h,\n    M = new Uint8Array(c);\n  for (let i = 0; i < c; i++) y && !y[i] || (M[i] = f[4 * i + 3] > 127 ? 255 : 0);\n  return new i({\n    pixelType: t.pixelType,\n    width: a,\n    height: h,\n    mask: M,\n    maskIsAlpha: !1,\n    pixels: [...t.pixels]\n  });\n}\nfunction o(t, e, n) {\n  const {\n      width: a,\n      height: h\n    } = t,\n    o = new Uint8Array(a * h),\n    r = e.width / a,\n    x = e.height / h;\n  if (n.width / r < .5 || n.height / x < .5) return new i({\n    pixelType: t.pixelType,\n    width: a,\n    height: h,\n    mask: o,\n    pixels: [...t.pixels]\n  });\n  const {\n      xmin: l,\n      xmax: m,\n      ymin: s,\n      ymax: p\n    } = e,\n    {\n      xmin: f,\n      xmax: y,\n      ymin: c,\n      ymax: M\n    } = n,\n    u = Math.max(l, f),\n    w = Math.min(m, y),\n    d = Math.max(s, c),\n    g = Math.min(p, M),\n    T = .5 * r,\n    k = .5 * x;\n  if (w - u < T || g - d < k || w < l + T || u > m - T || d > p - k || g < s + k) return new i({\n    pixelType: t.pixelType,\n    width: a,\n    height: h,\n    mask: o,\n    pixels: [...t.pixels]\n  });\n  const A = Math.max(0, (u - l) / r),\n    R = Math.min(a, Math.max(0, (w - l) / r)),\n    U = Math.max(0, (p - g) / x),\n    j = Math.min(h, Math.max(0, (p - d) / x)),\n    E = Math.round(A),\n    I = Math.round(R) - 1,\n    P = Math.round(U),\n    v = Math.round(j) - 1;\n  if (E === I && A % 1 > .5 && R % 1 < .5 || P === v && U % 1 > .5 && j % 1 < .5) return new i({\n    pixelType: t.pixelType,\n    width: a,\n    height: h,\n    mask: o,\n    pixels: [...t.pixels]\n  });\n  if (0 === E && 0 === P && I === a && v === h) return t;\n  const b = t.mask;\n  for (let i = P; i <= v; i++) for (let t = E; t <= I; t++) {\n    const e = i * a + t;\n    o[e] = b ? b[e] : 255;\n  }\n  return new i({\n    pixelType: t.pixelType,\n    width: a,\n    height: h,\n    mask: o,\n    pixels: [...t.pixels]\n  });\n}\nfunction r(t, e, n) {\n  const {\n      width: a,\n      height: h\n    } = t,\n    o = new Uint8Array(a * h),\n    r = e.width / a,\n    x = e.height / h,\n    {\n      xmin: l,\n      ymax: m\n    } = e,\n    {\n      paths: s\n    } = n,\n    p = t.mask;\n  for (let i = 0; i < s.length; i++) {\n    const t = s[i];\n    for (let e = 0; e < t.length - 1; e++) {\n      const [i, n] = t[e],\n        [s, f] = t[e + 1];\n      let y = Math.floor((m - n) / x),\n        c = Math.floor((m - f) / x);\n      if (c < y) {\n        const t = y;\n        y = c, c = t;\n      }\n      y = Math.max(0, y), c = Math.min(h - 1, c);\n      const M = (s - i) / (f - n);\n      for (let t = y; t <= c; t++) {\n        const e = t === y ? Math.max(n, f) : (h + 1 - t) * x,\n          m = t === c ? Math.min(n, f) : e - x;\n        let u = f === n ? Math.floor((i - l) / r) : Math.floor((M * (e - n) + i - l) / r),\n          w = f === n ? Math.floor((s - l) / r) : Math.floor((M * (m - n) + i - l) / r);\n        if (w < u) {\n          const t = u;\n          u = w, w = t;\n        }\n        const d = t * a;\n        u = Math.max(0, u), w = Math.min(a - 1, w);\n        for (let t = d + u; t <= d + w; t++) o[t] = p ? p[t] : 255;\n      }\n    }\n  }\n  return new i({\n    pixelType: t.pixelType,\n    width: a,\n    height: h,\n    mask: o,\n    pixels: [...t.pixels]\n  });\n}\nfunction x(t, i, a, h = !0) {\n  const {\n      spatialReference: o\n    } = t,\n    {\n      x: r,\n      y: x\n    } = n(a, o);\n  let l, m, s;\n  const p = \"extent\" === i.type ? i : i.extent;\n  let {\n    xmin: f,\n    xmax: y,\n    ymax: c,\n    ymin: M\n  } = p;\n  const {\n    xmin: u,\n    ymax: w\n  } = t.extent;\n  return h ? (f = u + (f > u ? r * Math.round((f - u) / r) : 0), c = w - (c < w ? x * Math.round((w - c) / x) : 0), y = u + (y > u ? r * Math.round((y - u) / r) : 0), M = w - (M < w ? x * Math.round((w - M) / x) : 0), l = new e({\n    xmin: f,\n    ymax: c,\n    xmax: y,\n    ymin: M,\n    spatialReference: o\n  }), m = Math.round(l.width / r), s = Math.round(l.height / x)) : (m = Math.floor((y - f) / r + .8), s = Math.floor((c - M) / x + .8), f = u + (f > u ? r * Math.floor((f - u) / r + .1) : 0), c = w - (c < w ? x * Math.floor((w - c) / x + .1) : 0), y = f + m * r, M = c - s * x, l = new e({\n    xmin: f,\n    ymax: c,\n    xmax: y,\n    ymin: M,\n    spatialReference: o\n  })), {\n    extent: l,\n    width: m,\n    height: s\n  };\n}\nexport { a as clip, x as snapToRaster };", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { _ as t } from \"../../../chunks/tslib.es6.js\";\nimport e from \"../../../core/Error.js\";\nimport { property as r } from \"../../../core/accessorSupport/decorators/property.js\";\nimport \"../../../core/has.js\";\nimport \"../../../core/Logger.js\";\nimport \"../../../core/RandomLCG.js\";\nimport { subclass as s } from \"../../../core/accessorSupport/decorators/subclass.js\";\nimport i from \"../../../geometry/Polygon.js\";\nimport o from \"./BaseRaster.js\";\nimport { clip as n } from \"../rasterFunctions/clipUtils.js\";\nimport { approximateTransform as a } from \"../rasterFunctions/pixelUtils.js\";\nimport { projectPolygon as l } from \"../rasterFunctions/rasterProjectionHelper.js\";\nimport c from \"../../../rest/support/FeatureSet.js\";\nconst p = 40;\nlet m = class extends o {\n  constructor() {\n    super(...arguments), this.datasetFormat = \"Function\", this.tileType = \"Raster\", this.rasterFunction = null, this._clippingGeometry = new Map();\n  }\n  async open(t) {\n    await this.init();\n    const {\n      rasterFunction: r\n    } = this;\n    this.primaryRasters?.rasters?.length ? r.sourceRasters = this.primaryRasters.rasters : (this.primaryRasters = r.getPrimaryRasters(), this.rasterJobHandler && this.primaryRasters.rasters?.forEach(t => t.rasterJobHandler = this.rasterJobHandler));\n    const {\n        rasters: s,\n        rasterIds: i\n      } = this.primaryRasters,\n      o = s.map(e => e.rasterInfo ? void 0 : e.open(t));\n    await Promise.all(o);\n    const n = s.map(({\n        rasterInfo: t\n      }) => t),\n      a = r.bind({\n        rasterInfos: n,\n        rasterIds: i\n      });\n    if (r.rawSourceRasterInfos = n, !a.success || 0 === n.length) throw new e(\"raster-function:open\", `cannot bind the function: ${a.error ?? \"\"}`);\n    const l = \"Table\" === r.functionName ? r : r.functionArguments?.raster;\n    \"Table\" === l?.functionName && (r.rasterInfo.attributeTable = c.fromJSON(l.functionArguments.attributeTableAsRecordSet)), await this.syncJobHandler();\n    const p = n[0];\n    this.hasUniqueSourceStorageInfo = 1 === n.length || n.slice(1).every(t => h(t, p)), this.set(\"sourceJSON\", s[0].sourceJSON), this.set(\"rasterInfo\", r.rasterInfo), await this._updateClipGeometry();\n  }\n  async syncJobHandler() {\n    return this.rasterJobHandler?.updateRasterFunction(this.rasterFunction);\n  }\n  async fetchPixels(t, e, r, s = {}) {\n    const {\n      rasters: i,\n      rasterIds: o\n    } = this.primaryRasters;\n    let l = !1;\n    const {\n        interpolation: c\n      } = s,\n      p = this.rasterFunction.flatWebGLFunctionChain?.hasFocalFunction;\n    !s.requestRawData && p && (l = 1 === i.length && !s.skipRasterFunction, s = {\n      ...s,\n      interpolation: \"bilinear\",\n      requestRawData: l\n    });\n    const m = i.map(i => i.fetchPixels(t, e, r, s)),\n      u = await Promise.all(m),\n      h = u.map(t => t.pixelBlock),\n      f = l || s.requestRawData ? u.map(t => t.srcTilePixelSize) : null;\n    if (s.skipRasterFunction || h.every(t => null == t)) return u[0];\n    const d = u.find(t => null != t.pixelBlock)?.extent ?? t;\n    let y = this.rasterJobHandler ? await this.rasterJobHandler.process({\n      extent: d,\n      primaryPixelBlocks: h,\n      primaryPixelSizes: f,\n      primaryRasterIds: o\n    }) : this.rasterFunction.process({\n      extent: d,\n      primaryPixelBlocks: h,\n      primaryPixelSizes: f,\n      primaryRasterIds: o\n    });\n    const {\n      transformGrid: g\n    } = u[0];\n    if (!l || null == y || null == g) {\n      const t = s.noClip ? null : this.getClippingGeometry(d.spatialReference);\n      return s.noClip || s.requestRawData || null == y || !t || (y = await n(y, d, t)), {\n        ...u[0],\n        pixelBlock: y\n      };\n    }\n    const x = {\n      rows: g.spacing[0],\n      cols: g.spacing[1]\n    };\n    let R;\n    if (this.rasterJobHandler) {\n      R = (await this.rasterJobHandler.mosaicAndTransform({\n        srcPixelBlocks: [y],\n        srcMosaicSize: {\n          width: y.width,\n          height: y.height\n        },\n        destDimension: {\n          width: e,\n          height: r\n        },\n        coefs: g.coefficients,\n        sampleSpacing: x,\n        projectDirections: !1,\n        gcsGrid: null,\n        isUV: !1,\n        interpolation: c,\n        alignmentInfo: void 0,\n        blockWidths: null\n      }, s)).pixelBlock;\n    } else R = a(y, {\n      width: e,\n      height: r\n    }, g.coefficients, x, c);\n    const w = s.noClip ? null : this.getClippingGeometry(t.spatialReference);\n    return s.noClip || s.requestRawData || null == R || null == w || (R = await n(R, t, w)), {\n      extent: t,\n      srcExtent: u[0].srcExtent,\n      pixelBlock: R\n    };\n  }\n  getClippingGeometry(t) {\n    const e = this._clippingGeometry.get(\"0\");\n    if (!t || !e) return e;\n    const r = f(t);\n    let s = this._clippingGeometry.get(r);\n    return null != s || (s = t.equals(e.spatialReference) ? e : l(e, t), this._clippingGeometry.set(r, s)), s;\n  }\n  async _updateClipGeometry() {\n    const t = this.rasterFunction.getClippingGeometries()[0];\n    let e = t?.clippingGeometry;\n    if (e && \"inside\" === t.clippingType) {\n      const {\n          extent: t\n        } = this.rasterInfo,\n        {\n          difference: r,\n          densify: s\n        } = await import(\"../../../geometry/geometryEngine.js\");\n      let o = s(i.fromExtent(t), 2 * (t.width + t.height) / p);\n      o = l(o, e.spatialReference), e = r(o, e);\n    }\n    this._clippingGeometry.clear(), e && this._clippingGeometry.set(\"0\", e);\n  }\n};\nt([r({\n  type: String,\n  json: {\n    write: !0\n  }\n})], m.prototype, \"datasetFormat\", void 0), t([r()], m.prototype, \"tileType\", void 0), t([r()], m.prototype, \"rasterFunction\", void 0), t([r()], m.prototype, \"primaryRasters\", void 0), m = t([s(\"esri.layers.support.rasterDatasets.FunctionRaster\")], m);\nconst u = m;\nfunction h(t, e) {\n  const {\n      storageInfo: r,\n      pixelSize: s,\n      spatialReference: i,\n      extent: o\n    } = t,\n    {\n      storageInfo: n,\n      pixelSize: a,\n      spatialReference: l,\n      extent: c\n    } = e;\n  return s.x === a.x && s.y === a.y && i.equals(l) && o.equals(c) && r.blockHeight === n.blockHeight && r.blockWidth === n.blockWidth && r.maximumPyramidLevel === n.maximumPyramidLevel;\n}\nfunction f(t) {\n  return String(t.wkid ?? t.wkt ?? t.wkt2);\n}\nexport { u as default };", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { _ as e } from \"../../chunks/tslib.es6.js\";\nimport \"../../geometry.js\";\nimport { rasterRendererTypes as t, websceneRasterRendererTypes as r, read as i } from \"../../rasterRenderers.js\";\nimport s from \"../../request.js\";\nimport { deprecatedProperty as n } from \"../../core/deprecate.js\";\nimport o from \"../../core/Error.js\";\nimport a from \"../../core/Logger.js\";\nimport { property as l } from \"../../core/accessorSupport/decorators/property.js\";\nimport { ensureClass as u } from \"../../core/accessorSupport/ensureType.js\";\nimport \"../../core/RandomLCG.js\";\nimport \"../../core/has.js\";\nimport { reader as c } from \"../../core/accessorSupport/decorators/reader.js\";\nimport { subclass as m } from \"../../core/accessorSupport/decorators/subclass.js\";\nimport { getInfo as d } from \"../../geometry/support/spatialReferenceUtils.js\";\nimport { sanitizeUrl as h } from \"../support/arcgisLayerUrl.js\";\nimport { url as p } from \"../support/commonProperties.js\";\nimport f from \"../support/DimensionalDefinition.js\";\nimport y from \"../support/MultidimensionalSubset.js\";\nimport b from \"../support/RasterFunction.js\";\nimport g from \"../support/RasterJobHandler.js\";\nimport R from \"../support/TileInfo.js\";\nimport F from \"../support/rasterDatasets/FunctionRaster.js\";\nimport { getDefaultMultidimensionalDefinition as I, hasExcludedVariableOrDimension as J, getDefaultVariableInfo as v, isMultiSliceOrRangeDefinition as _, getSubsetVariablesFromMdInfo as S } from \"../support/rasterDatasets/multidimensionalUtils.js\";\nimport { snapToRaster as w, clip as x } from \"../support/rasterFunctions/clipUtils.js\";\nimport { create as j } from \"../support/rasterFunctions/rasterFunctionHelper.js\";\nimport { load as D, projectExtent as H, projectPolygon as T } from \"../support/rasterFunctions/rasterProjectionHelper.js\";\nimport { computeStatisticsHistograms as N } from \"../support/rasterFunctions/stretchUtils.js\";\nimport { convertVectorFieldData as O } from \"../support/rasterFunctions/vectorFieldUtils.js\";\nimport { normalizeRendererJSON as z, getVariableRasterInfo as C, getDefaultInterpolation as P, getDefaultBandCombination as E, getFunctionColorramp as A, createDefaultRenderer as M } from \"../../renderers/support/rasterRendererHelper.js\";\nimport U from \"../../renderers/support/RasterSymbolizer.js\";\nimport k from \"../../rest/support/ImageHistogramParameters.js\";\nimport { createFlowMesh as q } from \"../../views/2d/engine/flow/dataUtils.js\";\nimport B from \"../../geometry/SpatialReference.js\";\nimport L from \"../../geometry/Point.js\";\nconst V = V => {\n  let $ = class extends V {\n    constructor(...e) {\n      super(...e), this._isConstructedFromFunctionRaster = !1, this._rasterJobHandler = {\n        instance: null,\n        refCount: 0,\n        connectionPromise: null\n      }, this.bandIds = null, this.copyright = null, this.interpolation = \"nearest\", this.multidimensionalSubset = null, this.raster = null, this.serviceRasterInfo = null, this.sourceJSON = null, this.spatialReference = null, this.symbolizer = null, this._isConstructedFromFunctionRaster = \"Function\" === e[0]?.raster?.datasetFormat;\n    }\n    get fullExtent() {\n      return this.serviceRasterInfo?.extent;\n    }\n    set multidimensionalDefinition(e) {\n      this._set(\"multidimensionalDefinition\", e), this.updateRenderer();\n    }\n    set rasterFunction(e) {\n      \"none\" === e?.functionName?.toLowerCase() && (e = void 0), this._set(\"rasterFunction\", e), this.updateRasterFunction();\n    }\n    get rasterInfo() {\n      return n(a.getLogger(this), \"rasterInfo\", {\n        replacement: \"serviceRasterInfo\",\n        version: \"4.29\",\n        warnOnce: !0\n      }), this._get(\"serviceRasterInfo\");\n    }\n    set url(e) {\n      this._set(\"url\", h(e, a.getLogger(this)));\n    }\n    set renderer(e) {\n      null == e && null == this.rasterFunction ? this._configDefaultRenderer(\"override\") : (this._set(\"renderer\", e), this.updateRenderer());\n    }\n    readRenderer(e, t, r) {\n      const s = t?.layerDefinition?.drawingInfo?.renderer;\n      return i(s, r) || void 0;\n    }\n    async convertVectorFieldData(e, t) {\n      const {\n        serviceRasterInfo: r\n      } = this;\n      if (null == e || !r) return null;\n      const i = this._rasterJobHandler.instance,\n        s = r.dataType;\n      return i ? i.convertVectorFieldData({\n        pixelBlock: e,\n        dataType: s\n      }, t) : O(e, s);\n    }\n    async computeStatisticsHistograms(e, t) {\n      await this.load(t), e = u(k, e).clone();\n      const {\n        serviceRasterInfo: r\n      } = this;\n      if (null == r) throw new o(\"imagery-tile-mixin:compute-statistics-histograms\", \"serviceRasterInfo must be specified\");\n      const {\n        geometry: i\n      } = e;\n      if (null == i) throw new o(\"imagery-tile-mixin:compute-statistics-histograms\", \"geometry must be specified\");\n      let s = i;\n      const {\n        spatialReference: n\n      } = r;\n      i.spatialReference.equals(n) || (await D(), s = \"extent\" === i.type ? H(i, n) : T(i, n));\n      const a = e.pixelSize ?? new L({\n          x: r.pixelSize.x,\n          y: r.pixelSize.y,\n          spatialReference: n\n        }),\n        {\n          extent: l,\n          width: c,\n          height: m\n        } = w(r, s, a),\n        d = await this.fetchPixels(l, c, m, {\n          ...t,\n          interpolation: \"nearest\"\n        });\n      if (null == d.pixelBlock) throw new o(\"imagery-tile-mixin:compute-statistics-histograms\", \"failed to fetch pixels\");\n      const h = await x(d.pixelBlock, l, s),\n        p = this._rasterJobHandler.instance;\n      return p ? p.computeStatisticsHistograms({\n        pixelBlock: h\n      }, t) : N(h);\n    }\n    async createFlowMesh(e, t) {\n      const r = this._rasterJobHandler.instance;\n      return r ? r.createFlowMesh(e, t) : q(e.meshType, e.simulationSettings, e.flowData, null != t.signal ? t.signal : new AbortController().signal);\n    }\n    normalizeRasterFetchOptions(e) {\n      const {\n        multidimensionalInfo: t\n      } = this.serviceRasterInfo ?? {};\n      if (null == t) return e;\n      let r = e.multidimensionalDefinition || this.multidimensionalDefinition;\n      r?.length || (r = I(this.raster.rasterInfo, {\n        multidimensionalSubset: this.multidimensionalSubset\n      }));\n      const i = e.timeExtent || this.timeExtent;\n      if (null != r && null != i && (null != i.start || null != i.end)) {\n        r = r.map(e => e.clone());\n        const s = t.variables.find(({\n            name: e\n          }) => e === r[0].variableName)?.dimensions?.find(({\n            name: e\n          }) => \"StdTime\" === e),\n          n = r.find(({\n            dimensionName: e\n          }) => \"StdTime\" === e);\n        if (!s || !n) return {\n          ...e,\n          multidimensionalDefinition: null\n        };\n        const {\n            start: o,\n            end: a\n          } = i,\n          l = null == o ? null : o.getTime(),\n          u = null == a ? null : a.getTime(),\n          c = l ?? u,\n          m = u ?? l;\n        if (null != s.values) {\n          const e = s.values.filter(e => {\n            if (Array.isArray(e)) {\n              if (c === m) return e[0] <= c && e[1] >= c;\n              const t = e[0] <= c && e[1] > c || e[0] < m && e[1] >= m,\n                r = e[0] >= c && e[1] <= m || e[0] < c && e[1] > m;\n              return t || r;\n            }\n            return c === m ? e === c : e >= c && e <= m;\n          });\n          if (e.length) {\n            const t = e.sort((e, t) => {\n              const r = Array.isArray(e) ? e[0] : e,\n                i = Array.isArray(e) ? e[1] : e,\n                s = Array.isArray(t) ? t[0] : t,\n                n = Array.isArray(t) ? t[1] : t;\n              if (c === m) return r - s;\n              return Math.abs(i - m) - Math.abs(n - m);\n            })[0];\n            n.values = [t];\n          } else r = null;\n        } else if (s.hasRegularIntervals && s.extent) {\n          const [e, t] = s.extent;\n          c > t || m < e ? r = null : n.values = c === m ? [c] : [Math.max(e, c), Math.min(t, m)];\n        }\n      }\n      return null != r && J(r, this.multidimensionalSubset) ? {\n        ...e,\n        multidimensionalDefinition: null\n      } : {\n        ...e,\n        multidimensionalDefinition: r\n      };\n    }\n    async updateRasterFunction() {\n      if (!this.loaded || \"imagery-tile\" !== this.type || !this.rasterFunction && !this._cachedRasterFunctionJson || JSON.stringify(this.rasterFunction) === JSON.stringify(this._cachedRasterFunctionJson)) return;\n      if (this._isConstructedFromFunctionRaster && \"Function\" === this.raster.datasetFormat) {\n        const e = this.raster.rasterFunction.toJSON();\n        return !this.rasterFunction && e && this._set(\"rasterFunction\", b.fromJSON(e)), void (this._cachedRasterFunctionJson = this.rasterFunction?.toJSON());\n      }\n      let e,\n        t = this.raster,\n        r = !1;\n      \"Function\" === t.datasetFormat ? (e = t.primaryRasters.rasters, t = e[0], r = !0) : e = [t];\n      const {\n        rasterFunction: i\n      } = this;\n      if (i) {\n        const r = {\n          raster: t\n        };\n        e.length > 1 && e.forEach(e => r[e.url] = e);\n        const s = j(i.functionDefinition?.toJSON() ?? i.toJSON(), r),\n          n = new F({\n            rasterFunction: s\n          });\n        n.rasterJobHandler = this._rasterJobHandler.instance, await n.open(), this._cachedRasterFunctionJson = this.rasterFunction?.toJSON(), this.raster = n;\n      } else this.raster = t, this._cachedRasterFunctionJson = null, await t.when();\n      if (this._cachedRendererJson = null, !r && !i) return;\n      const {\n          bandIds: s\n        } = this,\n        {\n          bandCount: n\n        } = this.raster.rasterInfo,\n        o = s?.length ? s.some(e => e >= n) : n >= 3;\n      s && (o || this.renderer && \"raster-stretch\" !== this.renderer.type) && this._set(\"bandIds\", null), this._configDefaultRenderer(\"auto\");\n    }\n    async updateRenderer() {\n      const {\n        loaded: e,\n        symbolizer: t\n      } = this;\n      if (!e || !t || !this.renderer) return;\n      const {\n          rasterInfo: r\n        } = this.raster,\n        i = v(r, {\n          multidimensionalDefinition: this.multidimensionalDefinition,\n          multidimensionalSubset: this.multidimensionalSubset\n        }),\n        s = i?.name,\n        n = z({\n          ...this.renderer.toJSON(),\n          variableName: s\n        });\n      if (JSON.stringify(this._cachedRendererJson) === JSON.stringify(n)) return;\n      const o = this._rasterJobHandler.instance;\n      o && (t.rasterInfo = C(r, s), t.rendererJSON = n, t.bind(), await o.updateSymbolizer(t), this._cachedRendererJson = n);\n    }\n    async applyRenderer(e, t) {\n      const r = e?.pixelBlock;\n      if (!(null != r && r.pixels && r.pixels.length > 0)) return null;\n      let i;\n      await this.updateRenderer();\n      const s = this._rasterJobHandler.instance,\n        n = this.bandIds ?? [];\n      return i = s ? await s.symbolize({\n        ...e,\n        simpleStretchParams: t,\n        bandIds: n\n      }) : this.symbolizer.symbolize({\n        ...e,\n        simpleStretchParams: t,\n        bandIds: n\n      }), i;\n    }\n    getTileUrl(e, t, r) {\n      return \"RasterTileServer\" === this.raster.datasetFormat ? `${this.url}/tile/${e}/${t}/${r}` : \"\";\n    }\n    getCompatibleTileInfo(e, t, r = !1) {\n      if (!this.loaded || null == t) return null;\n      if (r && e.equals(this.spatialReference)) return this.tileInfo;\n      const i = d(e);\n      return R.create({\n        size: 256,\n        spatialReference: e,\n        origin: i ? {\n          x: i.origin[0],\n          y: i.origin[1]\n        } : {\n          x: t.xmin,\n          y: t.ymax\n        }\n      });\n    }\n    getCompatibleFullExtent(e) {\n      return this.loaded ? (this._compatibleFullExtent?.spatialReference.equals(e) || (this._compatibleFullExtent = this.raster.computeExtent(e)), this._compatibleFullExtent) : null;\n    }\n    async fetchTile(e, t, r, i = {}) {\n      if (G(this), i.requestAsImageElement) {\n        const n = this.getTileUrl(e, t, r);\n        return s(n, {\n          responseType: \"image\",\n          query: {\n            ...this.refreshParameters,\n            ...this.raster.ioConfig.customFetchParameters\n          },\n          signal: i.signal\n        }).then(e => e.data);\n      }\n      const {\n        serviceRasterInfo: n\n      } = this;\n      if (null != n.multidimensionalInfo && null == (i = this.normalizeRasterFetchOptions(i)).multidimensionalDefinition) {\n        const s = i.tileInfo || n.storageInfo.tileInfo;\n        return {\n          extent: this.raster.getTileExtentFromTileInfo(e, t, r, s),\n          pixelBlock: null\n        };\n      }\n      return await this._initJobHandler(), await this.updateRasterFunction(), \"raster-shaded-relief\" === this.renderer?.type && (i = {\n        ...i,\n        buffer: {\n          cols: 1,\n          rows: 1\n        }\n      }), this.raster.fetchTile(e, t, r, i);\n    }\n    async fetchPixels(e, t, r, i = {}) {\n      return null != this.serviceRasterInfo.multidimensionalInfo && null == (i = this.normalizeRasterFetchOptions(i)).multidimensionalDefinition ? {\n        extent: e,\n        pixelBlock: null\n      } : (await this._initJobHandler(), await this.updateRasterFunction(), t = Math.round(t), r = Math.round(r), this.raster.fetchPixels(e, t, r, i));\n    }\n    async identify(e, t = {}) {\n      await this.load();\n      const {\n        raster: r,\n        serviceRasterInfo: i\n      } = this;\n      if (null != i?.multidimensionalInfo) {\n        if (!(i.hasMultidimensionalTranspose && !!(_(t.multidimensionalDefinition) || t.transposedVariableName || t.timeExtent)) && null == (t = this.normalizeRasterFetchOptions(t)).multidimensionalDefinition) return {\n          location: e,\n          value: null\n        };\n      }\n      const s = this.multidimensionalSubset?.areaOfInterest;\n      if (s && !s.contains(e)) throw new o(\"imagery-tile-mixin:identify\", \"the request cannot be fulfilled when falling outside of the multidimensional subset\");\n      return r.identify(e, t);\n    }\n    increaseRasterJobHandlerUsage() {\n      this._rasterJobHandler.refCount++;\n    }\n    decreaseRasterJobHandlerUsage() {\n      this._rasterJobHandler.refCount--, this._rasterJobHandler.refCount <= 0 && this._shutdownJobHandler();\n    }\n    hasStandardTime() {\n      const e = this.serviceRasterInfo?.multidimensionalInfo;\n      if (null == e || \"standard-time\" !== this.serviceRasterInfo?.dataType) return !1;\n      const t = this.multidimensionalDefinition,\n        r = t?.[0]?.variableName;\n      return e.variables.some(e => e.name === r && (!t?.[0].dimensionName || e.dimensions.some(e => \"StdTime\" === e.name)));\n    }\n    getStandardTimeValue(e) {\n      return new Date(24 * (e - 25569) * 3600 * 1e3).toString();\n    }\n    getMultidimensionalSubsetVariables(e) {\n      const t = e ?? this.serviceRasterInfo?.multidimensionalInfo;\n      return S(this.multidimensionalSubset, t);\n    }\n    _configDefaultSettings() {\n      this._configDefaultInterpolation(), this.multidimensionalDefinition || (this.multidimensionalDefinition = I(this.raster.rasterInfo, {\n        multidimensionalSubset: this.multidimensionalSubset\n      })), this.rasterFunction && \"Function\" === this.raster.datasetFormat && (this._cachedRasterFunctionJson = this.rasterFunction.toJSON()), this._configDefaultRenderer();\n    }\n    _initJobHandler() {\n      if (null != this._rasterJobHandler.connectionPromise) return this._rasterJobHandler.connectionPromise;\n      const e = new g();\n      return this._rasterJobHandler.connectionPromise = e.initialize().then(async () => {\n        G(this), this._rasterJobHandler.instance = e, this.raster.rasterJobHandler = e, \"Function\" === this.raster.datasetFormat && this.raster.syncJobHandler(), this.rasterFunction && (await this.updateRasterFunction().catch(() => {})), this.renderer && this.updateRenderer();\n      }).catch(() => {}), this._rasterJobHandler.connectionPromise;\n    }\n    _shutdownJobHandler() {\n      this._rasterJobHandler.instance && this._rasterJobHandler.instance.destroy(), this._rasterJobHandler.instance = null, this._rasterJobHandler.connectionPromise = null, this._rasterJobHandler.refCount = 0, this._cachedRendererJson = null, this.raster && (this.raster.rasterJobHandler = null);\n    }\n    _configDefaultInterpolation() {\n      if (null == this.interpolation) {\n        G(this);\n        const {\n            raster: e\n          } = this,\n          t = P(e.rasterInfo, e.tileType, this.sourceJSON?.defaultResamplingMethod);\n        this._set(\"interpolation\", t);\n      }\n    }\n    _configDefaultRenderer(e = \"no\") {\n      G(this);\n      const {\n        rasterInfo: t\n      } = this.raster;\n      !this.bandIds && t.bandCount > 1 && (this.bandIds = E(t));\n      const r = v(t, {\n          multidimensionalDefinition: this.multidimensionalDefinition,\n          multidimensionalSubset: this.multidimensionalSubset\n        }),\n        i = r?.name,\n        s = A(this.raster);\n      if (!this.renderer || \"override\" === e) {\n        const e = M(t, {\n            bandIds: this.bandIds,\n            variableName: i,\n            rasterFunctionColorRamp: s\n          }),\n          r = t.statistics,\n          n = r && r.length > 0 ? r[0] : null,\n          o = n?.max ?? 0,\n          a = n?.min ?? 0;\n        \"WCSServer\" === this.raster.datasetFormat && \"raster-stretch\" === e.type && (o > 1e24 || a < -1e24) && (e.dynamicRangeAdjustment = !0, e.statistics = null, \"none\" === e.stretchType && (e.stretchType = \"min-max\")), this.renderer = e;\n      }\n      const n = z({\n          ...this.renderer.toJSON(),\n          variableName: i\n        }),\n        o = C(t, i);\n      this.symbolizer ? (this.symbolizer.rendererJSON = n, this.symbolizer.rasterInfo = o) : this.symbolizer = new U({\n        rendererJSON: n,\n        rasterInfo: o\n      });\n      const l = this.symbolizer.bind();\n      if (l.success) {\n        if (\"auto\" === e) {\n          const {\n              colormap: e\n            } = this.raster.rasterInfo,\n            t = this.renderer;\n          if (null != e && \"raster-colormap\" === t.type) {\n            const e = M(this.raster.rasterInfo);\n            JSON.stringify(e) !== JSON.stringify(t) && this._configDefaultRenderer(\"override\");\n          } else if (\"raster-stretch\" === t.type) {\n            const e = this.bandIds?.length,\n              r = t.statistics?.length;\n            !t.dynamicRangeAdjustment && r && e && r !== e && this._configDefaultRenderer(\"override\");\n          }\n        }\n      } else a.getLogger(this).warn(\"imagery-tile-mixin\", l.error || \"The given renderer is not supported by the layer.\"), \"auto\" === e && this._configDefaultRenderer(\"override\");\n    }\n  };\n  function G(e) {\n    if (!e.raster || !e.serviceRasterInfo) throw new o(\"imagery-tile\", \"no raster\");\n  }\n  return e([l({\n    clonable: !1\n  })], $.prototype, \"_cachedRendererJson\", void 0), e([l({\n    clonable: !1\n  })], $.prototype, \"_cachedRasterFunctionJson\", void 0), e([l({\n    clonable: !1\n  })], $.prototype, \"_compatibleFullExtent\", void 0), e([l({\n    clonable: !1\n  })], $.prototype, \"_isConstructedFromFunctionRaster\", void 0), e([l({\n    clonable: !1\n  })], $.prototype, \"_rasterJobHandler\", void 0), e([l()], $.prototype, \"bandIds\", void 0), e([l({\n    json: {\n      origins: {\n        service: {\n          read: {\n            source: \"copyrightText\"\n          }\n        }\n      }\n    }\n  })], $.prototype, \"copyright\", void 0), e([l({\n    json: {\n      read: !1\n    }\n  })], $.prototype, \"fullExtent\", null), e([l()], $.prototype, \"interpolation\", void 0), e([l()], $.prototype, \"ioConfig\", void 0), e([l({\n    type: [f],\n    json: {\n      write: !0\n    }\n  })], $.prototype, \"multidimensionalDefinition\", null), e([l({\n    type: y,\n    json: {\n      write: !0\n    }\n  })], $.prototype, \"multidimensionalSubset\", void 0), e([l()], $.prototype, \"raster\", void 0), e([l({\n    type: b,\n    json: {\n      name: \"renderingRule\",\n      write: !0\n    }\n  })], $.prototype, \"rasterFunction\", null), e([l({\n    readOnly: !0\n  })], $.prototype, \"rasterInfo\", null), e([l()], $.prototype, \"serviceRasterInfo\", void 0), e([l()], $.prototype, \"sourceJSON\", void 0), e([l({\n    readOnly: !0,\n    type: B,\n    json: {\n      read: !1\n    }\n  })], $.prototype, \"spatialReference\", void 0), e([l({\n    type: R\n  })], $.prototype, \"tileInfo\", void 0), e([l(p)], $.prototype, \"url\", null), e([l({\n    types: t,\n    json: {\n      name: \"layerDefinition.drawingInfo.renderer\",\n      write: {\n        overridePolicy() {\n          const e = \"raster-stretch\" === this.renderer?.type && \"none\" === this.renderer.stretchType && !this.renderer.useGamma;\n          return {\n            enabled: !this.loaded || \"Raster\" === this.raster.tileType || !e\n          };\n        }\n      },\n      origins: {\n        \"web-scene\": {\n          types: r,\n          name: \"layerDefinition.drawingInfo.renderer\",\n          write: {\n            overridePolicy: e => ({\n              enabled: e && \"vector-field\" !== e.type && \"flow\" !== e.type\n            })\n          }\n        }\n      }\n    }\n  })], $.prototype, \"renderer\", null), e([c(\"renderer\")], $.prototype, \"readRenderer\", null), e([l({\n    clonable: !1\n  })], $.prototype, \"symbolizer\", void 0), $ = e([m(\"esri.layers.mixins.ImageryTileMixin\")], $), $;\n};\nexport { V as ImageryTileMixin };", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport e from \"../../../Color.js\";\nimport \"../../../geometry.js\";\nimport t from \"../../../geometry/Extent.js\";\nimport { getLanguage as n } from \"../../../intl/locale.js\";\nimport l from \"../PixelBlock.js\";\nimport { getIntegerPixelType as s } from \"../rasterFormats/pixelRangeUtils.js\";\nimport a from \"../../../geometry/SpatialReference.js\";\nfunction i(e) {\n  return [\"x\", \"e\", \"east\", \"long\", \"longitude\"].includes(e.toLowerCase());\n}\nfunction r(e) {\n  return [\"y\", \"n\", \"west\", \"lat\", \"latitude\"].includes(e.toLowerCase());\n}\nfunction o(e) {\n  const {\n      axes: n\n    } = e.domain,\n    l = Object.keys(n),\n    s = [],\n    o = [];\n  let u = -1,\n    m = -1,\n    c = [];\n  for (let t = 0; t < l.length; t++) {\n    const e = l[t];\n    i(e) ? u = t : r(e) && (m = t);\n    const a = n[e],\n      d = [];\n    if (\"values\" in a) {\n      a.values.forEach(e => d.push(\"string\" == typeof e ? new Date(e).getTime() : e));\n      const e = d[1] - d[0];\n      s.push([d[0] - .5 * e, d[d.length - 1] + .5 * e]), o.push(e);\n    } else {\n      const {\n          start: e,\n          stop: t,\n          num: n\n        } = a,\n        l = (t - e) / (n - 1);\n      s.push([e - .5 * l, t + .5 * l]), o.push(l);\n      for (let s = 0; s < n; s++) d.push(e + l * s);\n    }\n    c.push({\n      name: e,\n      values: d,\n      extent: [d[0], d[d.length - 1]]\n    });\n  }\n  u > -1 && -1 === m ? m = 0 === u ? 1 : 0 : m > -1 && -1 === u ? u = 0 === m ? 1 : 0 : -1 === m && -1 === u && (u = 0, m = 1), c = c.filter((e, t) => !(t === u || t === m));\n  const {\n      referencing: d\n    } = e.domain,\n    f = d.find(e => e.coordinates.includes(l[u])).system.id,\n    p = f?.slice(f.lastIndexOf(\"/\") + 1),\n    h = null == p || \"CRS84\" === p ? 4326 : Number(p),\n    g = new a({\n      wkid: h\n    }),\n    [b, y] = s[u],\n    [x, j] = s[m],\n    v = new t({\n      xmin: b,\n      xmax: y,\n      ymin: x,\n      ymax: j,\n      spatialReference: g\n    });\n  return {\n    width: Math.round(v.width / o[u]),\n    height: Math.round(v.height / o[m]),\n    extent: v,\n    dimensions: c\n  };\n}\nfunction u(e) {\n  const t = n();\n  return t ? e[t] ?? Object.values(e)[0] : Object.values(e)[0];\n}\nfunction m() {\n  return Math.round(255 * Math.random());\n}\nfunction c(t) {\n  const n = {},\n    {\n      parameters: l\n    } = t;\n  if (!l) return n;\n  for (const [s, a] of Object.entries(l)) {\n    const {\n      type: t,\n      description: l,\n      unit: i,\n      categoryEncoding: r,\n      observedProperty: o\n    } = a;\n    if (\"Parameter\" === t && (n[s] = {}, l && (n[s].description = u(l)), i && (n[s].unit = i.label ? u(i.label) : null, n[s].symbol = i.symbol?.value), r)) {\n      const t = Object.entries(r).map((e, t) => ({\n        OID: t,\n        Value: Number(e[1]),\n        ClassName: e[0].slice(e[0].lastIndexOf(\"/\") + 1),\n        Count: 1\n      }));\n      let l = !1;\n      o?.categories?.length && (o.categories.forEach(n => {\n        if (!n.id) return;\n        const s = n.id.slice(n.id.lastIndexOf(\"/\") + 1),\n          a = t.find(e => e.ClassName === s);\n        if (!a) return;\n        const i = n.label ? u(n.label) : null;\n        if (a.Label = i, n.preferredColor) {\n          const t = e.fromHex(n.preferredColor);\n          t && (l = !0, a.Red = t.r, a.Green = t.g, a.Blue = t.b);\n        }\n      }), l && t.forEach(e => {\n        null == e.Red && (e.Red = m(), e.Green = m(), e.Blue = m());\n      }));\n      const a = {\n        objectIdFieldName: \"\",\n        fields: [{\n          name: \"OID\",\n          type: \"esriFieldTypeOID\",\n          alias: \"OID\",\n          domain: null\n        }, {\n          name: \"Value\",\n          type: \"esriFieldTypeInteger\",\n          alias: \"Value\",\n          domain: null\n        }, {\n          name: \"Count\",\n          type: \"esriFieldTypeDouble\",\n          alias: \"Count\",\n          domain: null\n        }, {\n          name: \"ClassName\",\n          type: \"esriFieldTypeString\",\n          alias: \"ClassName\",\n          domain: null,\n          length: 50\n        }, {\n          name: \"Label\",\n          type: \"esriFieldTypeString\",\n          alias: \"Label\",\n          domain: null,\n          length: 50\n        }],\n        features: t.map(e => ({\n          attributes: e\n        }))\n      };\n      l && a.fields.push({\n        name: \"Red\",\n        type: \"esriFieldTypeInteger\",\n        alias: \"Red\",\n        domain: null\n      }, {\n        name: \"Green\",\n        type: \"esriFieldTypeInteger\",\n        alias: \"Green\",\n        domain: null\n      }, {\n        name: \"Blue\",\n        type: \"esriFieldTypeInteger\",\n        alias: \"Blue\",\n        domain: null\n      }), n[s].attributeTable = a;\n    }\n  }\n  return n;\n}\nfunction d(e) {\n  let t = Number.MAX_VALUE,\n    n = -Number.MAX_VALUE;\n  for (let l = 0; l < e.length; l++) {\n    const s = e[l];\n    null != s && (s < t && (t = s), s > n && (n = s));\n  }\n  return s(t, n);\n}\nfunction f(e, t, n) {\n  const l = e.map((e, n) => ({\n      name: e,\n      count: t[n]\n    })).sort((e, t) => e.name > t.name ? -1 : 1),\n    s = (a = 1, e => a *= e.count);\n  var a;\n  const i = [...l.slice(1), {\n    name: \"\",\n    count: 1\n  }].reverse().map(s).reverse();\n  let r = 0;\n  for (let o = e.length - 1; o >= 0; o--) {\n    r += i[l.findIndex(({\n      name: t\n    }) => t === e[o])] * (n % t[o]), n = Math.floor(n / t[o]);\n  }\n  return r;\n}\nfunction p(e) {\n  const {\n      width: t,\n      height: n,\n      extent: s,\n      dimensions: a\n    } = o(e),\n    {\n      ranges: i\n    } = e,\n    r = Object.keys(i).sort((e, t) => e < t ? -1 : 1),\n    u = [];\n  for (let l = 0; l < r.length; l++) {\n    const e = r[l];\n    a?.length && u.push({\n      name: e,\n      dimensions: a\n    });\n  }\n  const m = c(e);\n  u.forEach(e => m[e.name] && Object.assign(e, m[e.name]));\n  const p = u.length ? {\n      variables: u\n    } : void 0,\n    h = [];\n  for (let o = 0; o < r.length; o++) {\n    const e = r[o],\n      {\n        values: s,\n        dataType: u,\n        axisNames: m,\n        shape: c\n      } = i[e],\n      p = c.length > 2 ? o * c.slice(0, -2).reduce((e, t) => e * t) : 0,\n      g = m.slice(0, -2),\n      b = c.slice(0, -2),\n      y = \"float\" === u ? \"f32\" : d(s),\n      x = t * n,\n      j = s.length / x;\n    for (let i = 0; i < j; i++) {\n      const e = l.createEmptyBand(y, x),\n        r = new Uint8Array(x).fill(255);\n      let u = !1;\n      const m = i * x;\n      for (let t = 0; t < x; t++) {\n        const n = s[m + t];\n        null == n ? (r[t] = 0, u = !0) : e[t] = n;\n      }\n      if (0 === o || a?.length) {\n        const s = new l({\n          width: t,\n          height: n,\n          mask: u ? r : null,\n          pixels: [e],\n          pixelType: y\n        });\n        if (s.updateStatistics(), a?.length) {\n          h[f(g, b, i) + p] = s;\n        } else h.push(s);\n      } else {\n        const t = h[i];\n        t.pixels.push(e), u ? t.mask && (t.mask = l.combineBandMasks([t.mask, r])) : t.mask = u ? r : null;\n      }\n    }\n  }\n  const g = Object.values(m).find(e => e.attributeTable)?.attributeTable;\n  return {\n    extent: s,\n    pixelBlocks: h,\n    multidimensionalInfo: p,\n    attributeTable: g,\n    bandNames: p ? void 0 : r\n  };\n}\nexport { i as isXAxis, r as isYAxis, p as parseGridCoverage };", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { _ as t } from \"../../../chunks/tslib.es6.js\";\nimport \"../../../geometry.js\";\nimport e from \"../../../core/Error.js\";\nimport { eachAlways as s } from \"../../../core/promiseUtils.js\";\nimport { property as i } from \"../../../core/accessorSupport/decorators/property.js\";\nimport \"../../../core/has.js\";\nimport \"../../../core/Logger.js\";\nimport \"../../../core/RandomLCG.js\";\nimport { subclass as r } from \"../../../core/accessorSupport/decorators/subclass.js\";\nimport o from \"../DimensionalDefinition.js\";\nimport a from \"../RasterInfo.js\";\nimport l from \"./BaseRaster.js\";\nimport { getSliceIndex as n } from \"./multidimensionalUtils.js\";\nimport { clipTile as m, split as c } from \"../rasterFunctions/pixelUtils.js\";\nimport { estimateStatisticsHistograms as p, computeStatisticsHistograms as u } from \"../rasterFunctions/stretchUtils.js\";\nimport h from \"../../../geometry/Extent.js\";\nimport d from \"../../../geometry/SpatialReference.js\";\nlet f = class extends l {\n  constructor() {\n    super(...arguments), this.datasetFormat = \"MEMORY\", this.source = null;\n  }\n  get url() {\n    return \"\";\n  }\n  async open(t) {\n    await this.init();\n    const e = this.source,\n      {\n        pixelBlocks: s,\n        attributeTable: i,\n        statistics: r,\n        histograms: o,\n        name: l,\n        nativeExtent: n,\n        transform: m\n      } = e,\n      c = s[0],\n      {\n        width: p,\n        height: u,\n        pixelType: f\n      } = c,\n      g = e.extent ?? new h({\n        xmin: -.5,\n        ymin: .5,\n        xmax: p - .5,\n        ymax: u - .5,\n        spatialReference: new d({\n          wkid: 3857\n        })\n      }),\n      x = e.isPseudoSpatialReference ?? !e.extent,\n      y = {\n        x: g.width / p,\n        y: g.height / u\n      },\n      b = {\n        ...e.keyProperties\n      };\n    i && (b.DataType = \"Thematic\");\n    const v = new a({\n      width: p,\n      height: u,\n      pixelType: f,\n      extent: g,\n      nativeExtent: n,\n      attributeTable: i,\n      transform: m,\n      pixelSize: y,\n      spatialReference: g.spatialReference,\n      bandCount: c.pixels.length,\n      keyProperties: b,\n      multidimensionalInfo: e.multidimensionalInfo,\n      statistics: r,\n      isPseudoSpatialReference: x,\n      histograms: o\n    });\n    this.ioConfig.skipMapInfo && this.updateImageSpaceRasterInfo(v), this.createRemoteDatasetStorageInfo(v, 512, 512), this._set(\"rasterInfo\", v), this.updateTileInfo(), v.multidimensionalInfo ? await this._buildMDimStats(e.pixelBlocks, v.multidimensionalInfo) : await this._buildInMemoryRaster(c, {\n      width: 512,\n      height: 512\n    }, t), v.multidimensionalInfo || (this.source = null), this.datasetName = l;\n  }\n  fetchRawTile(t, e, s, i = {}) {\n    if (!this._pixelBlockTiles) {\n      const {\n          rasterInfo: r\n        } = this,\n        [o, a] = r.storageInfo.tileInfo.size,\n        {\n          sliceId: l\n        } = i,\n        {\n          pixelBlocks: n\n        } = this.source,\n        c = {\n          pixelBlock: null == l ? n[0] : n[l],\n          useBilinear: \"thematic\" !== r.dataType,\n          tileSize: {\n            width: o,\n            height: a\n          },\n          level: t,\n          row: e,\n          col: s\n        },\n        p = this.rasterJobHandler ? this.rasterJobHandler.clipTile(c, i) : m(c);\n      return Promise.resolve(p);\n    }\n    const r = this._pixelBlockTiles.get(`${t}/${e}/${s}`);\n    return Promise.resolve(r);\n  }\n  async _buildInMemoryRaster(t, i, r) {\n    const {\n        rasterInfo: o\n      } = this,\n      a = o.storageInfo.maximumPyramidLevel ?? 0,\n      l = \"thematic\" !== o.dataType,\n      n = this.rasterJobHandler ? this.rasterJobHandler.split({\n        pixelBlock: t,\n        tileSize: i,\n        maximumPyramidLevel: a,\n        useBilinear: l\n      }, r) : Promise.resolve(c(t, i, a, l)),\n      m = null != o.statistics,\n      u = null != o.histograms,\n      h = this.ioConfig.skipStatistics || m ? Promise.resolve({\n        statistics: null,\n        histograms: null\n      }) : this.rasterJobHandler ? this.rasterJobHandler.estimateStatisticsHistograms({\n        pixelBlock: t\n      }, r) : Promise.resolve(p(t)),\n      d = await s([n, h]);\n    if (!d[0].value && d[1].value) throw new e(\"inmemory-raster:open\", \"failed to build in memory raster\");\n    this._pixelBlockTiles = d[0].value, m || (o.statistics = d[1].value?.statistics), u || (o.histograms = d[1].value?.histograms);\n  }\n  async _buildMDimStats(t, e, s) {\n    for (let i = 0; i < e.variables.length; i++) {\n      const r = e.variables[i];\n      if (r.statistics) continue;\n      const a = r.dimensions.map(t => new o({\n          variableName: r.name,\n          dimensionName: t.name,\n          values: [t.values?.[0] ?? t.extent?.[0]],\n          isSlice: !0\n        })),\n        l = n(a, e),\n        m = null == l ? null : t[l];\n      if (null == m) continue;\n      const c = this.rasterJobHandler ? await this.rasterJobHandler.computeStatisticsHistograms({\n        pixelBlock: m\n      }, s) : u(m);\n      r.statistics = c.statistics, r.histograms || (r.histograms = c.histograms);\n    }\n  }\n};\nt([i({\n  type: String,\n  json: {\n    write: !0\n  }\n})], f.prototype, \"datasetFormat\", void 0), t([i()], f.prototype, \"source\", void 0), t([i()], f.prototype, \"url\", null), f = t([r(\"esri.layers.support.rasterDatasets.InMemoryRaster\")], f);\nconst g = f;\nexport { g as default };", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { _ as e } from \"../../../chunks/tslib.es6.js\";\nimport t from \"../../../core/Error.js\";\nimport { property as r } from \"../../../core/accessorSupport/decorators/property.js\";\nimport \"../../../core/has.js\";\nimport \"../../../core/Logger.js\";\nimport \"../../../core/RandomLCG.js\";\nimport { subclass as s } from \"../../../core/accessorSupport/decorators/subclass.js\";\nimport a from \"./BaseRaster.js\";\nimport { isXAxis as o, isYAxis as i, parseGridCoverage as n } from \"./covJSONParser.js\";\nimport c from \"./InMemoryRaster.js\";\nimport { computeStatisticsHistograms as l } from \"../rasterFunctions/stretchUtils.js\";\nimport p from \"../../../rest/support/FeatureSet.js\";\nlet m = class extends a {\n  constructor() {\n    super(...arguments), this.datasetFormat = \"CovJSON\";\n  }\n  async open(e) {\n    await this.init();\n    const {\n        extent: t,\n        pixelBlocks: r,\n        multidimensionalInfo: s,\n        attributeTable: a,\n        bandNames: o\n      } = await this._fetchData(e),\n      {\n        statistics: i,\n        histograms: n\n      } = l(r[0]),\n      m = o?.map(e => ({\n        BandName: e\n      })),\n      h = {\n        DataType: a ? \"Thematic\" : s ? \"Scientific\" : \"Generic\",\n        BandProperties: m\n      },\n      d = new c({\n        source: {\n          extent: t,\n          pixelBlocks: r,\n          attributeTable: a ? p.fromJSON(a) : null,\n          multidimensionalInfo: s,\n          statistics: i,\n          histograms: n,\n          keyProperties: h,\n          isPseudoSpatialReference: !1\n        }\n      });\n    await d.open(), this._inMemoryRaster = d;\n    const u = this.source ? \"\" : this.url.slice(this.url.lastIndexOf(\"/\") + 1);\n    this._set(\"datasetName\", u.slice(0, u.indexOf(\".\"))), this._set(\"rasterInfo\", d.rasterInfo);\n  }\n  fetchRawTile(e, t, r, s = {}) {\n    return this._inMemoryRaster.fetchRawTile(e, t, r, s);\n  }\n  async _fetchData(e) {\n    const r = this.source ?? (await this.request(this.url, {\n        signal: e?.signal\n      })).data,\n      s = \"imagery-tile-layer:open-coverage-json\";\n    if (\"coverage\" !== r.type?.toLowerCase() || \"grid\" !== r.domain?.domainType?.toLowerCase()) throw new t(s, \"Only coverage with Grid domain type is supported\");\n    if (!r.ranges) throw new t(s, \"Missing ranges in the grid coverage data\");\n    if (!r.domain.referencing?.length) throw new t(s, \"Missing domain referencing in the grid coverage data\");\n    const a = Object.values(r.ranges);\n    for (let n = 0; n < a.length; n++) {\n      const {\n        axisNames: e,\n        shape: r,\n        type: c,\n        values: l\n      } = a[n];\n      if (!(\"ndarray\" === c.toLowerCase() && l?.length && e?.length && r?.length)) throw new t(s, \"Only ranges with valid NdArray, axisNames, shape, and inline values are supported\");\n      if (!(o(e[e.length - 1]) && i(e[e.length - 2]))) throw new t(s, \"Only row-major ordered pixel values are supported. X axis must be the last axis.\");\n    }\n    return n(r);\n  }\n};\ne([r({\n  type: String,\n  json: {\n    write: !0\n  }\n})], m.prototype, \"datasetFormat\", void 0), e([r({\n  constructOnly: !0\n})], m.prototype, \"source\", void 0), m = e([s(\"esri.layers.support.rasterDatasets.CovJSONRaster\")], m);\nconst h = m;\nexport { h as default };", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nfunction n(e, t) {\n  if (!e || !t) return [];\n  let l = t;\n  t.includes(\"/\") ? (l = t.slice(0, t.indexOf(\"/\")), t = t.slice(t.indexOf(\"/\") + 1)) : t = \"\";\n  const r = [];\n  if (t) {\n    const u = n(e, l);\n    for (let e = 0; e < u.length; e++) {\n      n(u[e], t).forEach(n => r.push(n));\n    }\n    return r;\n  }\n  const u = e.getElementsByTagNameNS(\"*\", l);\n  if (!u || 0 === u.length) return [];\n  for (let n = 0; n < u.length; n++) r.push(u[n] || u.item(n));\n  return r;\n}\nfunction e(t, l) {\n  if (!t || !l) return null;\n  let r = l;\n  l.includes(\"/\") ? (r = l.slice(0, l.indexOf(\"/\")), l = l.slice(l.indexOf(\"/\") + 1)) : l = \"\";\n  const u = n(t, r);\n  return u.length > 0 ? l ? e(u[0], l) : u[0] : null;\n}\nfunction t(n, t = null) {\n  const l = t ? e(n, t) : n;\n  let r;\n  return l ? (r = l.textContent || l.nodeValue, r ? r.trim() : null) : null;\n}\nfunction l(e, t) {\n  const l = n(e, t),\n    r = [];\n  let u;\n  for (let n = 0; n < l.length; n++) u = l[n].textContent || l[n].nodeValue, u && (u = u.trim(), \"\" !== u && r.push(u));\n  return r;\n}\nfunction r(n, e = null) {\n  const l = t(n, e);\n  return l?.split(\" \").map(n => Number(n)) ?? [];\n}\nfunction u(n, e) {\n  return l(n, e).map(n => Number(n));\n}\nfunction o(n, e) {\n  const l = t(n, e);\n  return Number(l);\n}\nfunction i(n, e) {\n  const t = n?.nodeName?.toLowerCase(),\n    l = e.toLowerCase();\n  return t.slice(t.lastIndexOf(\":\") + 1) === l;\n}\nfunction c(n) {\n  return n.nodeName.slice(n.nodeName.lastIndexOf(\":\") + 1);\n}\nexport { e as getElement, o as getElementNumericValue, u as getElementNumericValues, t as getElementValue, l as getElementValues, n as getElements, c as getNodeNameIgnoreNS, r as getSpaceDelimitedNumericValues, i as isSameTagIgnoreNS };", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport \"../../../geometry.js\";\nimport { isSome as e } from \"../../../core/arrayUtils.js\";\nimport { isWKT2 as t } from \"../../../geometry/support/spatialReferenceUtils.js\";\nimport { isSameTagIgnoreNS as n, getElementValue as r, getElements as s, getElement as a, getElementNumericValue as i, getElementNumericValues as l } from \"./xmlUtilities.js\";\nimport o from \"../rasterTransforms/PolynomialTransform.js\";\nimport f from \"../../../geometry/SpatialReference.js\";\nfunction u(e, t) {\n  if (!e || !t) return null;\n  const n = [];\n  for (let r = 0; r < e.length; r++) n.push(e[r]), n.push(t[r]);\n  return n;\n}\nfunction c(e) {\n  const t = a(e, \"GeodataXform\"),\n    n = d(i(t, \"SpatialReference/WKID\") || r(t, \"SpatialReference/WKT\"));\n  if (\"typens:PolynomialXform\" !== t.getAttribute(\"xsi:type\")) return {\n    spatialReference: n,\n    transform: null\n  };\n  const s = i(t, \"PolynomialOrder\") ?? 1,\n    f = l(t, \"CoeffX/Double\"),\n    c = l(t, \"CoeffY/Double\"),\n    m = l(t, \"InverseCoeffX/Double\"),\n    p = l(t, \"InverseCoeffY/Double\"),\n    S = u(f, c),\n    C = u(m, p);\n  return {\n    spatialReference: n,\n    transform: S && C && S.length && C.length ? new o({\n      spatialReference: n,\n      polynomialOrder: s,\n      forwardCoefficients: S,\n      inverseCoefficients: C\n    }) : null\n  };\n}\nfunction m(e) {\n  const t = i(e, \"NoDataValue\"),\n    n = a(e, \"Histograms/HistItem\"),\n    l = i(n, \"HistMin\"),\n    o = i(n, \"HistMax\"),\n    f = i(n, \"BucketCount\"),\n    u = r(n, \"HistCounts\")?.split(\"|\").map(e => Number(e));\n  let c, m, d, p;\n  s(e, \"Metadata/MDI\").forEach(e => {\n    const t = Number(e.textContent ?? e.nodeValue);\n    switch (e.getAttribute(\"key\").toUpperCase()) {\n      case \"STATISTICS_MINIMUM\":\n        c = t;\n        break;\n      case \"STATISTICS_MAXIMUM\":\n        m = t;\n        break;\n      case \"STATISTICS_MEAN\":\n        d = t;\n        break;\n      case \"STATISTICS_STDDEV\":\n        p = t;\n    }\n  });\n  const S = i(e, \"Metadata/SourceBandIndex\");\n  return {\n    noDataValue: t,\n    histogram: u?.length && null != l && null != o ? {\n      min: l,\n      max: o,\n      size: f || u.length,\n      counts: u\n    } : null,\n    sourceBandIndex: S,\n    statistics: null != c && null != m ? {\n      min: c,\n      max: m,\n      avg: d,\n      stddev: p\n    } : null\n  };\n}\nfunction d(e) {\n  if (!e) return null;\n  let n = Number(e);\n  if (!isNaN(n) && 0 !== n) return new f({\n    wkid: n\n  });\n  if (e = String(e).trim(), t(e)) return new f({\n    wkt2: e\n  });\n  const r = e.toUpperCase();\n  if (r.startsWith(\"COMPD_CS\")) {\n    if (!r.includes(\"VERTCS\") || !r.includes(\"GEOGCS\") && !r.startsWith(\"PROJCS\")) return null;\n    const t = r.indexOf(\"VERTCS\"),\n      s = r.indexOf(\"PROJCS\"),\n      a = s > -1 ? s : r.indexOf(\"GEOGCS\");\n    if (-1 === a) return null;\n    const i = e.slice(a, e.lastIndexOf(\"]\", t) + 1).trim(),\n      l = e.slice(t, e.lastIndexOf(\"]\")).trim();\n    n = p(i);\n    const o = new f(n ? {\n        wkid: n\n      } : {\n        wkt: i\n      }),\n      u = p(l);\n    return u && (o.vcsWkid = u), o;\n  }\n  return r.startsWith(\"GEOGCS\") || r.startsWith(\"PROJCS\") ? (n = p(e), new f(0 !== n ? {\n    wkid: n\n  } : {\n    wkt: e\n  })) : null;\n}\nfunction p(e) {\n  const t = e.replaceAll(\"]\", \"[\").replaceAll('\"', \"\").split(\"[\").map(e => e.trim()).filter(e => \"\" !== e),\n    n = t[t.length - 1].split(\",\"),\n    r = n[0]?.toLowerCase();\n  if ((\"epsg\" === r || \"esri\" === r) && e.endsWith('\"]]')) {\n    const e = Number(n[1]);\n    if (!isNaN(e) && 0 !== e) return e;\n  }\n  return 0;\n}\nfunction S(t) {\n  if (\"pamdataset\" !== t?.documentElement.tagName?.toLowerCase()) return {};\n  const a = {\n    spatialReference: null,\n    transform: null,\n    metadata: {},\n    rasterBands: [],\n    statistics: null,\n    histograms: null\n  };\n  t.documentElement.childNodes.forEach(e => {\n    if (1 === e.nodeType) if (n(e, \"SRS\")) {\n      if (!a.spatialReference) {\n        const t = r(e);\n        a.spatialReference = d(t);\n      }\n    } else if (n(e, \"Metadata\")) {\n      if (\"xml:ESRI\" === e.getAttribute(\"domain\")) {\n        const {\n          spatialReference: t,\n          transform: n\n        } = c(e);\n        a.transform = n, a.spatialReference || (a.spatialReference = t);\n      } else {\n        s(e, \"MDI\").forEach(e => a.metadata[e.getAttribute(\"key\")] = r(e));\n      }\n    } else if (n(e, \"PAMRasterBand\")) {\n      const t = m(e);\n      null != t.sourceBandIndex && null == a.rasterBands[t.sourceBandIndex] ? a.rasterBands[t.sourceBandIndex] = t : a.rasterBands.push(t);\n    }\n  });\n  const i = a.rasterBands;\n  if (i.length) {\n    const t = !!i[0].statistics;\n    a.statistics = t ? i.map(e => e.statistics).filter(e) : null;\n    const n = !!i[0].histogram;\n    a.histograms = n ? i.map(e => e.histogram).filter(e) : null;\n  }\n  return a;\n}\nexport { S as parsePAMInfo, d as parseSpatialReference };", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { _ as t } from \"../../../chunks/tslib.es6.js\";\nimport \"../../../geometry.js\";\nimport s from \"../../../core/Error.js\";\nimport has from \"../../../core/has.js\";\nimport { eachAlways as e, createAbortError as r } from \"../../../core/promiseUtils.js\";\nimport { property as a } from \"../../../core/accessorSupport/decorators/property.js\";\nimport \"../../../core/Logger.js\";\nimport \"../../../core/RandomLCG.js\";\nimport { subclass as o } from \"../../../core/accessorSupport/decorators/subclass.js\";\nimport i from \"./BaseRaster.js\";\nimport n from \"./InMemoryRaster.js\";\nimport { parsePAMInfo as m } from \"./pamParser.js\";\nimport { getFormat as l } from \"../rasterFormats/RasterCodec.js\";\nimport { estimateStatisticsFromHistograms as p } from \"../rasterFunctions/stretchUtils.js\";\nimport c from \"../rasterTransforms/PolynomialTransform.js\";\nimport f from \"../../../geometry/SpatialReference.js\";\nimport u from \"../../../geometry/Extent.js\";\nlet h = class extends i {\n  async open(t) {\n    await this.init();\n    const s = await this._fetchData(t);\n    let {\n      spatialReference: e,\n      statistics: r,\n      histograms: a,\n      transform: o\n    } = await this._fetchAuxiliaryData(t);\n    const i = !e;\n    i && (e = new f({\n      wkid: 3857\n    })), a?.length && null == r && (r = p(a));\n    const {\n      width: m,\n      height: l\n    } = s;\n    let c = new u({\n      xmin: -.5,\n      ymin: .5 - l,\n      xmax: m - .5,\n      ymax: .5,\n      spatialReference: e\n    });\n    const h = o ? o.forwardTransform(c) : c;\n    let d = !0;\n    if (o) {\n      const t = o.forwardCoefficients;\n      d = t && 0 === t[1] && 0 === t[2], d && (o = null, c = h);\n    }\n    const w = new n({\n      source: {\n        extent: h,\n        nativeExtent: c,\n        transform: o,\n        pixelBlocks: [s],\n        statistics: r,\n        histograms: a,\n        keyProperties: {\n          DateType: \"Processed\"\n        },\n        isPseudoSpatialReference: i\n      },\n      ioConfig: {\n        sampling: \"closest\",\n        skipStatistics: !0\n      }\n    });\n    this.ioConfig.skipMapInfo && (w.ioConfig.skipMapInfo = !0), await w.open(), w.source = null, this._set(\"rasterInfo\", w.rasterInfo), this._inMemoryRaster = w;\n  }\n  fetchRawTile(t, s, e, r = {}) {\n    return this._inMemoryRaster.fetchRawTile(t, s, e, r);\n  }\n  async _fetchData(t) {\n    const {\n        data: e\n      } = await this.request(this.url, {\n        responseType: \"array-buffer\",\n        signal: t?.signal\n      }),\n      r = l(e).toUpperCase();\n    if (\"JPG\" !== r && \"PNG\" !== r && \"GIF\" !== r && \"BMP\" !== r) throw new s(\"image-aux-raster:open\", \"the data is not a supported format\");\n    this._set(\"datasetFormat\", r);\n    const a = r.toLowerCase(),\n      o = \"gif\" === a || \"bmp\" === a || !has(\"ios\"),\n      i = await this.decodePixelBlock(e, {\n        format: a,\n        useCanvas: o,\n        hasNoZlibMask: !0\n      });\n    if (null == i) throw new s(\"image-aux-raster:open\", \"the data cannot be decoded\");\n    return i;\n  }\n  async _fetchAuxiliaryData(t) {\n    const s = t?.signal,\n      {\n        skipExtensions: a = [],\n        skipMapInfo: o\n      } = this.ioConfig,\n      i = o || a.includes(\"aux.xml\") ? null : this.request(this.url + \".aux.xml\", {\n        responseType: \"xml\",\n        signal: s\n      }),\n      n = this.datasetFormat,\n      l = \"JPG\" === n ? \"jgw\" : \"PNG\" === n ? \"pgw\" : \"BMP\" === n ? \"bpw\" : null,\n      p = l && a.includes(l) ? null : this.request(this.url.slice(0, this.url.lastIndexOf(\".\")) + \".\" + l, {\n        responseType: \"text\",\n        signal: s\n      }),\n      f = await e([i, p]);\n    if (s?.aborted) throw r();\n    const u = m(f[0].value?.data);\n    if (!u.transform) {\n      const t = f[1].value ? f[1].value.data.split(\"\\n\").slice(0, 6).map(t => Number(t)) : null;\n      u.transform = 6 === t?.length ? new c({\n        forwardCoefficients: [t[4], t[5], t[0], -t[1], t[2], -t[3]]\n      }) : null;\n    }\n    return u;\n  }\n};\nt([a({\n  type: String,\n  json: {\n    write: !0\n  }\n})], h.prototype, \"datasetFormat\", void 0), h = t([o(\"esri.layers.support.rasterDatasets.ImageAuxRaster\")], h);\nconst d = h;\nexport { d as default };", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { _ as e } from \"../../../chunks/tslib.es6.js\";\nimport \"../../../geometry.js\";\nimport t from \"../../../core/Error.js\";\nimport { assertIsSome as i } from \"../../../core/maybe.js\";\nimport { urlToObject as s } from \"../../../core/urlUtils.js\";\nimport { property as r } from \"../../../core/accessorSupport/decorators/property.js\";\nimport \"../../../core/has.js\";\nimport \"../../../core/Logger.js\";\nimport \"../../../core/RandomLCG.js\";\nimport { subclass as a } from \"../../../core/accessorSupport/decorators/subclass.js\";\nimport l from \"../RasterInfo.js\";\nimport o from \"../RasterStorageInfo.js\";\nimport n from \"../TileInfo.js\";\nimport { TilemapCache as c } from \"../TilemapCache.js\";\nimport m from \"./BaseRaster.js\";\nimport { setValidBoundary as u } from \"../rasterFunctions/pixelUtils.js\";\nimport h from \"../rasterTransforms/GCSShiftTransform.js\";\nimport { patchServiceInfo as f, fetchServiceRasterInfo as p } from \"../../../rest/imageService/fetchRasterInfo.js\";\nimport d from \"../../../geometry/SpatialReference.js\";\nimport y from \"../../../geometry/Point.js\";\nimport x from \"../../../geometry/Extent.js\";\nlet g = class extends m {\n  constructor() {\n    super(...arguments), this._levelOffset = 0, this._tilemapCache = null, this._slices = null, this.datasetFormat = \"RasterTileServer\", this.tileType = null;\n  }\n  async open(e) {\n    await this.init();\n    const r = e?.signal,\n      a = this.sourceJSON ? {\n        data: this.sourceJSON\n      } : await this.request(this.url, {\n        query: {\n          f: \"json\"\n        },\n        signal: r\n      });\n    a.ssl && (this.url = this.url.replace(/^http:/i, \"https:\"));\n    const l = a.data;\n    if (this.sourceJSON = l, !l) throw new t(\"imageserverraster:open\", \"cannot initialize tiled image service, missing service info\");\n    if (!l.tileInfo) throw new t(\"imageserverraster:open\", \"use ImageryLayer to open non-tiled image services\");\n    this._fixScaleInServiceInfo();\n    const m = [\"jpg\", \"jpeg\", \"png\", \"png8\", \"png24\", \"png32\", \"mixed\"];\n    this.tileType = l.cacheType, null == this.tileType && (m.includes(l.tileInfo.format.toLowerCase()) ? this.tileType = \"Map\" : \"lerc\" === l.tileInfo.format.toLowerCase() ? this.tileType = \"Elevation\" : this.tileType = \"Raster\"), this.datasetName = l.name?.slice(l.name.indexOf(\"/\") + 1) ?? \"\";\n    const u = await this._fetchRasterInfo({\n      signal: r\n    });\n    if (null == u) throw new t(\"image-server-raster:open\", \"cannot initialize image service\");\n    f(u, l);\n    const h = \"Map\" === this.tileType ? v(l.tileInfo, l) : n.fromJSON(l.tileInfo);\n    i(h);\n    const [p, d] = this._computeMinMaxLOD(u, h),\n      {\n        extent: y,\n        pixelSize: x\n      } = u,\n      g = .5 / u.width * x.x,\n      I = Math.max(x.x, x.y),\n      {\n        lods: w\n      } = h;\n    (\"Map\" !== this.tileType && 0 !== l.maxScale || Math.abs(x.x - x.y) > g || !w.some(e => Math.abs(e.resolution - I) < g)) && (x.x = x.y = p.resolution, u.width = Math.ceil((y.xmax - y.xmin) / x.x - .1), u.height = Math.ceil((y.ymax - y.ymin) / x.y - .1));\n    const j = p.level - d.level,\n      [M, b] = h.size,\n      T = [],\n      _ = [];\n    w.forEach((e, t) => {\n      e.level >= d.level && e.level <= p.level && T.push({\n        x: e.resolution,\n        y: e.resolution\n      }), t < w.length - 1 && _.push(Math.round(10 * e.resolution / w[t + 1].resolution) / 10);\n    }), T.sort((e, t) => e.x - t.x);\n    const O = this.computeBlockBoundary(y, M, b, h.origin, T, j),\n      R = T.length > 1 ? T.slice(1) : null;\n    let z;\n    l.transposeInfo && (z = {\n      tileSize: [l.transposeInfo.rows, l.transposeInfo.cols],\n      packetSize: u.keyProperties?._yxs.PacketSize ?? 0\n    });\n    const N = _.length <= 1 || _.length >= 3 && _.slice(0, -1).every(e => e === _[0]) ? _[0] ?? 2 : Math.round(10 / (d.resolution / p.resolution) ** (-1 / j)) / 10;\n    if (u.storageInfo = new o({\n      blockWidth: h.size[0],\n      blockHeight: h.size[1],\n      pyramidBlockWidth: h.size[0],\n      pyramidBlockHeight: h.size[1],\n      pyramidResolutions: R,\n      pyramidScalingFactor: N,\n      compression: h.format,\n      origin: h.origin,\n      firstPyramidLevel: 1,\n      maximumPyramidLevel: j,\n      tileInfo: h,\n      transposeInfo: z,\n      blockBoundary: O\n    }), S(u), this._set(\"rasterInfo\", u), l.capabilities.toLowerCase().includes(\"tilemap\")) {\n      const e = {\n        tileInfo: u.storageInfo.tileInfo,\n        parsedUrl: s(this.url),\n        url: this.url,\n        tileServers: []\n      };\n      this._tilemapCache = new c({\n        layer: e\n      });\n    }\n  }\n  async fetchRawTile(e, t, i, s = {}) {\n    const {\n        storageInfo: r,\n        extent: a\n      } = this.rasterInfo,\n      {\n        transposeInfo: l\n      } = r,\n      o = null != l && !!s.transposedVariableName;\n    if (this._slices && !o && null == s.sliceId) return null;\n    const n = o ? 0 : r.maximumPyramidLevel - e + this._levelOffset,\n      c = `${this.url}/tile/${n}/${t}/${i}`,\n      m = this._slices ? o ? {\n        variable: s.transposedVariableName\n      } : {\n        sliceId: s.sliceId || 0\n      } : null,\n      {\n        data: h\n      } = await this.request(c, {\n        query: m,\n        responseType: \"array-buffer\",\n        signal: s.signal\n      });\n    if (!h) return null;\n    const f = o ? l.tileSize : r.tileInfo.size,\n      p = await this.decodePixelBlock(h, {\n        width: f[0],\n        height: f[1],\n        planes: null,\n        pixelType: null,\n        isPoint: \"Elevation\" === this.tileType,\n        returnInterleaved: o,\n        noDataValue: this.rasterInfo.noDataValue\n      });\n    if (null == p) return null;\n    const d = r.blockBoundary[e];\n    if (\"jpg\" !== r.compression || i > d.minCol && i < d.maxCol && t > d.minRow && t < d.maxRow) return p;\n    const {\n        origin: y,\n        blockWidth: x,\n        blockHeight: g\n      } = r,\n      {\n        x: v,\n        y: S\n      } = this.getPyramidPixelSize(e),\n      I = Math.round((a.xmin - y.x) / v) % x,\n      w = Math.round((a.xmax - y.x) / v) % x || x,\n      j = Math.round((y.y - a.ymax) / S) % g,\n      M = Math.round((y.y - a.ymin) / S) % g || g,\n      b = i === d.minCol ? I : 0,\n      T = t === d.minRow ? j : 0,\n      _ = i === d.maxCol ? w : x,\n      O = t === d.maxRow ? M : g;\n    return u(p, {\n      x: b,\n      y: T\n    }, {\n      width: _ - b,\n      height: O - T\n    }), p;\n  }\n  getSliceIndex(e) {\n    if (!this._slices || null == e || 0 === e.length) return null;\n    const t = e;\n    for (let i = 0; i < this._slices.length; i++) {\n      const e = this._slices[i].multidimensionalDefinition;\n      if (e.length === t.length && !e.some(e => {\n        const i = t.find(t => e.variableName === t.variableName && t.dimensionName === e.dimensionName);\n        if (!i) return !0;\n        return (Array.isArray(e.values[0]) ? `${e.values[0][0]}-${e.values[0][1]}` : e.values[0]) !== (Array.isArray(i.values[0]) ? `${i.values[0][0]}-${i.values[0][1]}` : i.values[0]);\n      })) return i;\n    }\n    return null;\n  }\n  async fetchVariableStatisticsHistograms(e, t) {\n    const i = this.request(this.url + \"/statistics\", {\n        query: {\n          variable: e,\n          f: \"json\"\n        },\n        signal: t\n      }).then(e => e.data?.statistics),\n      s = this.request(this.url + \"/histograms\", {\n        query: {\n          variable: e,\n          f: \"json\"\n        },\n        signal: t\n      }).then(e => e.data?.histograms),\n      r = await Promise.all([i, s]);\n    return r[0] && r[0].forEach(e => {\n      e.avg = e.mean, e.stddev = e.standardDeviation;\n    }), r[1]?.[0]?.counts?.length || (r[1] = null), {\n      statistics: r[0] || null,\n      histograms: r[1] || null\n    };\n  }\n  async computeBestPyramidLevelForLocation(e, t = {}) {\n    if (!this._tilemapCache) return 0;\n    let i = this.identifyPixelLocation(e, 0, t.datumTransformation);\n    if (null === i) return null;\n    let s = 0;\n    const {\n      maximumPyramidLevel: r\n    } = this.rasterInfo.storageInfo;\n    let a = r - s + this._levelOffset;\n    const l = i.srcLocation;\n    for (; a >= 0;) {\n      try {\n        if (\"available\" === (await this._tilemapCache.fetchAvailability(a, i.row, i.col, t))) break;\n      } catch {}\n      if (a--, s++, i = this.identifyPixelLocation(l, s, t.datumTransformation), null === i) return null;\n    }\n    return -1 === a || null == i ? null : s;\n  }\n  async _fetchRasterInfo(e) {\n    const t = this.sourceJSON;\n    if (\"Map\" === this.tileType) {\n      const e = t.fullExtent || t.extent,\n        i = Math.ceil((e.xmax - e.xmin) / t.pixelSizeX - .1),\n        s = Math.ceil((e.ymax - e.ymin) / t.pixelSizeY - .1),\n        r = d.fromJSON(t.spatialReference || e.spatialReference),\n        a = new y({\n          x: t.pixelSizeX,\n          y: t.pixelSizeY,\n          spatialReference: r\n        });\n      return new l({\n        width: i,\n        height: s,\n        bandCount: 3,\n        extent: x.fromJSON(e),\n        spatialReference: r,\n        pixelSize: a,\n        pixelType: \"u8\",\n        statistics: null,\n        keyProperties: {\n          DataType: \"processed\"\n        }\n      });\n    }\n    const {\n        signal: i\n      } = e,\n      s = p(this.url, this.sourceJSON, {\n        signal: i,\n        query: this.ioConfig.customFetchParameters\n      }),\n      r = t.hasMultidimensions ? this.request(`${this.url}/slices`, {\n        query: {\n          f: \"json\"\n        },\n        signal: i\n      }).then(e => e.data?.slices).catch(() => null) : null,\n      a = await Promise.all([s, r]);\n    return this._slices = a[1], a[0];\n  }\n  _fixScaleInServiceInfo() {\n    const {\n      sourceJSON: e\n    } = this;\n    e.minScale && e.minScale < 0 && (e.minScale = 0), e.maxScale && e.maxScale < 0 && (e.maxScale = 0);\n  }\n  _computeMinMaxLOD(e, t) {\n    const {\n        pixelSize: i\n      } = e,\n      s = .5 / e.width * i.x,\n      {\n        lods: r\n      } = t,\n      a = t.lodAt(Math.max.apply(null, r.map(e => e.level))),\n      l = t.lodAt(Math.min.apply(null, r.map(e => e.level))),\n      {\n        tileType: o\n      } = this;\n    if (\"Map\" === o) return this._levelOffset = r[0].level, [a, l];\n    if (\"Raster\" === o) {\n      return [r.find(e => e.resolution === i.x) ?? a, l];\n    }\n    const {\n      minScale: n,\n      maxScale: c\n    } = this.sourceJSON;\n    let m = a;\n    c > 0 && (m = r.find(e => Math.abs(e.scale - c) < s), m || (m = r.filter(e => e.scale > c).sort((e, t) => e.scale > t.scale ? 1 : -1)[0] ?? a));\n    let u = l;\n    return n > 0 && (u = r.find(e => Math.abs(e.scale - n) < s) ?? l, this._levelOffset = u.level - l.level), [m, u];\n  }\n};\nfunction v(e, t) {\n  if (!e) return null;\n  const {\n    minScale: i,\n    maxScale: s,\n    minLOD: r,\n    maxLOD: a\n  } = t;\n  if (null != r && null != a) return n.fromJSON({\n    ...e,\n    lods: e.lods.filter(({\n      level: e\n    }) => null != e && e >= r && e <= a)\n  });\n  if (0 !== i && 0 !== s) {\n    const t = e => Math.round(1e4 * e) / 1e4,\n      r = i ? t(i) : 1 / 0,\n      a = s ? t(s) : -1 / 0;\n    return n.fromJSON({\n      ...e,\n      lods: e.lods.filter(e => {\n        const i = t(e.scale);\n        return i <= r && i >= a;\n      })\n    });\n  }\n  return n.fromJSON(e);\n}\nfunction S(e) {\n  const {\n    extent: t,\n    spatialReference: i\n  } = e;\n  t.xmin > -1 && t.xmax > 181 && i?.wkid && i.isGeographic && (e.nativeExtent = e.extent, e.transform = new h(), e.extent = e.transform.forwardTransform(t));\n}\ne([r({\n  type: String,\n  json: {\n    write: !0\n  }\n})], g.prototype, \"datasetFormat\", void 0), e([r()], g.prototype, \"tileType\", void 0), g = e([a(\"esri.layers.support.rasterDatasets.ImageServerRaster\")], g);\nconst I = g;\nexport { I as default };", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { _ as t } from \"../../../chunks/tslib.es6.js\";\nimport \"../../../geometry.js\";\nimport e from \"../../../core/Error.js\";\nimport { property as r } from \"../../../core/accessorSupport/decorators/property.js\";\nimport \"../../../core/has.js\";\nimport \"../../../core/Logger.js\";\nimport \"../../../core/RandomLCG.js\";\nimport { subclass as s } from \"../../../core/accessorSupport/decorators/subclass.js\";\nimport o from \"../PixelBlock.js\";\nimport i from \"../RasterInfo.js\";\nimport a from \"../RasterStorageInfo.js\";\nimport n from \"./BaseRaster.js\";\nimport { parseSpatialReference as l, parsePAMInfo as f } from \"./pamParser.js\";\nimport { getElement as c, getElementValue as m } from \"./xmlUtilities.js\";\nimport { isPlatformLittleEndian as p } from \"../rasterFormats/utils.js\";\nimport { estimateStatisticsFromHistograms as h } from \"../rasterFunctions/stretchUtils.js\";\nimport u from \"../../../geometry/SpatialReference.js\";\nimport g from \"../../../geometry/Extent.js\";\nimport d from \"../../../geometry/Point.js\";\nconst y = new Map();\ny.set(\"Int8\", \"s8\"), y.set(\"UInt8\", \"u8\"), y.set(\"Int16\", \"s16\"), y.set(\"UInt16\", \"u16\"), y.set(\"Int32\", \"s32\"), y.set(\"UInt32\", \"u32\"), y.set(\"Float32\", \"f32\"), y.set(\"Float64\", \"f32\"), y.set(\"Double64\", \"f32\");\nconst x = new Map();\nx.set(\"none\", {\n  blobExtension: \".til\",\n  isOneSegment: !0,\n  decoderFormat: \"bip\"\n}), x.set(\"lerc\", {\n  blobExtension: \".lrc\",\n  isOneSegment: !1,\n  decoderFormat: \"lerc\"\n}), x.set(\"deflate\", {\n  blobExtension: \".pzp\",\n  isOneSegment: !0,\n  decoderFormat: \"deflate\"\n}), x.set(\"jpeg\", {\n  blobExtension: \".pjg\",\n  isOneSegment: !0,\n  decoderFormat: \"jpg\"\n});\nlet w = class extends n {\n  constructor() {\n    super(...arguments), this._files = null, this._storageIndex = null, this.datasetFormat = \"MRF\";\n  }\n  async open(t) {\n    await this.init(), this.datasetName = this.url.slice(this.url.lastIndexOf(\"/\") + 1);\n    const e = t ? t.signal : null,\n      r = await this.request(this.url, {\n        responseType: \"xml\",\n        signal: e\n      }),\n      {\n        rasterInfo: s,\n        files: o\n      } = this._parseHeader(r.data),\n      {\n        skipMapInfo: i,\n        skipExtensions: a = []\n      } = this.ioConfig;\n    if (!a.includes(\"aux.xml\") && !i) {\n      const e = await this._fetchAuxiliaryData(t);\n      null != e && (s.statistics = e.statistics ?? s.statistics, s.histograms = e.histograms, e.histograms && null == s.statistics && (s.statistics = h(e.histograms)));\n    }\n    i && this.updateImageSpaceRasterInfo(s), this._set(\"rasterInfo\", s), this._files = o;\n    const n = await this.request(o.index, {\n      responseType: \"array-buffer\",\n      signal: e\n    });\n    this._storageIndex = I(n.data);\n    const {\n        blockWidth: l,\n        blockHeight: f\n      } = this.rasterInfo.storageInfo,\n      c = this.rasterInfo.storageInfo.pyramidScalingFactor,\n      {\n        width: m,\n        height: p\n      } = this.rasterInfo,\n      u = [],\n      g = this._getBandSegmentCount();\n    let d = 0,\n      y = -1;\n    for (; d < this._storageIndex.length;) {\n      y++;\n      const t = Math.ceil(m / l / c ** y) - 1,\n        e = Math.ceil(p / f / c ** y) - 1;\n      d += (t + 1) * (e + 1) * g * 4, u.push({\n        maxRow: e,\n        maxCol: t,\n        minCol: 0,\n        minRow: 0\n      });\n    }\n    this.rasterInfo.storageInfo.blockBoundary = u, y > 0 && (this.rasterInfo.storageInfo.firstPyramidLevel = 1, this.rasterInfo.storageInfo.maximumPyramidLevel = y), this.updateTileInfo();\n  }\n  async fetchRawTile(t, e, r, s = {}) {\n    const {\n        blockWidth: i,\n        blockHeight: a,\n        blockBoundary: n\n      } = this.rasterInfo.storageInfo,\n      l = n[t];\n    if (!l || l.maxRow < e || l.maxCol < r || l.minRow > e || l.minCol > r) return null;\n    const {\n        bandCount: f,\n        pixelType: c\n      } = this.rasterInfo,\n      {\n        ranges: m,\n        actualTileWidth: p,\n        actualTileHeight: h\n      } = this._getTileLocation(t, e, r);\n    if (!m || 0 === m.length) return null;\n    if (0 === m[0].from && 0 === m[0].to) {\n      const t = new Uint8Array(i * a);\n      return new o({\n        width: i,\n        height: a,\n        pixels: void 0,\n        mask: t,\n        validPixelCount: 0\n      });\n    }\n    const {\n        bandIds: u\n      } = this.ioConfig,\n      g = this._getBandSegmentCount(),\n      d = [];\n    let y = 0;\n    for (y = 0; y < g; y++) u && !u.includes(y) || d.push(this.request(this._files.data, {\n      range: {\n        from: m[y].from,\n        to: m[y].to\n      },\n      responseType: \"array-buffer\",\n      signal: s.signal\n    }));\n    const w = await Promise.all(d),\n      I = w.map(t => t.data.byteLength).reduce((t, e) => t + e),\n      b = new Uint8Array(I),\n      R = [];\n    let A = 0;\n    for (y = 0; y < g; y++) R.push(A), b.set(new Uint8Array(w[y].data), A), A += w[y].data.byteLength;\n    const F = x.get(this.rasterInfo.storageInfo.compression).decoderFormat,\n      S = await this.decodePixelBlock(b.buffer, {\n        width: i,\n        height: a,\n        format: F,\n        planes: u?.length || f,\n        offsets: R,\n        pixelType: c\n      });\n    if (null == S) return null;\n    let {\n      noDataValue: _\n    } = this.rasterInfo;\n    if (null != _ && \"lerc\" !== F && !S.mask && (_ = _[0], null != _)) {\n      const t = S.width * S.height,\n        e = new Uint8Array(t);\n      if (Math.abs(_) > 1e24) for (y = 0; y < t; y++) Math.abs((S.pixels[0][y] - _) / _) > 1e-6 && (e[y] = 1);else for (y = 0; y < t; y++) S.pixels[0][y] !== _ && (e[y] = 1);\n      S.mask = e;\n    }\n    let k = 0,\n      M = 0;\n    if (p !== i || h !== a) {\n      let t = S.mask;\n      if (t) {\n        for (y = 0; y < a; y++) if (M = y * i, y < h) for (k = p; k < i; k++) t[M + k] = 0;else for (k = 0; k < i; k++) t[M + k] = 0;\n      } else for (t = new Uint8Array(i * a), S.mask = t, y = 0; y < h; y++) for (M = y * i, k = 0; k < p; k++) t[M + k] = 1;\n    }\n    return S;\n  }\n  _getBandSegmentCount() {\n    return x.get(this.rasterInfo.storageInfo.compression).isOneSegment ? 1 : this.rasterInfo.bandCount;\n  }\n  _getTileLocation(t, e, r) {\n    const {\n        blockWidth: s,\n        blockHeight: o,\n        pyramidScalingFactor: i\n      } = this.rasterInfo.storageInfo,\n      {\n        width: a,\n        height: n\n      } = this.rasterInfo,\n      l = this._getBandSegmentCount();\n    let f,\n      c,\n      m,\n      p = 0,\n      h = 0;\n    for (m = 0; m < t; m++) h = i ** m, f = Math.ceil(a / s / h), c = Math.ceil(n / o / h), p += f * c;\n    h = i ** t, f = Math.ceil(a / s / h), c = Math.ceil(n / o / h), p += e * f + r, p *= 4 * l;\n    const u = this._storageIndex.subarray(p, p + 4 * l);\n    let g = 0,\n      d = 0;\n    const y = [];\n    for (let x = 0; x < l; x++) g = u[4 * x] * 2 ** 32 + u[4 * x + 1], d = g + u[4 * x + 2] * 2 ** 32 + u[4 * x + 3], y.push({\n      from: g,\n      to: d\n    });\n    return {\n      ranges: y,\n      actualTileWidth: r < f - 1 ? s : Math.ceil(a / h) - s * (f - 1),\n      actualTileHeight: e < c - 1 ? o : Math.ceil(n / h) - o * (c - 1)\n    };\n  }\n  _parseHeader(t) {\n    const r = c(t, \"MRF_META/Raster\");\n    if (!r) throw new e(\"mrf:open\", \"not a valid MRF format\");\n    const s = c(r, \"Size\"),\n      o = parseInt(s.getAttribute(\"x\"), 10),\n      n = parseInt(s.getAttribute(\"y\"), 10),\n      f = parseInt(s.getAttribute(\"c\"), 10),\n      p = (m(r, \"Compression\") || \"none\").toLowerCase();\n    if (!x.has(p)) throw new e(\"mrf:open\", \"currently does not support compression \" + p);\n    const h = m(r, \"DataType\") || \"UInt8\",\n      w = y.get(h);\n    if (null == w) throw new e(\"mrf:open\", \"currently does not support pixel type \" + h);\n    const I = c(r, \"PageSize\"),\n      b = parseInt(I.getAttribute(\"x\"), 10),\n      R = parseInt(I.getAttribute(\"y\"), 10),\n      A = c(r, \"DataValues\");\n    let F, S;\n    A && (S = A.getAttribute(\"NoData\"), null != S && (F = S.trim().split(\" \").map(t => parseFloat(t))));\n    if (c(t, \"MRF_META/CachedSource\")) throw new e(\"mrf:open\", \"currently does not support MRF referencing other data files\");\n    const _ = c(t, \"MRF_META/GeoTags\"),\n      k = c(_, \"BoundingBox\");\n    let M,\n      j = !1;\n    if (null != k) {\n      const t = parseFloat(k.getAttribute(\"minx\")),\n        e = parseFloat(k.getAttribute(\"miny\")),\n        r = parseFloat(k.getAttribute(\"maxx\")),\n        s = parseFloat(k.getAttribute(\"maxy\")),\n        o = m(_, \"Projection\") || \"\";\n      let i = u.WGS84;\n      if (\"LOCAL_CS[]\" !== o) {\n        if (o.toLowerCase().startsWith(\"epsg:\")) {\n          const t = Number(o.slice(5));\n          isNaN(t) || 0 === t || (i = new u({\n            wkid: t\n          }));\n        } else i = l(o) ?? u.WGS84;\n      } else j = !0, i = new u({\n        wkid: 3857\n      });\n      M = new g(t, e, r, s), M.spatialReference = i;\n    } else j = !0, M = new g({\n      xmin: -.5,\n      ymin: .5 - n,\n      xmax: o - .5,\n      ymax: .5,\n      spatialReference: new u({\n        wkid: 3857\n      })\n    });\n    const C = c(t, \"MRF_META/Rsets\"),\n      T = parseInt(C?.getAttribute(\"scale\") || \"2\", 10),\n      L = M.spatialReference,\n      U = new a({\n        origin: new d({\n          x: M.xmin,\n          y: M.ymax,\n          spatialReference: L\n        }),\n        blockWidth: b,\n        blockHeight: R,\n        pyramidBlockWidth: b,\n        pyramidBlockHeight: R,\n        compression: p,\n        pyramidScalingFactor: T\n      }),\n      B = new d({\n        x: M.width / o,\n        y: M.height / n,\n        spatialReference: L\n      }),\n      E = new i({\n        width: o,\n        height: n,\n        extent: M,\n        isPseudoSpatialReference: j,\n        spatialReference: L,\n        bandCount: f,\n        pixelType: w,\n        pixelSize: B,\n        noDataValue: F,\n        storageInfo: U\n      }),\n      P = m(t, \"datafile\"),\n      W = m(t, \"IndexFile\");\n    return {\n      rasterInfo: E,\n      files: {\n        mrf: this.url,\n        index: W || this.url.replace(\".mrf\", \".idx\"),\n        data: P || this.url.replace(\".mrf\", x.get(p).blobExtension)\n      }\n    };\n  }\n  async _fetchAuxiliaryData(t) {\n    try {\n      const {\n        data: e\n      } = await this.request(this.url + \".aux.xml\", {\n        responseType: \"xml\",\n        signal: t?.signal\n      });\n      return f(e);\n    } catch {\n      return null;\n    }\n  }\n};\nfunction I(t) {\n  if (t.byteLength % 16 > 0) throw new Error(\"invalid array buffer must be multiples of 16\");\n  let e, r, s, o, i, a;\n  if (p) {\n    for (r = new Uint8Array(t), o = new ArrayBuffer(t.byteLength), s = new Uint8Array(o), i = 0; i < t.byteLength / 4; i++) for (a = 0; a < 4; a++) s[4 * i + a] = r[4 * i + 3 - a];\n    e = new Uint32Array(o);\n  } else e = new Uint32Array(t);\n  return e;\n}\nt([r()], w.prototype, \"_files\", void 0), t([r()], w.prototype, \"_storageIndex\", void 0), t([r({\n  type: String,\n  json: {\n    write: !0\n  }\n})], w.prototype, \"datasetFormat\", void 0), w = t([s(\"esri.layers.support.rasterDatasets.MRFRaster\")], w);\nconst b = w;\nexport { b as default };", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { bytesToUTF8 as e } from \"./byteStreamUtils.js\";\nfunction t(e) {\n  const t = e.fields,\n    r = e.records,\n    n = t.some(e => \"oid\" === e.name.toLowerCase()) ? \"OBJECTID\" : \"OID\",\n    i = [{\n      name: n,\n      type: \"esriFieldTypeOID\",\n      alias: \"OID\"\n    }].concat(t.map(e => ({\n      name: e.name,\n      type: \"esriFieldType\" + e.typeName,\n      alias: e.name\n    }))),\n    s = i.map(e => e.name),\n    a = [];\n  let o = 0,\n    l = 0;\n  return r.forEach(e => {\n    const t = {};\n    for (t[n] = o++, l = 1; l < s.length; l++) t[s[l]] = e[l - 1];\n    a.push({\n      attributes: t\n    });\n  }), {\n    displayFieldName: \"\",\n    fields: i,\n    features: a\n  };\n}\nclass r {\n  static get supportedVersions() {\n    return [5];\n  }\n  static parse(r) {\n    const n = new DataView(r),\n      i = 3 & n.getUint8(0);\n    if (3 !== i) return {\n      header: {\n        version: i\n      },\n      recordSet: null\n    };\n    const s = n.getUint32(4, !0),\n      a = n.getUint16(8, !0),\n      o = n.getUint16(10, !0),\n      l = {\n        version: i,\n        recordCount: s,\n        headerByteCount: a,\n        recordByteCount: o\n      };\n    let p = 32;\n    const g = [],\n      u = [];\n    let d;\n    if (3 === i) {\n      for (; 13 !== n.getUint8(p);) d = String.fromCharCode(n.getUint8(p + 11)).trim(), g.push({\n        name: e(new Uint8Array(r, p, 11)),\n        type: d,\n        typeName: [\"String\", \"Date\", \"Double\", \"Boolean\", \"String\", \"Integer\"][[\"C\", \"D\", \"F\", \"L\", \"M\", \"N\"].indexOf(d)],\n        length: n.getUint8(p + 16)\n      }), p += 32;\n      if (p += 1, g.length > 0) for (; u.length < s && r.byteLength - p > o;) {\n        const t = [];\n        32 === n.getUint8(p) ? (p += 1, g.forEach(n => {\n          if (\"C\" === n.type) t.push(e(new Uint8Array(r, p, n.length)).trim());else if (\"N\" === n.type) t.push(parseInt(String.fromCharCode.apply(null, new Uint8Array(r, p, n.length)).trim(), 10));else if (\"F\" === n.type) t.push(parseFloat(String.fromCharCode.apply(null, new Uint8Array(r, p, n.length)).trim()));else if (\"D\" === n.type) {\n            const e = String.fromCharCode.apply(null, new Uint8Array(r, p, n.length)).trim();\n            t.push(new Date(parseInt(e.substring(0, 4), 10), parseInt(e.substring(4, 6), 10) - 1, parseInt(e.substring(6, 8), 10)));\n          }\n          p += n.length;\n        }), u.push(t)) : p += o;\n      }\n    }\n    return {\n      header: l,\n      fields: g,\n      records: u,\n      recordSet: t({\n        fields: g,\n        records: u\n      })\n    };\n  }\n}\nexport { r as default };", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { _ as e } from \"../../../chunks/tslib.es6.js\";\nimport \"../../../geometry.js\";\nimport { isSome as t } from \"../../../core/arrayUtils.js\";\nimport r from \"../../../core/Error.js\";\nimport i from \"../../../core/Logger.js\";\nimport { property as s } from \"../../../core/accessorSupport/decorators/property.js\";\nimport \"../../../core/has.js\";\nimport { subclass as a } from \"../../../core/accessorSupport/decorators/subclass.js\";\nimport n from \"../RasterInfo.js\";\nimport o from \"../RasterStorageInfo.js\";\nimport f from \"./BaseRaster.js\";\nimport l from \"./DBFParser.js\";\nimport { parsePAMInfo as u, parseSpatialReference as p } from \"./pamParser.js\";\nimport { parseSignature as c, getPyramidIFDs as h, getMaskIFDs as m, parseIFD as d, parseFieldValues as y, isBSQConfig as g, getImageInfo as x } from \"../rasterFormats/TiffDecoder.js\";\nimport T from \"../rasterFormats/TiffTags.js\";\nimport { estimateStatisticsFromHistograms as w } from \"../rasterFunctions/stretchUtils.js\";\nimport I from \"../rasterTransforms/PolynomialTransform.js\";\nimport R from \"../../../rest/support/FeatureSet.js\";\nimport b from \"../../../geometry/SpatialReference.js\";\nimport E from \"../../../geometry/Extent.js\";\nimport S from \"../../../geometry/Point.js\";\nconst _ = (e, t) => e.get(t)?.values,\n  F = (e, t) => e.get(t)?.values?.[0];\nlet v = class extends f {\n  constructor() {\n    super(...arguments), this._files = null, this._headerInfo = null, this._bufferSize = 1048576, this.datasetFormat = \"TIFF\";\n  }\n  async open(e) {\n    await this.init();\n    const t = e ? e.signal : null,\n      {\n        data: s\n      } = await this.request(this.url, {\n        range: {\n          from: 0,\n          to: this._bufferSize\n        },\n        responseType: \"array-buffer\",\n        signal: t\n      });\n    if (!s) throw new r(\"tiffraster:open\", \"failed to open url \" + this.url);\n    this.datasetName = this.url.slice(this.url.lastIndexOf(\"/\") + 1, this.url.lastIndexOf(\".\"));\n    const {\n        littleEndian: a,\n        firstIFDPos: n,\n        isBigTiff: o\n      } = c(s),\n      f = [];\n    await this._readIFDs(f, s, a, n, 0, o ? 8 : 4, t);\n    const {\n        imageInfo: l,\n        rasterInfo: u\n      } = k(f),\n      p = h(f),\n      d = m(f);\n    if (this._headerInfo = {\n      littleEndian: a,\n      isBigTiff: o,\n      ifds: f,\n      pyramidIFDs: p,\n      maskIFDs: d,\n      ...l\n    }, this._set(\"rasterInfo\", u), !l.isSupported) throw new r(\"tiffraster:open\", \"this tiff is not supported: \" + l.message);\n    if (!l.tileWidth) throw new r(\"tiffraster:open\", \"none-tiled tiff is not optimized for access, convert to COG and retry.\");\n    u.isPseudoSpatialReference && i.getLogger(this).warn(\"The spatial reference for this tiff is unsupported. Only EPSG spatial reference codes and Esri WKTs are supported.\");\n    const y = f[0].get(\"PREDICTOR\")?.values?.[0],\n      g = f[0].get(\"SAMPLEFORMAT\")?.values?.[0];\n    if (3 === g && 2 === y) throw new r(\"tiffraster:open\", \"unsupported horizontal difference encoding. Predictor=3 is supported for floating point data\");\n    const {\n      skipMapInfo: x,\n      skipExtensions: T = []\n    } = this.ioConfig;\n    if (!T.includes(\"aux.xml\") && !x) {\n      const t = await this._fetchAuxiliaryMetaData(e);\n      null != t && P(t, u);\n    }\n    T.includes(\"vat.dbf\") || 1 !== u.bandCount || \"u8\" !== u.pixelType || x || (u.attributeTable = await this._fetchAuxiliaryTable(e), null != u.attributeTable && (u.keyProperties.DataType = \"thematic\")), x && this.updateImageSpaceRasterInfo(u), this.updateTileInfo();\n  }\n  async fetchRawTile(e, t, r, i = {}) {\n    if (!this._headerInfo?.isSupported || this.isBlockOutside(e, t, r)) return null;\n    const s = await this._fetchRawTiffTile(e, t, r, !1, i);\n    if (null != s && this._headerInfo.hasMaskBand) {\n      const a = await this._fetchRawTiffTile(e, t, r, !0, i);\n      null != a && a.pixels[0] instanceof Uint8Array && (s.mask = a.pixels[0]);\n    }\n    return s;\n  }\n  async _readIFDs(e, t, r, i, s, a = 4, n) {\n    if (!i) return null;\n    if (i >= t.byteLength || i < 0) {\n      t = (await this.request(this.url, {\n        range: {\n          from: i + s,\n          to: i + s + this._bufferSize\n        },\n        responseType: \"array-buffer\",\n        signal: n\n      })).data, s = i + s, i = 0;\n    }\n    const o = await this._readIFD(t, r, i, s, T.tiffTags, a, n);\n    if (e.push(o.ifd), !o.nextIFD) return null;\n    await this._readIFDs(e, t, r, o.nextIFD - s, s, a, n);\n  }\n  async _readIFD(e, r, i, s, a = T.tiffTags, n = 4, o) {\n    if (!e) return null;\n    const f = d(e, r, i, s, a, n);\n    if (f.success) {\n      const i = [];\n      if (f.ifd?.forEach(e => {\n        e.values || i.push(e);\n      }), i.length > 0) {\n        const a = i.map(e => e.offlineOffsetSize).filter(t),\n          n = Math.min.apply(null, a.map(e => e[0]));\n        if (Math.min.apply(null, a.map(e => e[0] + e[1])) - n <= this._bufferSize) {\n          const {\n            data: t\n          } = await this.request(this.url, {\n            range: {\n              from: n,\n              to: n + this._bufferSize\n            },\n            responseType: \"array-buffer\",\n            signal: o\n          });\n          e = t, s = n, i.forEach(t => y(e, r, t, s));\n        }\n      }\n      if (f.ifd?.has(\"GEOKEYDIRECTORY\")) {\n        const t = f.ifd.get(\"GEOKEYDIRECTORY\"),\n          i = t?.values;\n        if (i && i.length > 4) {\n          const a = i[0] + \".\" + i[1] + \".\" + i[2],\n            n = await this._readIFD(e, r, t.valueOffset + 6 - s, s, T.geoKeys, 2, o);\n          t.data = n.ifd, t.data && t.data.set(\"GEOTIFFVersion\", {\n            id: 0,\n            type: 2,\n            valueCount: 1,\n            valueOffset: null,\n            values: [a]\n          });\n        }\n      }\n      return f;\n    }\n    if (f.requiredBufferSize && f.requiredBufferSize !== e.byteLength) {\n      const t = await this.request(this.url, {\n        range: {\n          from: s,\n          to: s + f.requiredBufferSize + 4\n        },\n        responseType: \"array-buffer\",\n        signal: o\n      });\n      return (e = t.data).byteLength < f.requiredBufferSize ? null : this._readIFD(e, r, 0, s, T.tiffTags, 4, o);\n    }\n  }\n  async _fetchRawTiffTile(e, t, r, i, s = {}) {\n    const a = this._getTileLocation(e, t, r, i);\n    if (!a) return null;\n    const {\n        ranges: n,\n        actualTileWidth: o,\n        actualTileHeight: f,\n        ifd: l\n      } = a,\n      u = n.map(e => this.request(this.url, {\n        range: e,\n        responseType: \"array-buffer\",\n        signal: s.signal\n      })),\n      p = await Promise.all(u),\n      c = p.map(e => e.data.byteLength).reduce((e, t) => e + t),\n      h = 1 === p.length ? p[0].data : new ArrayBuffer(c),\n      m = [0],\n      d = [0];\n    if (p.length > 1) {\n      const e = new Uint8Array(h);\n      for (let t = 0, r = 0; t < p.length; t++) {\n        const i = p[t].data;\n        e.set(new Uint8Array(i), r), m[t] = r, r += i.byteLength, d[t] = i.byteLength;\n      }\n    }\n    const {\n        blockWidth: y,\n        blockHeight: g\n      } = this.getBlockWidthHeight(e),\n      x = await this.decodePixelBlock(h, {\n        format: \"tiff\",\n        customOptions: {\n          headerInfo: this._headerInfo,\n          ifd: l,\n          offsets: m,\n          sizes: d\n        },\n        width: y,\n        height: g,\n        planes: null,\n        pixelType: null\n      });\n    if (null == x) return null;\n    let T, w, I;\n    if (o !== y || f !== g) {\n      let e = x.mask;\n      if (e) {\n        for (T = 0; T < g; T++) if (I = T * y, T < f) for (w = o; w < y; w++) e[I + w] = 0;else for (w = 0; w < y; w++) e[I + w] = 0;\n      } else for (e = new Uint8Array(y * g), x.mask = e, T = 0; T < f; T++) for (I = T * y, w = 0; w < o; w++) e[I + w] = 1;\n    }\n    return x;\n  }\n  _getTileLocation(e, t, r, i = !1) {\n    const {\n        firstPyramidLevel: s,\n        blockBoundary: a\n      } = this.rasterInfo.storageInfo,\n      n = 0 === e ? 0 : e - (s - 1),\n      {\n        _headerInfo: o\n      } = this;\n    if (!o) return null;\n    const f = i ? o.maskIFDs[n] : 0 === n ? o?.ifds[0] : o?.pyramidIFDs[n - 1];\n    if (!f) return null;\n    const l = g(f, o),\n      u = _(f, \"TILEOFFSETS\");\n    if (void 0 === u) return null;\n    const p = _(f, \"TILEBYTECOUNTS\"),\n      {\n        minRow: c,\n        minCol: h,\n        maxRow: m,\n        maxCol: d\n      } = a[n];\n    if (t > m || r > d || t < c || r < h) return null;\n    const y = F(f, \"IMAGEWIDTH\"),\n      x = F(f, \"IMAGELENGTH\"),\n      T = F(f, \"TILEWIDTH\"),\n      w = F(f, \"TILELENGTH\"),\n      I = [];\n    if (l) {\n      const {\n        bandCount: e\n      } = this.rasterInfo;\n      for (let i = 0; i < e; i++) {\n        const e = i * (m + 1) * (d + 1) + t * (d + 1) + r;\n        I[i] = {\n          from: u[e],\n          to: u[e] + p[e] - 1\n        };\n      }\n    } else {\n      const e = t * (d + 1) + r;\n      I.push({\n        from: u[e],\n        to: u[e] + p[e] - 1\n      });\n    }\n    for (let g = 0; g < I.length; g++) if (null == I[g].from || !I[g].to || I[g].to < 0) return null;\n    return {\n      ranges: I,\n      ifd: f,\n      actualTileWidth: r === d && y % T || T,\n      actualTileHeight: t === m && x % w || w\n    };\n  }\n  async _fetchAuxiliaryMetaData(e) {\n    try {\n      const {\n        data: t\n      } = await this.request(this.url + \".aux.xml\", {\n        responseType: \"xml\",\n        signal: e?.signal\n      });\n      return u(t);\n    } catch {\n      return null;\n    }\n  }\n  async _fetchAuxiliaryTable(e) {\n    try {\n      const {\n          data: t\n        } = await this.request(this.url + \".vat.dbf\", {\n          responseType: \"array-buffer\",\n          signal: e?.signal\n        }),\n        r = l.parse(t);\n      return r?.recordSet ? R.fromJSON(r.recordSet) : null;\n    } catch {\n      return null;\n    }\n  }\n};\nfunction k(e) {\n  const t = x(e),\n    {\n      width: r,\n      height: i,\n      tileWidth: s,\n      tileHeight: a,\n      planes: f,\n      pixelType: l,\n      compression: u,\n      firstPyramidLevel: c,\n      maximumPyramidLevel: h,\n      pyramidBlockWidth: m,\n      pyramidBlockHeight: d,\n      pyramidResolutions: y,\n      tileBoundary: g,\n      affine: T,\n      metadata: w\n    } = t,\n    R = t.extent.spatialReference?.wkt || t.extent.spatialReference?.wkid;\n  let v = p(R),\n    k = !!t.isPseudoGeographic;\n  null == v && (k = !0, v = new b({\n    wkid: 3857\n  }));\n  const P = new E({\n      ...t.extent,\n      spatialReference: v\n    }),\n    D = new S(P ? {\n      x: P.xmin,\n      y: P.ymax,\n      spatialReference: v\n    } : {\n      x: 0,\n      y: 0\n    }),\n    O = new o({\n      blockWidth: s,\n      blockHeight: a,\n      pyramidBlockWidth: m,\n      pyramidBlockHeight: d,\n      compression: u,\n      origin: D,\n      firstPyramidLevel: c,\n      maximumPyramidLevel: h,\n      pyramidResolutions: y,\n      blockBoundary: g\n    }),\n    L = new S({\n      x: (P.xmax - P.xmin) / r,\n      y: (P.ymax - P.ymin) / i,\n      spatialReference: v\n    }),\n    j = w ? {\n      BandProperties: w.bandProperties,\n      DataType: w.dataType\n    } : {};\n  let B = null;\n  const z = F(e[0], \"PHOTOMETRICINTERPRETATION\"),\n    A = _(e[0], \"COLORMAP\");\n  if (z <= 3 && A?.length > 3 && A.length % 3 == 0) {\n    B = [];\n    const e = A.length / 3;\n    for (let t = 0; t < e; t++) B.push([t, A[t] >>> 8, A[t + e] >>> 8, A[t + 2 * e] >>> 8]);\n  }\n  const C = new n({\n    width: r,\n    height: i,\n    bandCount: f,\n    pixelType: l,\n    pixelSize: L,\n    storageInfo: O,\n    spatialReference: v,\n    isPseudoSpatialReference: k,\n    keyProperties: j,\n    extent: P,\n    colormap: B,\n    statistics: w ? w.statistics : null\n  });\n  if (T?.length && (C.nativeExtent = new E({\n    xmin: -.5,\n    ymin: .5 - i,\n    xmax: r - .5,\n    ymax: .5,\n    spatialReference: v\n  }), C.transform = new I({\n    polynomialOrder: 1,\n    forwardCoefficients: [T[2] + T[0] / 2, T[5] - T[3] / 2, T[0], T[3], -T[1], -T[4]]\n  }), C.extent = C.transform.forwardTransform(C.nativeExtent), C.pixelSize = new S({\n    x: (P.xmax - P.xmin) / r,\n    y: (P.ymax - P.ymin) / i,\n    spatialReference: v\n  }), O.origin.x = -.5, O.origin.y = .5), y) {\n    const {\n      x: e,\n      y: t\n    } = C.pixelSize;\n    y.forEach(r => {\n      r.x *= e, r.y *= t;\n    });\n  }\n  return {\n    imageInfo: t,\n    rasterInfo: C\n  };\n}\nfunction P(e, t) {\n  if (t.statistics = e.statistics ?? t.statistics, t.histograms = e.histograms, e.histograms && null == t.statistics && (t.statistics = w(e.histograms)), e.transform && null == t.transform) {\n    t.transform = e.transform, t.nativeExtent = t.extent;\n    const r = t.transform.forwardTransform(t.nativeExtent);\n    t.pixelSize = new S({\n      x: (r.xmax - r.xmin) / t.width,\n      y: (r.ymax - r.ymin) / t.height,\n      spatialReference: t.spatialReference\n    }), t.extent = r;\n  }\n  t.isPseudoSpatialReference && e.spatialReference && (t.spatialReference = e.spatialReference, t.extent.spatialReference = t.nativeExtent.spatialReference = t.storageInfo.origin.spatialReference = t.spatialReference);\n}\ne([s()], v.prototype, \"_files\", void 0), e([s()], v.prototype, \"_headerInfo\", void 0), e([s()], v.prototype, \"_bufferSize\", void 0), e([s({\n  type: String,\n  json: {\n    write: !0\n  }\n})], v.prototype, \"datasetFormat\", void 0), v = e([a(\"esri.layers.support.rasterDatasets.TIFFRaster\")], v);\nconst D = v;\nexport { D as default };", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport t from \"../../../core/Error.js\";\nimport r from \"./CovJSONRaster.js\";\nimport e from \"./ImageAuxRaster.js\";\nimport s from \"./ImageServerRaster.js\";\nimport o from \"./InMemoryRaster.js\";\nimport a from \"./MRFRaster.js\";\nimport c from \"./TIFFRaster.js\";\nconst n = new Map();\nn.set(\"MRF\", {\n  desc: \"Meta Raster Format\",\n  constructor: a\n}), n.set(\"TIFF\", {\n  desc: \"GeoTIFF\",\n  constructor: c\n}), n.set(\"RasterTileServer\", {\n  desc: \"Raster Tile Server\",\n  constructor: s\n}), n.set(\"JPG\", {\n  desc: \"JPG Raster Format\",\n  constructor: e\n}), n.set(\"PNG\", {\n  desc: \"PNG Raster Format\",\n  constructor: e\n}), n.set(\"GIF\", {\n  desc: \"GIF Raster Format\",\n  constructor: e\n}), n.set(\"BMP\", {\n  desc: \"BMP Raster Format\",\n  constructor: e\n}), n.set(\"CovJSON\", {\n  desc: \"COVJSON Raster Format\",\n  constructor: r\n}), n.set(\"MEMORY\", {\n  desc: \"In Memory Raster Format\",\n  constructor: o\n});\nclass u {\n  static get supportedFormats() {\n    const t = new Set();\n    return n.forEach((r, e) => t.add(e)), t;\n  }\n  static async open(r) {\n    const {\n      url: e,\n      ioConfig: s,\n      source: o,\n      sourceJSON: a\n    } = r;\n    let c = r.datasetFormat ?? s?.datasetFormat;\n    null == c && (e.includes(\".\") ? c = e.slice(e.lastIndexOf(\".\") + 1).toUpperCase() : \"coverage\" === o?.type?.toLowerCase() ? c = \"CovJSON\" : o?.extent && o.pixelblocks && (c = \"MEMORY\")), \"OVR\" === c || \"TIF\" === c ? c = \"TIFF\" : \"JPG\" === c || \"JPEG\" === c || \"JFIF\" === c ? c = \"JPG\" : \"COVJSON\" === c && (c = \"CovJSON\"), e.toLowerCase().includes(\"/imageserver\") && !e.toLowerCase().includes(\"/wcsserver\") && (c = \"RasterTileServer\");\n    const u = {\n      url: e,\n      source: o,\n      sourceJSON: a,\n      datasetFormat: c,\n      ioConfig: s ?? {\n        bandIds: null,\n        sampling: null\n      }\n    };\n    if (Object.keys(u).forEach(t => {\n      null == u[t] && delete u[t];\n    }), c) {\n      if (!this.supportedFormats.has(c)) throw new t(\"rasterfactory:open\", \"not a supported format \" + c);\n      if (\"CRF\" === c) throw new t(\"rasterfactory:open\", `cannot open raster: ${e}`);\n      const s = new (0, n.get(c).constructor)(u);\n      return await s.open({\n        signal: r.signal\n      }), s;\n    }\n    const i = Array.from(n.keys()).filter(t => \"CovJSON\" !== t && \"Memory\" !== t);\n    let l = 0;\n    const m = () => {\n      if (c = i[l++], !c) return null;\n      if (\"CRF\" === c) return null;\n      const t = new (0, n.get(c).constructor)(u);\n      return t.open({\n        signal: r.signal\n      }).then(() => t).catch(() => m());\n    };\n    return m();\n  }\n  static register(t, r, e) {\n    n.has(t.toUpperCase()) || n.set(t.toUpperCase(), {\n      desc: r,\n      constructor: e\n    });\n  }\n}\nexport { u as default };", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { _ as e } from \"../chunks/tslib.es6.js\";\nimport t from \"../PopupTemplate.js\";\nimport { ClonableMixin as r } from \"../core/Clonable.js\";\nimport s from \"../core/Error.js\";\nimport i from \"../core/Logger.js\";\nimport { MultiOriginJSONMixin as o } from \"../core/MultiOriginJSONSupport.js\";\nimport { debounce as a, throwIfAbortError as n } from \"../core/promiseUtils.js\";\nimport { watch as l } from \"../core/reactiveUtils.js\";\nimport { property as p } from \"../core/accessorSupport/decorators/property.js\";\nimport { ensureClass as c, Integer as m } from \"../core/accessorSupport/ensureType.js\";\nimport \"../core/RandomLCG.js\";\nimport \"../core/has.js\";\nimport { enumeration as u } from \"../core/accessorSupport/decorators/enumeration.js\";\nimport { subclass as h } from \"../core/accessorSupport/decorators/subclass.js\";\nimport d from \"./Layer.js\";\nimport { ArcGISService as y } from \"./mixins/ArcGISService.js\";\nimport { BlendLayer as f } from \"./mixins/BlendLayer.js\";\nimport { CustomParametersMixin as g } from \"./mixins/CustomParametersMixin.js\";\nimport { ImageryTileMixin as v } from \"./mixins/ImageryTileMixin.js\";\nimport { OperationalLayer as w } from \"./mixins/OperationalLayer.js\";\nimport { PortalLayer as R } from \"./mixins/PortalLayer.js\";\nimport { RefreshableLayer as S } from \"./mixins/RefreshableLayer.js\";\nimport { ScaleRangeLayer as j } from \"./mixins/ScaleRangeLayer.js\";\nimport { TemporalLayer as F } from \"./mixins/TemporalLayer.js\";\nimport { legendEnabled as b } from \"./support/commonProperties.js\";\nimport _ from \"./support/Field.js\";\nimport { interpolationKebab as O } from \"./support/rasterEnums.js\";\nimport P from \"./support/RasterFunction.js\";\nimport I from \"./support/rasterDatasets/FunctionRaster.js\";\nimport x from \"./support/rasterDatasets/RasterFactory.js\";\nimport { getPrimaryRasterUrls as T, create as L } from \"./support/rasterFunctions/rasterFunctionHelper.js\";\nimport { createPopupTemplate as N } from \"../support/popupUtils.js\";\nimport { SaveOperationType as J } from \"../webdoc/interfaces.js\";\nlet C = class extends f(j(w(R(g(v(F(y(S(o(r(d))))))))))) {\n  constructor(...e) {\n    super(...e), this._primaryRasters = [], this.bandIds = null, this.interpolation = null, this.legendEnabled = !0, this.isReference = null, this.listMode = \"show\", this.sourceJSON = null, this.version = null, this.type = \"imagery-tile\", this.operationalLayerType = \"ArcGISTiledImageServiceLayer\", this.popupEnabled = !0, this.popupTemplate = null, this.fields = null, this.source = void 0, this._debouncedSaveOperations = a(async (e, t, r) => {\n      const {\n        save: s,\n        saveAs: i\n      } = await import(\"./save/imageryUtils.js\");\n      switch (e) {\n        case J.SAVE:\n          return s(this, t);\n        case J.SAVE_AS:\n          return i(this, r, t);\n      }\n    });\n  }\n  normalizeCtorArgs(e, t) {\n    return \"string\" == typeof e ? {\n      url: e,\n      ...t\n    } : e;\n  }\n  load(e) {\n    const t = null != e ? e.signal : null;\n    return this.addResolvingPromise(this.loadFromPortal({\n      supportedTypes: [\"Image Service\"]\n    }, e).catch(n).then(() => this._openRaster(t))), Promise.resolve(this);\n  }\n  get defaultPopupTemplate() {\n    return this.createPopupTemplate();\n  }\n  get rasterFields() {\n    const e = [new _({\n        name: \"Raster.ServicePixelValue\",\n        alias: \"Pixel Value\",\n        domain: null,\n        editable: !1,\n        length: 50,\n        type: \"string\"\n      }), new _({\n        name: \"Raster.ServicePixelValue.Raw\",\n        alias: \"Raw Pixel Value\",\n        domain: null,\n        editable: !1,\n        length: 50,\n        type: \"string\"\n      })],\n      t = this.raster?.rasterInfo ?? this.serviceRasterInfo,\n      r = t?.attributeTable,\n      s = null != r ? r.fields : null,\n      i = \"Raster.\";\n    if (s) {\n      const t = s.filter(e => \"oid\" !== e.type && \"value\" !== e.name.toLowerCase()).map(e => {\n        const t = e.clone();\n        return t.name = i + e.name, t;\n      });\n      e.push(...t);\n    }\n    const o = t?.dataType,\n      a = t?.multidimensionalInfo;\n    if ((\"vector-magdir\" === o || \"vector-uv\" === o) && null != a) {\n      const t = a.variables[0].unit?.trim(),\n        r = \"Magnitude\" + (t ? ` (${t})` : \"\");\n      e.push(new _({\n        name: \"Raster.Magnitude\",\n        alias: r,\n        domain: null,\n        editable: !1,\n        type: \"double\"\n      })), e.push(new _({\n        name: \"Raster.Direction\",\n        alias: \"Direction (°)\",\n        domain: null,\n        editable: !1,\n        type: \"double\"\n      }));\n    }\n    return e;\n  }\n  createPopupTemplate(e) {\n    const {\n        rasterFields: t\n      } = this,\n      r = new Set(t.map(({\n        name: e\n      }) => e).filter(e => \"raster.servicepixelvalue.raw\" !== e.toLowerCase()));\n    return N({\n      fields: t,\n      title: this.title\n    }, {\n      ...e,\n      visibleFieldNames: r\n    });\n  }\n  async generateRasterInfo(e, t) {\n    if (e = c(P, e), await this.load(), !e || \"none\" === e.functionName?.toLowerCase()) return this.serviceRasterInfo;\n    try {\n      const {\n        rasterInfo: r\n      } = await this._openFunctionRaster(e, t);\n      return r;\n    } catch (r) {\n      if (r instanceof s) throw r;\n      throw new s(\"imagery-tile-layer\", \"the given raster function is not supported\");\n    }\n  }\n  async save(e) {\n    return this._debouncedSaveOperations(J.SAVE, e);\n  }\n  async saveAs(e, t) {\n    return this._debouncedSaveOperations(J.SAVE_AS, t, e);\n  }\n  write(e, t) {\n    const r = this._primaryRasters[0] ?? this.raster;\n    if (this.loaded ? \"RasterTileServer\" === r.datasetFormat && (\"Raster\" === r.tileType || \"Map\" === r.tileType) : this.url && /\\/ImageServer(\\/|\\/?$)/i.test(this.url)) return super.write(e, t);\n    if (t?.messages) {\n      const e = `${t.origin}/${t.layerContainerType || \"operational-layers\"}`;\n      t.messages.push(new s(\"layer:unsupported\", `Layers (${this.title}, ${this.id}) of type '${this.declaredClass}' are not supported in the context of '${e}'`, {\n        layer: this\n      }));\n    }\n    return null;\n  }\n  async _openRaster(e) {\n    let t = !1;\n    if (this.raster) await this._openFromRaster(this.raster, e), t = \"Function\" === this.raster.datasetFormat;else {\n      const {\n        url: t,\n        rasterFunction: r,\n        source: i\n      } = this;\n      if (!t && !i) throw new s(\"imagery-tile-layer:open\", \"missing url or source parameter\");\n      i ? await this._openFromSource(i, e) : r ? await this._openFromUrlWithRasterFunction(t, r, e) : await this._openFromUrl(t, e);\n    }\n    const r = this.raster.rasterInfo;\n    if (!r) throw new s(\"imagery-tile-layer:load\", \"cannot load resources on \" + this.url);\n    if (this._set(\"serviceRasterInfo\", t ? r : this._primaryRasters[0].rasterInfo), this._set(\"spatialReference\", r.spatialReference), this.sourceJSON = this.sourceJSON || this.raster.sourceJSON, null != this.sourceJSON) {\n      const e = \"Map\" === this.raster.tileType && null != this.sourceJSON.minLOD && null != this.sourceJSON.maxLOD ? this.sourceJSON : {\n        ...this.sourceJSON,\n        minScale: 0,\n        maxScale: 0\n      };\n      this.read(e, {\n        origin: \"service\"\n      });\n    } else this.read({\n      tileInfo: this.serviceRasterInfo?.storageInfo.tileInfo.toJSON()\n    }, {\n      origin: \"service\"\n    });\n    this.title || (this.title = this.raster.datasetName), \"Map\" === this.raster.tileType && (this.popupEnabled = !1), this._configDefaultSettings(), this.addHandles(l(() => this.customParameters, e => {\n      this.raster && (this.raster.ioConfig.customFetchParameters = e);\n    }));\n  }\n  async _openFromRaster(e, t) {\n    e.rasterInfo || (await e.open({\n      signal: t\n    })), this._primaryRasters = \"Function\" === e.datasetFormat ? e.primaryRasters.rasters : [e], this.url || (this.url = this._primaryRasters[0].url);\n  }\n  async _openFromUrlWithRasterFunction(e, t, r) {\n    const i = [e];\n    t && T(t.toJSON(), i);\n    const o = await Promise.all(i.map(e => x.open({\n        url: e,\n        sourceJSON: this.sourceJSON,\n        ioConfig: {\n          sampling: \"closest\",\n          ...this.ioConfig,\n          customFetchParameters: this.customParameters\n        },\n        signal: r\n      }))),\n      a = o.findIndex(e => null == e);\n    if (a > -1) throw new s(\"imagery-tile-layer:open\", `cannot open raster: ${i[a]}`);\n    return this._primaryRasters = o, this._initializeWithFunctionRaster(t);\n  }\n  async _openFromUrl(e, t) {\n    const r = await x.open({\n      url: e,\n      sourceJSON: this.sourceJSON,\n      ioConfig: {\n        sampling: \"closest\",\n        ...this.ioConfig,\n        customFetchParameters: this.customParameters\n      },\n      signal: t\n    });\n    if (null == r) throw new s(\"imagery-tile-layer:open\", `cannot open raster: ${e}`);\n    this._primaryRasters = [r], this.raster = r;\n  }\n  async _openFromSource(e, t) {\n    const r = \"the tiled imagery data source is not supported\",\n      i = \"coverage\" === e.type?.toLowerCase() ? \"CovJSON\" : e.extent && e.pixelBlock ? \"MEMORY\" : null;\n    if (!i) throw new s(\"imagery-tile-layer:open\", r);\n    \"MEMORY\" === i && (e = {\n      extent: e.extent,\n      pixelBlocks: [e.pixelBlock]\n    });\n    const o = await x.open({\n      url: \"\",\n      source: e,\n      datasetFormat: i,\n      ioConfig: {\n        sampling: \"closest\",\n        ...this.ioConfig,\n        customFetchParameters: this.customParameters\n      },\n      signal: t\n    });\n    if (null == o) throw new s(\"imagery-tile-layer:open\", r);\n    this._primaryRasters = [o], this.rasterFunction ? await this._initializeWithFunctionRaster(this.rasterFunction) : this.raster = o;\n  }\n  async _openFunctionRaster(e, t) {\n    const r = {\n      raster: this._primaryRasters[0]\n    };\n    this._primaryRasters.length > 1 && this._primaryRasters.forEach(e => r[e.url] = e);\n    const s = L(e.functionDefinition?.toJSON() ?? e.toJSON(), r),\n      i = new I({\n        rasterFunction: s\n      });\n    return await i.open(t), i;\n  }\n  async _initializeWithFunctionRaster(e, t) {\n    try {\n      this.raster = await this._openFunctionRaster(e, t);\n    } catch (r) {\n      r instanceof s && i.getLogger(this).error(\"imagery-tile-layer:open\", r.message), i.getLogger(this).warn(\"imagery-tile-layer:open\", \"the raster function cannot be applied and is removed\"), this._set(\"rasterFunction\", null), this.raster = this._primaryRasters[0];\n    }\n  }\n};\ne([p({\n  clonable: !1\n})], C.prototype, \"_primaryRasters\", void 0), e([p({\n  type: [m],\n  json: {\n    write: {\n      overridePolicy() {\n        return {\n          enabled: !this.loaded || \"Raster\" === this.raster.tileType || \"0,1,2\" !== this.bandIds?.join(\",\")\n        };\n      }\n    }\n  }\n})], C.prototype, \"bandIds\", void 0), e([p({\n  json: {\n    write: {\n      overridePolicy() {\n        return {\n          enabled: !this.loaded || \"Raster\" === this.raster.tileType || \"bilinear\" !== this.interpolation\n        };\n      }\n    }\n  }\n}), u(O)], C.prototype, \"interpolation\", void 0), e([p(b)], C.prototype, \"legendEnabled\", void 0), e([p({\n  type: Boolean,\n  json: {\n    read: !1,\n    write: {\n      enabled: !0,\n      overridePolicy: () => ({\n        enabled: !1\n      })\n    }\n  }\n})], C.prototype, \"isReference\", void 0), e([p({\n  type: [\"show\", \"hide\"]\n})], C.prototype, \"listMode\", void 0), e([p({\n  json: {\n    read: !0,\n    write: !0\n  }\n})], C.prototype, \"blendMode\", void 0), e([p()], C.prototype, \"sourceJSON\", void 0), e([p({\n  readOnly: !0,\n  json: {\n    origins: {\n      service: {\n        read: {\n          source: \"currentVersion\"\n        }\n      }\n    }\n  }\n})], C.prototype, \"version\", void 0), e([p({\n  readOnly: !0,\n  json: {\n    read: !1\n  }\n})], C.prototype, \"type\", void 0), e([p({\n  type: [\"ArcGISTiledImageServiceLayer\"]\n})], C.prototype, \"operationalLayerType\", void 0), e([p({\n  type: Boolean,\n  value: !0,\n  json: {\n    read: {\n      source: \"disablePopup\",\n      reader: (e, t) => !t.disablePopup\n    },\n    write: {\n      target: \"disablePopup\",\n      overridePolicy() {\n        return {\n          enabled: !this.loaded || \"Raster\" === this.raster.tileType\n        };\n      },\n      writer(e, t, r) {\n        t[r] = !e;\n      }\n    }\n  }\n})], C.prototype, \"popupEnabled\", void 0), e([p({\n  type: t,\n  json: {\n    read: {\n      source: \"popupInfo\"\n    },\n    write: {\n      target: \"popupInfo\",\n      overridePolicy() {\n        return {\n          enabled: !this.loaded || \"Raster\" === this.raster.tileType\n        };\n      }\n    }\n  }\n})], C.prototype, \"popupTemplate\", void 0), e([p({\n  readOnly: !0\n})], C.prototype, \"defaultPopupTemplate\", null), e([p({\n  readOnly: !0,\n  type: [_]\n})], C.prototype, \"fields\", void 0), e([p({\n  readOnly: !0,\n  type: [_]\n})], C.prototype, \"rasterFields\", null), e([p({\n  constructOnly: !0\n})], C.prototype, \"source\", void 0), C = e([h(\"esri.layers.ImageryTileLayer\")], C);\nconst M = C;\nexport { M as default };"],
  "mappings": "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",
  "names": ["V", "U", "$", "n", "_", "e", "t", "T", "D", "y", "_2", "i", "o", "r", "s", "l", "c", "h", "m", "f", "u", "j", "p", "d", "a", "x", "g", "I", "k", "v", "b", "P", "B", "M", "C", "R", "w", "S", "W", "z", "L", "F", "A", "q", "N", "n", "e", "i", "a", "h", "t", "o", "x", "l", "m", "s", "r", "g", "p", "f", "y", "c", "M", "u", "w", "d", "T", "k", "A", "R", "U", "j", "E", "I", "P", "v", "b", "p", "m", "t", "r", "s", "i", "o", "e", "n", "a", "l", "d", "h", "_2", "c", "u", "f", "y", "g", "x", "R", "D", "w", "U", "V", "$", "e", "y", "t", "r", "s", "c", "i", "f", "h", "n", "T", "U", "a", "l", "m", "x", "d", "p", "o", "u", "N", "S", "W", "_2", "g", "E", "L", "i", "e", "r", "o", "n", "l", "s", "u", "m", "c", "t", "a", "d", "f", "p", "h", "g", "b", "y", "x", "j", "v", "f", "t", "e", "s", "i", "r", "o", "l", "n", "m", "c", "p", "u", "g", "x", "y", "b", "v", "a", "W", "h", "d", "D", "m", "e", "t", "r", "s", "a", "o", "i", "n", "h", "d", "g", "u", "c", "l", "p", "n", "e", "t", "l", "r", "u", "u", "n", "e", "l", "o", "t", "i", "u", "e", "t", "n", "r", "c", "d", "o", "s", "f", "m", "p", "S", "C", "y", "l", "a", "i", "h", "t", "s", "e", "r", "a", "o", "i", "f", "g", "m", "l", "c", "d", "w", "n", "p", "u", "S", "y", "g", "e", "r", "a", "l", "m", "u", "c", "h", "v", "n", "p", "d", "y", "x", "I", "w", "j", "M", "b", "T", "_", "t", "O", "R", "z", "N", "S", "_2", "i", "s", "o", "f", "y", "x", "w", "t", "e", "r", "s", "o", "i", "a", "g", "n", "I", "l", "f", "c", "m", "p", "u", "d", "_2", "h", "b", "R", "A", "F", "S", "_", "k", "M", "j", "C", "T", "L", "U", "B", "E", "P", "W", "t", "e", "r", "n", "i", "s", "a", "o", "l", "p", "g", "u", "d", "_", "e", "t", "F", "v", "s", "a", "n", "o", "f", "l", "u", "k", "p", "U", "d", "N", "y", "g", "x", "T", "P", "_2", "r", "i", "_3", "c", "h", "m", "w", "I", "S", "R", "D", "O", "L", "j", "B", "z", "A", "C", "n", "b", "D", "I", "d", "h", "g", "u", "t", "r", "e", "s", "o", "a", "c", "i", "l", "m", "C", "j", "e", "V", "l", "f", "i", "t", "r", "s", "y", "o", "a", "p", "N", "R", "u", "S", "k"]
}
