{
  "version": 3,
  "sources": ["../../../../../../node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/util/View.glsl.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { translate as r } from \"../../../../../../core/libs/gl-matrix-2/math/mat4.js\";\nimport { create as e } from \"../../../../../../core/libs/gl-matrix-2/factories/mat4f64.js\";\nimport { s as i } from \"../../../../../../chunks/vec32.js\";\nimport { ZEROS as a, create as o } from \"../../../../../../core/libs/gl-matrix-2/factories/vec3f64.js\";\nimport { Float3DrawUniform as s } from \"../../shaderModules/Float3DrawUniform.js\";\nimport { Float3PassUniform as n } from \"../../shaderModules/Float3PassUniform.js\";\nimport { FloatPassUniform as t } from \"../../shaderModules/FloatPassUniform.js\";\nimport { Matrix4DrawUniform as m } from \"../../shaderModules/Matrix4DrawUniform.js\";\nimport { Matrix4PassUniform as c } from \"../../shaderModules/Matrix4PassUniform.js\";\nfunction f(r, e) {\n  e.instancedDoublePrecision ? r.constants.add(\"cameraPosition\", \"vec3\", a) : r.uniforms.add(new s(\"cameraPosition\", (r, e) => i(v, e.camera.viewInverseTransposeMatrix[3] - r.origin[0], e.camera.viewInverseTransposeMatrix[7] - r.origin[1], e.camera.viewInverseTransposeMatrix[11] - r.origin[2])));\n}\nfunction d(e, a) {\n  if (!a.instancedDoublePrecision) return void e.uniforms.add(new c(\"proj\", (r, e) => e.camera.projectionMatrix), new m(\"view\", (e, i) => r(l, i.camera.viewMatrix, e.origin)), new s(\"localOrigin\", r => r.origin));\n  const o = r => i(v, r.camera.viewInverseTransposeMatrix[3], r.camera.viewInverseTransposeMatrix[7], r.camera.viewInverseTransposeMatrix[11]);\n  e.uniforms.add(new c(\"proj\", (r, e) => e.camera.projectionMatrix), new c(\"view\", (e, i) => r(l, i.camera.viewMatrix, o(i))), new n(\"localOrigin\", (r, e) => o(e)));\n}\nconst l = e(),\n  v = o();\nfunction p(r) {\n  r.uniforms.add(new c(\"viewNormal\", (r, e) => e.camera.viewInverseTransposeMatrix));\n}\nfunction w(r) {\n  r.uniforms.add(new t(\"pixelRatio\", (r, e) => e.camera.pixelRatio / e.overlayStretch));\n}\nexport { f as addCameraPosition, w as addPixelRatio, d as addProjViewLocalOrigin, p as addViewNormal };"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAaA,SAAS,EAAE,GAAGA,IAAG;AACf,EAAAA,GAAE,2BAA2B,EAAE,UAAU,IAAI,kBAAkB,QAAQ,CAAC,IAAI,EAAE,SAAS,IAAI,IAAIC,GAAE,kBAAkB,CAACC,IAAGF,OAAM,EAAE,GAAGA,GAAE,OAAO,2BAA2B,CAAC,IAAIE,GAAE,OAAO,CAAC,GAAGF,GAAE,OAAO,2BAA2B,CAAC,IAAIE,GAAE,OAAO,CAAC,GAAGF,GAAE,OAAO,2BAA2B,EAAE,IAAIE,GAAE,OAAO,CAAC,CAAC,CAAC,CAAC;AACvS;AACA,SAAS,EAAEF,IAAG,GAAG;AACf,MAAI,CAAC,EAAE,yBAA0B,QAAO,KAAKA,GAAE,SAAS,IAAI,IAAIA,GAAE,QAAQ,CAAC,GAAGA,OAAMA,GAAE,OAAO,gBAAgB,GAAG,IAAIC,GAAE,QAAQ,CAACD,IAAGG,OAAM,EAAEC,IAAGD,GAAE,OAAO,YAAYH,GAAE,MAAM,CAAC,GAAG,IAAIC,GAAE,eAAe,OAAK,EAAE,MAAM,CAAC;AACjN,QAAMA,KAAI,OAAK,EAAE,GAAG,EAAE,OAAO,2BAA2B,CAAC,GAAG,EAAE,OAAO,2BAA2B,CAAC,GAAG,EAAE,OAAO,2BAA2B,EAAE,CAAC;AAC3I,EAAAD,GAAE,SAAS,IAAI,IAAIA,GAAE,QAAQ,CAAC,GAAGA,OAAMA,GAAE,OAAO,gBAAgB,GAAG,IAAIA,GAAE,QAAQ,CAACA,IAAGG,OAAM,EAAEC,IAAGD,GAAE,OAAO,YAAYF,GAAEE,EAAC,CAAC,CAAC,GAAG,IAAIH,GAAE,eAAe,CAAC,GAAGA,OAAMC,GAAED,EAAC,CAAC,CAAC;AACnK;AACA,IAAMI,KAAI,EAAE;AAAZ,IACE,IAAI,EAAE;AACR,SAAS,EAAE,GAAG;AACZ,IAAE,SAAS,IAAI,IAAIJ,GAAE,cAAc,CAACE,IAAGF,OAAMA,GAAE,OAAO,0BAA0B,CAAC;AACnF;AACA,SAAS,EAAE,GAAG;AACZ,IAAE,SAAS,IAAI,IAAIC,GAAE,cAAc,CAACC,IAAGF,OAAMA,GAAE,OAAO,aAAaA,GAAE,cAAc,CAAC;AACtF;",
  "names": ["e", "o", "r", "i", "l"]
}
