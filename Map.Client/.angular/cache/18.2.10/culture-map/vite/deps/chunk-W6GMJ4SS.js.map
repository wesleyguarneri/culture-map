{
  "version": 3,
  "sources": ["../../../../../../node_modules/@arcgis/core/core/unitFormatUtils.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { ByteSizeUnit as t } from \"./ByteSizeUnit.js\";\nimport { cyclicalDegrees as n } from \"./Cyclical.js\";\nimport { clamp as i } from \"./mathUtils.js\";\nimport { convertRotationType as r } from \"./quantityUtils.js\";\nimport { replace as o } from \"./string.js\";\nimport { adaptiveMetricLengthUnit as e, convertUnit as s, adaptiveMetricVerticalLengthUnit as u, adaptiveImperialLengthUnit as c, adaptiveImperialVerticalLengthUnit as a, adaptiveMetricAreaUnit as m, adaptiveImperialAreaUnit as f } from \"./unitUtils.js\";\nimport { formatNumber as l } from \"../intl/number.js\";\nfunction b(t, n, i) {\n  return t.units[n][i];\n}\nfunction g(t, n, i, r = 2, o = \"abbr\") {\n  return `${l(n, {\n    minimumFractionDigits: r,\n    maximumFractionDigits: r,\n    signDisplay: n > 0 ? \"never\" : \"exceptZero\"\n  })} ${b(t, i, o)}`;\n}\nfunction p(t, n, i, r = 2, o = \"abbr\") {\n  return `${l(n, {\n    minimumFractionDigits: r,\n    maximumFractionDigits: r,\n    signDisplay: \"exceptZero\"\n  })} ${b(t, i, o)}`;\n}\nfunction D(t, n, i, r = 2, o = \"abbr\") {\n  const u = e(n, i);\n  return g(t, s(n, i, u), u, r, o);\n}\nfunction x(t, n, i, r = 2, o = \"abbr\") {\n  const u = e(n, i);\n  return p(t, s(n, i, u), u, r, o);\n}\nfunction y(t, n, i, r = 2, o = \"abbr\") {\n  const e = u(n, i);\n  return g(t, s(n, i, e), e, r, o);\n}\nfunction F(t, n, i, r = 2, o = \"abbr\") {\n  const e = u(n, i);\n  return p(t, s(n, i, e), e, r, o);\n}\nfunction d(t, n, i, r = 2, o = \"abbr\") {\n  const e = c(n, i);\n  return g(t, s(n, i, e), e, r, o);\n}\nfunction h(t, n, i, r = 2, o = \"abbr\") {\n  const e = c(n, i);\n  return p(t, s(n, i, e), e, r, o);\n}\nfunction B(t, n, i, r = 2, o = \"abbr\") {\n  const e = a(n, i);\n  return g(t, s(n, i, e), e, r, o);\n}\nfunction M(t, n, i, r = 2, o = \"abbr\") {\n  const e = a(n, i);\n  return p(t, s(n, i, e), e, r, o);\n}\nfunction $(t, n, i, r = 2, o = \"abbr\") {\n  const e = m(n, i);\n  return g(t, s(n, i, e), e, r, o);\n}\nfunction j(t, n, i, r = 2, o = \"abbr\") {\n  const e = f(n, i);\n  return g(t, s(n, i, e), e, r, o);\n}\nfunction S(t, n, i = 2) {\n  let r = s(t, n, \"degrees\"),\n    o = r - Math.floor(r);\n  r -= o, o *= 60;\n  let e = o - Math.floor(o);\n  return o -= e, e *= 60, `${r.toFixed()}° ${o.toFixed()}' ${e.toFixed(i)}\"`;\n}\nconst U = (t, n) => ({\n  style: \"unit\",\n  unitDisplay: \"narrow\",\n  unit: \"degree\",\n  maximumFractionDigits: n,\n  minimumFractionDigits: n,\n  signDisplay: t > 0 ? \"never\" : \"exceptZero\"\n});\nfunction w(t, i, o, e, u, c = n, a = !0) {\n  let m = c.normalize(r(s(t, i, \"degrees\"), o, e), 0, a);\n  const f = U(m, u ?? 2);\n  return m = I(m, f), l(m, f);\n}\nfunction Z(t, n, i, r, o) {\n  i !== r && (t = -t);\n  const e = {\n    style: \"unit\",\n    unitDisplay: \"narrow\",\n    unit: \"degree\",\n    maximumFractionDigits: o = o ?? 2,\n    minimumFractionDigits: o,\n    signDisplay: \"exceptZero\"\n  };\n  let u = s(t, n, \"degrees\") % 360;\n  return u = I(u, e), l(u, e);\n}\nconst z = new Map();\nfunction I(t, n) {\n  const i = JSON.stringify(n);\n  let r = z.get(i);\n  return r || (r = new Intl.NumberFormat(\"en-US\", n), z.set(i, r)), /^[-+]?360\\.?0*°?$/.test(r.format(t)) ? 0 : t;\n}\nconst O = [\"B\", \"kB\", \"MB\", \"GB\", \"TB\"];\nfunction T(n, r) {\n  let e = 0 === (r = Math.round(r)) ? 0 : Math.floor(Math.log(r) / Math.log(t.KILOBYTES));\n  e = i(e, 0, O.length - 1);\n  const s = l(r / t.KILOBYTES ** e, {\n    maximumFractionDigits: 2\n  });\n  return o(n.units.bytes[O[e]], {\n    fileSize: s\n  });\n}\nexport { w as formatAngleDegrees, S as formatDMS, g as formatDecimal, T as formatFileSize, j as formatImperialArea, d as formatImperialLength, h as formatImperialRelativeLength, M as formatImperialRelativeVerticalLength, B as formatImperialVerticalLength, $ as formatMetricArea, D as formatMetricLength, x as formatMetricRelativeLength, F as formatMetricRelativeVerticalLength, y as formatMetricVerticalLength, Z as formatRelativeAngleDegrees, p as formatRelativeDecimal, b as unitName };"],
  "mappings": "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",
  "names": ["r", "e", "F", "j", "e", "a", "m", "r", "T"]
}
