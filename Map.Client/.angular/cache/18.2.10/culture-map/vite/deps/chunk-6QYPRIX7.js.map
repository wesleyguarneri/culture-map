{
  "version": 3,
  "sources": ["../../../../../../node_modules/@arcgis/core/chunks/PointRenderer.glsl.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { numberMaxFloat32 as e } from \"../core/mathUtils.js\";\nimport { multiply as i, fromTranslation as o } from \"../core/libs/gl-matrix-2/math/mat4.js\";\nimport { create as r } from \"../core/libs/gl-matrix-2/factories/mat4f64.js\";\nimport { set as t } from \"../core/libs/gl-matrix-2/math/vec2.js\";\nimport { create as s } from \"../core/libs/gl-matrix-2/factories/vec2f64.js\";\nimport { s as a } from \"./vec32.js\";\nimport { create as n } from \"../core/libs/gl-matrix-2/factories/vec3f64.js\";\nimport { create as c, positiveInfinity as l } from \"../geometry/support/aaBoundingBox.js\";\nimport { ShaderOutput as p } from \"../views/3d/webgl-engine/core/shaderLibrary/ShaderOutput.js\";\nimport { SlicePlaneParameters as d, SliceDraw as m } from \"../views/3d/webgl-engine/core/shaderLibrary/Slice.glsl.js\";\nimport { OutputHighlight as f } from \"../views/3d/webgl-engine/core/shaderLibrary/output/OutputHighlight.glsl.js\";\nimport { RgbaFloatEncoding as g } from \"../views/3d/webgl-engine/core/shaderLibrary/util/RgbaFloatEncoding.glsl.js\";\nimport { Float2DrawUniform as u } from \"../views/3d/webgl-engine/core/shaderModules/Float2DrawUniform.js\";\nimport { Float2PassUniform as S } from \"../views/3d/webgl-engine/core/shaderModules/Float2PassUniform.js\";\nimport { Float3DrawUniform as x } from \"../views/3d/webgl-engine/core/shaderModules/Float3DrawUniform.js\";\nimport { NoParameters as v, glsl as h } from \"../views/3d/webgl-engine/core/shaderModules/interfaces.js\";\nimport { Matrix4DrawUniform as w } from \"../views/3d/webgl-engine/core/shaderModules/Matrix4DrawUniform.js\";\nimport { Matrix4PassUniform as z } from \"../views/3d/webgl-engine/core/shaderModules/Matrix4PassUniform.js\";\nimport { ShaderBuilder as b } from \"../views/3d/webgl-engine/core/shaderModules/ShaderBuilder.js\";\nimport { VertexAttribute as M } from \"../views/3d/webgl-engine/lib/VertexAttribute.js\";\nclass j extends v {\n  constructor() {\n    super(...arguments), this.clipBox = c(l), this.useFixedSizes = !1, this.useRealWorldSymbolSizes = !1, this.scaleFactor = 1, this.minSizePx = 0, this.size = 0, this.sizePx = 0;\n  }\n  get fixedSize() {\n    return this.drawScreenSpace ? this.sizePx : this.size;\n  }\n  get screenMinSize() {\n    return this.useFixedSizes ? 0 : this.minSizePx;\n  }\n  get drawScreenSpace() {\n    return this.useFixedSizes && !this.useRealWorldSymbolSizes;\n  }\n}\nclass P extends d {\n  constructor(e, i, o) {\n    super(e), this.origin = e, this.isLeaf = i, this.splatSize = o;\n  }\n}\nfunction y(r) {\n  const s = new b(),\n    n = r.output === p.Color,\n    c = r.output === p.Highlight,\n    {\n      vertex: l,\n      fragment: d\n    } = s;\n  return s.include(m, r), s.attributes.add(M.POSITION, \"vec3\"), s.attributes.add(M.COLOR, \"vec3\"), l.uniforms.add(new w(\"modelView\", (e, r) => i(R, r.camera.viewMatrix, o(R, e.origin))), new z(\"proj\", (e, i) => i.camera.projectionMatrix), new u(\"screenMinMaxSize\", (e, i, o) => t(F, o.useFixedSizes ? 0 : o.minSizePx * i.camera.pixelRatio, O(e.isLeaf) * i.camera.pixelRatio)), r.useFixedSizes ? new S(\"pointScale\", (e, i) => t(F, e.fixedSize * i.camera.pixelRatio, i.camera.fullHeight)) : new u(\"pointScale\", (e, i, o) => t(F, e.splatSize * o.scaleFactor * i.camera.pixelRatio, i.camera.fullHeight / i.camera.pixelRatio))), r.clippingEnabled ? l.uniforms.add(new x(\"clipMin\", (e, i, o) => a(B, o.clipBox[0] - e.origin[0], o.clipBox[1] - e.origin[1], o.clipBox[2] - e.origin[2])), new x(\"clipMax\", (e, i, o) => a(B, o.clipBox[3] - e.origin[0], o.clipBox[4] - e.origin[1], o.clipBox[5] - e.origin[2]))) : (l.constants.add(\"clipMin\", \"vec3\", [-e, -e, -e]), l.constants.add(\"clipMax\", \"vec3\", [e, e, e])), n && s.varyings.add(\"vColor\", \"vec3\"), l.code.add(h`\n    void main(void) {\n      // Move clipped points outside of clipspace\n      if (position.x < clipMin.x || position.y < clipMin.y || position.z < clipMin.z ||\n        position.x > clipMax.x || position.y > clipMax.y || position.z > clipMax.z) {\n        gl_Position = vec4(0.0,0.0,0.0,2.0);\n        gl_PointSize = 0.0;\n        return;\n      }\n\n      if (rejectBySlice(position)) {\n        gl_Position = vec4(0.0,0.0,0.0,2.0);\n        gl_PointSize = 0.0;\n        return;\n      }\n\n      // Position in camera space\n      vec4 camera = modelView * vec4(position, 1.0);\n\n      float pointSize = pointScale.x;\n      vec4 position = proj * camera;\n     ${r.drawScreenSize ? h`\n      float clampedScreenSize = pointSize;` : h`\n      float pointRadius = 0.5 * pointSize;\n      vec4 cameraOffset = camera + vec4(0.0, pointRadius, 0.0, 0.0);\n      vec4 positionOffset = proj * cameraOffset;\n      float radius = abs(positionOffset.y - position.y);\n      float viewHeight = pointScale.y;\n      // screen diameter = (2 * r / w) * (h / 2)\n      float screenPointSize = (radius / position.w) * viewHeight;\n      float clampedScreenSize = clamp(screenPointSize, screenMinMaxSize.x, screenMinMaxSize.y);\n      // Shift towards camera, to move rendered point out of terrain i.e. to\n      // the camera-facing end of the virtual point when considering it as a\n      // 3D sphere.\n      camera.xyz -= normalize(camera.xyz) * pointRadius * clampedScreenSize / screenPointSize;\n      position = proj * camera;`}\n\n     gl_PointSize = clampedScreenSize;\n     gl_Position = position;\n\n     ${n ? h`vColor = color;` : \"\"}\n    }\n  `), d.include(g, r), c && s.include(f, r), d.code.add(h`\n    void main(void) {\n        vec2 vOffset = gl_PointCoord - vec2(0.5, 0.5);\n        float r2 = dot(vOffset, vOffset);\n\n        if (r2 > 0.25) {\n          discard;\n        }\n        ${c ? h`outputHighlight();` : \"\"}\n        ${n ? h`fragColor = vec4(vColor, 1.0);` : \"\"}\n    }\n  `), s;\n}\nfunction O(e) {\n  return e ? 256 : 64;\n}\nconst R = r(),\n  B = n(),\n  F = s(),\n  _ = Object.freeze(Object.defineProperty({\n    __proto__: null,\n    PointRendererDrawParameters: P,\n    PointRendererPassParameters: j,\n    build: y,\n    getMaxPointSizeScreenspace: O\n  }, Symbol.toStringTag, {\n    value: \"Module\"\n  }));\nexport { j as P, P as a, _ as b, y as c, O as g };"],
  "mappings": "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",
  "names": ["j", "n", "P", "e", "i", "o", "c", "r", "a"]
}
