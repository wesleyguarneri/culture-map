{
  "version": 3,
  "sources": ["../../../../../../node_modules/@arcgis/core/layers/graphics/OptimizedGeometry.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nconst t = 2;\nclass e {\n  constructor(t = [], e = [], s = !1) {\n    this.lengths = t ?? [], this.coords = e ?? [], this.hasIndeterminateRingOrder = s;\n  }\n  static fromJSON(t) {\n    return new e(t.lengths, t.coords, t.hasIndeterminateRingOrder);\n  }\n  static fromRect(t) {\n    const [s, r, n, h] = t,\n      o = n - s,\n      i = h - r;\n    return new e([5], [s, r, o, 0, 0, i, -o, 0, 0, -i]);\n  }\n  get isPoint() {\n    return 0 === this.lengths.length;\n  }\n  get maxLength() {\n    return Math.max(...this.lengths);\n  }\n  get size() {\n    return this.lengths.reduce((t, e) => t + e);\n  }\n  forEachVertex(e) {\n    let s = 0;\n    this.lengths.length || e(this.coords[0], this.coords[1]);\n    for (let r = 0; r < this.lengths.length; r++) {\n      const n = this.lengths[r];\n      for (let r = 0; r < n; r++) {\n        e(this.coords[t * (r + s)], this.coords[t * (r + s) + 1]);\n      }\n      s += n;\n    }\n  }\n  deltaDecode() {\n    const t = this.clone(),\n      {\n        coords: e,\n        lengths: s\n      } = t;\n    let r = 0;\n    for (const n of s) {\n      for (let t = 1; t < n; t++) e[2 * (r + t)] += e[2 * (r + t) - 2], e[2 * (r + t) + 1] += e[2 * (r + t) - 1];\n      r += n;\n    }\n    return t;\n  }\n  clone(s) {\n    if (0 === this.lengths.length) return new e([], [this.coords[0], this.coords[1]]);\n    const r = (0 === this.lengths.length ? 1 : this.lengths.reduce((t, e) => t + e)) * t,\n      n = this.coords.slice(0, r);\n    return s ? (s.set(n), new e(this.lengths, s, this.hasIndeterminateRingOrder)) : new e(Array.from(this.lengths), Array.from(n), this.hasIndeterminateRingOrder);\n  }\n}\nexport { e as default };"],
  "mappings": ";AAIA,IAAM,IAAI;AACV,IAAM,IAAN,MAAM,GAAE;AAAA,EACN,YAAYA,KAAI,CAAC,GAAGC,KAAI,CAAC,GAAG,IAAI,OAAI;AAClC,SAAK,UAAUD,MAAK,CAAC,GAAG,KAAK,SAASC,MAAK,CAAC,GAAG,KAAK,4BAA4B;AAAA,EAClF;AAAA,EACA,OAAO,SAASD,IAAG;AACjB,WAAO,IAAI,GAAEA,GAAE,SAASA,GAAE,QAAQA,GAAE,yBAAyB;AAAA,EAC/D;AAAA,EACA,OAAO,SAASA,IAAG;AACjB,UAAM,CAAC,GAAG,GAAG,GAAG,CAAC,IAAIA,IACnB,IAAI,IAAI,GACR,IAAI,IAAI;AACV,WAAO,IAAI,GAAE,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC;AAAA,EACpD;AAAA,EACA,IAAI,UAAU;AACZ,WAAO,MAAM,KAAK,QAAQ;AAAA,EAC5B;AAAA,EACA,IAAI,YAAY;AACd,WAAO,KAAK,IAAI,GAAG,KAAK,OAAO;AAAA,EACjC;AAAA,EACA,IAAI,OAAO;AACT,WAAO,KAAK,QAAQ,OAAO,CAACA,IAAGC,OAAMD,KAAIC,EAAC;AAAA,EAC5C;AAAA,EACA,cAAcA,IAAG;AACf,QAAI,IAAI;AACR,SAAK,QAAQ,UAAUA,GAAE,KAAK,OAAO,CAAC,GAAG,KAAK,OAAO,CAAC,CAAC;AACvD,aAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,QAAQ,KAAK;AAC5C,YAAM,IAAI,KAAK,QAAQ,CAAC;AACxB,eAASC,KAAI,GAAGA,KAAI,GAAGA,MAAK;AAC1B,QAAAD,GAAE,KAAK,OAAO,KAAKC,KAAI,EAAE,GAAG,KAAK,OAAO,KAAKA,KAAI,KAAK,CAAC,CAAC;AAAA,MAC1D;AACA,WAAK;AAAA,IACP;AAAA,EACF;AAAA,EACA,cAAc;AACZ,UAAMF,KAAI,KAAK,MAAM,GACnB;AAAA,MACE,QAAQC;AAAA,MACR,SAAS;AAAA,IACX,IAAID;AACN,QAAI,IAAI;AACR,eAAW,KAAK,GAAG;AACjB,eAASA,KAAI,GAAGA,KAAI,GAAGA,KAAK,CAAAC,GAAE,KAAK,IAAID,GAAE,KAAKC,GAAE,KAAK,IAAID,MAAK,CAAC,GAAGC,GAAE,KAAK,IAAID,MAAK,CAAC,KAAKC,GAAE,KAAK,IAAID,MAAK,CAAC;AACzG,WAAK;AAAA,IACP;AACA,WAAOA;AAAA,EACT;AAAA,EACA,MAAM,GAAG;AACP,QAAI,MAAM,KAAK,QAAQ,OAAQ,QAAO,IAAI,GAAE,CAAC,GAAG,CAAC,KAAK,OAAO,CAAC,GAAG,KAAK,OAAO,CAAC,CAAC,CAAC;AAChF,UAAM,KAAK,MAAM,KAAK,QAAQ,SAAS,IAAI,KAAK,QAAQ,OAAO,CAACA,IAAGC,OAAMD,KAAIC,EAAC,KAAK,GACjF,IAAI,KAAK,OAAO,MAAM,GAAG,CAAC;AAC5B,WAAO,KAAK,EAAE,IAAI,CAAC,GAAG,IAAI,GAAE,KAAK,SAAS,GAAG,KAAK,yBAAyB,KAAK,IAAI,GAAE,MAAM,KAAK,KAAK,OAAO,GAAG,MAAM,KAAK,CAAC,GAAG,KAAK,yBAAyB;AAAA,EAC/J;AACF;",
  "names": ["t", "e", "r"]
}
