{
  "version": 3,
  "sources": ["../../../../../../node_modules/@arcgis/core/views/2d/engine/vectorTiles/RectangleBinPack.js", "../../../../../../node_modules/@arcgis/core/views/2d/engine/vectorTiles/GlyphMosaic.js", "../../../../../../node_modules/@arcgis/core/views/2d/engine/vectorTiles/GlyphSource.js", "../../../../../../node_modules/@arcgis/core/views/2d/engine/vectorTiles/SpriteMosaic.js", "../../../../../../node_modules/@arcgis/core/views/2d/engine/vectorTiles/TileHandler.js", "../../../../../../node_modules/@arcgis/core/views/2d/tiling/TileInfoViewPOT.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport h from \"../webgl/Rect.js\";\nclass e {\n  constructor(e, t) {\n    this._width = 0, this._height = 0, this._free = [], this._width = e, this._height = t, this._free.push(new h(0, 0, e, t));\n  }\n  get width() {\n    return this._width;\n  }\n  get height() {\n    return this._height;\n  }\n  allocate(e, t) {\n    if (e > this._width || t > this._height) return new h();\n    let i = null,\n      s = -1;\n    for (let h = 0; h < this._free.length; ++h) {\n      const w = this._free[h];\n      e <= w.width && t <= w.height && (null === i || w.y <= i.y && w.x <= i.x) && (i = w, s = h);\n    }\n    return null === i ? new h() : (this._free.splice(s, 1), i.width < i.height ? (i.width > e && this._free.push(new h(i.x + e, i.y, i.width - e, t)), i.height > t && this._free.push(new h(i.x, i.y + t, i.width, i.height - t))) : (i.width > e && this._free.push(new h(i.x + e, i.y, i.width - e, i.height)), i.height > t && this._free.push(new h(i.x, i.y + t, e, i.height - t))), new h(i.x, i.y, e, t));\n  }\n  release(h) {\n    for (let e = 0; e < this._free.length; ++e) {\n      const t = this._free[e];\n      if (t.y === h.y && t.height === h.height && t.x + t.width === h.x) t.width += h.width;else if (t.x === h.x && t.width === h.width && t.y + t.height === h.y) t.height += h.height;else if (h.y === t.y && h.height === t.height && h.x + h.width === t.x) t.x = h.x, t.width += h.width;else {\n        if (h.x !== t.x || h.width !== t.width || h.y + h.height !== t.y) continue;\n        t.y = h.y, t.height += h.height;\n      }\n      this._free.splice(e, 1), this.release(h);\n    }\n    this._free.push(h);\n  }\n}\nexport { e as default };", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport t from \"./RectangleBinPack.js\";\nimport e from \"../webgl/Rect.js\";\nimport { PixelFormat as s, TextureWrapMode as i } from \"../../../webgl/enums.js\";\nimport { Texture as h } from \"../../../webgl/Texture.js\";\nimport { TextureDescriptor as r } from \"../../../webgl/TextureDescriptor.js\";\nclass n {\n  constructor(e, s, i) {\n    this.width = 0, this.height = 0, this._dirties = [], this._glyphData = [], this._currentPage = 0, this._glyphIndex = {}, this._textures = [], this._rangePromises = new Map(), this.width = e, this.height = s, this._glyphSource = i, this._binPack = new t(e - 4, s - 4), this._glyphData.push(new Uint8Array(e * s)), this._dirties.push(!0), this._textures.push(void 0);\n  }\n  getGlyphItems(s, i) {\n    const h = [],\n      r = this._glyphSource,\n      n = new Set(),\n      o = 1 / 256;\n    for (const t of i) {\n      const e = Math.floor(t * o);\n      n.add(e);\n    }\n    const a = [];\n    return n.forEach(t => {\n      const e = s + t;\n      if (this._rangePromises.has(e)) a.push(this._rangePromises.get(e));else {\n        const i = r.getRange(s, t).then(() => {\n          this._rangePromises.delete(e);\n        }, () => {\n          this._rangePromises.delete(e);\n        });\n        this._rangePromises.set(e, i), a.push(i);\n      }\n    }), Promise.all(a).then(() => {\n      let n = this._glyphIndex[s];\n      n || (n = {}, this._glyphIndex[s] = n);\n      for (const o of i) {\n        const i = n[o];\n        if (i) {\n          h[o] = {\n            sdf: !0,\n            rect: i.rect,\n            metrics: i.metrics,\n            page: i.page,\n            code: o\n          };\n          continue;\n        }\n        const a = r.getGlyph(s, o);\n        if (!a?.metrics) continue;\n        const l = a.metrics;\n        let c;\n        if (0 === l.width) c = new e(0, 0, 0, 0);else {\n          const e = 3,\n            s = l.width + 2 * e,\n            i = l.height + 2 * e;\n          let h = s % 4 ? 4 - s % 4 : 4,\n            r = i % 4 ? 4 - i % 4 : 4;\n          1 === h && (h = 5), 1 === r && (r = 5), c = this._binPack.allocate(s + h, i + r), c.isEmpty && (this._dirties[this._currentPage] || (this._glyphData[this._currentPage] = null), this._currentPage = this._glyphData.length, this._glyphData.push(new Uint8Array(this.width * this.height)), this._dirties.push(!0), this._textures.push(void 0), this._binPack = new t(this.width - 4, this.height - 4), c = this._binPack.allocate(s + h, i + r));\n          const n = this._glyphData[this._currentPage],\n            o = a.bitmap;\n          let g, _;\n          if (o) for (let t = 0; t < i; t++) {\n            g = s * t, _ = this.width * (c.y + t + 1) + c.x;\n            for (let t = 0; t < s; t++) n[_ + t + 1] = o.at(g + t);\n          }\n        }\n        n[o] = {\n          rect: c,\n          metrics: l,\n          tileIDs: null,\n          page: this._currentPage\n        }, h[o] = {\n          sdf: !0,\n          rect: c,\n          metrics: l,\n          page: this._currentPage,\n          code: o\n        }, this._dirties[this._currentPage] = !0;\n      }\n      return h;\n    });\n  }\n  removeGlyphs(t) {\n    for (const e in this._glyphIndex) {\n      const s = this._glyphIndex[e];\n      if (!s) continue;\n      let i;\n      for (const e in s) if (i = s[e], i.tileIDs.delete(t), 0 === i.tileIDs.size) {\n        const t = this._glyphData[i.page],\n          h = i.rect;\n        let r, n;\n        for (let e = 0; e < h.height; e++) for (r = this.width * (h.y + e) + h.x, n = 0; n < h.width; n++) t[r + n] = 0;\n        delete s[e], this._dirties[i.page] = !0;\n      }\n    }\n  }\n  bind(t, e, n, o = 0) {\n    if (!this._textures[n]) {\n      const e = new r();\n      e.pixelFormat = s.ALPHA, e.wrapMode = i.CLAMP_TO_EDGE, e.width = this.width, e.height = this.height, this._textures[n] = new h(t, e, new Uint8Array(this.width * this.height));\n    }\n    const a = this._textures[n];\n    a.setSamplingMode(e), this._dirties[n] && a.setData(this._glyphData[n]), t.bindTexture(a, o), this._dirties[n] = !1;\n  }\n  destroy() {\n    this.dispose();\n  }\n  dispose() {\n    this._glyphData.length = 0, this._binPack = null;\n    for (const t of this._textures) t && t.dispose();\n    this._textures.length = 0;\n  }\n}\nexport { n as default };", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport t from \"../../../../request.js\";\nimport e from \"../../../../core/pbf.js\";\nclass s {\n  constructor(t) {\n    if (this._metrics = [], !t) return void (this._allBitmaps = null);\n    const e = new Map();\n    let s = 0;\n    for (; t.next();) switch (t.tag()) {\n      case 1:\n        {\n          const a = t.getMessage();\n          for (; a.next();) switch (a.tag()) {\n            case 3:\n              {\n                const t = a.getMessage();\n                let r, n, i, c, o, g, h;\n                for (; t.next();) switch (t.tag()) {\n                  case 1:\n                    r = t.getUInt32();\n                    break;\n                  case 2:\n                    n = t.getBytes();\n                    break;\n                  case 3:\n                    i = t.getUInt32();\n                    break;\n                  case 4:\n                    c = t.getUInt32();\n                    break;\n                  case 5:\n                    o = t.getSInt32();\n                    break;\n                  case 6:\n                    g = t.getSInt32();\n                    break;\n                  case 7:\n                    h = t.getUInt32();\n                    break;\n                  default:\n                    t.skip();\n                }\n                if (t.release(), r) {\n                  const t = n?.length ?? 0;\n                  this._metrics[r] = {\n                    width: i,\n                    height: c,\n                    left: o,\n                    top: g,\n                    advance: h,\n                    startOffset: s,\n                    length: t\n                  }, e.set(r, n), s += t;\n                }\n                break;\n              }\n            default:\n              a.skip();\n          }\n          a.release();\n          break;\n        }\n      default:\n        t.skip();\n    }\n    const a = new Uint8Array(s),\n      r = this._metrics;\n    for (const [n, i] of e) {\n      const {\n        startOffset: t,\n        length: e\n      } = r[n];\n      if (i) for (let s = 0; s < e; ++s) a[t + s] = i[s];\n    }\n    this._allBitmaps = a;\n  }\n  getMetrics(t) {\n    return this._metrics[t];\n  }\n  getBitmap(t) {\n    if (!this._allBitmaps) return;\n    const e = this._metrics[t];\n    if (void 0 === e) return;\n    const {\n      startOffset: s,\n      length: a\n    } = e;\n    return 0 !== a ? new n(this._allBitmaps, s, a) : void 0;\n  }\n}\nclass a {\n  constructor() {\n    this._ranges = [];\n  }\n  get ranges() {\n    return this._ranges;\n  }\n  getRange(t) {\n    return this._ranges[t];\n  }\n  addRange(t, e) {\n    this._ranges[t] = e;\n  }\n}\nclass r {\n  constructor(t) {\n    this._glyphInfo = {}, this._baseURL = t;\n  }\n  getRange(a, r) {\n    const n = this._getFontStack(a);\n    if (n.getRange(r)) return Promise.resolve();\n    const i = 256 * r,\n      c = i + 255;\n    if (this._baseURL) {\n      const o = this._baseURL.replace(\"{fontstack}\", a).replace(\"{range}\", i + \"-\" + c);\n      return t(o, {\n        responseType: \"array-buffer\"\n      }).then(t => {\n        n.addRange(r, new s(new e(new Uint8Array(t.data), new DataView(t.data))));\n      }).catch(() => {\n        n.addRange(r, new s());\n      });\n    }\n    return n.addRange(r, new s()), Promise.resolve();\n  }\n  getGlyph(t, e) {\n    const s = this._getFontStack(t);\n    if (!s) return;\n    const a = Math.floor(e / 256),\n      r = s.getRange(a);\n    return r ? {\n      metrics: r.getMetrics(e),\n      bitmap: r.getBitmap(e)\n    } : void 0;\n  }\n  _getFontStack(t) {\n    let e = this._glyphInfo[t];\n    return e || (e = this._glyphInfo[t] = new a()), e;\n  }\n}\nclass n {\n  constructor(t, e, s) {\n    this._array = t, this._start = e, this.length = s;\n  }\n  at(t) {\n    return 0 <= t && t < this.length ? this._array[this._start + t] : void 0;\n  }\n}\nexport { r as default };", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport \"../../../../core/has.js\";\nimport { rasterizeDash as t } from \"../../../../symbols/cim/rasterizingUtils.js\";\nimport i from \"./RectangleBinPack.js\";\nimport s from \"../webgl/Rect.js\";\nimport { TextureWrapMode as e } from \"../../../webgl/enums.js\";\nimport { Texture as h } from \"../../../webgl/Texture.js\";\nimport { TextureDescriptor as a } from \"../../../webgl/TextureDescriptor.js\";\nconst r = \"dasharray-\";\nclass o {\n  constructor(t, s, e = 0) {\n    this._size = [], this._mosaicsData = [], this._textures = [], this._dirties = [], this._maxItemSize = 0, this._currentPage = 0, this._pageWidth = 0, this._pageHeight = 0, this._mosaicRects = {}, this.pixelRatio = 1, s <= 0 && console.error(\"Sprites mosaic defaultWidth and defaultHeight must be greater than zero!\"), this._pageWidth = t, this._pageHeight = s, e > 0 && (this._maxItemSize = e), this._binPack = new i(t - 4, s - 4);\n  }\n  destroy() {\n    this.dispose();\n  }\n  dispose() {\n    this._binPack = null, this._mosaicsData.length = 0, this._mosaicRects = {};\n    for (const t of this._textures) t && t.dispose();\n    this._textures.length = 0;\n  }\n  getWidth(t) {\n    return t >= this._size.length ? -1 : this._size[t][0];\n  }\n  getHeight(t) {\n    return t >= this._size.length ? -1 : this._size[t][1];\n  }\n  getPageSize(t) {\n    return t >= this._size.length ? null : this._size[t];\n  }\n  setSpriteSource(t) {\n    if (this.dispose(), this.pixelRatio = t.devicePixelRatio, 0 === this._mosaicsData.length) {\n      this._binPack = new i(this._pageWidth - 4, this._pageHeight - 4);\n      const t = Math.floor(this._pageWidth),\n        s = Math.floor(this._pageHeight),\n        e = new Uint32Array(t * s);\n      this._mosaicsData[0] = e, this._dirties.push(!0), this._size.push([this._pageWidth, this._pageHeight]), this._textures.push(void 0);\n    }\n    this._sprites = t;\n  }\n  getSpriteItem(t, i = !1) {\n    let s,\n      e,\n      h = this._mosaicRects[t];\n    if (h) return h;\n    if (!this._sprites || \"loaded\" !== this._sprites.loadStatus) return null;\n    if (t && t.startsWith(r) ? ([s, e] = this._rasterizeDash(t), i = !0) : s = this._sprites.getSpriteInfo(t), !s?.width || !s.height || s.width < 0 || s.height < 0) return null;\n    const a = s.width,\n      o = s.height,\n      [n, _, g] = this._allocateImage(a, o);\n    return n.width <= 0 ? null : (this._copy(n, s, _, g, i, e), h = {\n      type: \"sprite\",\n      rect: n,\n      width: a,\n      height: o,\n      sdf: s.sdf,\n      simplePattern: !1,\n      rasterizationScale: s.pixelRatio,\n      page: _\n    }, this._mosaicRects[t] = h, h);\n  }\n  getSpriteItems(t) {\n    const i = {};\n    for (const s of t) i[s.name] = this.getSpriteItem(s.name, s.repeat);\n    return i;\n  }\n  getMosaicItemPosition(t, i) {\n    const s = this.getSpriteItem(t, i),\n      e = s?.rect;\n    if (!e) return null;\n    e.width = s.width, e.height = s.height;\n    const h = s.width,\n      a = s.height,\n      r = 2;\n    return {\n      tl: [e.x + r, e.y + r],\n      br: [e.x + r + h, e.y + r + a],\n      page: s.page\n    };\n  }\n  bind(t, i, s = 0, r = 0) {\n    if (s >= this._size.length || s >= this._mosaicsData.length) return;\n    if (!this._textures[s]) {\n      const i = new a();\n      i.wrapMode = e.CLAMP_TO_EDGE, i.width = this._size[s][0], i.height = this._size[s][1], this._textures[s] = new h(t, i, new Uint8Array(this._mosaicsData[s].buffer));\n    }\n    const o = this._textures[s];\n    o.setSamplingMode(i), this._dirties[s] && o.setData(new Uint8Array(this._mosaicsData[s].buffer)), t.bindTexture(o, r), this._dirties[s] = !1;\n  }\n  static _copyBits(t, i, s, e, h, a, r, o, n, _, g) {\n    let c = e * i + s,\n      p = o * a + r;\n    if (g) {\n      p -= a;\n      for (let r = -1; r <= _; r++, c = ((r + _) % _ + e) * i + s, p += a) for (let i = -1; i <= n; i++) h[p + i] = t[c + (i + n) % n];\n    } else for (let l = 0; l < _; l++) {\n      for (let i = 0; i < n; i++) h[p + i] = t[c + i];\n      c += i, p += a;\n    }\n  }\n  _copy(t, i, s, e, h, a) {\n    if (!this._sprites || \"loaded\" !== this._sprites.loadStatus || s >= this._mosaicsData.length) return;\n    const r = new Uint32Array(a ? a.buffer : this._sprites.image.buffer),\n      n = this._mosaicsData[s],\n      _ = 2,\n      g = a ? i.width : this._sprites.width;\n    o._copyBits(r, g, i.x, i.y, n, e[0], t.x + _, t.y + _, i.width, i.height, h), this._dirties[s] = !0;\n  }\n  _allocateImage(t, e) {\n    t += 2, e += 2;\n    const h = Math.max(t, e);\n    if (this._maxItemSize && this._maxItemSize < h) {\n      const i = new s(0, 0, t, e);\n      return this._mosaicsData.push(new Uint32Array(t * e)), this._dirties.push(!0), this._size.push([t, e]), this._textures.push(void 0), [i, this._mosaicsData.length - 1, [t, e]];\n    }\n    let a = t % 4 ? 4 - t % 4 : 4,\n      r = e % 4 ? 4 - e % 4 : 4;\n    1 === a && (a = 5), 1 === r && (r = 5);\n    const o = this._binPack.allocate(t + a, e + r);\n    return o.width <= 0 ? (this._dirties[this._currentPage] || (this._mosaicsData[this._currentPage] = null), this._currentPage = this._mosaicsData.length, this._mosaicsData.push(new Uint32Array(this._pageWidth * this._pageHeight)), this._dirties.push(!0), this._size.push([this._pageWidth, this._pageHeight]), this._textures.push(void 0), this._binPack = new i(this._pageWidth - 4, this._pageHeight - 4), this._allocateImage(t, e)) : [o, this._currentPage, [this._pageWidth, this._pageHeight]];\n  }\n  _rasterizeDash(i) {\n    const s = /\\[(.*?)\\]/,\n      e = i.match(s);\n    if (!e) return null;\n    const h = e[1].split(\",\").map(Number),\n      a = i.slice(i.lastIndexOf(\"-\") + 1),\n      [r, o, n] = t(h, a);\n    return [{\n      x: 0,\n      y: 0,\n      width: o,\n      height: n,\n      sdf: !0,\n      pixelRatio: 1\n    }, new Uint8Array(r.buffer)];\n  }\n}\nexport { o as default };", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { abortMaybe as t } from \"../../../../core/maybe.js\";\nimport { throwIfNotAbortError as e, throwIfAbortError as s, isAbortError as r, eachAlways as i } from \"../../../../core/promiseUtils.js\";\nimport { addQueryParameters as o } from \"../../../../core/urlUtils.js\";\nimport { open as n } from \"../../../../core/workers/workers.js\";\nimport a from \"./GlyphMosaic.js\";\nimport l from \"./GlyphSource.js\";\nimport c from \"./SpriteMosaic.js\";\nimport u from \"../../tiling/TileKey.js\";\nclass h {\n  constructor(t, e, s, r) {\n    this._layer = t, this._styleRepository = e, this.devicePixelRatio = s, this._sourceDataMaxLOD = r, this._spriteMosaic = null, this._glyphMosaic = null, this._connection = null, this._spriteSourceAbortController = null, this._startOptionsInputSignal = null, this._inputSignalEventListener = null;\n  }\n  destroy() {\n    this._connection?.close(), this._connection = null, this._styleRepository = null, this._layer = null, this._spriteMosaic?.destroy(), this._spriteMosaic = null, this._glyphMosaic = null, this._spriteSourceAbortController = t(this._spriteSourceAbortController), this._spriteSourcePromise = null, this._inputSignalEventListener && this._startOptionsInputSignal?.removeEventListener(\"abort\", this._inputSignalEventListener), this._startOptionsInputSignal = null, this._inputSignalEventListener = null;\n  }\n  get spriteMosaic() {\n    return this._spriteSourcePromise.then(() => this._spriteMosaic);\n  }\n  get glyphMosaic() {\n    return this._glyphMosaic;\n  }\n  async start(t) {\n    this._requestSprite(t);\n    const s = this._layer.currentStyleInfo.glyphsUrl,\n      r = new l(s ? o(s, {\n        ...this._layer.customParameters,\n        token: this._layer.apiKey\n      }) : null);\n    this._glyphMosaic = new a(1024, 1024, r), this._broadcastPromise = n(\"WorkerTileHandler\", {\n      client: this,\n      schedule: t.schedule,\n      signal: t.signal\n    }).then(s => {\n      if (this._layer && (this._connection?.close(), this._connection = s, this._layer && !this._connection.closed)) {\n        const r = s.broadcast(\"setStyle\", {\n          style: this._layer.currentStyleInfo.style,\n          sourceDataMaxLOD: this._sourceDataMaxLOD\n        }, t);\n        Promise.all(r).catch(t => e(t));\n      }\n    });\n  }\n  _requestSprite(t) {\n    this._spriteSourceAbortController?.abort();\n    const e = new AbortController();\n    this._spriteSourceAbortController = e;\n    const r = t?.signal;\n    this._inputSignalEventListener && this._startOptionsInputSignal?.removeEventListener(\"abort\", this._inputSignalEventListener), this._startOptionsInputSignal = null, r && (this._inputSignalEventListener = p(e), r.addEventListener(\"abort\", this._inputSignalEventListener, {\n      once: !0\n    }));\n    const {\n        signal: i\n      } = e,\n      o = {\n        ...t,\n        signal: i\n      };\n    this._spriteSourcePromise = this._layer.loadSpriteSource(this.devicePixelRatio, o), this._spriteSourcePromise.then(t => {\n      s(i), this._spriteMosaic = new c(1024, 1024, 250), this._spriteMosaic.setSpriteSource(t);\n    });\n  }\n  async updateStyle(t) {\n    return await this._broadcastPromise, this._broadcastPromise = Promise.all(this._connection.broadcast(\"updateStyle\", t)), this._broadcastPromise;\n  }\n  setSpriteSource(t) {\n    const e = new c(1024, 1024, 250);\n    return e.setSpriteSource(t), this._spriteMosaic = e, this._spriteSourcePromise = Promise.resolve(t), this._spriteSourceAbortController = null, e;\n  }\n  async setStyle(t, e, s) {\n    await this._broadcastPromise, this._styleRepository = t, this._sourceDataMaxLOD = s, this._requestSprite();\n    const r = new l(this._layer.currentStyleInfo.glyphsUrl ? o(this._layer.currentStyleInfo.glyphsUrl, {\n      ...this._layer.customParameters,\n      token: this._layer.apiKey\n    }) : null);\n    return this._glyphMosaic = new a(1024, 1024, r), this._broadcastPromise = Promise.all(this._connection.broadcast(\"setStyle\", {\n      style: e,\n      sourceDataMaxLOD: this._sourceDataMaxLOD\n    })), this._broadcastPromise;\n  }\n  async fetchTileData(t, e) {\n    const s = await this._getRefKeys(t, e);\n    return this._getSourcesData(Object.keys(this._layer.sourceNameToSource), s, e);\n  }\n  async fetchTilePBFs(t) {\n    const e = Object.keys(this._layer.sourceNameToSource),\n      s = {},\n      r = await this._getRefKeys(t, s),\n      i = [],\n      o = [];\n    for (let n = 0; n < r.length; n++) if (null == r[n].value || null == e[n]) o.push(null);else {\n      const t = r[n].value,\n        a = this._getTilePayload(t, e[n], s);\n      a.then(e => {\n        i.push({\n          ...e,\n          key: t\n        });\n      }), o.push(a);\n    }\n    return Promise.all(o).then(() => i);\n  }\n  async parseTileData(t, e) {\n    const s = t && t.data;\n    if (!s) return null;\n    const {\n      sourceName2DataAndRefKey: r,\n      transferList: i\n    } = s;\n    return 0 === Object.keys(r).length ? null : this._broadcastPromise.then(() => this._connection.invoke(\"createTileAndParse\", {\n      key: t.key.id,\n      sourceName2DataAndRefKey: r,\n      styleLayerUIDs: t.styleLayerUIDs\n    }, {\n      ...e,\n      transferList: i\n    }));\n  }\n  async getSprites(t) {\n    return await this._spriteSourcePromise, this._spriteMosaic.getSpriteItems(t);\n  }\n  getGlyphs(t) {\n    return this._glyphMosaic.getGlyphItems(t.font, t.codePoints);\n  }\n  async _getTilePayload(t, e, s) {\n    const i = u.pool.acquire(t.id),\n      o = this._layer.sourceNameToSource[e],\n      {\n        level: n,\n        row: a,\n        col: l\n      } = i;\n    u.pool.release(i);\n    try {\n      return {\n        protobuff: await o.requestTile(n, a, l, s),\n        sourceName: e\n      };\n    } catch (c) {\n      if (r(c)) throw c;\n      return {\n        protobuff: null,\n        sourceName: e\n      };\n    }\n  }\n  async _getRefKeys(t, e) {\n    const s = this._layer.sourceNameToSource,\n      r = new Array();\n    for (const i in s) {\n      const o = s[i].getRefKey(t, e);\n      r.push(o);\n    }\n    return i(r);\n  }\n  _getSourcesData(t, e, s) {\n    const r = [];\n    for (let i = 0; i < e.length; i++) if (null == e[i].value || null == t[i]) r.push(null);else {\n      const o = e[i].value,\n        n = this._getTilePayload(o, t[i], s);\n      r.push(n);\n    }\n    return i(r).then(t => {\n      const s = {},\n        r = [];\n      for (let i = 0; i < t.length; i++) {\n        const o = t[i].value;\n        if (o && o.protobuff && o.protobuff.byteLength > 0) {\n          const t = e[i].value.id;\n          s[o.sourceName] = {\n            refKey: t,\n            protobuff: o.protobuff\n          }, r.push(o.protobuff);\n        }\n      }\n      return {\n        sourceName2DataAndRefKey: s,\n        transferList: r\n      };\n    });\n  }\n}\nfunction p(t) {\n  return () => t.abort();\n}\nexport { h as TileHandler };", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport e from \"../../../layers/support/TileInfo.js\";\nimport l from \"./TileInfoView.js\";\nimport s from \"./TileKey.js\";\nclass t extends l {\n  constructor() {\n    super(...arguments), this._fullCacheLodInfos = null, this._levelByScale = {};\n  }\n  getTileParentId(e) {\n    const l = s.pool.acquire(e),\n      t = 0 === l.level ? null : s.getId(l.level - 1, l.row >> 1, l.col >> 1, l.world);\n    return s.pool.release(l), t;\n  }\n  getTileCoverage(e, l, s = !0, t) {\n    const o = super.getTileCoverage(e, l, s, t);\n    if (!o) return o;\n    const i = 1 << o.lodInfo.level;\n    return o.spans = o.spans.filter(e => e.row >= 0 && e.row < i), o;\n  }\n  scaleToLevel(e) {\n    if (this._fullCacheLodInfos || this._initializeFullCacheLODs(this._lodInfos), this._levelByScale[e]) return this._levelByScale[e];\n    {\n      const l = this._fullCacheLodInfos;\n      if (e > l[0].scale) return l[0].level;\n      let s, t;\n      for (let o = 0; o < l.length - 1; o++) if (t = l[o + 1], e > t.scale) return s = l[o], s.level + (s.scale - e) / (s.scale - t.scale);\n      return l[l.length - 1].level;\n    }\n  }\n  _initializeFullCacheLODs(l) {\n    let s;\n    if (0 === l[0].level) s = l.map(e => ({\n      level: e.level,\n      resolution: e.resolution,\n      scale: e.scale\n    }));else {\n      const l = this.tileInfo.size[0],\n        t = this.tileInfo.spatialReference;\n      s = e.create({\n        size: l,\n        spatialReference: t\n      }).lods.map(e => ({\n        level: e.level,\n        resolution: e.resolution,\n        scale: e.scale\n      }));\n    }\n    for (let e = 0; e < s.length; e++) this._levelByScale[s[e].scale] = s[e].level;\n    this._fullCacheLodInfos = s;\n  }\n}\nexport { t as default };"],
  "mappings": "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",
  "names": ["e", "t", "i", "s", "h", "n", "e", "s", "i", "h", "r", "o", "t", "a", "c", "t", "e", "s", "a", "r", "n", "i", "c", "o", "h", "r", "t", "s", "e", "i", "h", "a", "o", "n", "c", "p", "h", "t", "e", "s", "r", "n", "p", "i", "o", "a", "c", "t", "e", "s", "o", "i", "l"]
}
