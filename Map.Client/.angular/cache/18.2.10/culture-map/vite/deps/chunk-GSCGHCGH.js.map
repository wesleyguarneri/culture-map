{
  "version": 3,
  "sources": ["../../../../../../node_modules/@arcgis/core/views/draw/support/drawUtils.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { rad2deg as t } from \"../../../core/mathUtils.js\";\nimport { create as n } from \"../../../geometry/support/aaBoundingRect.js\";\nimport { getRingsOrPathsBounds as e } from \"../../../geometry/support/boundsUtils.js\";\nimport { geometryToCoordinates as o } from \"../../../geometry/support/coordsUtils.js\";\nfunction r(t, n, e, r) {\n  if (null == r || t.hasZ || (r = void 0), \"point\" === t.type) return t.x += n, t.y += e, t.hasZ && null != r && (t.z += r), t;\n  if (\"multipoint\" === t.type) {\n    const o = t.points;\n    for (let t = 0; t < o.length; t++) o[t] = l(o[t], n, e, r);\n    return t;\n  }\n  if (\"extent\" === t.type) return t.xmin += n, t.xmax += n, t.ymin += e, t.ymax += e, null != r && (t.zmin ??= 0, t.zmin += r, t.zmax ??= 0, t.zmax += r), t;\n  const i = o(t),\n    s = \"polyline\" === t.type ? t.paths : t.rings;\n  for (let o = 0; o < i.length; o++) {\n    const t = i[o];\n    for (let o = 0; o < t.length; o++) t[o] = l(t[o], n, e, r);\n  }\n  return \"paths\" in t ? t.paths = s : t.rings = s, t;\n}\nfunction i(t, n, e, i, s) {\n  const a = t.clone(),\n    m = i.resolution;\n  if (\"point\" === a.type) {\n    if (s) r(a, n * m, -e * m);else {\n      const t = i.state.transform,\n        o = i.state.inverseTransform,\n        r = t[0] * a.x + t[2] * a.y + t[4],\n        s = t[1] * a.x + t[3] * a.y + t[5];\n      a.x = o[0] * (r + n) + o[2] * (s + e) + o[4], a.y = o[1] * (r + n) + o[3] * (s + e) + o[5];\n    }\n    return a;\n  }\n  if (\"multipoint\" === a.type) {\n    if (s) r(a, n * m, -e * m);else {\n      const t = a.points,\n        o = i.state.transform,\n        r = i.state.inverseTransform;\n      for (let i = 0; i < t.length; i++) {\n        const s = t[i],\n          a = o[0] * s[0] + o[2] * s[1] + o[4],\n          m = o[1] * s[0] + o[3] * s[1] + o[5],\n          l = r[0] * (a + n) + r[2] * (m + e) + r[4],\n          p = r[1] * (a + n) + r[3] * (m + e) + r[5];\n        t[i] = x(s, l, p, void 0);\n      }\n    }\n    return a;\n  }\n  if (\"extent\" === a.type) {\n    if (s) r(a, n * m, -e * m);else {\n      const t = i.state.transform,\n        o = i.state.inverseTransform,\n        r = t[0] * a.xmin + t[2] * a.ymin + t[4],\n        s = t[1] * a.xmin + t[3] * a.ymin + t[5],\n        m = t[0] * a.xmax + t[2] * a.ymax + t[4],\n        l = t[1] * a.xmax + t[3] * a.ymax + t[5];\n      a.xmin = o[0] * (r + n) + o[2] * (s + e) + o[4], a.ymin = o[1] * (r + n) + o[3] * (s + e) + o[5], a.xmax = o[0] * (m + n) + o[2] * (l + e) + o[4], a.ymax = o[1] * (m + n) + o[3] * (l + e) + o[5];\n    }\n    return a;\n  }\n  if (s) r(a, n * m, -e * m);else {\n    const t = o(a),\n      r = \"polyline\" === a.type ? a.paths : a.rings,\n      s = i.state.transform,\n      m = i.state.inverseTransform;\n    for (let o = 0; o < t.length; o++) {\n      const r = t[o];\n      for (let t = 0; t < r.length; t++) {\n        const o = r[t],\n          i = s[0] * o[0] + s[2] * o[1] + s[4],\n          a = s[1] * o[0] + s[3] * o[1] + s[5],\n          l = m[0] * (i + n) + m[2] * (a + e) + m[4],\n          p = m[1] * (i + n) + m[3] * (a + e) + m[5];\n        r[t] = x(o, l, p, void 0);\n      }\n    }\n    \"paths\" in a ? a.paths = r : a.rings = r;\n  }\n  return a;\n}\nfunction s(t, r, i, s) {\n  if (\"point\" === t.type) {\n    const {\n        x: n,\n        y: e\n      } = t,\n      o = s ? s[0] : n,\n      a = s ? s[1] : e,\n      m = t.clone(),\n      l = (n - o) * r + o,\n      x = (e - a) * i + a;\n    return m.x = l, m.y = x, m;\n  }\n  if (\"multipoint\" === t.type) {\n    const a = o(t),\n      m = n(),\n      [l, p, y, f] = e(m, [a]),\n      u = s ? s[0] : (l + y) / 2,\n      c = s ? s[1] : (f + p) / 2,\n      h = t.clone(),\n      g = h.points;\n    for (let t = 0; t < g.length; t++) {\n      const n = g[t],\n        [e, o] = n,\n        s = (e - u) * r + u,\n        a = (o - c) * i + c;\n      g[t] = x(n, s, a, void 0);\n    }\n    return h;\n  }\n  if (\"extent\" === t.type) {\n    const {\n        xmin: n,\n        xmax: e,\n        ymin: o,\n        ymax: a\n      } = t,\n      m = s ? s[0] : (n + e) / 2,\n      l = s ? s[1] : (a + o) / 2,\n      x = t.clone();\n    if (x.xmin = (n - m) * r + m, x.ymax = (a - l) * i + l, x.xmax = (e - m) * r + m, x.ymin = (o - l) * i + l, x.xmin > x.xmax) {\n      const t = x.xmin,\n        n = x.xmax;\n      x.xmin = n, x.xmax = t;\n    }\n    if (x.ymin > x.ymax) {\n      const t = x.ymin,\n        n = x.ymax;\n      x.ymin = n, x.ymax = t;\n    }\n    return x;\n  }\n  const a = o(t),\n    m = n(),\n    [l, p, y, f] = e(m, a),\n    u = s ? s[0] : (l + y) / 2,\n    c = s ? s[1] : (f + p) / 2,\n    h = t.clone(),\n    g = \"polyline\" === h.type ? h.paths : h.rings;\n  for (let n = 0; n < a.length; n++) {\n    const t = a[n];\n    for (let e = 0; e < t.length; e++) {\n      const o = t[e],\n        [s, a] = o,\n        m = (s - u) * r + u,\n        l = (a - c) * i + c;\n      g[n][e] = x(o, m, l, void 0);\n    }\n  }\n  return \"paths\" in h ? h.paths = g : h.rings = g, h;\n}\nfunction a(t, n, e, o, r, i) {\n  const s = Math.sqrt((e - t) * (e - t) + (o - n) * (o - n));\n  return Math.sqrt((r - t) * (r - t) + (i - n) * (i - n)) / s;\n}\nfunction m(n, e, o, r = !1) {\n  const i = Math.atan2(e.y - o.y, e.x - o.x) - Math.atan2(n.y - o.y, n.x - o.x),\n    s = Math.atan2(Math.sin(i), Math.cos(i));\n  return r ? s : t(s);\n}\nfunction l(t, n, e, o) {\n  return x(t, t[0] + n, t[1] + e, null != t[2] && null != o ? t[2] + o : void 0);\n}\nfunction x(t, n, e, o) {\n  const r = [n, e];\n  return t.length > 2 && r.push(null != o ? o : t[2]), t.length > 3 && r.push(t[3]), r;\n}\nexport { i as cloneMove, m as getRotationAngle, a as getScaleRatio, r as move, s as scale };"],
  "mappings": "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",
  "names": ["e", "r", "t", "i", "s", "o", "a", "m", "l", "x", "p", "y", "f", "u", "c", "h", "g", "n"]
}
