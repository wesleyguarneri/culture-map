{
  "version": 3,
  "sources": ["../../../../../../node_modules/@arcgis/core/rest/query/executeForExtent.js", "../../../../../../node_modules/@arcgis/core/layers/graphics/sources/support/QueryTask.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport \"../../geometry.js\";\nimport { parseUrl as t } from \"../utils.js\";\nimport { executeQueryForExtent as o } from \"./operations/query.js\";\nimport r from \"../support/Query.js\";\nimport m from \"../../geometry/Extent.js\";\nasync function n(n, a, e) {\n  const i = t(n),\n    s = await o(i, r.from(a), {\n      ...e\n    }),\n    u = s.data.extent;\n  return !u || isNaN(u.xmin) || isNaN(u.ymin) || isNaN(u.xmax) || isNaN(u.ymax) ? {\n    count: s.data.count,\n    extent: null\n  } : {\n    count: s.data.count,\n    extent: m.fromJSON(u)\n  };\n}\nexport { n as executeForExtent };", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { _ as e } from \"../../../../chunks/tslib.es6.js\";\nimport t from \"../../../../core/Accessor.js\";\nimport r from \"../../../../core/Error.js\";\nimport has from \"../../../../core/has.js\";\nimport { whenOrAbort as o } from \"../../../../core/promiseUtils.js\";\nimport { urlToObject as s } from \"../../../../core/urlUtils.js\";\nimport { property as i } from \"../../../../core/accessorSupport/decorators/property.js\";\nimport \"../../../../core/Logger.js\";\nimport \"../../../../core/RandomLCG.js\";\nimport { subclass as u } from \"../../../../core/accessorSupport/decorators/subclass.js\";\nimport { equals as a } from \"../../../../geometry/support/spatialReferenceUtils.js\";\nimport { getMimeTypeFormatId as n, getFilenameFormatId as c } from \"../../../support/infoFor3D.js\";\nimport { DataLayerSource as p } from \"../../../support/source/DataLayerSource.js\";\nimport { parseUrl as l } from \"../../../../rest/utils.js\";\nimport { executeForCount as m } from \"../../../../rest/query/executeForCount.js\";\nimport { executeForExtent as f } from \"../../../../rest/query/executeForExtent.js\";\nimport { executeForIds as y } from \"../../../../rest/query/executeForIds.js\";\nimport { executeRawQueryJSON as d } from \"../../../../rest/query/executeQueryJSON.js\";\nimport { executeRawQueryPBF as h } from \"../../../../rest/query/executeQueryPBF.js\";\nimport S from \"../../../../rest/support/FeatureSet.js\";\nimport F from \"../../../../rest/support/Query.js\";\nlet j = class extends t {\n  constructor(e) {\n    super(e), this.dynamicDataSource = null, this.fieldsIndex = null, this.gdbVersion = null, this.infoFor3D = null, this.pbfSupported = !1, this.queryAttachmentsSupported = !1, this.sourceSpatialReference = null, this.url = null;\n  }\n  get parsedUrl() {\n    return s(this.url);\n  }\n  async execute(e, t) {\n    const r = await this.executeJSON(e, t);\n    return this.featureSetFromJSON(e, r, t);\n  }\n  async executeJSON(e, t) {\n    const r = this._normalizeQuery(e),\n      o = null != e.outStatistics?.[0],\n      s = has(\"featurelayer-pbf-statistics\"),\n      i = !o || s;\n    let u;\n    if (this.pbfSupported && i) try {\n      u = await h(this.url, r, t);\n    } catch (a) {\n      if (\"query:parsing-pbf\" !== a.name) throw a;\n      this.pbfSupported = !1;\n    }\n    return this.pbfSupported && i || (u = await d(this.url, r, t)), this._normalizeFields(u.fields), u;\n  }\n  async featureSetFromJSON(e, t, r) {\n    if (!this._queryIs3DObjectFormat(e) || null == this.infoFor3D || !t.features) return S.fromJSON(t);\n    const {\n      meshFeatureSetFromJSON: s\n    } = await o(import(\"../../../../rest/support/meshFeatureSet.js\"), r);\n    return s(e, this.infoFor3D, t);\n  }\n  executeForCount(e, t) {\n    return m(this.url, this._normalizeQuery(e), t);\n  }\n  executeForExtent(e, t) {\n    return f(this.url, this._normalizeQuery(e), t);\n  }\n  executeForIds(e, t) {\n    return y(this.url, this._normalizeQuery(e), t);\n  }\n  async executeRelationshipQuery(e, t) {\n    const [{\n      default: r\n    }, {\n      executeRelationshipQuery: s\n    }] = await o(Promise.all([import(\"../../../../rest/support/RelationshipQuery.js\"), import(\"../../../../rest/query/executeRelationshipQuery.js\")]), t);\n    return e = r.from(e), (this.gdbVersion || this.dynamicDataSource) && ((e = e.clone()).gdbVersion = e.gdbVersion || this.gdbVersion, e.dynamicDataSource = e.dynamicDataSource || this.dynamicDataSource), s(this.url, e, t);\n  }\n  async executeRelationshipQueryForCount(e, t) {\n    const [{\n      default: r\n    }, {\n      executeRelationshipQueryForCount: s\n    }] = await o(Promise.all([import(\"../../../../rest/support/RelationshipQuery.js\"), import(\"../../../../rest/query/executeRelationshipQuery.js\")]), t);\n    return e = r.from(e), (this.gdbVersion || this.dynamicDataSource) && ((e = e.clone()).gdbVersion = e.gdbVersion || this.gdbVersion, e.dynamicDataSource = e.dynamicDataSource || this.dynamicDataSource), s(this.url, e, t);\n  }\n  async executeAttachmentQuery(e, t) {\n    const {\n        executeAttachmentQuery: r,\n        fetchAttachments: s,\n        processAttachmentQueryResult: i\n      } = await o(import(\"../../../../rest/query/operations/queryAttachments.js\"), t),\n      u = l(this.url);\n    return i(u, await (this.queryAttachmentsSupported ? r(u, e, t) : s(u, e, t)));\n  }\n  async executeTopFeaturesQuery(e, t) {\n    const {\n      executeTopFeaturesQuery: r\n    } = await o(import(\"../../../../rest/query/executeTopFeaturesQuery.js\"), t);\n    return r(this.parsedUrl, e, this.sourceSpatialReference, t);\n  }\n  async executeForTopIds(e, t) {\n    const {\n      executeForTopIds: r\n    } = await o(import(\"../../../../rest/query/executeForTopIds.js\"), t);\n    return r(this.parsedUrl, e, t);\n  }\n  async executeForTopExtents(e, t) {\n    const {\n      executeForTopExtents: r\n    } = await o(import(\"../../../../rest/query/executeForTopExtents.js\"), t);\n    return r(this.parsedUrl, e, t);\n  }\n  async executeForTopCount(e, t) {\n    const {\n      executeForTopCount: r\n    } = await o(import(\"../../../../rest/query/executeForTopCount.js\"), t);\n    return r(this.parsedUrl, e, t);\n  }\n  _normalizeQuery(e) {\n    let t = F.from(e);\n    t.sourceSpatialReference = t.sourceSpatialReference || this.sourceSpatialReference, (this.gdbVersion || this.dynamicDataSource) && (t = t === e ? t.clone() : t, t.gdbVersion = e.gdbVersion || this.gdbVersion, t.dynamicDataSource = e.dynamicDataSource ? p.from(e.dynamicDataSource) : this.dynamicDataSource);\n    const {\n      infoFor3D: o\n    } = this;\n    if (null != o && this._queryIs3DObjectFormat(e)) {\n      t = t === e ? t.clone() : t, t.formatOf3DObjects = null;\n      const {\n          supportedFormats: s,\n          queryFormats: i\n        } = o,\n        u = n(\"model/gltf-binary\", s) ?? c(\"glb\", s),\n        p = n(\"model/gltf+json\", s) ?? c(\"gltf\", s);\n      for (const e of i) {\n        if (e === u) {\n          t.formatOf3DObjects = e;\n          break;\n        }\n        e !== p || t.formatOf3DObjects || (t.formatOf3DObjects = e);\n      }\n      if (!t.formatOf3DObjects) throw new r(\"query:unsupported-3d-query-formats\", \"Could not find any supported 3D object query format. Only supported formats are 3D_glb and 3D_gltf\");\n      if (t.outSpatialReference && !a(t.outSpatialReference, this.sourceSpatialReference)) throw new r(\"query:unsupported-out-spatial-reference\", \"3D object feature services do not support projection of geometries\");\n      if (null == t.outFields || !t.outFields.includes(\"*\")) {\n        t = t === e ? t.clone() : t, null == t.outFields && (t.outFields = []);\n        const {\n          originX: r,\n          originY: s,\n          originZ: i,\n          translationX: u,\n          translationY: a,\n          translationZ: n,\n          scaleX: c,\n          scaleY: p,\n          scaleZ: l,\n          rotationX: m,\n          rotationY: f,\n          rotationZ: y,\n          rotationDeg: d\n        } = o.transformFieldRoles;\n        t.outFields.push(r, s, i, u, a, n, c, p, l, m, f, y, d);\n      }\n    }\n    return t;\n  }\n  _normalizeFields(e) {\n    if (null != this.fieldsIndex && null != e) for (const t of e) {\n      const e = this.fieldsIndex.get(t.name);\n      e && Object.assign(t, e.toJSON());\n    }\n  }\n  _queryIs3DObjectFormat(e) {\n    return null != this.infoFor3D && !0 === e.returnGeometry && \"xyFootprint\" !== e.multipatchOption && !e.outStatistics;\n  }\n};\ne([i({\n  type: p\n})], j.prototype, \"dynamicDataSource\", void 0), e([i()], j.prototype, \"fieldsIndex\", void 0), e([i()], j.prototype, \"gdbVersion\", void 0), e([i()], j.prototype, \"infoFor3D\", void 0), e([i({\n  readOnly: !0\n})], j.prototype, \"parsedUrl\", null), e([i()], j.prototype, \"pbfSupported\", void 0), e([i()], j.prototype, \"queryAttachmentsSupported\", void 0), e([i()], j.prototype, \"sourceSpatialReference\", void 0), e([i({\n  type: String\n})], j.prototype, \"url\", void 0), j = e([u(\"esri.layers.graphics.sources.support.QueryTask\")], j);\nconst x = j;\nexport { x as default };"],
  "mappings": "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",
  "names": ["n", "a", "e", "i", "s", "u", "e", "s", "i", "u", "a", "n", "p", "f", "y", "d", "x"]
}
