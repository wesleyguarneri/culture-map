{
  "version": 3,
  "sources": ["../../../../../../node_modules/@arcgis/core/chunks/CheckerBoard.glsl.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { multipassTerrainTest as e } from \"../views/3d/webgl-engine/core/shaderLibrary/shading/MultipassTerrainTest.glsl.js\";\nimport { ColorConversion as r } from \"../views/3d/webgl-engine/core/shaderLibrary/util/ColorConversion.glsl.js\";\nimport { addProjViewLocalOrigin as o } from \"../views/3d/webgl-engine/core/shaderLibrary/util/View.glsl.js\";\nimport { Float2PassUniform as a } from \"../views/3d/webgl-engine/core/shaderModules/Float2PassUniform.js\";\nimport { Float4PassUniform as i } from \"../views/3d/webgl-engine/core/shaderModules/Float4PassUniform.js\";\nimport { glsl as s } from \"../views/3d/webgl-engine/core/shaderModules/interfaces.js\";\nimport { ShaderBuilder as l } from \"../views/3d/webgl-engine/core/shaderModules/ShaderBuilder.js\";\nimport { TransparencyPassType as d } from \"../views/3d/webgl-engine/lib/TransparencyPassType.js\";\nimport { VertexAttribute as t } from \"../views/3d/webgl-engine/lib/VertexAttribute.js\";\nfunction n(n) {\n  const c = new l(),\n    {\n      vertex: p,\n      fragment: v\n    } = c;\n  return o(p, n), c.attributes.add(t.POSITION, \"vec3\"), c.attributes.add(t.UV0, \"vec2\"), c.varyings.add(\"vUV\", \"vec2\"), n.multipassEnabled && c.varyings.add(\"depth\", \"float\"), p.code.add(s`\n    void main(void) {\n      vUV = uv0;\n      ${n.multipassEnabled ? \"depth = (view * vec4(position, 1.0)).z;\" : \"\"}\n      gl_Position = proj * view * vec4(position, 1.0);\n    }\n  `), c.include(e, n), v.uniforms.add(new a(\"size\", e => e.size)), v.uniforms.add(new i(\"color1\", e => e.color1)), v.uniforms.add(new i(\"color2\", e => e.color2)), v.include(r), n.transparencyPassType === d.ColorAlpha && (c.outputs.add(\"fragColor\", \"vec4\", 0), c.outputs.add(\"fragAlpha\", \"float\", 1)), v.code.add(s`\n    void main() {\n      ${n.multipassEnabled ? \"terrainDepthTest(depth);\" : \"\"}\n      vec2 uvScaled = vUV / (2.0 * size);\n\n      vec2 uv = fract(uvScaled - 0.25);\n      vec2 ab = clamp((abs(uv - 0.5) - 0.25) / fwidth(uvScaled), -0.5, 0.5);\n      float fade = smoothstep(0.25, 0.5, max(fwidth(uvScaled.x), fwidth(uvScaled.y)));\n      float t = mix(abs(ab.x + ab.y), 0.5, fade);\n\n      fragColor = mix(color2, color1, t);\n      ${n.transparencyPassType === d.ColorAlpha ? s`\n              fragColor = premultiplyAlpha(fragColor);\n              fragAlpha = fragColor.a;` : \"\"}\n    }\n  `), c;\n}\nconst c = Object.freeze(Object.defineProperty({\n  __proto__: null,\n  build: n\n}, Symbol.toStringTag, {\n  value: \"Module\"\n}));\nexport { c as C, n as b };"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAaA,SAAS,EAAEA,IAAG;AACZ,QAAMC,KAAI,IAAIC,GAAE,GACd;AAAA,IACE,QAAQ;AAAA,IACR,UAAU;AAAA,EACZ,IAAID;AACN,SAAO,EAAE,GAAGD,EAAC,GAAGC,GAAE,WAAW,IAAI,EAAE,UAAU,MAAM,GAAGA,GAAE,WAAW,IAAI,EAAE,KAAK,MAAM,GAAGA,GAAE,SAAS,IAAI,OAAO,MAAM,GAAGD,GAAE,oBAAoBC,GAAE,SAAS,IAAI,SAAS,OAAO,GAAG,EAAE,KAAK,IAAI;AAAA;AAAA;AAAA,QAGnLD,GAAE,mBAAmB,4CAA4C,EAAE;AAAA;AAAA;AAAA,GAGxE,GAAGC,GAAE,QAAQ,GAAGD,EAAC,GAAG,EAAE,SAAS,IAAI,IAAIG,GAAE,QAAQ,CAAAA,OAAKA,GAAE,IAAI,CAAC,GAAG,EAAE,SAAS,IAAI,IAAIA,GAAE,UAAU,CAAAA,OAAKA,GAAE,MAAM,CAAC,GAAG,EAAE,SAAS,IAAI,IAAIA,GAAE,UAAU,CAAAA,OAAKA,GAAE,MAAM,CAAC,GAAG,EAAE,QAAQA,EAAC,GAAGH,GAAE,yBAAyBE,GAAE,eAAeD,GAAE,QAAQ,IAAI,aAAa,QAAQ,CAAC,GAAGA,GAAE,QAAQ,IAAI,aAAa,SAAS,CAAC,IAAI,EAAE,KAAK,IAAI;AAAA;AAAA,QAEhTD,GAAE,mBAAmB,6BAA6B,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QASpDA,GAAE,yBAAyBE,GAAE,aAAa;AAAA;AAAA,0CAER,EAAE;AAAA;AAAA,GAEzC,GAAGD;AACN;AACA,IAAM,IAAI,OAAO,OAAO,OAAO,eAAe;AAAA,EAC5C,WAAW;AAAA,EACX,OAAO;AACT,GAAG,OAAO,aAAa;AAAA,EACrB,OAAO;AACT,CAAC,CAAC;",
  "names": ["n", "c", "o", "e"]
}
