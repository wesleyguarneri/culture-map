{
  "version": 3,
  "sources": ["../../../../../../node_modules/@arcgis/core/geometry/support/TileClipper.js", "../../../../../../node_modules/@arcgis/core/views/2d/engine/vectorTiles/GeometryUtils.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nconst t = 512;\nvar i, s;\n!function (t) {\n  t[t.Unknown = 0] = \"Unknown\", t[t.Point = 1] = \"Point\", t[t.LineString = 2] = \"LineString\", t[t.Polygon = 3] = \"Polygon\";\n}(i || (i = {}));\nclass h {\n  constructor(t, i) {\n    this.x = t, this.y = i;\n  }\n  clone() {\n    return new h(this.x, this.y);\n  }\n  equals(t, i) {\n    return t === this.x && i === this.y;\n  }\n  isEqual(t) {\n    return t.x === this.x && t.y === this.y;\n  }\n  setCoords(t, i) {\n    return this.x = t, this.y = i, this;\n  }\n  normalize() {\n    const t = this.x,\n      i = this.y,\n      s = Math.sqrt(t * t + i * i);\n    return this.x /= s, this.y /= s, this;\n  }\n  rightPerpendicular() {\n    const t = this.x;\n    return this.x = this.y, this.y = -t, this;\n  }\n  leftPerpendicular() {\n    const t = this.x;\n    return this.x = -this.y, this.y = t, this;\n  }\n  move(t, i) {\n    return this.x += t, this.y += i, this;\n  }\n  assign(t) {\n    return this.x = t.x, this.y = t.y, this;\n  }\n  assignAdd(t, i) {\n    return this.x = t.x + i.x, this.y = t.y + i.y, this;\n  }\n  assignSub(t, i) {\n    return this.x = t.x - i.x, this.y = t.y - i.y, this;\n  }\n  rotate(t, i) {\n    const s = this.x,\n      h = this.y;\n    return this.x = s * t - h * i, this.y = s * i + h * t, this;\n  }\n  scale(t) {\n    return this.x *= t, this.y *= t, this;\n  }\n  length() {\n    const t = this.x,\n      i = this.y;\n    return Math.sqrt(t * t + i * i);\n  }\n  sub(t) {\n    return this.x -= t.x, this.y -= t.y, this;\n  }\n  add(t) {\n    return this.x += t.x, this.y += t.y, this;\n  }\n  static distance(t, i) {\n    const s = i.x - t.x,\n      h = i.y - t.y;\n    return Math.sqrt(s * s + h * h);\n  }\n  static add(t, i) {\n    return new h(t.x + i.x, t.y + i.y);\n  }\n  static sub(t, i) {\n    return new h(t.x - i.x, t.y - i.y);\n  }\n}\nclass n {\n  constructor(t, i, s) {\n    this.ratio = t, this.x = i, this.y = s;\n  }\n}\nclass e {\n  constructor(i, s, h, n = 8, e = 8) {\n    this._lines = [], this._starts = [], this.validateTessellation = !0, this._pixelRatio = n, this._pixelMargin = e, this._tileSize = t * n, this._dz = i, this._yPos = s, this._xPos = h;\n  }\n  setPixelMargin(t) {\n    t !== this._pixelMargin && (this._pixelMargin = t, this.setExtent(this._extent));\n  }\n  setExtent(t) {\n    this._extent = t, this._finalRatio = this._tileSize / t * (1 << this._dz);\n    let i = this._pixelRatio * this._pixelMargin;\n    i /= this._finalRatio;\n    const s = t >> this._dz;\n    i > s && (i = s), this._margin = i, this._xmin = s * this._xPos - i, this._ymin = s * this._yPos - i, this._xmax = this._xmin + s + 2 * i, this._ymax = this._ymin + s + 2 * i;\n  }\n  reset(t) {\n    this._type = t, this._lines = [], this._starts = [], this._line = null, this._start = 0;\n  }\n  moveTo(t, i) {\n    this._pushLine(), this._prevIsIn = this._isIn(t, i), this._moveTo(t, i, this._prevIsIn), this._prevPt = new h(t, i), this._firstPt = new h(t, i), this._dist = 0;\n  }\n  lineTo(t, i) {\n    const s = this._isIn(t, i),\n      e = new h(t, i),\n      _ = h.distance(this._prevPt, e);\n    let x, l, y, a, r, o, u, m;\n    if (s) this._prevIsIn ? this._lineTo(t, i, !0) : (x = this._prevPt, l = e, y = this._intersect(l, x), this._start = this._dist + _ * (1 - this._r), this._lineTo(y.x, y.y, !0), this._lineTo(l.x, l.y, !0));else if (this._prevIsIn) l = this._prevPt, x = e, y = this._intersect(l, x), this._lineTo(y.x, y.y, !0), this._lineTo(x.x, x.y, !1);else {\n      const t = this._prevPt,\n        i = e;\n      if (t.x <= this._xmin && i.x <= this._xmin || t.x >= this._xmax && i.x >= this._xmax || t.y <= this._ymin && i.y <= this._ymin || t.y >= this._ymax && i.y >= this._ymax) this._lineTo(i.x, i.y, !1);else {\n        const s = [];\n        if ((t.x < this._xmin && i.x > this._xmin || t.x > this._xmin && i.x < this._xmin) && (a = (this._xmin - t.x) / (i.x - t.x), m = t.y + a * (i.y - t.y), m <= this._ymin ? o = !1 : m >= this._ymax ? o = !0 : s.push(new n(a, this._xmin, m))), (t.x < this._xmax && i.x > this._xmax || t.x > this._xmax && i.x < this._xmax) && (a = (this._xmax - t.x) / (i.x - t.x), m = t.y + a * (i.y - t.y), m <= this._ymin ? o = !1 : m >= this._ymax ? o = !0 : s.push(new n(a, this._xmax, m))), (t.y < this._ymin && i.y > this._ymin || t.y > this._ymin && i.y < this._ymin) && (a = (this._ymin - t.y) / (i.y - t.y), u = t.x + a * (i.x - t.x), u <= this._xmin ? r = !1 : u >= this._xmax ? r = !0 : s.push(new n(a, u, this._ymin))), (t.y < this._ymax && i.y > this._ymax || t.y > this._ymax && i.y < this._ymax) && (a = (this._ymax - t.y) / (i.y - t.y), u = t.x + a * (i.x - t.x), u <= this._xmin ? r = !1 : u >= this._xmax ? r = !0 : s.push(new n(a, u, this._ymax))), 0 === s.length) r ? o ? this._lineTo(this._xmax, this._ymax, !0) : this._lineTo(this._xmax, this._ymin, !0) : o ? this._lineTo(this._xmin, this._ymax, !0) : this._lineTo(this._xmin, this._ymin, !0);else if (s.length > 1 && s[0].ratio > s[1].ratio) this._start = this._dist + _ * s[1].ratio, this._lineTo(s[1].x, s[1].y, !0), this._lineTo(s[0].x, s[0].y, !0);else {\n          this._start = this._dist + _ * s[0].ratio;\n          for (let t = 0; t < s.length; t++) this._lineTo(s[t].x, s[t].y, !0);\n        }\n        this._lineTo(i.x, i.y, !1);\n      }\n    }\n    this._dist += _, this._prevIsIn = s, this._prevPt = e;\n  }\n  close() {\n    if (this._line.length > 2) {\n      const t = this._firstPt,\n        i = this._prevPt;\n      t.x === i.x && t.y === i.y || this.lineTo(t.x, t.y);\n      const s = this._line;\n      let h = s.length;\n      for (; h >= 4 && (s[0].x === s[1].x && s[0].x === s[h - 2].x || s[0].y === s[1].y && s[0].y === s[h - 2].y);) s.pop(), s[0].x = s[h - 2].x, s[0].y = s[h - 2].y, --h;\n    }\n  }\n  result(t = !0) {\n    return this._pushLine(), 0 === this._lines.length ? null : (this._type === i.Polygon && t && x.simplify(this._tileSize, this._margin * this._finalRatio, this._lines), this._lines);\n  }\n  resultWithStarts() {\n    if (this._type !== i.LineString) throw new Error(\"Only valid for lines\");\n    this._pushLine();\n    const t = this._lines,\n      s = t.length;\n    if (0 === s) return null;\n    const h = [];\n    for (let i = 0; i < s; i++) h.push({\n      line: t[i],\n      start: this._starts[i] || 0\n    });\n    return h;\n  }\n  _isIn(t, i) {\n    return t >= this._xmin && t <= this._xmax && i >= this._ymin && i <= this._ymax;\n  }\n  _intersect(t, i) {\n    let s, n, e;\n    if (i.x >= this._xmin && i.x <= this._xmax) n = i.y <= this._ymin ? this._ymin : this._ymax, e = (n - t.y) / (i.y - t.y), s = t.x + e * (i.x - t.x);else if (i.y >= this._ymin && i.y <= this._ymax) s = i.x <= this._xmin ? this._xmin : this._xmax, e = (s - t.x) / (i.x - t.x), n = t.y + e * (i.y - t.y);else {\n      n = i.y <= this._ymin ? this._ymin : this._ymax, s = i.x <= this._xmin ? this._xmin : this._xmax;\n      const h = (s - t.x) / (i.x - t.x),\n        _ = (n - t.y) / (i.y - t.y);\n      h < _ ? (e = h, n = t.y + h * (i.y - t.y)) : (e = _, s = t.x + _ * (i.x - t.x));\n    }\n    return this._r = e, new h(s, n);\n  }\n  _pushLine() {\n    this._line && (this._type === i.Point ? this._line.length > 0 && (this._lines.push(this._line), this._starts.push(this._start)) : this._type === i.LineString ? this._line.length > 1 && (this._lines.push(this._line), this._starts.push(this._start)) : this._type === i.Polygon && this._line.length > 3 && (this._lines.push(this._line), this._starts.push(this._start))), this._line = [], this._start = 0;\n  }\n  _moveTo(t, s, n) {\n    this._type !== i.Polygon ? n && (t = Math.round((t - (this._xmin + this._margin)) * this._finalRatio), s = Math.round((s - (this._ymin + this._margin)) * this._finalRatio), this._line.push(new h(t, s))) : (n || (t < this._xmin && (t = this._xmin), t > this._xmax && (t = this._xmax), s < this._ymin && (s = this._ymin), s > this._ymax && (s = this._ymax)), t = Math.round((t - (this._xmin + this._margin)) * this._finalRatio), s = Math.round((s - (this._ymin + this._margin)) * this._finalRatio), this._line.push(new h(t, s)), this._isH = !1, this._isV = !1);\n  }\n  _lineTo(t, s, n) {\n    let e, _;\n    if (this._type !== i.Polygon) {\n      if (n) {\n        if (t = Math.round((t - (this._xmin + this._margin)) * this._finalRatio), s = Math.round((s - (this._ymin + this._margin)) * this._finalRatio), this._line.length > 0 && (e = this._line[this._line.length - 1], e.equals(t, s))) return;\n        this._line.push(new h(t, s));\n      } else this._line && this._line.length > 0 && this._pushLine();\n    } else if (n || (t < this._xmin && (t = this._xmin), t > this._xmax && (t = this._xmax), s < this._ymin && (s = this._ymin), s > this._ymax && (s = this._ymax)), t = Math.round((t - (this._xmin + this._margin)) * this._finalRatio), s = Math.round((s - (this._ymin + this._margin)) * this._finalRatio), this._line && this._line.length > 0) {\n      e = this._line[this._line.length - 1];\n      const i = e.x === t,\n        n = e.y === s;\n      if (i && n) return;\n      this._isH && i || this._isV && n ? (e.x = t, e.y = s, _ = this._line[this._line.length - 2], _.x === t && _.y === s ? (this._line.pop(), this._line.length <= 1 ? (this._isH = !1, this._isV = !1) : (_ = this._line[this._line.length - 2], this._isH = _.x === t, this._isV = _.y === s)) : (this._isH = _.x === t, this._isV = _.y === s)) : (this._line.push(new h(t, s)), this._isH = i, this._isV = n);\n    } else this._line.push(new h(t, s));\n  }\n}\nclass _ {\n  setExtent(t) {\n    this._ratio = 4096 === t ? 1 : 4096 / t;\n  }\n  get validateTessellation() {\n    return this._ratio < 1;\n  }\n  reset(t) {\n    this._lines = [], this._line = null;\n  }\n  moveTo(t, i) {\n    this._line && this._lines.push(this._line), this._line = [];\n    const s = this._ratio;\n    this._line.push(new h(t * s, i * s));\n  }\n  lineTo(t, i) {\n    const s = this._ratio;\n    this._line.push(new h(t * s, i * s));\n  }\n  close() {\n    const t = this._line;\n    t && !t[0].isEqual(t[t.length - 1]) && t.push(t[0]);\n  }\n  result() {\n    return this._line && this._lines.push(this._line), 0 === this._lines.length ? null : this._lines;\n  }\n}\n!function (t) {\n  t[t.sideLeft = 0] = \"sideLeft\", t[t.sideRight = 1] = \"sideRight\", t[t.sideTop = 2] = \"sideTop\", t[t.sideBottom = 3] = \"sideBottom\";\n}(s || (s = {}));\nclass x {\n  static simplify(t, i, h) {\n    if (!h) return;\n    const n = -i,\n      e = t + i,\n      _ = -i,\n      l = t + i,\n      y = [],\n      a = [],\n      r = h.length;\n    for (let x = 0; x < r; ++x) {\n      const t = h[x];\n      if (!t || t.length < 2) continue;\n      let i,\n        r = t[0];\n      const o = t.length;\n      for (let h = 1; h < o; ++h) i = t[h], r.x === i.x && (r.x <= n && (r.y > i.y ? (y.push(x), y.push(h), y.push(s.sideLeft), y.push(-1)) : (a.push(x), a.push(h), a.push(s.sideLeft), a.push(-1))), r.x >= e && (r.y < i.y ? (y.push(x), y.push(h), y.push(s.sideRight), y.push(-1)) : (a.push(x), a.push(h), a.push(s.sideRight), a.push(-1)))), r.y === i.y && (r.y <= _ && (r.x < i.x ? (y.push(x), y.push(h), y.push(s.sideTop), y.push(-1)) : (a.push(x), a.push(h), a.push(s.sideTop), a.push(-1))), r.y >= l && (r.x > i.x ? (y.push(x), y.push(h), y.push(s.sideBottom), y.push(-1)) : (a.push(x), a.push(h), a.push(s.sideBottom), a.push(-1)))), r = i;\n    }\n    if (0 === y.length || 0 === a.length) return;\n    x.fillParent(h, a, y), x.fillParent(h, y, a);\n    const o = [];\n    x.calcDeltas(o, a, y), x.calcDeltas(o, y, a), x.addDeltas(o, h);\n  }\n  static fillParent(t, i, h) {\n    const n = h.length,\n      e = i.length;\n    for (let _ = 0; _ < e; _ += 4) {\n      const e = i[_],\n        x = i[_ + 1],\n        y = i[_ + 2],\n        a = t[e][x - 1],\n        r = t[e][x];\n      let o = 8092,\n        u = -1;\n      for (let i = 0; i < n; i += 4) {\n        if (h[i + 2] !== y) continue;\n        const n = h[i],\n          e = h[i + 1],\n          _ = t[n][e - 1],\n          x = t[n][e];\n        switch (y) {\n          case s.sideLeft:\n          case s.sideRight:\n            if (l(a.y, _.y, x.y) && l(r.y, _.y, x.y)) {\n              const t = Math.abs(x.y - _.y);\n              t < o && (o = t, u = i);\n            }\n            break;\n          case s.sideTop:\n          case s.sideBottom:\n            if (l(a.x, _.x, x.x) && l(r.x, _.x, x.x)) {\n              const t = Math.abs(x.x - _.x);\n              t < o && (o = t, u = i);\n            }\n        }\n      }\n      i[_ + 3] = u;\n    }\n  }\n  static calcDeltas(t, i, s) {\n    const h = i.length;\n    for (let n = 0; n < h; n += 4) {\n      const h = [],\n        e = x.calcDelta(n, i, s, h);\n      t.push(i[n]), t.push(i[n + 1]), t.push(i[n + 2]), t.push(e);\n    }\n  }\n  static calcDelta(t, i, s, h) {\n    const n = i[t + 3];\n    if (-1 === n) return 0;\n    const e = h.length;\n    return e > 1 && h[e - 2] === n ? 0 : (h.push(n), x.calcDelta(n, s, i, h) + 1);\n  }\n  static addDeltas(t, i) {\n    const h = t.length;\n    let n = 0;\n    for (let s = 0; s < h; s += 4) {\n      const i = t[s + 3];\n      i > n && (n = i);\n    }\n    for (let e = 0; e < h; e += 4) {\n      const h = i[t[e]],\n        _ = t[e + 1],\n        x = n - t[e + 3];\n      switch (t[e + 2]) {\n        case s.sideLeft:\n          h[_ - 1].x -= x, h[_].x -= x, 1 === _ && (h[h.length - 1].x -= x), _ === h.length - 1 && (h[0].x -= x);\n          break;\n        case s.sideRight:\n          h[_ - 1].x += x, h[_].x += x, 1 === _ && (h[h.length - 1].x += x), _ === h.length - 1 && (h[0].x += x);\n          break;\n        case s.sideTop:\n          h[_ - 1].y -= x, h[_].y -= x, 1 === _ && (h[h.length - 1].y -= x), _ === h.length - 1 && (h[0].y -= x);\n          break;\n        case s.sideBottom:\n          h[_ - 1].y += x, h[_].y += x, 1 === _ && (h[h.length - 1].y += x), _ === h.length - 1 && (h[0].y += x);\n      }\n    }\n  }\n}\nconst l = (t, i, s) => t >= i && t <= s || t >= s && t <= i;\nexport { i as GeometryType, h as Point, _ as SimpleBuilder, e as TileClipper };", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { distanceToSegmentSquared as t } from \"../../../../geometry/support/coordsUtils.js\";\nimport { Point as n } from \"../../../../geometry/support/TileClipper.js\";\nconst r = Number.POSITIVE_INFINITY,\n  o = Math.PI,\n  e = 2 * o,\n  i = 128 / o,\n  u = 256 / 360,\n  s = o / 180,\n  c = 1 / Math.LN2;\nfunction a(t, n) {\n  return (t %= n) >= 0 ? t : t + n;\n}\nfunction f(t) {\n  return a(t * i, 256);\n}\nfunction l(t) {\n  return a(t * u, 256);\n}\nfunction h(t) {\n  return Math.log(t) * c;\n}\nfunction m(t) {\n  return t * t;\n}\nfunction p(t, n, r) {\n  return t * (1 - r) + n * r;\n}\nfunction g(t, n, r) {\n  return t >= n && t <= r || t >= r && t <= n;\n}\nconst x = 8,\n  y = 14,\n  M = 16;\nfunction d(t) {\n  return x + Math.max((t - y) * M, 0);\n}\nfunction I(t, n, r) {\n  let o,\n    e,\n    i,\n    u = 0;\n  for (const s of r) {\n    o = s.length;\n    for (let r = 1; r < o; ++r) {\n      if (e = s[r - 1], i = s[r], e.y > n == i.y > n) continue;\n      (i.x - e.x) * (n - e.y) - (i.y - e.y) * (t - e.x) > 0 ? u++ : u--;\n    }\n  }\n  return 0 !== u;\n}\nfunction N(n, r, o, e) {\n  let i, u, s, c;\n  const a = e * e;\n  for (const f of o) {\n    const o = f.length;\n    if (!(o < 2)) {\n      i = f[0].x, u = f[0].y;\n      for (let e = 1; e < o; ++e) {\n        if (s = f[e].x, c = f[e].y, t(n, r, i, u, s, c) < a) return !0;\n        i = s, u = c;\n      }\n    }\n  }\n  return !1;\n}\nfunction w(t, n, r, o, e, i, u) {\n  const s = Math.max(o, Math.min(n, i)) - n,\n    c = Math.max(e, Math.min(r, u)) - r;\n  return s * s + c * c <= t * t;\n}\nfunction P(t, r) {\n  if (0 === r || Number.isNaN(r)) return t;\n  const o = [],\n    e = new n(0, 0),\n    i = new n(0, 0),\n    u = new n(0, 0);\n  for (let s = 0; s < t.length; s++) {\n    const c = t[s],\n      a = [];\n    for (let t = 0; t < c.length; t++) {\n      const o = c[t - 1],\n        s = c[t],\n        f = c[t + 1];\n      0 === t ? e.setCoords(0, 0) : e.assignSub(s, o).normalize().rightPerpendicular(), t === c.length - 1 ? i.setCoords(0, 0) : i.assignSub(f, s).normalize().rightPerpendicular(), u.assignAdd(e, i).normalize();\n      const l = u.x * i.x + u.y * i.y;\n      0 !== l && u.scale(1 / l), a.push(n.add(s, u.scale(r)));\n    }\n    o.push(a);\n  }\n  return o;\n}\nfunction b(t, r, o, e) {\n  const i = new n(t[0], t[1]);\n  if (i.scale(e), \"viewport\" === r) {\n    const t = -o * (Math.PI / 180),\n      n = Math.cos(t),\n      r = Math.sin(t);\n    i.rotate(n, r);\n  }\n  return i;\n}\nexport { g as between, e as c2pi, u as cDegTo256, s as cDegToRad, r as cInfinity, o as cPi, i as cRadTo256, l as degToByte, N as distanceFromToPolylineWithinThreshold, d as getTileMargins, p as interpolate, w as isCircleOverlapingRect, h as log2, P as offsetLine, I as pointInPolygon, a as positiveMod, f as radToByte, m as sqr, b as translateAnchor };"],
  "mappings": "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",
  "names": ["t", "i", "s", "h", "n", "e", "_", "x", "l", "y", "a", "r", "o", "u", "e", "i", "s", "t", "n", "l", "h", "t", "n", "r", "x", "t", "n", "r", "o", "e", "i", "u", "s", "c", "a", "f", "l"]
}
