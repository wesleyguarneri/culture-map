{
  "version": 3,
  "sources": ["../../../../../../node_modules/@arcgis/core/rest/networks/validateNetworkTopology.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport t from \"../../request.js\";\nimport o from \"../../core/Error.js\";\nimport { parseUrl as i, encode as e, asValidOptions as r } from \"../utils.js\";\nimport s from \"./support/ValidateNetworkTopologyResult.js\";\nasync function a(o, a, n) {\n  const d = i(o),\n    l = a.toJSON();\n  a.validationSet && (l.validationSet = JSON.stringify(a.validationSet));\n  const u = {\n      ...l,\n      returnEdits: !0,\n      f: \"json\"\n    },\n    p = e({\n      ...d.query,\n      ...u\n    }),\n    m = r(p, {\n      ...n,\n      method: \"post\"\n    }),\n    v = `${d.path}/validateNetworkTopology`,\n    {\n      data: y\n    } = await t(v, m),\n    c = s.fromJSON(y);\n  return c.serviceEdits = c.serviceEdits?.map(t => ({\n    layerId: t.id,\n    editedFeatures: t.editedFeatures\n  })) ?? [], c;\n}\nasync function n(s, a, n) {\n  if (!a.gdbVersion) throw new o(\"submit-validate-network-topology-job:missing-gdb-version\", \"version is missing\");\n  const d = i(s),\n    l = a.toJSON();\n  a.validationSet && (l.validationSet = JSON.stringify(a.validationSet));\n  const u = r(d.query, {\n      query: e({\n        ...l,\n        returnEdits: !0,\n        async: !0,\n        f: \"json\"\n      }),\n      ...n,\n      method: \"post\"\n    }),\n    p = `${d.path}/validateNetworkTopology`,\n    {\n      data: m\n    } = await t(p, u);\n  return m ? m.statusUrl : null;\n}\nexport { n as submitValidateNetworkTopologyJob, a as validateNetworkTopology };"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQA,SAAe,EAAE,GAAGA,IAAGC,IAAG;AAAA;AACxB,UAAM,IAAI,EAAE,CAAC,GACX,IAAID,GAAE,OAAO;AACf,IAAAA,GAAE,kBAAkB,EAAE,gBAAgB,KAAK,UAAUA,GAAE,aAAa;AACpE,UAAM,IAAI,iCACH,IADG;AAAA,MAEN,aAAa;AAAA,MACb,GAAG;AAAA,IACL,IACA,IAAIE,GAAE,kCACD,EAAE,QACF,EACJ,GACD,IAAI,EAAE,GAAG,iCACJD,KADI;AAAA,MAEP,QAAQ;AAAA,IACV,EAAC,GACD,IAAI,GAAG,EAAE,IAAI,4BACb;AAAA,MACE,MAAM;AAAA,IACR,IAAI,MAAM,EAAE,GAAG,CAAC,GAChB,IAAIE,GAAE,SAAS,CAAC;AAClB,WAAO,EAAE,eAAe,EAAE,cAAc,IAAI,QAAM;AAAA,MAChD,SAAS,EAAE;AAAA,MACX,gBAAgB,EAAE;AAAA,IACpB,EAAE,KAAK,CAAC,GAAG;AAAA,EACb;AAAA;AACA,SAAe,EAAED,IAAGF,IAAGC,IAAG;AAAA;AACxB,QAAI,CAACD,GAAE,WAAY,OAAM,IAAI,EAAE,4DAA4D,oBAAoB;AAC/G,UAAM,IAAI,EAAEE,EAAC,GACX,IAAIF,GAAE,OAAO;AACf,IAAAA,GAAE,kBAAkB,EAAE,gBAAgB,KAAK,UAAUA,GAAE,aAAa;AACpE,UAAM,IAAI,EAAE,EAAE,OAAO;AAAA,MACjB,OAAOE,GAAE,iCACJ,IADI;AAAA,QAEP,aAAa;AAAA,QACb,OAAO;AAAA,QACP,GAAG;AAAA,MACL,EAAC;AAAA,OACED,KAPc;AAAA,MAQjB,QAAQ;AAAA,IACV,EAAC,GACD,IAAI,GAAG,EAAE,IAAI,4BACb;AAAA,MACE,MAAM;AAAA,IACR,IAAI,MAAM,EAAE,GAAG,CAAC;AAClB,WAAO,IAAI,EAAE,YAAY;AAAA,EAC3B;AAAA;",
  "names": ["a", "n", "s", "i"]
}
