{
  "version": 3,
  "sources": ["../../../../../../node_modules/@arcgis/core/layers/KnowledgeGraphLayer.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { _ as e } from \"../chunks/tslib.es6.js\";\nimport t from \"../core/Collection.js\";\nimport i from \"../core/Error.js\";\nimport o from \"../core/Logger.js\";\nimport { getOrCreateMapValue as s } from \"../core/MapUtils.js\";\nimport { MultiOriginJSONMixin as r } from \"../core/MultiOriginJSONSupport.js\";\nimport { throwIfAbortError as a } from \"../core/promiseUtils.js\";\nimport { isAbsolute as n, join as p } from \"../core/urlUtils.js\";\nimport { generateUUID as l } from \"../core/uuid.js\";\nimport { property as d } from \"../core/accessorSupport/decorators/property.js\";\nimport \"../core/has.js\";\nimport \"../core/RandomLCG.js\";\nimport { reader as h } from \"../core/accessorSupport/decorators/reader.js\";\nimport { subclass as y } from \"../core/accessorSupport/decorators/subclass.js\";\nimport { writer as c } from \"../core/accessorSupport/decorators/writer.js\";\nimport { OriginId as m, idToName as u, nameToId as f } from \"../core/accessorSupport/PropertyOrigin.js\";\nimport g from \"./Layer.js\";\nimport { KnowledgeGraphLayerDataManager as w } from \"./knowledgeGraph/KnowledgeGraphLayerDataManager.js\";\nimport M from \"./knowledgeGraph/KnowledgeGraphSublayer.js\";\nimport { fetchAndConvertSerializedKgIdMap as b, serializeInclusionDefinitionToIdCollectionsMapPbf as T } from \"./knowledgeGraph/supportUtils.js\";\nimport { ArcGISService as S } from \"./mixins/ArcGISService.js\";\nimport { BlendLayer as _ } from \"./mixins/BlendLayer.js\";\nimport { CustomParametersMixin as D } from \"./mixins/CustomParametersMixin.js\";\nimport { OperationalLayer as L } from \"./mixins/OperationalLayer.js\";\nimport { PortalLayer as j } from \"./mixins/PortalLayer.js\";\nimport { RefreshableLayer as v } from \"./mixins/RefreshableLayer.js\";\nimport { ScaleRangeLayer as k } from \"./mixins/ScaleRangeLayer.js\";\nimport { url as G } from \"./support/commonProperties.js\";\nimport { fetchKnowledgeGraph as A } from \"../rest/knowledgeGraphService.js\";\nimport { f as N, t as C } from \"../chunks/persistableUrlUtils.js\";\nlet E = class extends _(k(v(S(L(j(r(D(g)))))))) {\n  constructor(e) {\n    super(e), this._graphTypeLookup = new Map(), this._namedTypesModified = !1, this.dataManager = null, this.definitionSetMap = null, this.knowledgeGraph = null, this.layers = new (t.ofType(M))(), this.memberEntityTypes = null, this.memberRelationshipTypes = null, this.operationalLayerType = \"KnowledgeGraphLayer\", this.sublayerIdsCache = new Map(), this.tables = new (t.ofType(M))(), this.type = \"knowledge-graph\", this.url = null;\n  }\n  load(e) {\n    return this.addResolvingPromise(this._doLoad(e)), Promise.resolve(this);\n  }\n  async _doLoad(e) {\n    try {\n      await this.loadFromPortal({\n        supportedTypes: [\"Knowledge Graph Layer\"]\n      }, e);\n    } catch (t) {\n      a(t);\n    }\n    await this._fetchMetadata(), await this._initializeLayerProperties(), this.loadLayerAssumingLocalCache();\n  }\n  async _fetchMetadata() {\n    if (!this.url) throw new i(\"knowledge-graph:missing-url\", \"KnowledgeGraphLayer must be created with a url\");\n    const e = await A(this.url);\n    this.knowledgeGraph = e, this._forEachGraphType(e => {\n      e.name && this._graphTypeLookup.set(e.name, e);\n    });\n  }\n  async _initializeLayerProperties() {\n    this.originIdOf(\"inclusionModeDefinition\") === m.USER ? this._validateInclusionModeDefinition() : await this._initializeInclusionModeDefinition(), this._setMemberTypes(), this.dataManager = new w({\n      knowledgeGraph: this.knowledgeGraph,\n      inclusionModeDefinition: this.inclusionModeDefinition\n    });\n  }\n  async _initializeInclusionModeDefinition() {\n    const e = this.definitionSetMap ? await b(this.definitionSetMap, !0) : {\n      generateAllSublayers: !0,\n      namedTypeDefinitions: new Map()\n    };\n    [...this.layers.toArray(), ...this.tables.toArray()].forEach(t => {\n      const i = this._graphTypeLookup.get(t.graphTypeName);\n      i && !e.namedTypeDefinitions.has(i.name) && e.namedTypeDefinitions.set(i.name, {\n        useAllData: !0\n      });\n    }), this.setAtOrigin(\"inclusionModeDefinition\", e, u(this.originIdOf(\"definitionSetMap\")));\n  }\n  _validateInclusionModeDefinition() {\n    const {\n      inclusionModeDefinition: e\n    } = this;\n    if (!e) return;\n    const {\n      namedTypeDefinitions: t\n    } = e;\n    if (t?.size > 0) t.forEach((e, i) => {\n      const s = this._graphTypeLookup.get(i);\n      if (!s) return o.getLogger(this).warn(`A named type, ${i}, was in the inclusion list that wasn't in the data model and will be removed`), void t.delete(i);\n      \"relationship\" !== s.type && \"entity\" !== s.type && (o.getLogger(this).warn(`A named type, ${i}, was in the inclusion list that wasn't properly modeled and will be removed`), t.delete(i));\n    });else if (!e.generateAllSublayers) throw new i(\"knowledge-graph:composite-layer-constructor\", \"If an explicit inclusion definition is defined, at least one namedTypeDefinition must also be defined\");\n  }\n  _setMemberTypes() {\n    let e = [],\n      t = [];\n    const {\n        inclusionModeDefinition: i\n      } = this,\n      o = i?.namedTypeDefinitions;\n    !i || i.generateAllSublayers ? (e = this.knowledgeGraph.dataModel?.entityTypes ?? [], t = this.knowledgeGraph.dataModel?.relationshipTypes ?? []) : o && o.size > 0 && o.forEach((i, o) => {\n      const s = this._graphTypeLookup.get(o);\n      switch (s?.type) {\n        case \"relationship\":\n          t.push(s);\n          break;\n        case \"entity\":\n          e.push(s);\n      }\n    }), this.memberEntityTypes = e, this.memberRelationshipTypes = t;\n  }\n  _forEachGraphType(e) {\n    [...(this.knowledgeGraph.dataModel?.entityTypes ?? []), ...(this.knowledgeGraph.dataModel?.relationshipTypes ?? [])].forEach(t => {\n      e(t);\n    });\n  }\n  _refreshNamedTypes() {\n    this._namedTypesModified = !0;\n    for (const e of this.layers) e.emit(\"refresh\", {\n      dataChanged: !0\n    });\n    for (const e of this.tables) e.emit(\"refresh\", {\n      dataChanged: !0\n    });\n  }\n  async _handleNewRecords(e) {\n    const t = [];\n    this.dataManager.addToLayer(e);\n    for (const i of e) this.sublayerIdsCache.has(i.typeName) || (this.sublayerIdsCache.set(i.typeName, new Set()), t.push(i.typeName)), this.sublayerIdsCache.get(i.typeName).add(i.id);\n    for (const i of t) {\n      const e = this._graphTypeLookup.get(i);\n      if (!e) continue;\n      this._addSublayer(e).title = i, \"entity\" === e.type ? this.dataManager.entityTypeNames.add(i) : this.dataManager.relationshipTypeNames.add(i), this.dataManager.sublayerCaches.set(i, new Map());\n    }\n    this._refreshNamedTypes();\n  }\n  _createSublayers(e, t, i) {\n    e.forEach(e => {\n      const o = this._createSublayer(e);\n      i(o) && t.push(o), this._updateSublayerCaches(e);\n    });\n  }\n  _addSublayer(e) {\n    const t = this._createSublayer(e);\n    return t.geometryType ? this.layers.push(t) : this.tables.push(t), t;\n  }\n  _createSublayer(e) {\n    return new M({\n      objectType: e,\n      parentCompositeLayer: this,\n      graphType: e.type,\n      title: e.name\n    });\n  }\n  _updateSublayers(e, t) {\n    t.forEach(t => {\n      t.parentCompositeLayer = this;\n      const i = e.find(e => e.type === t.graphType && e.name === t.graphTypeName);\n      i && (t.objectType = i, t.read({\n        title: i.name\n      }, {\n        origin: \"service\"\n      }), this._updateSublayerCaches(i));\n    });\n  }\n  _updateSublayerCaches(e) {\n    const t = this.dataManager.sublayerCaches;\n    t.has(e.name) || t.set(e.name, new Map());\n  }\n  _saveUrlAsNewResource(e, t, i, o) {\n    e[t] = \"<pending>\", i.pendingOperations.push(I(this.inclusionModeDefinition).then(s => {\n      const r = O(o);\n      e[t] = r.itemRelativeUrl, i.toAdd.push({\n        resource: r,\n        content: {\n          type: \"blob\",\n          blob: s\n        },\n        compress: !1,\n        finish: e => {\n          this.definitionSetMap = e.url;\n        }\n      });\n    }));\n  }\n  _displaysAllRecords(e) {\n    for (const [, {\n      useAllData: t\n    }] of e.namedTypeDefinitions) if (!t) return !1;\n    return !0;\n  }\n  readDefinitionSetMap(e, t, i) {\n    return N(e, i);\n  }\n  writeDefinitionSetMap(e, t, i, o) {\n    const s = o?.portalItem,\n      r = o?.resources,\n      a = f(o?.origin);\n    if (!s || !r || null == a) return void (e && (t[i] = C(e, o)));\n    const {\n      inclusionModeDefinition: p\n    } = this;\n    if (!p || this._displaysAllRecords(p)) return void (this.definitionSetMap = null);\n    const l = this.originIdOf(\"inclusionModeDefinition\");\n    if (l === m.USER || this._namedTypesModified || a < l) this._saveUrlAsNewResource(t, i, r, s);else if (a === l && e) {\n      const a = C(e, o);\n      n(a) ? this._saveUrlAsNewResource(t, i, r, s) : t[i] = a;\n    }\n  }\n  set inclusionModeDefinition(e) {\n    \"loaded\" !== this.loadStatus && \"failed\" !== this.loadStatus ? this._set(\"inclusionModeDefinition\", e) : o.getLogger(this).error(\"#inclusionModeDefinition\", \"inclusionModeDefinition cannot be changed after the layer is loaded.\");\n  }\n  loadLayerAssumingLocalCache() {\n    const e = [...this.memberEntityTypes, ...this.memberRelationshipTypes];\n    this.originIdOf(\"layers\") === m.DEFAULTS ? this._createSublayers(e, this.layers, e => !!e.geometryType) : this._updateSublayers(e, this.layers), this.originIdOf(\"tables\") === m.DEFAULTS ? this._createSublayers(e, this.tables, e => !e.geometryType) : this._updateSublayers(e, this.tables), this.dataManager.inclusionModeDefinition?.namedTypeDefinitions?.forEach((e, t) => {\n      const i = s(this.sublayerIdsCache, t, () => new Set());\n      e.members?.forEach(e => {\n        i.add(e.id);\n      });\n    });\n  }\n  async addRecords(e) {\n    await this._handleNewRecords(e);\n  }\n  async removeRecords(e) {\n    const t = [];\n    for (const i of e) !1 === this.dataManager.inclusionModeDefinition?.namedTypeDefinitions?.get(i.typeName)?.useAllData && this.dataManager.inclusionModeDefinition?.namedTypeDefinitions?.get(i.typeName)?.members?.has(i.id) && t.push(i);\n    this.dataManager.removeFromLayer(t);\n    for (const i of t) this.sublayerIdsCache.get(i.typeName)?.delete(i.id);\n    return this._refreshNamedTypes(), t;\n  }\n};\ne([d()], E.prototype, \"dataManager\", void 0), e([d({\n  json: {\n    write: {\n      ignoreOrigin: !0,\n      writerEnsuresNonNull: !0\n    }\n  }\n})], E.prototype, \"definitionSetMap\", void 0), e([h(\"definitionSetMap\")], E.prototype, \"readDefinitionSetMap\", null), e([c(\"definitionSetMap\")], E.prototype, \"writeDefinitionSetMap\", null), e([d()], E.prototype, \"inclusionModeDefinition\", null), e([d()], E.prototype, \"knowledgeGraph\", void 0), e([d({\n  type: t.ofType(M),\n  json: {\n    write: {\n      ignoreOrigin: !0\n    }\n  }\n})], E.prototype, \"layers\", void 0), e([d()], E.prototype, \"memberEntityTypes\", void 0), e([d()], E.prototype, \"memberRelationshipTypes\", void 0), e([d({\n  type: [\"KnowledgeGraphLayer\"]\n})], E.prototype, \"operationalLayerType\", void 0), e([d()], E.prototype, \"sublayerIdsCache\", void 0), e([d({\n  type: t.ofType(M),\n  json: {\n    write: {\n      ignoreOrigin: !0\n    }\n  }\n})], E.prototype, \"tables\", void 0), e([d({\n  json: {\n    read: !1\n  }\n})], E.prototype, \"type\", void 0), e([d(G)], E.prototype, \"url\", void 0), E = e([y(\"esri.layers.KnowledgeGraphLayer\")], E);\nconst R = E;\nasync function I(e) {\n  const t = await T(e);\n  return new Blob([t], {\n    type: \"application/x-protobuf\"\n  });\n}\nfunction O(e) {\n  const t = `definitionSetMap-${l()}.dat`,\n    i = p(\"knowledgeGraphLayer\", t);\n  return e.resourceFromPath(i);\n}\nexport { R as default };"],
  "mappings": "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",
  "names": ["E", "t", "f", "l", "e", "s", "o", "i", "r", "a", "n", "p", "R", "V"]
}
