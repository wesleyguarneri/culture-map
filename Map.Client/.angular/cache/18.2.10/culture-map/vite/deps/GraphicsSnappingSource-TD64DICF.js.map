{
  "version": 3,
  "sources": ["../../../../../../node_modules/@arcgis/core/views/interactive/snapping/featureSources/GraphicsSnappingSource.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { _ as e } from \"../../../../chunks/tslib.es6.js\";\nimport t from \"../../../../core/Accessor.js\";\nimport { removeUnordered as o } from \"../../../../core/arrayUtils.js\";\nimport { createTask as s } from \"../../../../core/asyncUtils.js\";\nimport { memoize as r } from \"../../../../core/memoize.js\";\nimport { throwIfAborted as i, allSettledValues as n, whenOrAbort as a } from \"../../../../core/promiseUtils.js\";\nimport { initial as p, watch as l, on as d } from \"../../../../core/reactiveUtils.js\";\nimport { property as c } from \"../../../../core/accessorSupport/decorators/property.js\";\nimport \"../../../../core/has.js\";\nimport \"../../../../core/Logger.js\";\nimport { subclass as u } from \"../../../../core/accessorSupport/decorators/subclass.js\";\nimport { UpdatingHandles as h } from \"../../../../core/support/UpdatingHandles.js\";\nimport y from \"../../../../geometry/Polygon.js\";\nimport { initializeProjection as m, canProjectWithoutEngine as g, project as f } from \"../../../../geometry/projection.js\";\nimport { normalizeCentralMeridianForDisplay as _ } from \"../../../../geometry/support/normalizeUtilsSync.js\";\nimport { featureGeometryTypeKebabDictionary as v } from \"../../../../geometry/support/typeUtils.js\";\nimport { convertFromGeometry as S } from \"../../../../layers/graphics/featureConversionUtils.js\";\nimport { OptimizedFeature as w } from \"../../../../layers/graphics/OptimizedFeature.js\";\nimport j from \"../../../../layers/graphics/data/FeatureStore.js\";\nimport { QueryEngine as b } from \"../../../../layers/graphics/data/QueryEngine.js\";\nimport E from \"../../../../layers/support/FieldsIndex.js\";\nimport { elevationContextAffectsAlignment as k } from \"../../../../support/elevationInfoUtils.js\";\nimport { symbolHasExtrudeSymbolLayer as F } from \"../../../../symbols/support/utils.js\";\nimport { sortCandidatesInPlace as C, makeSnappingQuery as A } from \"../snappingUtils.js\";\nimport { convertSnappingCandidate as P, makeGetGroundElevation as I } from \"./queryEngineUtils.js\";\nimport { getSnappingCandidateElevationAligner as G } from \"./snappingCandidateElevationAlignment.js\";\nimport { getSnappingCandidateElevationFilter as H } from \"./snappingCandidateElevationFilter.js\";\nimport { getSymbologySnappingCandidatesFetcher as R } from \"./symbologySnappingCandidates.js\";\nimport { TaskPriority as x } from \"../../../support/Scheduler.js\";\nconst z = \"graphics-collections\";\nlet O = class extends t {\n  get updating() {\n    return this._updatingHandles.updating;\n  }\n  get _hasZ() {\n    const e = this.view;\n    return null != e && \"3d\" === e.type && \"map-notes\" !== this.layerSource.layer.type;\n  }\n  get _snappingElevationAligner() {\n    const {\n        view: e\n      } = this,\n      {\n        layer: t\n      } = this.layerSource,\n      o = null != e && \"3d\" === e.type;\n    if (!o || \"map-notes\" === t.type) return G();\n    const s = async (o, s) => (await a(e.whenLayerView(t), s)).elevationAlignPointsInFeatures(o, s);\n    return G(o, {\n      elevationInfo: t.elevationInfo,\n      alignPointsInFeatures: s\n    });\n  }\n  get _snappingElevationFilter() {\n    const {\n        view: e\n      } = this,\n      t = null != e && \"3d\" === e.type && \"map-notes\" !== this.layerSource.layer.type;\n    return H(t);\n  }\n  get _symbologySnappingFetcher() {\n    const {\n        view: e\n      } = this,\n      {\n        layer: t\n      } = this.layerSource,\n      o = null != e && \"3d\" === e.type,\n      s = this._extrudedPolygonSymbolsCount > 0;\n    return o && \"map-notes\" !== t.type && s ? R(s, async (o, s) => {\n      const r = await e.whenLayerView(t);\n      return i(s), r.queryForSymbologySnapping({\n        candidates: o,\n        spatialReference: e.spatialReference\n      }, s);\n    }) : R();\n  }\n  constructor(e) {\n    super(e), this.availability = 1, this._sources = {\n      multipoint: null,\n      point: null,\n      polygon: null,\n      polyline: null\n    }, this._loadedWkids = new Set(), this._loadedWkts = new Set(), this._pendingAdds = [], this._extrudedPolygonSymbolsCount = 0, this._updatingHandles = new h(), this._memoizedMakeGetGroundElevation = r(I);\n  }\n  destroy() {\n    for (const e of this._pendingAdds) e.task.abort();\n    this._pendingAdds.length = 0, this._mapSources(e => this._destroySource(e)), this._updatingHandles.destroy();\n  }\n  initialize() {\n    this._updatingHandles.add(() => this.getGraphicsLayers(), e => {\n      this._updatingHandles.removeHandles(z);\n      for (const t of e) this._addMany(t.graphics.toArray()), this.addHandles([t.on(\"graphic-update\", e => this._onGraphicUpdate(e)), this._updatingHandles.addOnCollectionChange(() => t.graphics, e => this._onGraphicsChanged(e))], z);\n    }, p);\n    const {\n        view: e\n      } = this,\n      {\n        layer: t\n      } = this.layerSource;\n    null != e && \"3d\" === e.type && \"map-notes\" !== t.type && e.elevationProvider && this.addHandles([e.elevationProvider.on(\"elevation-change\", ({\n      context: e\n    }) => {\n      k(e, t.elevationInfo) && this._snappingElevationAligner.notifyElevationSourceChange();\n    }), l(() => t.elevationInfo, () => this._snappingElevationAligner.notifyElevationSourceChange(), p), d(() => t, [\"edits\", \"apply-edits\", \"graphic-update\"], () => this._symbologySnappingFetcher.notifySymbologyChange())]);\n  }\n  async fetchCandidates(e, t) {\n    const {\n        point: o,\n        coordinateHelper: {\n          spatialReference: s\n        }\n      } = e,\n      r = await n(this._mapSources(o => this._fetchCandidatesForSource(o, e, t)));\n    i(t);\n    const a = this._memoizedMakeGetGroundElevation(this.view, s),\n      p = r.flat().map(e => P(e, a));\n    return C(o, p), p;\n  }\n  async _fetchCandidatesForSource(e, t, o) {\n    const s = A(t, this.view?.type ?? \"2d\"),\n      r = await e.queryEngine.executeQueryForSnapping(s, o);\n    i(o);\n    const n = await this._snappingElevationAligner.alignCandidates(r.candidates, t.coordinateHelper.spatialReference, o);\n    i(o);\n    const a = await this._symbologySnappingFetcher.fetch(n, o);\n    i(o);\n    const p = 0 === a.length ? n : [...n, ...a];\n    return this._snappingElevationFilter.filter(s, p);\n  }\n  refresh() {}\n  _onGraphicUpdate(e) {\n    if (this.getGraphicsLayers().some(t => t.graphics.includes(e.graphic))) switch (e.property) {\n      case \"geometry\":\n      case \"visible\":\n        this._remove(e.graphic), this._addMany([e.graphic]);\n    }\n  }\n  _onGraphicsChanged(e) {\n    for (const t of e.removed) this._remove(t);\n    this._addMany(e.added);\n  }\n  _addMany(e) {\n    const t = [],\n      o = new Map();\n    for (const s of e) null != s.geometry && (this._needsInitializeProjection(s.geometry.spatialReference) ? (t.push(s.geometry.spatialReference), o.set(s.uid, s)) : this._add(s));\n    this._createPendingAdd(t, o);\n  }\n  _createPendingAdd(e, t) {\n    if (!e.length) return;\n    const r = s(async o => {\n      await m(e.map(e => ({\n        source: e,\n        dest: this.spatialReference\n      })), {\n        signal: o\n      }), this._markLoadedSpatialReferences(e);\n      for (const [, e] of t) this._add(e);\n    });\n    this._updatingHandles.addPromise(r.promise);\n    const i = {\n        task: r,\n        graphics: t\n      },\n      n = () => o(this._pendingAdds, i);\n    r.promise.then(n, n), this._pendingAdds.push(i);\n  }\n  _markLoadedSpatialReferences(e) {\n    for (const t of e) {\n      null != t.wkid && this._loadedWkids.add(t.wkid);\n      const e = t.wkt2 || t.wkt;\n      e && this._loadedWkts.add(e);\n    }\n  }\n  _add(e) {\n    if (null == e.geometry || !e.visible) return;\n    let t = e.geometry;\n    if (\"mesh\" === t.type) return;\n    \"extent\" === t.type && (t = y.fromExtent(t));\n    const o = this._ensureSource(t.type);\n    if (null == o) return;\n    const s = this._createOptimizedFeature(e.uid, t);\n    null != s && (o.featureStore.add(s), F(e.symbol) && this._extrudedPolygonSymbolsCount++);\n  }\n  _needsInitializeProjection(e) {\n    if (null != e.wkid && this._loadedWkids.has(e.wkid)) return !1;\n    const t = e.wkt2 || e.wkt;\n    return (!t || !this._loadedWkts.has(t)) && !g(e, this.spatialReference);\n  }\n  _createOptimizedFeature(e, t) {\n    const o = f(_(t), this.spatialReference);\n    if (!o) return null;\n    const s = this._ensureGeometryHasZ(o),\n      r = S(s, this._hasZ, !1);\n    return new w(r, {\n      [U]: e\n    }, null, e);\n  }\n  _ensureGeometryHasZ(e) {\n    if (!this._hasZ) return e;\n    const t = e => {\n        for (; e.length < 3;) e.push(0);\n      },\n      o = e.clone();\n    switch (o.hasZ = !0, o.type) {\n      case \"point\":\n        o.z = o.z ?? 0;\n        break;\n      case \"multipoint\":\n        o.points.forEach(t);\n        break;\n      case \"polyline\":\n        o.paths.forEach(e => e.forEach(t));\n        break;\n      case \"polygon\":\n        o.rings.forEach(e => e.forEach(t));\n    }\n    return o;\n  }\n  _ensureSource(e) {\n    const t = this._sources[e];\n    if (null != t) return t;\n    const o = this._createSource(e);\n    return this._sources[e] = o, o;\n  }\n  _createSource(e) {\n    const t = v.toJSON(e),\n      o = this._hasZ,\n      s = new j({\n        geometryType: t,\n        hasZ: o,\n        hasM: !1\n      });\n    return {\n      featureStore: s,\n      queryEngine: new b({\n        featureStore: s,\n        fieldsIndex: E.fromLayerJSON({\n          fields: [{\n            name: U,\n            type: \"esriFieldTypeOID\",\n            alias: U\n          }]\n        }),\n        geometryType: t,\n        hasM: !1,\n        hasZ: o,\n        objectIdField: U,\n        spatialReference: this.spatialReference,\n        priority: x.SNAPPING,\n        scheduler: null != this.view && \"3d\" === this.view.type ? this.view.resourceController.scheduler : null\n      }),\n      type: e\n    };\n  }\n  _remove(e) {\n    this._mapSources(t => this._removeFromSource(t, e));\n    for (const t of this._pendingAdds) t.graphics.delete(e.uid), 0 === t.graphics.size && t.task.abort();\n  }\n  _removeFromSource(e, t) {\n    const o = t.uid;\n    e.featureStore.has(o) && (e.featureStore.removeById(t.uid), F(t.symbol) && this._extrudedPolygonSymbolsCount--);\n  }\n  _destroySource(e) {\n    e.queryEngine.destroy(), this._sources[e.type] = null;\n  }\n  _mapSources(e) {\n    const {\n        point: t,\n        polygon: o,\n        polyline: s,\n        multipoint: r\n      } = this._sources,\n      i = [];\n    return null != t && i.push(e(t)), null != o && i.push(e(o)), null != s && i.push(e(s)), null != r && i.push(e(r)), i;\n  }\n};\ne([c()], O.prototype, \"getGraphicsLayers\", void 0), e([c({\n  constructOnly: !0\n})], O.prototype, \"layerSource\", void 0), e([c({\n  constructOnly: !0\n})], O.prototype, \"spatialReference\", void 0), e([c({\n  constructOnly: !0\n})], O.prototype, \"view\", void 0), e([c({\n  readOnly: !0\n})], O.prototype, \"updating\", null), e([c({\n  readOnly: !0\n})], O.prototype, \"availability\", void 0), e([c()], O.prototype, \"_hasZ\", null), e([c()], O.prototype, \"_snappingElevationAligner\", null), e([c()], O.prototype, \"_snappingElevationFilter\", null), e([c()], O.prototype, \"_symbologySnappingFetcher\", null), e([c()], O.prototype, \"_extrudedPolygonSymbolsCount\", void 0), O = e([u(\"esri.views.interactive.snapping.featureSources.GraphicsSnappingSource\")], O);\nconst U = \"OBJECTID\";\nexport { O as GraphicsSnappingSource };"],
  "mappings": "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",
  "names": ["S", "e", "t", "o", "s", "r", "h", "i", "y", "d", "a", "n", "J"]
}
