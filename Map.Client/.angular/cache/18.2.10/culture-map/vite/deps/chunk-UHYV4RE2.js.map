{
  "version": 3,
  "sources": ["../../../../../../node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/Laserline.glsl.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { ReadDepth as o } from \"./output/ReadDepth.glsl.js\";\nimport { CameraSpace as e } from \"./util/CameraSpace.glsl.js\";\nimport { Float3PassUniform as l } from \"../shaderModules/Float3PassUniform.js\";\nimport { FloatPassUniform as t } from \"../shaderModules/FloatPassUniform.js\";\nimport { glsl as r } from \"../shaderModules/interfaces.js\";\nimport { Texture2DPassUniform as a } from \"../shaderModules/Texture2DPassUniform.js\";\nfunction n(n, p) {\n  const i = n.fragment;\n  i.include(o), n.include(e), i.uniforms.add(new t(\"globalAlpha\", o => o.globalAlpha), new l(\"glowColor\", o => o.glowColor), new t(\"glowWidth\", (o, e) => o.glowWidth * e.camera.pixelRatio), new t(\"glowFalloff\", o => o.glowFalloff), new l(\"innerColor\", o => o.innerColor), new t(\"innerWidth\", (o, e) => o.innerWidth * e.camera.pixelRatio), new a(\"depthMap\", (o, e) => e.depth?.attachment), new a(\"normalMap\", o => o.normals), new a(\"frameColor\", (o, e) => e.mainColor)), i.code.add(r`vec4 blendPremultiplied(vec4 source, vec4 dest) {\nfloat oneMinusSourceAlpha = 1.0 - source.a;\nreturn vec4(\nsource.rgb + dest.rgb * oneMinusSourceAlpha,\nsource.a + dest.a * oneMinusSourceAlpha\n);\n}`), i.code.add(r`vec4 premultipliedColor(vec3 rgb, float alpha) {\nreturn vec4(rgb * alpha, alpha);\n}`), i.code.add(r`vec4 laserlineProfile(float dist) {\nif (dist > glowWidth) {\nreturn vec4(0.0);\n}\nfloat innerAlpha = (1.0 - smoothstep(0.0, innerWidth, dist));\nfloat glowAlpha = pow(max(0.0, 1.0 - dist / glowWidth), glowFalloff);\nreturn blendPremultiplied(\npremultipliedColor(innerColor, innerAlpha),\npremultipliedColor(glowColor, glowAlpha)\n);\n}`), i.code.add(r`bool laserlineReconstructFromDepth(out vec3 pos, out vec3 normal, out float angleCutoffAdjust, out float depthDiscontinuityAlpha) {\nfloat depth = depthFromTexture(depthMap, uv);\nif (depth == 1.0) {\nreturn false;\n}\nfloat linearDepth = linearizeDepth(depth);\npos = reconstructPosition(gl_FragCoord.xy, linearDepth);\nfloat minStep = 6e-8;\nfloat depthStep = clamp(depth + minStep, 0.0, 1.0);\nfloat linearDepthStep = linearizeDepth(depthStep);\nfloat depthError = abs(linearDepthStep - linearDepth);\nif (depthError > 0.2) {\nnormal = texture(normalMap, uv).xyz * 2.0 - 1.0;\nangleCutoffAdjust = 0.004;\n} else {\nnormal = normalize(cross(dFdx(pos), dFdy(pos)));\nangleCutoffAdjust = 0.0;\n}\nfloat ddepth = fwidth(linearDepth);\ndepthDiscontinuityAlpha = 1.0 - smoothstep(0.0, 0.01, -ddepth / linearDepth);\nreturn true;\n}`), p.contrastControlEnabled ? (i.uniforms.add(new t(\"globalAlphaContrastBoost\", o => null != o.globalAlphaContrastBoost ? o.globalAlphaContrastBoost : 1)), i.code.add(r`float rgbToLuminance(vec3 color) {\nreturn dot(vec3(0.2126, 0.7152, 0.0722), color);\n}\nvec4 laserlineOutput(vec4 color) {\nfloat backgroundLuminance = rgbToLuminance(texture(frameColor, uv).rgb);\nfloat alpha = clamp(globalAlpha * max(backgroundLuminance * globalAlphaContrastBoost, 1.0), 0.0, 1.0);\nreturn color * alpha;\n}`)) : i.code.add(r`vec4 laserlineOutput(vec4 color) {\nreturn color * globalAlpha;\n}`);\n}\nexport { n as Laserline };"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAUA,SAAS,EAAEA,IAAG,GAAG;AACf,QAAM,IAAIA,GAAE;AACZ,IAAE,QAAQ,CAAC,GAAGA,GAAE,QAAQ,CAAC,GAAG,EAAE,SAAS,IAAI,IAAIC,GAAE,eAAe,CAAAA,OAAKA,GAAE,WAAW,GAAG,IAAI,EAAE,aAAa,CAAAA,OAAKA,GAAE,SAAS,GAAG,IAAIA,GAAE,aAAa,CAACA,IAAGC,OAAMD,GAAE,YAAYC,GAAE,OAAO,UAAU,GAAG,IAAID,GAAE,eAAe,CAAAA,OAAKA,GAAE,WAAW,GAAG,IAAI,EAAE,cAAc,CAAAA,OAAKA,GAAE,UAAU,GAAG,IAAIA,GAAE,cAAc,CAACA,IAAGC,OAAMD,GAAE,aAAaC,GAAE,OAAO,UAAU,GAAG,IAAI,EAAE,YAAY,CAACD,IAAGC,OAAMA,GAAE,OAAO,UAAU,GAAG,IAAI,EAAE,aAAa,CAAAD,OAAKA,GAAE,OAAO,GAAG,IAAI,EAAE,cAAc,CAACA,IAAGC,OAAMA,GAAE,SAAS,CAAC,GAAG,EAAE,KAAK,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAM/d,GAAG,EAAE,KAAK,IAAI;AAAA;AAAA,EAEd,GAAG,EAAE,KAAK,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUd,GAAG,EAAE,KAAK,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAqBd,GAAG,EAAE,0BAA0B,EAAE,SAAS,IAAI,IAAID,GAAE,4BAA4B,CAAAA,OAAK,QAAQA,GAAE,2BAA2BA,GAAE,2BAA2B,CAAC,CAAC,GAAG,EAAE,KAAK,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOvK,KAAK,EAAE,KAAK,IAAI;AAAA;AAAA,EAEhB;AACF;",
  "names": ["n", "o", "e"]
}
