{
  "version": 3,
  "sources": ["../../../../../../node_modules/@arcgis/core/layers/graphics/featureConversionUtils.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport t from \"../../core/Error.js\";\nimport e from \"../../core/Logger.js\";\nimport { assertIsSome as n } from \"../../core/maybe.js\";\nimport { is as o, fromRectValues as r } from \"../../geometry/support/aaBoundingBox.js\";\nimport { fromValues as s } from \"../../geometry/support/aaBoundingRect.js\";\nimport { isPoint as u, isPolygon as l, isPolyline as c, isMultipoint as i } from \"../../geometry/support/jsonUtils.js\";\nimport { OptimizedFeature as f } from \"./OptimizedFeature.js\";\nimport a from \"./OptimizedFeatureSet.js\";\nimport h from \"./OptimizedGeometry.js\";\nfunction d(t, e) {\n  return t ? e ? 4 : 3 : e ? 3 : 2;\n}\nconst m = () => e.getLogger(\"esri.layers.graphics.featureConversionUtils\"),\n  g = {\n    esriGeometryPoint: 0,\n    esriGeometryPolyline: 2,\n    esriGeometryPolygon: 3,\n    esriGeometryMultipoint: 0,\n    esriGeometryEnvelope: 0\n  },\n  y = (t, e, n, o, r, s) => {\n    t[n] = r, t[n + 1] = s;\n  },\n  p = (t, e, n, o, r, s) => {\n    t[n] = r, t[n + 1] = s, t[n + 2] = e[o + 2];\n  },\n  I = (t, e, n, o, r, s) => {\n    t[n] = r, t[n + 1] = s, t[n + 2] = e[o + 3];\n  },\n  b = (t, e, n, o, r, s) => {\n    t[n] = r, t[n + 1] = s, t[n + 2] = e[o + 2], t[n + 3] = e[o + 3];\n  };\nfunction M(t, e, n, o) {\n  if (t) {\n    if (n) return e && o ? b : p;\n    if (e && o) return I;\n  } else if (e && o) return p;\n  return y;\n}\nfunction N({\n  scale: t,\n  translate: e\n}, n) {\n  return Math.round((n - e[0]) / t[0]);\n}\nfunction w({\n  scale: t,\n  translate: e\n}, n) {\n  return Math.round((e[1] - n) / t[1]);\n}\nfunction T(t, e) {\n  return F(t, e, 0);\n}\nfunction G(t, e) {\n  return F(t, -e, 1);\n}\nfunction F({\n  scale: t,\n  translate: e\n}, n, o) {\n  return n * t[o] + e[o];\n}\nfunction x(t, e, n) {\n  return t ? e ? n ? k(t) : Z(t) : n ? v(t) : P(t) : null;\n}\nfunction P(t) {\n  const e = t.coords;\n  return {\n    x: e[0],\n    y: e[1]\n  };\n}\nfunction j(t, e) {\n  return t.coords[0] = e.x, t.coords[1] = e.y, t;\n}\nfunction Z(t) {\n  const e = t.coords;\n  return {\n    x: e[0],\n    y: e[1],\n    z: e[2]\n  };\n}\nfunction E(t, e) {\n  return t.coords[0] = e.x, t.coords[1] = e.y, t.coords[2] = e.z, t;\n}\nfunction v(t) {\n  const e = t.coords;\n  return {\n    x: e[0],\n    y: e[1],\n    m: e[2]\n  };\n}\nfunction z(t, e) {\n  return t.coords[0] = e.x, t.coords[1] = e.y, t.coords[2] = e.m, t;\n}\nfunction k(t) {\n  const e = t.coords;\n  return {\n    x: e[0],\n    y: e[1],\n    z: e[2],\n    m: e[3]\n  };\n}\nfunction V(t, e) {\n  return t.coords[0] = e.x, t.coords[1] = e.y, t.coords[2] = e.z, t.coords[3] = e.m, t;\n}\nfunction Y(t, e, n, o) {\n  let r = P;\n  n && o ? r = k : n ? r = Z : o && (r = v);\n  for (const s of e) {\n    const {\n        geometry: e,\n        attributes: n\n      } = s,\n      o = null != e ? r(e) : null;\n    t.push({\n      attributes: n,\n      geometry: o\n    });\n  }\n  return t;\n}\nfunction _(t, e) {\n  return t && e ? V : t ? E : e ? z : j;\n}\nfunction L(t, e, n, o, r) {\n  const s = _(n, o);\n  for (const {\n    geometry: u,\n    attributes: l\n  } of e) {\n    const e = null != u ? s(new h(), u) : null;\n    t.push(new f(e, l, null, r ? l[r] : void 0));\n  }\n  return t;\n}\nfunction O(t, e, n = _(null != e.z, null != e.m)) {\n  return n(t, e);\n}\nfunction S(t, e, n, o) {\n  for (const {\n    geometry: r,\n    attributes: s\n  } of e) t.push({\n    attributes: s,\n    geometry: null != r ? U(r, n, o) : null\n  });\n  return t;\n}\nfunction U(t, e, n) {\n  if (null == t) return null;\n  const o = d(e, n),\n    r = [];\n  for (let s = 0; s < t.coords.length; s += o) {\n    const e = [];\n    for (let n = 0; n < o; n++) e.push(t.coords[s + n]);\n    r.push(e);\n  }\n  return e ? n ? {\n    points: r,\n    hasZ: e,\n    hasM: n\n  } : {\n    points: r,\n    hasZ: e\n  } : n ? {\n    points: r,\n    hasM: n\n  } : {\n    points: r\n  };\n}\nfunction q(t, e, n, o, r) {\n  const s = d(n, o);\n  for (const {\n    geometry: u,\n    attributes: l\n  } of e) {\n    const e = null != u ? R(new h(), u, s) : null;\n    t.push(new f(e, l, null, r ? l[r] : void 0));\n  }\n  return t;\n}\nfunction R(t, e, n = d(e.hasZ, e.hasM)) {\n  t.lengths[0] = e.points.length;\n  const o = t.coords;\n  let r = 0;\n  for (const s of e.points) for (let t = 0; t < n; t++) o[r++] = s[t];\n  return t;\n}\nfunction A(t, e, n, o) {\n  for (const {\n    geometry: r,\n    attributes: s\n  } of e) t.push({\n    attributes: s,\n    geometry: null != r ? $(r, n, o) : null\n  });\n  return t;\n}\nfunction $(t, e, n) {\n  if (!t) return null;\n  const o = d(e, n),\n    {\n      coords: r,\n      lengths: s\n    } = t,\n    u = [];\n  let l = 0;\n  for (const c of s) {\n    const t = [];\n    for (let e = 0; e < c; e++) {\n      const e = [];\n      for (let t = 0; t < o; t++) e.push(r[l++]);\n      t.push(e);\n    }\n    u.push(t);\n  }\n  return e ? n ? {\n    paths: u,\n    hasZ: e,\n    hasM: n\n  } : {\n    paths: u,\n    hasZ: e\n  } : n ? {\n    paths: u,\n    hasM: n\n  } : {\n    paths: u\n  };\n}\nfunction B(t, e, n, o, r) {\n  const s = d(n, o);\n  for (const {\n    geometry: u,\n    attributes: l,\n    centroid: c\n  } of e) {\n    const e = null != u ? C(new h(), u, s) : null,\n      n = null != c ? O(new h(), c) : null;\n    t.push(new f(e, l, n, r ? l[r] : void 0));\n  }\n  return t;\n}\nfunction C(t, e, n = d(e.hasZ, e.hasM)) {\n  const {\n    lengths: o,\n    coords: r\n  } = t;\n  let s = 0;\n  for (const u of e.paths) {\n    for (const t of u) for (let e = 0; e < n; e++) r[s++] = t[e];\n    o.push(u.length);\n  }\n  return t;\n}\nfunction D(t, e, n, o) {\n  for (const {\n    geometry: r,\n    attributes: s,\n    centroid: u\n  } of e) {\n    const e = null != r ? H(r, n, o) : null;\n    if (null != u) {\n      const n = P(u);\n      t.push({\n        attributes: s,\n        centroid: n,\n        geometry: e\n      });\n    } else t.push({\n      attributes: s,\n      geometry: e\n    });\n  }\n  return t;\n}\nfunction H(t, e, n) {\n  if (!t) return null;\n  const o = d(e, n),\n    {\n      coords: r,\n      lengths: s\n    } = t,\n    u = [];\n  let l = 0;\n  for (const c of s) {\n    const t = [];\n    for (let e = 0; e < c; e++) {\n      const e = [];\n      for (let t = 0; t < o; t++) e.push(r[l++]);\n      t.push(e);\n    }\n    u.push(t);\n  }\n  return e ? n ? {\n    rings: u,\n    hasZ: e,\n    hasM: n\n  } : {\n    rings: u,\n    hasZ: e\n  } : n ? {\n    rings: u,\n    hasM: n\n  } : {\n    rings: u\n  };\n}\nfunction J(t, e, n, o, r) {\n  for (const {\n    geometry: s,\n    centroid: u,\n    attributes: l\n  } of e) {\n    const e = null != s ? K(new h(), s, n, o) : null,\n      c = r ? l[r] : void 0;\n    null != u ? t.push(new f(e, l, j(new h(), u), c)) : t.push(new f(e, l, null, c));\n  }\n  return t;\n}\nfunction K(t, e, n = e.hasZ, o = e.hasM) {\n  return Q(t, e.rings, n, o);\n}\nfunction Q(t, e, n, o) {\n  const r = d(n, o),\n    {\n      lengths: s,\n      coords: u\n    } = t;\n  let l = 0;\n  wt(t);\n  for (const c of e) {\n    for (const t of c) for (let e = 0; e < r; e++) u[l++] = t[e];\n    s.push(c.length);\n  }\n  return t;\n}\nconst W = [],\n  X = [];\nfunction tt(t, e, n, o, r) {\n  W[0] = t;\n  const [s] = et(X, W, e, n, o, r);\n  return Tt(W), Tt(X), s;\n}\nfunction et(e, n, o, r, s, u) {\n  if (Tt(e), !o) {\n    for (const t of n) {\n      const n = u ? t.attributes[u] : void 0;\n      e.push(new f(null, t.attributes, null, n));\n    }\n    return e;\n  }\n  switch (o) {\n    case \"esriGeometryPoint\":\n      return L(e, n, r, s, u);\n    case \"esriGeometryMultipoint\":\n      return q(e, n, r, s, u);\n    case \"esriGeometryPolyline\":\n      return B(e, n, r, s, u);\n    case \"esriGeometryPolygon\":\n      return J(e, n, r, s, u);\n    default:\n      m().error(\"convertToFeatureSet:unknown-geometry\", new t(`Unable to parse unknown geometry type '${o}'`)), Tt(e);\n  }\n  return e;\n}\nfunction nt(t, e, n, o) {\n  X[0] = t, ut(W, X, e, n, o);\n  const r = W[0];\n  return Tt(W), Tt(X), r;\n}\nfunction ot(e, n, o) {\n  if (null == e) return null;\n  const r = new h();\n  if (\"hasZ\" in e && null == n && (n = e.hasZ), \"hasM\" in e && null == o && (o = e.hasM), u(e)) {\n    return _(null != n ? n : null != e.z, null != o ? o : null != e.m)(r, e);\n  }\n  return l(e) ? K(r, e, n, o) : c(e) ? C(r, e, d(n, o)) : i(e) ? R(r, e, d(n, o)) : void m().error(\"convertFromGeometry:unknown-geometry\", new t(`Unable to parse unknown geometry type '${e}'`));\n}\nfunction rt(e, n, o, r) {\n  const s = e && (\"coords\" in e ? e : e.geometry);\n  if (null == s) return null;\n  switch (n) {\n    case \"esriGeometryPoint\":\n      {\n        let t = P;\n        return o && r ? t = k : o ? t = Z : r && (t = v), t(s);\n      }\n    case \"esriGeometryMultipoint\":\n      return U(s, o, r);\n    case \"esriGeometryPolyline\":\n      return $(s, o, r);\n    case \"esriGeometryPolygon\":\n      return H(s, o, r);\n    default:\n      return m().error(\"convertToGeometry:unknown-geometry\", new t(`Unable to parse unknown geometry type '${n}'`)), null;\n  }\n}\nfunction st(t, e) {\n  for (const n of e) t.push({\n    attributes: n.attributes\n  });\n  return t;\n}\nfunction ut(e, n, o, r, s) {\n  if (Tt(e), null == o) return st(e, n);\n  switch (o) {\n    case \"esriGeometryPoint\":\n      return Y(e, n, r, s);\n    case \"esriGeometryMultipoint\":\n      return S(e, n, r, s);\n    case \"esriGeometryPolyline\":\n      return A(e, n, r, s);\n    case \"esriGeometryPolygon\":\n      return D(e, n, r, s);\n    default:\n      m().error(\"convertToFeatureSet:unknown-geometry\", new t(`Unable to parse unknown geometry type '${o}'`));\n  }\n  return e;\n}\nfunction lt(t) {\n  const {\n      objectIdFieldName: e,\n      spatialReference: n,\n      transform: o,\n      fields: r,\n      hasM: s,\n      hasZ: u,\n      features: l,\n      geometryType: c,\n      exceededTransferLimit: i,\n      uniqueIdField: f,\n      queryGeometry: a,\n      queryGeometryType: h\n    } = t,\n    d = {\n      features: ut([], l, c, u, s),\n      fields: r,\n      geometryType: c,\n      objectIdFieldName: e,\n      spatialReference: n,\n      uniqueIdField: f,\n      queryGeometry: rt(a, h, !1, !1)\n    };\n  return o && (d.transform = o), i && (d.exceededTransferLimit = i), s && (d.hasM = s), u && (d.hasZ = u), d;\n}\nfunction ct(e, n) {\n  const o = new a(),\n    {\n      hasM: r,\n      hasZ: s,\n      features: u,\n      objectIdFieldName: l,\n      spatialReference: c,\n      geometryType: i,\n      exceededTransferLimit: f,\n      transform: h,\n      fields: d\n    } = e;\n  return d && (o.fields = d), o.geometryType = i ?? null, o.objectIdFieldName = l ?? n ?? null, o.spatialReference = c ?? null, o.objectIdFieldName ? (u && et(o.features, u, i, s, r, o.objectIdFieldName), f && (o.exceededTransferLimit = f), r && (o.hasM = r), s && (o.hasZ = s), h && (o.transform = h), o) : (m().error(new t(\"optimized-features:invalid-objectIdFieldName\", \"objectIdFieldName is missing\")), o);\n}\nfunction it(t) {\n  const {\n    transform: e,\n    features: n,\n    hasM: o,\n    hasZ: r\n  } = t;\n  if (!e) return t;\n  for (const s of n) null != s.geometry && pt(s.geometry, s.geometry, o, r, e), null != s.centroid && pt(s.centroid, s.centroid, o, r, e);\n  return t.transform = null, t;\n}\nfunction ft(t, e) {\n  const {\n    geometryType: n,\n    features: o,\n    hasM: r,\n    hasZ: s\n  } = e;\n  if (!t) return e;\n  for (let u = 0; u < o.length; u++) {\n    const e = o[u],\n      l = e.weakClone();\n    l.geometry = new h(), at(l.geometry, e.geometry, r, s, n, t), e.centroid && (l.centroid = new h(), at(l.centroid, e.centroid, r, s, \"esriGeometryPoint\", t)), o[u] = l;\n  }\n  return e.transform = t, e;\n}\nfunction at(t, e, n, o, r, s, u = n, l = o) {\n  if (wt(t), !e?.coords.length) return null;\n  const c = g[r],\n    {\n      coords: i,\n      lengths: f\n    } = e,\n    a = d(n, o),\n    h = d(n && u, o && l),\n    m = M(n, o, u, l);\n  if (!f.length) return m(t.coords, i, 0, 0, N(s, i[0]), w(s, i[1])), wt(t, a, 0), t;\n  let y,\n    p,\n    I,\n    b,\n    T = 0,\n    G = 0,\n    F = G;\n  for (const d of f) {\n    if (d < c) continue;\n    let e = 0;\n    G = F, I = y = N(s, i[T]), b = p = w(s, i[T + 1]), m(t.coords, i, G, T, I, b), e++, T += a, G += h;\n    for (let n = 1; n < d; n++, T += a) I = N(s, i[T]), b = w(s, i[T + 1]), I === y && b === p || (m(t.coords, i, G, T, I - y, b - p), G += h, e++, y = I, p = b);\n    e >= c && (t.lengths.push(e), F = G);\n  }\n  return Tt(t.coords, F), t.coords.length ? t : null;\n}\nfunction ht(t, e, n, o, r, s, u = n, l = o) {\n  if (wt(t), !e?.coords.length) return null;\n  const c = g[r],\n    {\n      coords: i,\n      lengths: f\n    } = e,\n    a = d(n, o),\n    h = d(n && u, o && l),\n    m = M(n, o, u, l);\n  if (!f.length) return m(t.coords, i, 0, 0, i[0], i[1]), wt(t, a, 0), t;\n  let y = 0;\n  const p = s * s;\n  for (const d of f) {\n    if (d < c) {\n      y += d * a;\n      continue;\n    }\n    const e = t.coords.length / h,\n      n = y,\n      o = y + (d - 1) * a;\n    m(t.coords, i, t.coords.length, n, i[n], i[n + 1]), mt(t.coords, i, a, p, m, n, o), m(t.coords, i, t.coords.length, o, i[o], i[o + 1]);\n    const r = t.coords.length / h - e;\n    r >= c ? t.lengths.push(r) : Tt(t.coords, e * h), y += d * a;\n  }\n  return t.coords.length ? t : null;\n}\nfunction dt(t, e, n, o) {\n  const r = t[e],\n    s = t[e + 1],\n    u = t[n],\n    l = t[n + 1],\n    c = t[o],\n    i = t[o + 1];\n  let f = u,\n    a = l,\n    h = c - f,\n    d = i - a;\n  if (0 !== h || 0 !== d) {\n    const t = ((r - f) * h + (s - a) * d) / (h * h + d * d);\n    t > 1 ? (f = c, a = i) : t > 0 && (f += h * t, a += d * t);\n  }\n  return h = r - f, d = s - a, h * h + d * d;\n}\nfunction mt(t, e, n, o, r, s, u) {\n  let l,\n    c = o,\n    i = 0;\n  for (let f = s + n; f < u; f += n) l = dt(e, f, s, u), l > c && (i = f, c = l);\n  c > o && (i - s > n && mt(t, e, n, o, r, s, i), r(t, e, t.length, i, e[i], e[i + 1]), u - i > n && mt(t, e, n, o, r, i, u));\n}\nfunction gt(t, e, n, u) {\n  if (!e?.coords?.length) return null;\n  const l = d(n, u);\n  let c = Number.POSITIVE_INFINITY,\n    i = Number.POSITIVE_INFINITY,\n    f = Number.NEGATIVE_INFINITY,\n    a = Number.NEGATIVE_INFINITY;\n  if (e && e.coords) {\n    const t = e.coords;\n    for (let e = 0; e < t.length; e += l) {\n      const n = t[e],\n        o = t[e + 1];\n      c = Math.min(c, n), f = Math.max(f, n), i = Math.min(i, o), a = Math.max(a, o);\n    }\n  }\n  return o(t) ? r(t, c, i, f, a) : s(c, i, f, a, t), t;\n}\nfunction yt(t, e, n, o) {\n  const r = d(n, o),\n    {\n      lengths: s,\n      coords: u\n    } = e;\n  let l = Number.POSITIVE_INFINITY,\n    c = Number.POSITIVE_INFINITY,\n    i = Number.NEGATIVE_INFINITY,\n    f = Number.NEGATIVE_INFINITY,\n    a = 0;\n  for (const h of s) {\n    let t = u[a],\n      e = u[a + 1];\n    l = Math.min(t, l), c = Math.min(e, c), i = Math.max(t, i), f = Math.max(e, f), a += r;\n    for (let n = 1; n < h; n++, a += r) {\n      const n = u[a],\n        o = u[a + 1];\n      t += n, e += o, n < 0 && (l = Math.min(l, t)), n > 0 && (i = Math.max(i, t)), o < 0 ? c = Math.min(c, e) : o > 0 && (f = Math.max(f, e));\n    }\n  }\n  return t[0] = l, t[1] = c, t[2] = i, t[3] = f, t;\n}\nfunction pt(t, e, o, r, s) {\n  const {\n      coords: u,\n      lengths: l\n    } = e,\n    c = d(o, r);\n  if (!u.length) return t !== e && wt(t), t;\n  n(s);\n  const {\n      originPosition: i,\n      scale: f,\n      translate: a\n    } = s,\n    h = Gt;\n  h.originPosition = i;\n  const m = h.scale;\n  m[0] = f[0] ?? 1, m[1] = -(f[1] ?? 1), m[2] = f[2] ?? 1, m[3] = f[3] ?? 1;\n  const g = h.translate;\n  if (g[0] = a[0] ?? 0, g[1] = a[1] ?? 0, g[2] = a[2] ?? 0, g[3] = a[3] ?? 0, !l.length) {\n    for (let e = 0; e < c; ++e) t.coords[e] = F(h, u[e], e);\n    return t !== e && wt(t, c, 0), t;\n  }\n  let y = 0;\n  for (let n = 0; n < l.length; n++) {\n    const e = l[n];\n    t.lengths[n] = e;\n    for (let n = 0; n < c; ++n) t.coords[y + n] = F(h, u[y + n], n);\n    let o = t.coords[y],\n      r = t.coords[y + 1];\n    y += c;\n    for (let n = 1; n < e; n++, y += c) {\n      o += u[y] * m[0], r += u[y + 1] * m[1], t.coords[y] = o, t.coords[y + 1] = r;\n      for (let e = 2; e < c; ++e) t.coords[y + e] = F(h, u[y + e], e);\n    }\n  }\n  return t !== e && wt(t, u.length, l.length), t;\n}\nfunction It(t, e, n, o, r, s) {\n  if (wt(t), t.lengths.push(...e.lengths), n === r && o === s) for (let u = 0; u < e.coords.length; u++) t.coords.push(e.coords[u]);else {\n    const u = d(n, o),\n      l = M(n, o, r, s),\n      c = e.coords;\n    for (let e = 0; e < c.length; e += u) l(t.coords, c, t.coords.length, e, c[e], c[e + 1]);\n  }\n  return t;\n}\nfunction bt(t, e, n, o, r) {\n  if (!e?.coords?.length) return null;\n  const s = g[n],\n    {\n      coords: u,\n      lengths: l\n    } = e,\n    c = M(o, r, o, r),\n    i = d(o, r);\n  let f = 0,\n    a = 0,\n    h = 0,\n    m = 0;\n  for (const d of l) {\n    a = m, c(t.coords, u, a, f, u[f], u[f + 1]), f += i;\n    let e = u[f],\n      n = u[f + 1],\n      o = e,\n      r = n,\n      l = n / e;\n    a += i, c(t.coords, u, a, f, o, r), f += i;\n    for (let s = 2; s < d; s++) {\n      e = u[f], n = u[f + 1];\n      const s = n / e,\n        h = l === s || !isFinite(l) && !isFinite(s),\n        d = h && isFinite(s) ? l >= 0 && s >= 0 || l <= 0 && s <= 0 : r >= 0 && n >= 0 || r <= 0 && n <= 0;\n      h && d ? (o += e, r += n) : (o = e, r = n, a += i), c(t.coords, u, a, f, o, r), f += i, l = s;\n    }\n    a += i;\n    const g = (a - m) / i;\n    g >= s && (t.lengths[h] = g, m = a, h++);\n  }\n  return t.coords.length > m && (t.coords.length = m), t.lengths.length > h && (t.lengths.length = h), t.coords.length && t.lengths.length ? t : null;\n}\nfunction Mt(t, e, n, o) {\n  let r = 0,\n    s = t[o * e],\n    u = t[o * (e + 1)];\n  for (let l = 1; l < n; l++) {\n    const n = s + t[o * (e + l)],\n      c = u + t[o * (e + l) + 1],\n      i = (n - s) * (c + u);\n    s = n, u = c, r += i;\n  }\n  return .5 * r;\n}\nfunction Nt(t, e) {\n  const {\n    coords: n,\n    lengths: o\n  } = t;\n  let r = 0,\n    s = 0;\n  for (let u = 0; u < o.length; u++) {\n    const t = o[u];\n    s += Mt(n, r, t, e), r += t;\n  }\n  return Math.abs(s);\n}\nfunction wt(t, e = 0, n = 0) {\n  Tt(t.lengths, n), Tt(t.coords, e);\n}\nfunction Tt(t, e = 0) {\n  t.length !== e && (t.length = e);\n}\nconst Gt = {\n  originPosition: \"lowerLeft\",\n  scale: [1, 1, 1, 1],\n  translate: [0, 0, 0, 0]\n};\nexport { tt as convertFromFeature, ct as convertFromFeatureSet, et as convertFromFeatures, ot as convertFromGeometry, R as convertFromMultipoint, q as convertFromMultipointFeatures, Q as convertFromNestedArray, O as convertFromPoint, L as convertFromPointFeatures, K as convertFromPolygon, C as convertFromPolyline, B as convertFromPolylineFeatures, nt as convertToFeature, lt as convertToFeatureSet, ut as convertToFeatures, rt as convertToGeometry, U as convertToMultipoint, S as convertToMultipointFeatures, x as convertToPoint, H as convertToPolygon, $ as convertToPolyline, ht as generalizeOptimizedGeometry, gt as getBoundsOptimizedGeometry, Nt as getQuantizedArea, yt as getQuantizedBoundsOptimizedGeometry, Mt as getSignedQuantizedRingArea, ft as quantizeOptimizedFeatureSet, at as quantizeOptimizedGeometry, N as quantizeX, w as quantizeY, bt as removeCollinearVertices, It as removeZMValues, it as unquantizeOptimizedFeatureSet, pt as unquantizeOptimizedGeometry, F as unquantizeValue, T as unquantizeX, G as unquantizeY };"],
  "mappings": "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",
  "names": ["d", "e", "n", "s", "e", "n", "s", "o", "u", "l", "d", "q", "t", "f", "a", "m", "y", "p", "I", "b", "F", "r", "e", "s", "u", "l", "d", "n", "f", "a", "m", "g", "y", "o", "r", "e", "n", "s", "u", "l", "t"]
}
