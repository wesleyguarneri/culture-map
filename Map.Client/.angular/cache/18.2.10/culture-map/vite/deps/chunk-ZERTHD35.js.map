{
  "version": 3,
  "sources": ["../../../../../../node_modules/@arcgis/core/views/3d/webgl-engine/collections/Component/Material/shader/VertexDiscardByOpacity.glsl.js", "../../../../../../node_modules/@arcgis/core/views/3d/webgl-engine/collections/Component/Material/ComponentTechniqueConfiguration.js", "../../../../../../node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/shading/ComputeMaterialColor.glsl.js", "../../../../../../node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/shading/ComputeShadingNormal.glsl.js", "../../../../../../node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/shading/ReadBaseColorTexture.glsl.js", "../../../../../../node_modules/@arcgis/core/chunks/ComponentShader.glsl.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { neverReached as e } from \"../../../../../../../core/compilerUtils.js\";\nimport { glsl as a } from \"../../../../core/shaderModules/interfaces.js\";\nvar r;\nfunction c(c, i) {\n  const t = c.vertex;\n  switch (t.code.add(a`#define VERTEX_DISCARD_CUTOFF (1.0 - 1.0 / 255.0)`), i.vertexDiscardMode) {\n    case r.None:\n      t.code.add(a`#define vertexDiscardByOpacity(_opacity_) {}`);\n      break;\n    case r.Opaque:\n      t.code.add(a`#define vertexDiscardByOpacity(_opacity_) { if (_opacity_ >  VERTEX_DISCARD_CUTOFF) {  gl_Position = vec4(1e38, 1e38, 1e38, 1.0); return; } }`);\n      break;\n    case r.Transparent:\n      t.code.add(a`#define vertexDiscardByOpacity(_opacity_) { if (_opacity_ <= VERTEX_DISCARD_CUTOFF) {  gl_Position = vec4(1e38, 1e38, 1e38, 1.0); return; } }`);\n      break;\n    case r.COUNT:\n      break;\n    default:\n      e(i.vertexDiscardMode);\n  }\n}\n!function (e) {\n  e[e.None = 0] = \"None\", e[e.Transparent = 1] = \"Transparent\", e[e.Opaque = 2] = \"Opaque\", e[e.COUNT = 3] = \"COUNT\";\n}(r || (r = {}));\nexport { c as VertexDiscardByOpacity, r as VertexDiscardMode };", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { _ as o } from \"../../../../../../chunks/tslib.es6.js\";\nimport { ComponentDataType as e } from \"./shader/ComponentData.glsl.js\";\nimport { VertexDiscardMode as t } from \"./shader/VertexDiscardByOpacity.glsl.js\";\nimport { ShaderOutput as r } from \"../../../core/shaderLibrary/ShaderOutput.js\";\nimport { NormalType as s } from \"../../../core/shaderLibrary/attributes/NormalAttribute.glsl.js\";\nimport { TextureCoordinateAttributeType as i } from \"../../../core/shaderLibrary/attributes/TextureCoordinateAttribute.glsl.js\";\nimport { NormalsDoubleSidedMode as a } from \"../../../core/shaderLibrary/shading/Normals.glsl.js\";\nimport { PBRMode as p } from \"../../../core/shaderLibrary/shading/PhysicallyBasedRenderingParameters.glsl.js\";\nimport { EllipsoidMode as d } from \"../../../core/shaderLibrary/util/EllipsoidMode.js\";\nimport { BindType as n } from \"../../../core/shaderTechnique/BindType.js\";\nimport { parameter as l, ShaderTechniqueConfiguration as c } from \"../../../core/shaderTechnique/ShaderTechniqueConfiguration.js\";\nimport { CullFaceOptions as h, AlphaDiscardMode as u } from \"../../../lib/basicInterfaces.js\";\nimport { TransparencyPassType as y } from \"../../../lib/TransparencyPassType.js\";\nvar v;\n!function (o) {\n  o[o.None = 0] = \"None\", o[o.NoOverlay = 1] = \"NoOverlay\", o[o.ColorOverlay = 2] = \"ColorOverlay\", o[o.ColorOverlayWithWater = 3] = \"ColorOverlayWithWater\", o[o.COUNT = 4] = \"COUNT\";\n}(v || (v = {}));\nclass m extends c {\n  constructor() {\n    super(...arguments), this.output = r.Color, this.textureCoordinateType = i.None, this.componentData = e.Uniform, this.cullFace = h.Back, this.vertexDiscardMode = t.None, this.doubleSidedMode = a.WindingOrder, this.alphaDiscardMode = u.Opaque, this.integratedMeshMode = v.None, this.transparencyPassType = y.NONE, this.ellipsoidMode = d.Earth, this.pbrMode = p.Disabled, this.normalType = s.Attribute, this.spherical = !1, this.doublePrecisionRequiresObfuscation = !1, this.hasVertexColors = !1, this.hasNormals = !1, this.hasSlicePlane = !1, this.hasColorTexture = !1, this.receiveAmbientOcclusion = !0, this.receiveShadows = !0, this.blendingEnabled = !0, this.hasScreenSpaceReflections = !1, this.hasPolygonOffset = !1, this.hasMetallicRoughnessTexture = !1, this.hasEmissionTexture = !1, this.hasOcclusionTexture = !1, this.hasNormalTexture = !1, this.hasOccludees = !1, this.multipassEnabled = !1, this.cullAboveGround = !1, this.hasNormalTextureTransform = !1, this.hasCloudsReflections = !0, this.snowCover = !1, this.objectAndLayerIdColor = !1;\n  }\n}\no([l({\n  count: r.COUNT\n})], m.prototype, \"output\", void 0), o([l({\n  count: i.COUNT\n})], m.prototype, \"textureCoordinateType\", void 0), o([l({\n  count: e.COUNT\n})], m.prototype, \"componentData\", void 0), o([l({\n  count: h.COUNT\n})], m.prototype, \"cullFace\", void 0), o([l({\n  count: t.COUNT\n})], m.prototype, \"vertexDiscardMode\", void 0), o([l({\n  count: a.COUNT\n})], m.prototype, \"doubleSidedMode\", void 0), o([l({\n  count: u.COUNT\n})], m.prototype, \"alphaDiscardMode\", void 0), o([l({\n  count: v.COUNT\n})], m.prototype, \"integratedMeshMode\", void 0), o([l({\n  count: y.COUNT\n})], m.prototype, \"transparencyPassType\", void 0), o([l({\n  count: d.COUNT\n})], m.prototype, \"ellipsoidMode\", void 0), o([l({\n  count: p.COUNT\n})], m.prototype, \"pbrMode\", void 0), o([l({\n  count: s.COUNT\n})], m.prototype, \"normalType\", void 0), o([l()], m.prototype, \"spherical\", void 0), o([l()], m.prototype, \"doublePrecisionRequiresObfuscation\", void 0), o([l()], m.prototype, \"hasVertexColors\", void 0), o([l()], m.prototype, \"hasNormals\", void 0), o([l()], m.prototype, \"hasSlicePlane\", void 0), o([l()], m.prototype, \"hasColorTexture\", void 0), o([l()], m.prototype, \"receiveAmbientOcclusion\", void 0), o([l()], m.prototype, \"receiveShadows\", void 0), o([l()], m.prototype, \"blendingEnabled\", void 0), o([l()], m.prototype, \"hasScreenSpaceReflections\", void 0), o([l()], m.prototype, \"hasPolygonOffset\", void 0), o([l()], m.prototype, \"hasMetallicRoughnessTexture\", void 0), o([l()], m.prototype, \"hasEmissionTexture\", void 0), o([l()], m.prototype, \"hasOcclusionTexture\", void 0), o([l()], m.prototype, \"hasNormalTexture\", void 0), o([l()], m.prototype, \"hasOccludees\", void 0), o([l()], m.prototype, \"multipassEnabled\", void 0), o([l()], m.prototype, \"cullAboveGround\", void 0), o([l()], m.prototype, \"hasNormalTextureTransform\", void 0), o([l()], m.prototype, \"hasCloudsReflections\", void 0), o([l()], m.prototype, \"snowCover\", void 0), o([l()], m.prototype, \"objectAndLayerIdColor\", void 0), o([l({\n  constValue: !1\n})], m.prototype, \"occlusionPass\", void 0), o([l({\n  constValue: n.Draw\n})], m.prototype, \"pbrTextureBindType\", void 0), o([l({\n  constValue: !0\n})], m.prototype, \"hasSliceHighlight\", void 0), o([l({\n  constValue: !1\n})], m.prototype, \"hasSliceInVertexProgram\", void 0), o([l({\n  constValue: !1\n})], m.prototype, \"useCustomDTRExponentForWater\", void 0), o([l({\n  constValue: !1\n})], m.prototype, \"hasVertexTangents\", void 0), o([l({\n  constValue: !0\n})], m.prototype, \"supportsTextureAtlas\", void 0), o([l({\n  constValue: !1\n})], m.prototype, \"highStepCount\", void 0), o([l({\n  constValue: !1\n})], m.prototype, \"instancedDoublePrecision\", void 0), o([l({\n  constValue: !1\n})], m.prototype, \"hasModelTransformation\", void 0), o([l({\n  constValue: !0\n})], m.prototype, \"useFillLights\", void 0), o([l({\n  constValue: !1\n})], m.prototype, \"objectAndLayerIdColorInstanced\", void 0);\nexport { m as ComponentTechniqueConfiguration, v as IntegratedMeshMode };", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { VertexColor as o } from \"../attributes/VertexColor.glsl.js\";\nimport { MixExternalColor as r } from \"../util/MixExternalColor.glsl.js\";\nimport { Float4DrawUniform as e } from \"../../shaderModules/Float4DrawUniform.js\";\nimport { FloatDrawUniform as a } from \"../../shaderModules/FloatDrawUniform.js\";\nimport { glsl as t } from \"../../shaderModules/interfaces.js\";\nfunction l(l, s) {\n  l.include(o, s), l.fragment.include(r);\n  const i = l.fragment;\n  i.uniforms.add(new e(\"baseColor\", o => o.baseColor)), i.uniforms.add(new a(\"objectOpacity\", o => o.objectOpacity)), s.hasVertexColors ? i.code.add(t`vec3 _baseColor() {\nreturn baseColor.rgb * vColor.rgb;\n}\nfloat _baseOpacity() {\nreturn baseColor.a * vColor.a;\n}`) : i.code.add(t`vec3 _baseColor() {\nreturn baseColor.rgb;\n}\nfloat _baseOpacity() {\nreturn baseColor.a;\n}`), i.code.add(t`vec4 computeMaterialColor(vec4 textureColor, vec4 externalColor, int externalColorMixMode) {\nvec3 baseColor = _baseColor();\nfloat baseOpacity = _baseOpacity();\nvec3 color = mixExternalColor(\nbaseColor,\ntextureColor.rgb,\nexternalColor.rgb,\nexternalColorMixMode\n);\nfloat opacity = objectOpacity * mixExternalOpacity(\nbaseOpacity,\ntextureColor.a,\nexternalColor.a,\nexternalColorMixMode\n);\nreturn vec4(color, opacity);\n}`);\n}\nexport { l as ComputeMaterialColor };", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { neverReached as e } from \"../../../../../../core/compilerUtils.js\";\nimport { NormalType as r } from \"../attributes/NormalAttribute.glsl.js\";\nimport { VertexNormal as o } from \"../attributes/VertexNormal.glsl.js\";\nimport { VertexPosition as a } from \"../attributes/VertexPosition.glsl.js\";\nimport { NormalsDoubleSidedMode as d } from \"./Normals.glsl.js\";\nimport { glsl as i } from \"../../shaderModules/interfaces.js\";\nfunction l(l, n) {\n  const s = l.fragment;\n  switch (n.doubleSidedMode) {\n    case d.None:\n      s.code.add(i`vec3 _adjustDoublesided(vec3 normal) {\nreturn normal;\n}`);\n      break;\n    case d.View:\n      l.include(a, n), s.code.add(i`vec3 _adjustDoublesided(vec3 normal) {\nreturn dot(normal, vPositionWorldCameraRelative) > 0.0 ? -normal : normal;\n}`);\n      break;\n    case d.WindingOrder:\n      s.code.add(i`vec3 _adjustDoublesided(vec3 normal) {\nreturn gl_FrontFacing ? normal : -normal;\n}`);\n      break;\n    default:\n      e(n.doubleSidedMode);\n    case d.COUNT:\n  }\n  switch (n.normalType) {\n    case r.Attribute:\n    case r.Compressed:\n      l.include(o, n), s.code.add(i`vec3 shadingNormalWorld() {\nreturn _adjustDoublesided(normalize(vNormalWorld));\n}\nvec3 shadingNormal_view() {\nvec3 normal = normalize(vNormalView);\nreturn gl_FrontFacing ? normal : -normal;\n}`);\n      break;\n    case r.ScreenDerivative:\n      l.include(a, n), s.code.add(i`vec3 shadingNormalWorld() {\nreturn normalize(cross(\ndFdx(vPositionWorldCameraRelative),\ndFdy(vPositionWorldCameraRelative)\n));\n}\nvec3 shadingNormal_view() {\nreturn normalize(cross(dFdx(vPosition_view),dFdy(vPosition_view)));\n}`);\n      break;\n    case r.Ground:\n      n.spherical ? (l.include(a, n), s.code.add(i`vec3 shadingNormalWorld() {\nreturn normalize(positionWorld());\n}`)) : s.code.add(i`vec3 shadingNormalWorld() {\nreturn vec3(0.0, 0.0, 1.0);\n}`), s.code.add(i`vec3 shadingNormal_view() {\nreturn normalize(cross(dFdx(vPosition_view),dFdy(vPosition_view))).xyz;\n}`);\n      break;\n    default:\n      e(n.normalType);\n    case r.COUNT:\n  }\n}\nexport { l as ComputeShadingNormal };", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { ShaderOutput as e } from \"../ShaderOutput.js\";\nimport { TextureCoordinateAttributeType as r } from \"../attributes/TextureCoordinateAttribute.glsl.js\";\nimport { VertexTextureCoordinates as t } from \"../attributes/VertexTextureCoordinates.glsl.js\";\nimport { TextureAtlasLookup as o } from \"../util/TextureAtlasLookup.glsl.js\";\nimport { glsl as u } from \"../../shaderModules/interfaces.js\";\nimport { Texture2DDrawUniform as s } from \"../../shaderModules/Texture2DDrawUniform.js\";\nimport { AlphaDiscardMode as a } from \"../../../lib/basicInterfaces.js\";\nfunction d(d, i) {\n  const l = d.fragment;\n  if (i.hasColorTexture && (i.output === e.Color || i.alphaDiscardMode !== a.Opaque)) {\n    d.include(t, i);\n    const e = i.textureCoordinateType === r.Atlas;\n    l.uniforms.add(new s(\"baseColorTexture\", e => e.texture)), e ? (d.include(o), l.code.add(u`vec4 readBaseColorTexture() {\nreturn textureAtlasLookup(baseColorTexture, vuv0, vuvRegion);\n}`)) : l.code.add(u`vec4 readBaseColorTexture() {\nreturn texture(baseColorTexture, vuv0);\n}`);\n  } else l.code.add(u`vec4 readBaseColorTexture() { return vec4(1.0); }`);\n}\nexport { d as ReadBaseColorTexture };", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { earth as e, mars as o, moon as r } from \"../geometry/support/Ellipsoid.js\";\nimport { OverlayContent as a } from \"../views/3d/terrain/OverlayContent.js\";\nimport { IntegratedMeshMode as i } from \"../views/3d/webgl-engine/collections/Component/Material/ComponentTechniqueConfiguration.js\";\nimport { ComponentData as l, ComponentDataType as t } from \"../views/3d/webgl-engine/collections/Component/Material/shader/ComponentData.glsl.js\";\nimport { VertexDiscardByOpacity as d } from \"../views/3d/webgl-engine/collections/Component/Material/shader/VertexDiscardByOpacity.glsl.js\";\nimport { ForwardLinearDepth as n } from \"../views/3d/webgl-engine/core/shaderLibrary/ForwardLinearDepth.glsl.js\";\nimport { ShaderOutput as s } from \"../views/3d/webgl-engine/core/shaderLibrary/ShaderOutput.js\";\nimport { SlicePass as c } from \"../views/3d/webgl-engine/core/shaderLibrary/Slice.glsl.js\";\nimport { NormalType as m } from \"../views/3d/webgl-engine/core/shaderLibrary/attributes/NormalAttribute.glsl.js\";\nimport { TextureCoordinateAttribute as g } from \"../views/3d/webgl-engine/core/shaderLibrary/attributes/TextureCoordinateAttribute.glsl.js\";\nimport { VertexColor as u } from \"../views/3d/webgl-engine/core/shaderLibrary/attributes/VertexColor.glsl.js\";\nimport { VertexNormal as v } from \"../views/3d/webgl-engine/core/shaderLibrary/attributes/VertexNormal.glsl.js\";\nimport { VertexPosition as h } from \"../views/3d/webgl-engine/core/shaderLibrary/attributes/VertexPosition.glsl.js\";\nimport { OutputDepth as p } from \"../views/3d/webgl-engine/core/shaderLibrary/output/OutputDepth.glsl.js\";\nimport { OutputHighlight as w } from \"../views/3d/webgl-engine/core/shaderLibrary/output/OutputHighlight.glsl.js\";\nimport { ReadLinearDepth as C } from \"../views/3d/webgl-engine/core/shaderLibrary/output/ReadDepth.glsl.js\";\nimport { ComputeMaterialColor as b } from \"../views/3d/webgl-engine/core/shaderLibrary/shading/ComputeMaterialColor.glsl.js\";\nimport { ComputeNormalTexture as f } from \"../views/3d/webgl-engine/core/shaderLibrary/shading/ComputeNormalTexture.glsl.js\";\nimport { ComputeShadingNormal as y } from \"../views/3d/webgl-engine/core/shaderLibrary/shading/ComputeShadingNormal.glsl.js\";\nimport { EvaluateSceneLighting as x, addLightingGlobalFactor as L } from \"../views/3d/webgl-engine/core/shaderLibrary/shading/EvaluateSceneLighting.glsl.js\";\nimport { addMainLightIntensity as j } from \"../views/3d/webgl-engine/core/shaderLibrary/shading/MainLighting.glsl.js\";\nimport { multipassTerrainTest as S } from \"../views/3d/webgl-engine/core/shaderLibrary/shading/MultipassTerrainTest.glsl.js\";\nimport { PBRMode as M, PhysicallyBasedRenderingParameters as N } from \"../views/3d/webgl-engine/core/shaderLibrary/shading/PhysicallyBasedRenderingParameters.glsl.js\";\nimport { ReadBaseColorTexture as O } from \"../views/3d/webgl-engine/core/shaderLibrary/shading/ReadBaseColorTexture.glsl.js\";\nimport { ReadShadowMapPass as T } from \"../views/3d/webgl-engine/core/shaderLibrary/shading/ReadShadowMap.glsl.js\";\nimport { OverlayIM as A, getIMColorTexture as W } from \"../views/3d/webgl-engine/core/shaderLibrary/terrain/Overlay.glsl.js\";\nimport { symbolAlphaCutoff as P } from \"../views/3d/webgl-engine/core/shaderLibrary/util/AlphaCutoff.js\";\nimport { DiscardOrAdjustAlphaDraw as B } from \"../views/3d/webgl-engine/core/shaderLibrary/util/AlphaDiscard.glsl.js\";\nimport { EllipsoidMode as R } from \"../views/3d/webgl-engine/core/shaderLibrary/util/EllipsoidMode.js\";\nimport { glsl as D } from \"../views/3d/webgl-engine/core/shaderModules/interfaces.js\";\nimport { ShaderBuilder as $ } from \"../views/3d/webgl-engine/core/shaderModules/ShaderBuilder.js\";\nimport { Texture2DPassUniform as z } from \"../views/3d/webgl-engine/core/shaderModules/Texture2DPassUniform.js\";\nimport { TransparencyPassType as E } from \"../views/3d/webgl-engine/lib/TransparencyPassType.js\";\nfunction V(V) {\n  const I = new $();\n  I.include(h, V), I.include(v, V), I.include(u, V), I.include(g, V), I.include(n, V), I.include(l, V), I.include(B, V), I.include(c, V), I.include(O, V), I.include(d, V);\n  const {\n    vertex: _,\n    fragment: G\n  } = I;\n  V.pbrMode !== M.Normal && V.pbrMode !== M.Schematic || (I.include(N, V), V.hasNormalTexture && I.include(f, V));\n  const F = V.output === s.Shadow || V.output === s.ShadowHighlight || V.output === s.ShadowExcludeHighlight;\n  F && V.componentData === t.Varying ? _.code.add(D`#define discardShadows(castShadows) { if(!castShadows) { gl_Position = vec4(1e38, 1e38, 1e38, 1.0); return; } }`) : _.code.add(D`#define discardShadows(castShadows) {}`);\n  const H = V.integratedMeshMode === i.ColorOverlay || V.integratedMeshMode === i.ColorOverlayWithWater,\n    k = H && V.output === s.Color && V.pbrMode === M.WaterOnIntegratedMesh;\n  H && (I.include(x, V), I.include(A, V), V.spherical ? _.code.add(D`\n      const float invEllipsoidRadius = ${D.float(1 / (V.ellipsoidMode === R.Earth ? e.radius : V.ellipsoidMode === R.Mars ? o.radius : r.radius))};\n      vec2 projectOverlay(vec3 pos) {\n        return pos.xy / (1.0 + invEllipsoidRadius * pos.z);\n      }\n      `) : _.code.add(D`vec2 projectOverlay(vec3 pos) { return pos.xy; }`)), k && (I.varyings.add(\"tbnTangent\", \"vec3\"), I.varyings.add(\"tbnBiTangent\", \"vec3\"), I.varyings.add(\"groundNormal\", \"vec3\")), _.code.add(D`\n    void main() {\n      bool castShadows;\n      vec4 externalColor = forwardExternalColor(castShadows);\n      discardShadows(castShadows);\n\n      vertexDiscardByOpacity(externalColor.a);\n\n      ${V.output === s.ObjectAndLayerIdColor ? D`externalColor.a = 1.0;` : \"\"}\n\n      if (externalColor.a < ${D.float(P)}) {\n        // Discard this vertex\n        gl_Position = vec4(1e38, 1e38, 1e38, 1.0);\n        return;\n      }\n\n      forwardPosition(readElevationOffset());\n      forwardNormal();\n      forwardTextureCoordinates();\n      forwardVertexColor();\n      forwardLinearDepth();\n      ${V.output === s.ObjectAndLayerIdColor ? D`forwardObjectAndLayerIdColor();` : \"\"}\n      ${k ? V.spherical ? D`\n                groundNormal = normalize(positionWorld());\n                tbnTangent = normalize(cross(vec3(0.0, 0.0, 1.0), groundNormal));\n                tbnBiTangent = normalize(cross(groundNormal, tbnTangent));` : D`\n                groundNormal = vec3(0.0, 0.0, 1.0);\n                tbnTangent = vec3(1.0, 0.0, 0.0);\n                tbnBiTangent = vec3(0.0, 1.0, 0.0);` : \"\"}\n      ${H ? D`setOverlayVTC(projectOverlay(position));` : \"\"}\n    }\n  `), V.output === s.Color && (G.include(C), I.include(S, V), I.include(b, V), I.include(y, V), I.include(x, V), V.transparencyPassType === E.ColorAlpha && (I.outputs.add(\"fragColor\", \"vec4\", 0), I.outputs.add(\"fragAlpha\", \"float\", 1)), V.receiveShadows ? (I.include(T, V), G.code.add(D`float evaluateShadow() {\nreturn readShadowMap(vPositionWorldCameraRelative, linearDepth);\n}`)) : G.code.add(D`float evaluateShadow() { return 0.0; }`), H && G.uniforms.add(new z(\"ovColorTex\", (e, o) => W(e, o))), G.code.add(D`\n      void main() {\n        discardBySlice(vPositionWorldCameraRelative);\n        ${V.multipassEnabled ? D`terrainDepthTest(vPosition_view.z);` : \"\"}\n\n        vec4 textureColor = readBaseColorTexture();\n        discardOrAdjustAlpha(textureColor);\n\n        vec4 externalColor;\n        int externalColorMixMode;\n        readExternalColor(externalColor, externalColorMixMode);\n\n        vec4 materialColor = computeMaterialColor(\n          textureColor,\n          externalColor,\n          externalColorMixMode\n        );\n        ${H ? D`vec4 overlayColor = getOverlayColor(ovColorTex, vtcOverlay);` : \"\"}\n    `), V.pbrMode === M.Normal || V.pbrMode === M.Schematic ? (j(G), G.code.add(D`\n        ${V.pbrMode === M.Normal ? D`\n                applyPBRFactors();\n                if (int(externalColorMixMode) == 3) {\n                  mrr = vec3(0.0, 0.6, 0.2);\n                }` : \"\"}\n        vec3 normalVertex = shadingNormalWorld();\n        float additionalIrradiance = 0.02 * mainLightIntensity[2];\n      `), V.hasNormalTexture ? G.code.add(D`mat3 tangentSpace = computeTangentSpace(normalVertex, vPositionWorldCameraRelative, vuv0);\nvec3 shadingNormal = computeTextureNormal(tangentSpace, vuv0);`) : G.code.add(D`vec3 shadingNormal = normalVertex;`), G.code.add(D`${V.spherical ? D`vec3 normalGround = normalize(positionWorld());` : D`vec3 normalGround = vec3(0.0, 0.0, 1.0);`}\n      `), G.code.add(D`\n        vec3 viewDir = normalize(vPositionWorldCameraRelative);\n        float ssao = 1.0 - occlusion * evaluateAmbientOcclusionInverse();\n        ${V.snowCover ? D`\n                vec3 surfaceNormal = normalize(shadingNormalWorld());\n                float snow = smoothstep(0.5, 0.55, dot(surfaceNormal, normalize(positionWorld())));\n                materialColor.rgb = mix(materialColor.rgb, vec3(1.1), snow);\n                ssao = mix(ssao, 0.5 * ssao, snow);\n                shadingNormal = mix(shadingNormal, surfaceNormal, snow);` : \"\"}\n\n        ${H ? D` materialColor = materialColor * (1.0 - overlayColor.a) + overlayColor;` : \"\"}\n\n        vec3 additionalLight = evaluateAdditionalLighting(ssao, positionWorld());\n        vec4 shadedColor = vec4(evaluateSceneLightingPBR(shadingNormal, materialColor.rgb, evaluateShadow(), ssao, additionalLight, viewDir, normalGround, mrr, emission, additionalIrradiance), materialColor.a);\n        `)) : (V.receiveShadows ? G.code.add(D`float shadow = evaluateShadow();`) : V.spherical ? (L(G), G.code.add(D`float additionalAmbientScale = additionalDirectedAmbientLight(positionWorld());\nfloat shadow = lightingGlobalFactor * (1.0 - additionalAmbientScale);`)) : G.code.add(D`float shadow = 0.0;`), k && G.uniforms.add(new z(\"ovNormalTex\", (e, o) => o.overlay?.getTexture(a.WaterNormal))), V.snowCover && G.code.add(D`vec3 surfaceNormal = normalize(cross(dFdx(vPositionWorldCameraRelative), dFdy(vPositionWorldCameraRelative)));\nfloat snow = smoothstep(0.5, 0.55, dot(surfaceNormal, normalize(positionWorld())));\nmaterialColor.rgb = mix(materialColor.rgb, vec3(1), snow);`), G.code.add(D`\n        float ambientOcclusion = evaluateAmbientOcclusion();\n        vec3 additionalLight = evaluateAdditionalLighting(ambientOcclusion, positionWorld());\n\n        ${H ? D` materialColor = materialColor * (1.0 - overlayColor.a) + overlayColor;` : \"\"}\n\n        vec4 shadedColor = vec4(evaluateSceneLighting(shadingNormalWorld(), materialColor.rgb, shadow, ambientOcclusion, additionalLight), materialColor.a);\n      ${k ? D`\n              vec4 overlayWaterMask = getOverlayColor(ovNormalTex, vtcOverlay);\n              float waterNormalLength = length(overlayWaterMask);\n              if (waterNormalLength > 0.95) {\n                mat3 tbnMatrix = mat3(tbnTangent, tbnBiTangent, groundNormal);\n                vec4 waterColorLinear = getOverlayWaterColor(overlayWaterMask, overlayColor, -normalize(vPositionWorldCameraRelative), shadow, groundNormal, tbnMatrix, vPosition_view, positionWorld());\n                vec4 waterColorNonLinear = delinearizeGamma(vec4(waterColorLinear.xyz, 1.0));\n                // un-gamma the ground color to mix in linear space\n                shadedColor = mix(shadedColor, waterColorNonLinear, waterColorLinear.w);\n              }` : \"\"}\n      `)), G.code.add(D`\n        fragColor = highlightSlice(shadedColor, vPositionWorldCameraRelative);\n        ${V.transparencyPassType === E.ColorAlpha ? D`\n                fragColor = premultiplyAlpha(fragColor);\n                fragAlpha = fragColor.a;` : \"\"}\n      }\n    `));\n  const q = V.output === s.Depth;\n  return (q || F || V.output === s.ViewshedShadow) && (q || I.include(p, V), G.code.add(D`\n      void main() {\n        discardBySlice(vPositionWorldCameraRelative);\n\n        vec4 textureColor = readBaseColorTexture();\n        discardOrAdjustAlpha(textureColor);\n\n        ${q ? \"\" : D`outputDepth(linearDepth);`}\n      }\n    `)), V.output === s.Normal && (I.include(y, V), G.code.add(D`\n      void main() {\n        discardBySlice(vPositionWorldCameraRelative);\n\n        vec4 textureColor = readBaseColorTexture();\n        discardOrAdjustAlpha(textureColor);\n\n        // note: the alpha component needs to be 1.0 in order for this material to influence ambient occlusion,\n        // see the ssao fragment shader\n        float alpha = ${V.normalType === m.Ground ? \"0.0\" : \"1.0\"};\n        fragColor = vec4(vec3(.5) + .5 * shadingNormal_view(), alpha);\n      }\n    `)), V.output === s.ObjectAndLayerIdColor && I.fragment.code.add(D`\n      void main() {\n        discardBySlice(vPositionWorldCameraRelative);\n\n        vec4 textureColor = readBaseColorTexture();\n        discardOrAdjustAlpha(textureColor);\n\n        ${H ? D`fragColor = getOverlayColorTexel(vtcOverlay);` : \"outputObjectAndLayerIdColor();\"}\n      }\n    `), V.output === s.Highlight && (I.include(w), G.code.add(D`\n      void main() {\n        discardBySlice(vPositionWorldCameraRelative);\n\n        vec4 textureColor = readBaseColorTexture();\n        discardOrAdjustAlpha(textureColor);\n\n        ${H ? D`\n                vec4 overlayColor = getCombinedOverlayColor();\n                if (overlayColor.a == 0.0) {\n                  fragColor = vec4(0.0);\n                  return;\n                }` : \"\"}\n\n        outputHighlight();\n      }\n    `)), I;\n}\nconst I = Object.freeze(Object.defineProperty({\n  __proto__: null,\n  build: V\n}, Symbol.toStringTag, {\n  value: \"Module\"\n}));\nexport { I as C, V as b };"],
  "mappings": "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",
  "names": ["r", "c", "i", "t", "e", "v", "o", "m", "t", "s", "e", "r", "a", "l", "s", "e", "i", "o", "l", "n", "s", "a", "d", "i", "l", "o", "s", "e", "V", "I", "o", "n", "e", "t", "d", "c", "_", "s", "v", "i", "a", "l", "m"]
}
