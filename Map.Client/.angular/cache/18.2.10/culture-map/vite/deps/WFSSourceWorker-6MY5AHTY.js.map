{
  "version": 3,
  "sources": ["../../../../../../node_modules/@arcgis/core/layers/graphics/sources/WFSSourceWorker.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { createTask as e } from \"../../../core/asyncUtils.js\";\nimport t from \"../../../core/Error.js\";\nimport r from \"../../../core/Logger.js\";\nimport { throwIfAborted as a, isAbortError as s } from \"../../../core/promiseUtils.js\";\nimport o from \"../../../core/Warning.js\";\nimport { equals as n } from \"../../../geometry/support/spatialReferenceUtils.js\";\nimport { convertFromGeometry as i, convertToGeometry as u } from \"../featureConversionUtils.js\";\nimport l from \"../data/FeatureStore.js\";\nimport { checkProjectionSupport as h, project as c } from \"../data/projectionSupport.js\";\nimport { QueryEngine as m } from \"../data/QueryEngine.js\";\nimport { validateGeoJSON as p, createOptimizedFeatures as d } from \"./geojson/geojson.js\";\nimport { mixAttributes as g } from \"./support/sourceUtils.js\";\nimport { getGetFeatureSpatialReference as f, getFeatureCount as y, getFeature as _ } from \"../../ogc/wfsUtils.js\";\nimport x from \"../../support/FieldsIndex.js\";\nimport { utc as C } from \"../../../time/timeZoneUtils.js\";\nconst w = \"esri.layers.WFSLayer\";\nclass R {\n  constructor() {\n    this._customParameters = null, this._queryEngine = null, this._supportsPagination = !0;\n  }\n  destroy() {\n    this._queryEngine?.destroy(), this._queryEngine = null;\n  }\n  async load(e, r = {}) {\n    const {\n        getFeatureUrl: s,\n        getFeatureOutputFormat: o,\n        fields: n,\n        geometryType: i,\n        featureType: u,\n        maxRecordCount: c,\n        maxTotalRecordCount: p,\n        maxPageCount: d,\n        objectIdField: g,\n        customParameters: y\n      } = e,\n      {\n        spatialReference: _,\n        getFeatureSpatialReference: w\n      } = f(s, u, e.spatialReference);\n    try {\n      await h(w, _);\n    } catch {\n      throw new t(\"unsupported-projection\", \"Projection not supported\", {\n        inSpatialReference: w,\n        outSpatialReference: _\n      });\n    }\n    a(r), this._customParameters = y, this._featureType = u, this._fieldsIndex = x.fromLayerJSON({\n      fields: n,\n      dateFieldsTimeReference: n.some(e => \"esriFieldTypeDate\" === e.type) ? {\n        timeZoneIANA: C\n      } : null\n    }), this._geometryType = i, this._getFeatureUrl = s, this._getFeatureOutputFormat = o, this._getFeatureSpatialReference = w, this._maxRecordCount = c, this._maxTotalRecordCount = p, this._maxPageCount = d, this._objectIdField = g, this._spatialReference = _;\n    let R = await this._snapshotFeatures(r);\n    if (R.errors.length > 0 && (this._supportsPagination = !1, R = await this._snapshotFeatures(r), R.errors.length > 0)) throw R.errors[0];\n    return this._queryEngine = new m({\n      fieldsIndex: this._fieldsIndex,\n      geometryType: i,\n      hasM: !1,\n      hasZ: !1,\n      objectIdField: g,\n      spatialReference: _,\n      timeInfo: null,\n      featureStore: new l({\n        geometryType: i,\n        hasM: !1,\n        hasZ: !1\n      })\n    }), this._queryEngine.featureStore.addMany(R.features), {\n      warnings: T(R),\n      extent: (await this._queryEngine.fetchRecomputedExtents()).fullExtent\n    };\n  }\n  async applyEdits() {\n    throw new t(\"wfs-source:editing-not-supported\", \"applyEdits() is not supported on WFSLayer\");\n  }\n  async queryFeatures(e = {}, t = {}) {\n    return await this._waitSnapshotComplete(), this._queryEngine.executeQuery(e, t.signal);\n  }\n  async queryFeatureCount(e = {}, t = {}) {\n    return await this._waitSnapshotComplete(), this._queryEngine.executeQueryForCount(e, t.signal);\n  }\n  async queryObjectIds(e = {}, t = {}) {\n    return await this._waitSnapshotComplete(), this._queryEngine.executeQueryForIds(e, t.signal);\n  }\n  async queryExtent(e = {}, t = {}) {\n    return await this._waitSnapshotComplete(), this._queryEngine.executeQueryForExtent(e, t.signal);\n  }\n  async querySnapping(e, t = {}) {\n    return await this._waitSnapshotComplete(), this._queryEngine.executeQueryForSnapping(e, t.signal);\n  }\n  async refresh(t) {\n    return this._customParameters = t.customParameters, this._maxRecordCount = t.maxRecordCount, this._maxTotalRecordCount = t.maxTotalRecordCount, this._maxPageCount = t.maxPageCount, this._snapshotTask?.abort(), this._snapshotTask = e(e => this._snapshotFeatures({\n      signal: e\n    })), this._snapshotTask.promise.then(e => {\n      this._queryEngine.featureStore.clear(), this._queryEngine.featureStore.addMany(e.features);\n      for (const t of T(e)) r.getLogger(w).warn(new o(\"wfs-layer:refresh-warning\", t.message, t.details));\n      e.errors?.length && r.getLogger(w).warn(new o(\"wfs-layer:refresh-error\", \"Refresh completed with errors\", {\n        errors: e.errors\n      }));\n    }, () => {\n      this._queryEngine.featureStore.clear();\n    }), await this._waitSnapshotComplete(), {\n      extent: (await this._queryEngine.fetchRecomputedExtents()).fullExtent\n    };\n  }\n  async _waitSnapshotComplete() {\n    if (this._snapshotTask && !this._snapshotTask.finished) {\n      try {\n        await this._snapshotTask.promise;\n      } catch {}\n      return this._waitSnapshotComplete();\n    }\n  }\n  async _snapshotFeatures(e) {\n    const t = e?.signal,\n      r = this._maxTotalRecordCount,\n      o = this._maxPageCount,\n      n = this._supportsPagination ? await y(this._getFeatureUrl, this._featureType.typeName, {\n        customParameters: this._customParameters,\n        signal: t\n      }) : void 0;\n    let i = [];\n    const u = [];\n    if (null == n) try {\n      i = await this._singleQuery(t);\n    } catch (l) {\n      s(l) || u.push(l);\n    } else {\n      const e = Math.min(n, r),\n        a = F(this, Math.max(1, Math.min(Math.ceil(e / this._maxRecordCount), o)), t);\n      await Promise.allSettled(Array.from({\n        length: 10\n      }).map(() => S(a, i, u)));\n    }\n    return a(t), {\n      features: i,\n      totalRecordCount: n,\n      maxTotalRecordCount: r,\n      maxPageCount: o,\n      errors: u\n    };\n  }\n  async _singleQuery(e) {\n    const t = await _(this._getFeatureUrl, this._featureType.typeName, this._getFeatureSpatialReference, this._getFeatureOutputFormat, {\n      customParameters: this._customParameters,\n      signal: e\n    });\n    return this._processGeoJSON(t, {\n      signal: e\n    });\n  }\n  async _pageQuery(e, t) {\n    const r = e * this._maxRecordCount,\n      a = await _(this._getFeatureUrl, this._featureType.typeName, this._getFeatureSpatialReference, this._getFeatureOutputFormat, {\n        customParameters: this._customParameters,\n        startIndex: r,\n        count: this._maxRecordCount,\n        signal: t\n      });\n    return this._processGeoJSON(a, {\n      startIndex: r,\n      signal: t\n    });\n  }\n  _processGeoJSON(e, t) {\n    p(e, this._getFeatureSpatialReference.wkid);\n    const {\n      startIndex: r,\n      signal: s\n    } = t;\n    a(s);\n    const o = d(e, {\n      geometryType: this._geometryType,\n      hasZ: !1,\n      objectIdField: this._objectIdField\n    });\n    if (!n(this._spatialReference, this._getFeatureSpatialReference)) for (const a of o) null != a.geometry && (a.geometry = i(c(u(a.geometry, this._geometryType, !1, !1), this._getFeatureSpatialReference, this._spatialReference)));\n    let l = r ?? 1;\n    for (const a of o) {\n      const e = {};\n      g(this._fieldsIndex, e, a.attributes, !0), a.attributes = e, null == e[this._objectIdField] && (a.objectId = e[this._objectIdField] = l++);\n    }\n    return o;\n  }\n}\nfunction* F(e, t, r) {\n  for (let a = 0; a < t; a++) yield e._pageQuery(a, r);\n}\nasync function S(e, t, r) {\n  let a = e.next();\n  for (; !a.done;) {\n    try {\n      const e = await a.value;\n      t.push(...e);\n    } catch (o) {\n      s(o) || r.push(o);\n    }\n    a = e.next();\n  }\n}\nfunction T(e) {\n  const t = [];\n  return null != e.totalRecordCount && (e.features.length < e.totalRecordCount && t.push({\n    name: \"wfs-layer:maxRecordCount-too-low\",\n    message: `Could only fetch ${e.features.length} of ${e.totalRecordCount} in ${e.maxPageCount} queries. Try increasing the value of WFSLayer.maxRecordCount.`,\n    details: {\n      recordCount: e.features.length,\n      totalRecordCount: e.totalRecordCount\n    }\n  }), e.totalRecordCount > e.maxTotalRecordCount && t.push({\n    name: \"wfs-layer:large-dataset\",\n    message: `The number of ${e.totalRecordCount} features exceeds the maximum allowed of ${e.maxTotalRecordCount}.`,\n    details: {\n      recordCount: e.features.length,\n      totalRecordCount: e.totalRecordCount,\n      maxTotalRecordCount: e.maxTotalRecordCount\n    }\n  })), t;\n}\nexport { R as default };"],
  "mappings": "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",
  "names": ["s", "n", "i", "p", "d", "w", "e", "R", "t"]
}
