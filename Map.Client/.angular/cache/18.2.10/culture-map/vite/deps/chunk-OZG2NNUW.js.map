{
  "version": 3,
  "sources": ["../../../../../../node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/Slice.glsl.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { translate as e } from \"../../../../../core/libs/gl-matrix-2/math/mat4.js\";\nimport { create as s } from \"../../../../../core/libs/gl-matrix-2/factories/mat4f64.js\";\nimport { h as i, g as a, f as l, s as o } from \"../../../../../chunks/vec32.js\";\nimport { ZEROS as c, create as r } from \"../../../../../core/libs/gl-matrix-2/factories/vec3f64.js\";\nimport { Float3DrawUniform as t } from \"../shaderModules/Float3DrawUniform.js\";\nimport { Float3PassUniform as n } from \"../shaderModules/Float3PassUniform.js\";\nimport { NoParameters as f, glsl as d } from \"../shaderModules/interfaces.js\";\nclass u extends f {\n  constructor(e) {\n    super(), this.slicePlaneLocalOrigin = e;\n  }\n}\nfunction _(e, s) {\n  m(e, s, new n(\"slicePlaneOrigin\", (e, i) => H(s, e, i)), new n(\"slicePlaneBasis1\", (e, i) => I(s, e, i, i.slicePlane?.basis1)), new n(\"slicePlaneBasis2\", (e, i) => I(s, e, i, i.slicePlane?.basis2)));\n}\nfunction P(e, s) {\n  m(e, s, new t(\"slicePlaneOrigin\", (e, i) => H(s, e, i)), new t(\"slicePlaneBasis1\", (e, i) => I(s, e, i, i.slicePlane?.basis1)), new t(\"slicePlaneBasis2\", (e, i) => I(s, e, i, i.slicePlane?.basis2)));\n}\nfunction m(e, s, ...i) {\n  if (!s.hasSlicePlane) {\n    const i = d`#define rejectBySlice(_pos_) false\n#define discardBySlice(_pos_) {}\n#define highlightSlice(_color_, _pos_) (_color_)`;\n    return s.hasSliceInVertexProgram && e.vertex.code.add(i), void e.fragment.code.add(i);\n  }\n  s.hasSliceInVertexProgram && e.vertex.uniforms.add(...i), e.fragment.uniforms.add(...i);\n  const a = d`struct SliceFactors {\nfloat front;\nfloat side0;\nfloat side1;\nfloat side2;\nfloat side3;\n};\nSliceFactors calculateSliceFactors(vec3 pos) {\nvec3 rel = pos - slicePlaneOrigin;\nvec3 slicePlaneNormal = -cross(slicePlaneBasis1, slicePlaneBasis2);\nfloat slicePlaneW = -dot(slicePlaneNormal, slicePlaneOrigin);\nfloat basis1Len2 = dot(slicePlaneBasis1, slicePlaneBasis1);\nfloat basis2Len2 = dot(slicePlaneBasis2, slicePlaneBasis2);\nfloat basis1Dot = dot(slicePlaneBasis1, rel);\nfloat basis2Dot = dot(slicePlaneBasis2, rel);\nreturn SliceFactors(\ndot(slicePlaneNormal, pos) + slicePlaneW,\n-basis1Dot - basis1Len2,\nbasis1Dot - basis1Len2,\n-basis2Dot - basis2Len2,\nbasis2Dot - basis2Len2\n);\n}\nbool sliceByFactors(SliceFactors factors) {\nreturn factors.front < 0.0\n&& factors.side0 < 0.0\n&& factors.side1 < 0.0\n&& factors.side2 < 0.0\n&& factors.side3 < 0.0;\n}\nbool sliceEnabled() {\nreturn dot(slicePlaneBasis1, slicePlaneBasis1) != 0.0;\n}\nbool sliceByPlane(vec3 pos) {\nreturn sliceEnabled() && sliceByFactors(calculateSliceFactors(pos));\n}\n#define rejectBySlice(_pos_) sliceByPlane(_pos_)\n#define discardBySlice(_pos_) { if (sliceByPlane(_pos_)) discard; }`,\n    l = d`vec4 applySliceHighlight(vec4 color, vec3 pos) {\nSliceFactors factors = calculateSliceFactors(pos);\nconst float HIGHLIGHT_WIDTH = 1.0;\nconst vec4 HIGHLIGHT_COLOR = vec4(0.0, 0.0, 0.0, 0.3);\nfactors.front /= (2.0 * HIGHLIGHT_WIDTH) * fwidth(factors.front);\nfactors.side0 /= (2.0 * HIGHLIGHT_WIDTH) * fwidth(factors.side0);\nfactors.side1 /= (2.0 * HIGHLIGHT_WIDTH) * fwidth(factors.side1);\nfactors.side2 /= (2.0 * HIGHLIGHT_WIDTH) * fwidth(factors.side2);\nfactors.side3 /= (2.0 * HIGHLIGHT_WIDTH) * fwidth(factors.side3);\nif (sliceByFactors(factors)) {\nreturn color;\n}\nfloat highlightFactor = (1.0 - step(0.5, factors.front))\n* (1.0 - step(0.5, factors.side0))\n* (1.0 - step(0.5, factors.side1))\n* (1.0 - step(0.5, factors.side2))\n* (1.0 - step(0.5, factors.side3));\nreturn mix(color, vec4(HIGHLIGHT_COLOR.rgb, color.a), highlightFactor * HIGHLIGHT_COLOR.a);\n}`,\n    o = s.hasSliceHighlight ? d`\n        ${l}\n        #define highlightSlice(_color_, _pos_) (sliceEnabled() ? applySliceHighlight(_color_, _pos_) : (_color_))\n      ` : d`#define highlightSlice(_color_, _pos_) (_color_)`;\n  s.hasSliceInVertexProgram && e.vertex.code.add(a), e.fragment.code.add(a), e.fragment.code.add(o);\n}\nfunction h(e, s, i) {\n  return e.instancedDoublePrecision ? o(b, i.camera.viewInverseTransposeMatrix[3], i.camera.viewInverseTransposeMatrix[7], i.camera.viewInverseTransposeMatrix[11]) : s.slicePlaneLocalOrigin;\n}\nfunction p(e, s) {\n  return null != e ? l(v, s.origin, e) : s.origin;\n}\nfunction g(s, i, a) {\n  return s.hasSliceTranslatedView ? null != i ? e(S, a.camera.viewMatrix, i) : a.camera.viewMatrix : null;\n}\nfunction H(e, s, a) {\n  if (null == a.slicePlane) return c;\n  const l = h(e, s, a),\n    o = p(l, a.slicePlane),\n    r = g(e, l, a);\n  return null != r ? i(v, o, r) : o;\n}\nfunction I(e, s, o, r) {\n  if (null == r || null == o.slicePlane) return c;\n  const t = h(e, s, o),\n    n = p(t, o.slicePlane),\n    f = g(e, t, o);\n  return null != f ? (a(B, r, n), i(v, n, f), i(B, B, f), l(B, B, v)) : r;\n}\nconst b = r(),\n  v = r(),\n  B = r(),\n  S = s();\nexport { P as SliceDraw, _ as SlicePass, u as SlicePlaneParameters };"],
  "mappings": "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",
  "names": ["u", "n", "e", "i", "o", "l"]
}
