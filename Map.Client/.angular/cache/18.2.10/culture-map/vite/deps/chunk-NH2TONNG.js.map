{
  "version": 3,
  "sources": ["../../../../../../node_modules/@arcgis/core/layers/graphics/sources/geojson/geojson.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { isISO8601Date as e } from \"../../../../core/date.js\";\nimport t from \"../../../../core/Error.js\";\nimport { isWGS84 as n } from \"../../../../geometry/support/spatialReferenceUtils.js\";\nimport { OptimizedFeature as o } from \"../../OptimizedFeature.js\";\nimport r from \"../../OptimizedGeometry.js\";\nimport { normalizeFieldName as i, isNumericField as s } from \"../../../support/fieldUtils.js\";\nconst c = {\n  LineString: \"esriGeometryPolyline\",\n  MultiLineString: \"esriGeometryPolyline\",\n  MultiPoint: \"esriGeometryMultipoint\",\n  Point: \"esriGeometryPoint\",\n  Polygon: \"esriGeometryPolygon\",\n  MultiPolygon: \"esriGeometryPolygon\"\n};\nfunction u(e) {\n  return c[e];\n}\nfunction* l(e) {\n  switch (e.type) {\n    case \"Feature\":\n      yield e;\n      break;\n    case \"FeatureCollection\":\n      for (const t of e.features) t && (yield t);\n  }\n}\nfunction* f(e) {\n  if (e) switch (e.type) {\n    case \"Point\":\n      yield e.coordinates;\n      break;\n    case \"LineString\":\n    case \"MultiPoint\":\n      yield* e.coordinates;\n      break;\n    case \"MultiLineString\":\n    case \"Polygon\":\n      for (const t of e.coordinates) yield* t;\n      break;\n    case \"MultiPolygon\":\n      for (const t of e.coordinates) for (const e of t) yield* e;\n  }\n}\nfunction* p(e, t = {}) {\n  const {\n    geometryType: n,\n    objectIdField: i\n  } = t;\n  for (const s of e) {\n    const {\n      geometry: e,\n      properties: c,\n      id: l\n    } = s;\n    if (e && u(e.type) !== n) continue;\n    const f = c || {};\n    let p;\n    i && (p = f[i], null == l || p || (f[i] = p = l));\n    const a = new o(e ? h(new r(), e, t) : null, f, null, p ?? void 0);\n    yield a;\n  }\n}\nfunction a(e) {\n  for (const t of e) if (t.length > 2) return !0;\n  return !1;\n}\nfunction y(e) {\n  return !g(e);\n}\nfunction d(e) {\n  return g(e);\n}\nfunction g(e) {\n  let t = 0;\n  for (let n = 0; n < e.length; n++) {\n    const o = e[n],\n      r = e[(n + 1) % e.length];\n    t += o[0] * r[1] - r[0] * o[1];\n  }\n  return t <= 0;\n}\nfunction m(e) {\n  const t = e[0],\n    n = e[e.length - 1];\n  return t[0] === n[0] && t[1] === n[1] && t[2] === n[2] || e.push(t), e;\n}\nfunction h(e, t, n) {\n  switch (t.type) {\n    case \"LineString\":\n      return w(e, t, n);\n    case \"MultiLineString\":\n      return P(e, t, n);\n    case \"MultiPoint\":\n      return j(e, t, n);\n    case \"MultiPolygon\":\n      return b(e, t, n);\n    case \"Point\":\n      return S(e, t, n);\n    case \"Polygon\":\n      return F(e, t, n);\n  }\n}\nfunction w(e, t, n) {\n  return M(e, t.coordinates, n), e;\n}\nfunction P(e, t, n) {\n  for (const o of t.coordinates) M(e, o, n);\n  return e;\n}\nfunction j(e, t, n) {\n  return M(e, t.coordinates, n), e;\n}\nfunction b(e, t, n) {\n  for (const o of t.coordinates) {\n    G(e, o[0], n);\n    for (let t = 1; t < o.length; t++) k(e, o[t], n);\n  }\n  return e;\n}\nfunction S(e, t, n) {\n  return O(e, t.coordinates, n), e;\n}\nfunction F(e, t, n) {\n  const o = t.coordinates;\n  G(e, o[0], n);\n  for (let r = 1; r < o.length; r++) k(e, o[r], n);\n  return e;\n}\nfunction G(e, t, n) {\n  const o = m(t);\n  y(o) ? T(e, o, n) : M(e, o, n);\n}\nfunction k(e, t, n) {\n  const o = m(t);\n  d(o) ? T(e, o, n) : M(e, o, n);\n}\nfunction M(e, t, n) {\n  for (const o of t) O(e, o, n);\n  e.lengths.push(t.length);\n}\nfunction T(e, t, n) {\n  for (let o = t.length - 1; o >= 0; o--) O(e, t[o], n);\n  e.lengths.push(t.length);\n}\nfunction O(e, t, n) {\n  const [o, r, i] = t;\n  e.coords.push(o, r), n.hasZ && e.coords.push(i || 0);\n}\nfunction L(t) {\n  switch (typeof t) {\n    case \"string\":\n      return e(t) ? \"esriFieldTypeDate\" : \"esriFieldTypeString\";\n    case \"number\":\n      return \"esriFieldTypeDouble\";\n    default:\n      return \"unknown\";\n  }\n}\nfunction E(e, o = 4326) {\n  if (!e) throw new t(\"geojson-layer:empty\", \"GeoJSON data is empty\");\n  if (\"Feature\" !== e.type && \"FeatureCollection\" !== e.type) throw new t(\"geojson-layer:unsupported-geojson-object\", \"missing or not supported GeoJSON object type\", {\n    data: e\n  });\n  const {\n    crs: r\n  } = e;\n  if (!r) return;\n  const i = \"string\" == typeof r ? r : \"name\" === r.type ? r.properties.name : \"EPSG\" === r.type ? r.properties.code : null,\n    s = n({\n      wkid: o\n    }) ? new RegExp(\".*(CRS84H?|4326)$\", \"i\") : new RegExp(`.*(${o})$`, \"i\");\n  if (!i || !s.test(i)) throw new t(\"geojson:unsupported-crs\", \"unsupported GeoJSON 'crs' member\", {\n    crs: r\n  });\n}\nfunction I(e, t = {}) {\n  const n = [],\n    o = new Set(),\n    r = new Set();\n  let c,\n    p = !1,\n    y = null,\n    d = !1,\n    {\n      geometryType: g = null\n    } = t,\n    m = !1;\n  for (const s of l(e)) {\n    const {\n      geometry: e,\n      properties: t,\n      id: l\n    } = s;\n    if (!e || (g || (g = u(e.type)), u(e.type) === g)) {\n      if (!p) {\n        p = a(f(e));\n      }\n      if (d || (d = null != l, d && (c = typeof l, t && (y = Object.keys(t).filter(e => t[e] === l)))), t && y && d && null != l && (y.length > 1 ? y = y.filter(e => t[e] === l) : 1 === y.length && (y = t[y[0]] === l ? y : [])), !m && t) {\n        let e = !0;\n        for (const s in t) {\n          if (o.has(s)) continue;\n          const c = t[s];\n          if (null == c) {\n            e = !1, r.add(s);\n            continue;\n          }\n          const u = L(c);\n          if (\"unknown\" === u) {\n            r.add(s);\n            continue;\n          }\n          r.delete(s), o.add(s);\n          const l = i(s);\n          l && n.push({\n            name: l,\n            alias: s,\n            type: u\n          });\n        }\n        m = e;\n      }\n    }\n  }\n  const h = i(1 === y?.length && y[0] || null) ?? void 0;\n  if (h) for (const i of n) if (i.name === h && s(i)) {\n    i.type = \"esriFieldTypeOID\";\n    break;\n  }\n  return {\n    fields: n,\n    geometryType: g,\n    hasZ: p,\n    objectIdFieldName: h,\n    objectIdFieldType: c,\n    unknownFields: Array.from(r)\n  };\n}\nfunction N(e, t) {\n  return Array.from(p(l(e), t));\n}\nexport { N as createOptimizedFeatures, u as getGeometryType, I as inferLayerProperties, E as validateGeoJSON };"],
  "mappings": "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",
  "names": ["c", "e", "t", "s", "l", "f", "p", "a", "y", "d", "g", "m", "u", "h"]
}
