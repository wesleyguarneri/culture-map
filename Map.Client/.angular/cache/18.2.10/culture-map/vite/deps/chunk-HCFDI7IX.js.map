{
  "version": 3,
  "sources": ["../../../../../../node_modules/@arcgis/core/renderers/SimpleRenderer.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { _ as e } from \"../chunks/tslib.es6.js\";\nimport { clone as s } from \"../core/lang.js\";\nimport { property as r } from \"../core/accessorSupport/decorators/property.js\";\nimport \"../core/has.js\";\nimport \"../core/Logger.js\";\nimport { enumeration as t } from \"../core/accessorSupport/decorators/enumeration.js\";\nimport { subclass as o } from \"../core/accessorSupport/decorators/subclass.js\";\nimport i from \"./Renderer.js\";\nimport { VisualVariablesMixin as l } from \"./mixins/VisualVariablesMixin.js\";\nimport { requiredRendererSymbolProperty as a } from \"./support/commonProperties.js\";\nvar c;\nlet m = c = class extends l(i) {\n  constructor(e) {\n    super(e), this.description = null, this.label = null, this.symbol = null, this.type = \"simple\";\n  }\n  async collectRequiredFields(e, s) {\n    await Promise.all([this.collectSymbolFields(e, s), this.collectVVRequiredFields(e, s)]);\n  }\n  async collectSymbolFields(e, s) {\n    await Promise.all(this.getSymbols().map(r => r.collectRequiredFields(e, s)));\n  }\n  getSymbol(e, s) {\n    return this.symbol;\n  }\n  async getSymbolAsync(e, s) {\n    return this.symbol;\n  }\n  getSymbols() {\n    return this.symbol ? [this.symbol] : [];\n  }\n  getAttributeHash() {\n    return this.visualVariables && this.visualVariables.reduce((e, s) => e + s.getAttributeHash(), \"\");\n  }\n  getMeshHash() {\n    return this.getSymbols().reduce((e, s) => e + JSON.stringify(s), \"\");\n  }\n  get arcadeRequired() {\n    return this.arcadeRequiredForVisualVariables;\n  }\n  clone() {\n    return new c({\n      description: this.description,\n      label: this.label,\n      symbol: s(this.symbol),\n      visualVariables: s(this.visualVariables),\n      authoringInfo: s(this.authoringInfo)\n    });\n  }\n};\ne([r({\n  type: String,\n  json: {\n    write: !0\n  }\n})], m.prototype, \"description\", void 0), e([r({\n  type: String,\n  json: {\n    write: !0\n  }\n})], m.prototype, \"label\", void 0), e([r(a)], m.prototype, \"symbol\", void 0), e([t({\n  simple: \"simple\"\n})], m.prototype, \"type\", void 0), m = c = e([o(\"esri.renderers.SimpleRenderer\")], m);\nconst p = m;\nexport { p as default };"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;AAcA,IAAI;AACJ,IAAI,IAAI,IAAI,cAAc,EAAE,CAAC,EAAE;AAAA,EAC7B,YAAYA,IAAG;AACb,UAAMA,EAAC,GAAG,KAAK,cAAc,MAAM,KAAK,QAAQ,MAAM,KAAK,SAAS,MAAM,KAAK,OAAO;AAAA,EACxF;AAAA,EACM,sBAAsBA,IAAG,GAAG;AAAA;AAChC,YAAM,QAAQ,IAAI,CAAC,KAAK,oBAAoBA,IAAG,CAAC,GAAG,KAAK,wBAAwBA,IAAG,CAAC,CAAC,CAAC;AAAA,IACxF;AAAA;AAAA,EACM,oBAAoBA,IAAG,GAAG;AAAA;AAC9B,YAAM,QAAQ,IAAI,KAAK,WAAW,EAAE,IAAI,OAAK,EAAE,sBAAsBA,IAAG,CAAC,CAAC,CAAC;AAAA,IAC7E;AAAA;AAAA,EACA,UAAUA,IAAG,GAAG;AACd,WAAO,KAAK;AAAA,EACd;AAAA,EACM,eAAeA,IAAG,GAAG;AAAA;AACzB,aAAO,KAAK;AAAA,IACd;AAAA;AAAA,EACA,aAAa;AACX,WAAO,KAAK,SAAS,CAAC,KAAK,MAAM,IAAI,CAAC;AAAA,EACxC;AAAA,EACA,mBAAmB;AACjB,WAAO,KAAK,mBAAmB,KAAK,gBAAgB,OAAO,CAACA,IAAG,MAAMA,KAAI,EAAE,iBAAiB,GAAG,EAAE;AAAA,EACnG;AAAA,EACA,cAAc;AACZ,WAAO,KAAK,WAAW,EAAE,OAAO,CAACA,IAAG,MAAMA,KAAI,KAAK,UAAU,CAAC,GAAG,EAAE;AAAA,EACrE;AAAA,EACA,IAAI,iBAAiB;AACnB,WAAO,KAAK;AAAA,EACd;AAAA,EACA,QAAQ;AACN,WAAO,IAAI,EAAE;AAAA,MACX,aAAa,KAAK;AAAA,MAClB,OAAO,KAAK;AAAA,MACZ,QAAQ,EAAE,KAAK,MAAM;AAAA,MACrB,iBAAiB,EAAE,KAAK,eAAe;AAAA,MACvC,eAAe,EAAE,KAAK,aAAa;AAAA,IACrC,CAAC;AAAA,EACH;AACF;AACA,EAAE,CAAC,EAAE;AAAA,EACH,MAAM;AAAA,EACN,MAAM;AAAA,IACJ,OAAO;AAAA,EACT;AACF,CAAC,CAAC,GAAG,EAAE,WAAW,eAAe,MAAM,GAAG,EAAE,CAAC,EAAE;AAAA,EAC7C,MAAM;AAAA,EACN,MAAM;AAAA,IACJ,OAAO;AAAA,EACT;AACF,CAAC,CAAC,GAAG,EAAE,WAAW,SAAS,MAAM,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,WAAW,UAAU,MAAM,GAAG,EAAE,CAAC,EAAE;AAAA,EACjF,QAAQ;AACV,CAAC,CAAC,GAAG,EAAE,WAAW,QAAQ,MAAM,GAAG,IAAI,IAAI,EAAE,CAACC,GAAE,+BAA+B,CAAC,GAAG,CAAC;AACpF,IAAMC,KAAI;",
  "names": ["e", "a", "p"]
}
