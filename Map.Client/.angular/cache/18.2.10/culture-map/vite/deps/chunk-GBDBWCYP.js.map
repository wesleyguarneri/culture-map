{
  "version": 3,
  "sources": ["../../../../../../node_modules/@arcgis/map-components/dist/esm/useWidget-9b153437.js"],
  "sourcesContent": ["/*!\n * All material copyright Esri, All Rights Reserved, unless otherwise specified.\n * See https://js.arcgis.com/4.30/esri/copyright.txt for details.\n * v4.30.7\n */\nimport { p as proxyExports, A as AccessorController, a as accessorSupport } from './index-c99fc80c.js';\nimport './index-d2df902e.js';\nimport { a as attachToParent } from './component-utils-de9339fe.js';\n\n// FEATURE: if inside of arcgis-expand/arcgis-placement, sync autoDestroyDisabled prop with that of Expand\n/**\n * A controller for a wrapped JS API Widget\n * - loads the widget\n * - initializes the widget with the component's properties\n * - does two-way binding between widget and component properties\n * - re-emits the widgets's events on the component\n * - type-checks everything âœ¨\n *\n * Documentation:\n * https://devtopia.esri.com/WebGIS/arcgis-web-components/blob/main/packages/map-components/src/controllers/useWidget.md\n */\nconst makeWidgetController = (loadWidget, _options) => (component, options) => proxy(component, loadWidget, options);\nclass WidgetController extends AccessorController {\n  constructor(component, _loadAccessor,\n  // Disable covariance check\n  // eslint-disable-next-line @typescript-eslint/method-signature-style\n  _options) {\n    super(component, _loadAccessor, _options);\n    this._watchedViewModelProperties = new Map();\n    this._watchedVisibleElementsProperties = {};\n    this._isBindingViewModel = {\n      value: true\n    };\n    Object.defineProperty(this.exports, \"viewModel\", {\n      value: accessorSupport.makeGetterProxy(component, this._watchedViewModelProperties, this._isBindingViewModel)\n    });\n    Object.defineProperty(this.exports, \"visibleElements\", {\n      value: this._makeVisibleElementsBinder()\n    });\n  }\n  hostConnected() {\n    super.hostConnected();\n    /*\n     * We are done binding props to properties - any accesses after this should\n     * be treated as normal property accesses\n     */\n    this._isBindingViewModel.value = false;\n    if (this.component.manager.didLoadCalled) {\n      attachToParent(this.component);\n    }\n  }\n  async hostLoad() {\n    /*\n     * \"viewModel\" property might not have a @State(), so two-way binding might\n     * not work (and probably one way is fine)\n     */\n    this._watchedProperties.delete(\"viewModel\");\n    await super.hostLoad();\n    if (this.component.manager.destroyed) {\n      return;\n    }\n    this._watchMetaProperties();\n    accessorSupport.reEmitAccessorEvents(this, this._instance, this.reactiveUtils, \"widget\");\n    // Do one way watching for viewModel property\n    this.onLifecycle(() => this.reactiveUtils.watch(() => this._instance.viewModel, newViewModel => {\n      this.component.viewModel = newViewModel;\n    }, {\n      initial: true\n    }));\n    const viewModel = this._instance.viewModel;\n    if (typeof viewModel === \"object\") {\n      accessorSupport.reEmitAccessorEvents(this, viewModel, this.reactiveUtils, \"viewModel\");\n      accessorSupport.watchComponentUpdates(this, viewModel, this._watchedViewModelProperties);\n      accessorSupport.watchAccessorUpdates(this, viewModel, this._watchedViewModelProperties);\n    } else if (this._watchedViewModelProperties.size > 0) {\n      throw new Error(`The widget does not have a viewModel to bind to. Tried to bind the following properties: ${Array.from(this._watchedViewModelProperties.keys()).join(\", \")}`);\n    }\n    const visibleElements = Object.entries(this._watchedVisibleElementsProperties);\n    if (visibleElements.length > 0) {\n      this.onLifecycle(() => visibleElements.map(([prop, propertyChain]) => {\n        let base = this._instance.visibleElements ?? {};\n        let defaultVisible = undefined;\n        for (const key of propertyChain.slice(0, -1)) {\n          if (typeof base[key] === \"object\" && base[key] !== null) {\n            base = base[key];\n          } else {\n            defaultVisible = Boolean(base[key]);\n            break;\n          }\n        }\n        if (defaultVisible === undefined) {\n          defaultVisible = Boolean(base[propertyChain.slice(-1)[0]] ?? true);\n        }\n        prop.startsWith(\"hide\") ? !defaultVisible : defaultVisible;\n        const hideShowInName = prop.startsWith(\"hide\") || prop.startsWith(\"show\");\n        const shouldFlip = hideShowInName ? prop.startsWith(\"hide\") : defaultVisible;\n        const genericComponent = this.component;\n        if (typeof genericComponent[prop] === \"boolean\") {\n          this._updateWidgetVisibleElement(propertyChain, genericComponent[prop], shouldFlip);\n        } else {\n          genericComponent[prop] = false;\n        }\n        return this.watch(prop, rawVisible => this._updateWidgetVisibleElement(propertyChain, rawVisible, shouldFlip));\n      }));\n    }\n  }\n  _updateWidgetVisibleElement(propertyChain, propValue, shouldFlip) {\n    let base = this._instance.visibleElements ?? {};\n    for (const key of propertyChain.slice(0, -1)) {\n      if (typeof base[key] !== \"object\" || base[key] === null) {\n        base[key] = {};\n      }\n      base = base[key];\n    }\n    const visible = Boolean(shouldFlip ? !propValue : propValue);\n    base[propertyChain.at(-1)] = visible;\n  }\n  hostLoaded() {\n    const {\n      el\n    } = this.component;\n    /*\n     * On hot reloading, new this.component instance is created (so properties\n     * on it are reset) but this.component.el instance is preserved (so\n     * properties on it are preserved). Since childElem is re-parented on 1st\n     * hostLoad(), for it to be accessible on the 2nd hostLoad() (hot reload),\n     * we have to store it's reference on the el, rather than component\n     */\n    el.childElem ?? (el.childElem = document.createElement(\"div\"));\n    this._instance.container = el.childElem;\n    let arcgisReadyEmitted = false;\n    // Check if view was already provided by the user\n    const currentView = this.component.el.view;\n    // Define the \"view\" property to allow component usage with MapView/SceneView\n    Object.defineProperty(this.component.el, \"view\", {\n      get: () => this._instance.view ?? this._instance.viewModel?.view,\n      set: view => {\n        if (!(\"view\" in this._instance) && typeof this._instance.viewModel === \"object\") {\n          this._instance.viewModel.view = view;\n        } else {\n          this._instance.view = view;\n        }\n        this._watchViewDestroy();\n        if (!arcgisReadyEmitted) {\n          arcgisReadyEmitted = true;\n          this.component.arcgisReady.emit();\n        }\n      },\n      configurable: true,\n      enumerable: true\n    });\n    if (currentView) {\n      this._instance.view = currentView;\n    }\n    if (this.component.el.isConnected) {\n      attachToParent(this.component);\n      this._watchViewDestroy();\n    }\n  }\n  hostDisconnected() {\n    // If view is already destroyed, view.ui might be undefined\n    if (typeof this.component.el.childElem === \"object\") {\n      this.component.el.view?.ui?.remove(this.component.el.childElem);\n    }\n  }\n  hostDestroy() {\n    super.hostDestroy();\n    this._watchViewDestroyHandle?.remove();\n  }\n  _watchMetaProperties() {\n    this.watch(\"position\", position => {\n      if (this.component.el.childElem != null && typeof position === \"string\") {\n        attachToParent(this.component);\n      }\n    });\n    this.watch(\"referenceElement\", () => attachToParent(this.component));\n  }\n  _makeVisibleElementsBinder() {\n    return new Proxy({}, {\n      has: (target, prop) => typeof prop === \"string\" || Reflect.has(target, prop),\n      get: (target, prop) => {\n        // Possibly called by the JS engine\n        if (typeof prop === \"symbol\" || prop in Promise.prototype) {\n          return Reflect.get(target, prop);\n        }\n        const propertyChain = [prop];\n        const proxy = this._makeRecursiveProxy(propertyChain);\n        return this.component.manager.trackPropKey(resolvedKey => {\n          if (resolvedKey === undefined) {\n            throw new Error(\"Unable to bind visibleElements property. Check for incorrect this.widget.visibleElements usage\");\n          }\n          this.component[resolvedKey] = false;\n          this._watchedVisibleElementsProperties[resolvedKey] = propertyChain;\n        }, proxy);\n      }\n    });\n  }\n  _makeRecursiveProxy(propertyChain) {\n    const chain = new Proxy({}, {\n      get: (target, prop) => {\n        const value = Reflect.get(target, prop);\n        // Possibly called by the JS engine\n        if (typeof prop === \"symbol\" || prop in Promise.prototype) {\n          return value;\n        }\n        propertyChain.push(prop);\n        return chain;\n      }\n    });\n    return chain;\n  }\n  /**\n   * Destroy the component if view gets destroyed. Note, that when view is\n   * destroyed, component disconnect is triggered, which will destroy the\n   * component in 1s but that can be too late, because in the meanwhile,\n   * a watcher on the widget/viewModel instance may get triggered, and throw\n   * an error if it's not able to access this.view.map or etc\n   * (happens in VersionManagementViewModel for example).\n   * We can't check for this in disconnectedCallback though as even though\n   * view.destroy() does trigger disconnect on all map-components, the\n   * view.destroyed is not yet set to true when disconnect is triggered.\n   */\n  _watchViewDestroy() {\n    this._watchViewDestroyHandle?.remove();\n    this._watchViewDestroyHandle = this.reactiveUtils.when(() => this.component.el.view?.destroyed === true, () => void this.component.destroy().catch(console.error), {\n      sync: true\n    });\n  }\n}\nconst proxy = proxyExports(WidgetController);\nexport { makeWidgetController as m };"],
  "mappings": "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",
  "names": ["proxy"]
}
