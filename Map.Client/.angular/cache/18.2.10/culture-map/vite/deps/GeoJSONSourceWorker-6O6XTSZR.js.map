{
  "version": 3,
  "sources": ["../../../../../../node_modules/@arcgis/core/layers/graphics/sources/geojson/GeoJSONSourceWorker.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport e from \"../../../../request.js\";\nimport { createTask as t } from \"../../../../core/asyncUtils.js\";\nimport s from \"../../../../core/Error.js\";\nimport i from \"../../../../core/Logger.js\";\nimport { isAbortError as r } from \"../../../../core/promiseUtils.js\";\nimport { getJsonType as n } from \"../../../../geometry/support/jsonUtils.js\";\nimport { wgs84 as a, equals as o } from \"../../../../geometry/support/spatialReferenceUtils.js\";\nimport { convertFromGeometry as l, convertToGeometry as u, convertFromFeatures as d, convertToFeature as p, convertFromFeature as c } from \"../../featureConversionUtils.js\";\nimport m from \"../../data/FeatureStore.js\";\nimport { checkProjectionSupport as y, project as h } from \"../../data/projectionSupport.js\";\nimport { QueryEngine as f } from \"../../data/QueryEngine.js\";\nimport { inferLayerProperties as g, createOptimizedFeatures as _, validateGeoJSON as F } from \"./geojson.js\";\nimport { createDrawingInfo as I, createDefaultTemplate as j, createDefaultAttributesFunction as E } from \"../support/clientSideDefaults.js\";\nimport { loadGeometryEngineForSimplify as b, mixAttributes as T, createFeatureEditSuccessResult as w, createFeatureEditErrorResult as q, simplify as x } from \"../support/sourceUtils.js\";\nimport S from \"../../../support/FieldsIndex.js\";\nimport { kebabDict as R } from \"../../../support/fieldType.js\";\nimport { getFieldDefaultValue as O, getFieldDefaultLength as k } from \"../../../support/fieldUtils.js\";\nimport { utc as C } from \"../../../../time/timeZoneUtils.js\";\nconst D = {\n  hasAttachments: !1,\n  capabilities: \"query, editing, create, delete, update\",\n  useStandardizedQueries: !0,\n  supportsCoordinatesQuantization: !0,\n  supportsReturningQueryGeometry: !0,\n  advancedQueryCapabilities: {\n    supportsQueryAttachments: !1,\n    supportsStatistics: !0,\n    supportsPercentileStatistics: !0,\n    supportsReturningGeometryCentroid: !0,\n    supportsQueryWithDistance: !0,\n    supportsDistinct: !0,\n    supportsReturningQueryExtent: !0,\n    supportsReturningGeometryProperties: !1,\n    supportsHavingClause: !0,\n    supportsOrderBy: !0,\n    supportsPagination: !0,\n    supportsQueryWithResultType: !1,\n    supportsSqlExpression: !0,\n    supportsDisjointSpatialRel: !0\n  }\n};\nclass Q {\n  constructor() {\n    this._queryEngine = null, this._snapshotFeatures = async e => {\n      const t = await this._fetch(e);\n      return this._createFeatures(t);\n    };\n  }\n  destroy() {\n    this._queryEngine?.destroy(), this._queryEngine = this._createDefaultAttributes = null;\n  }\n  async load(e, t = {}) {\n    this._loadOptions = {\n      url: e.url,\n      customParameters: e.customParameters\n    };\n    const i = [],\n      [r] = await Promise.all([e.url ? this._fetch(t?.signal) : null, this._checkProjection(e.spatialReference)]),\n      n = g(r, {\n        geometryType: e.geometryType\n      }),\n      o = e.fields || n.fields || [],\n      l = null != e.hasZ ? e.hasZ : n.hasZ,\n      u = n.geometryType;\n    let d = e.objectIdField || n.objectIdFieldName || \"__OBJECTID\";\n    const p = e.spatialReference || a;\n    let c = e.timeInfo;\n    o === n.fields && n.unknownFields.length > 0 && i.push({\n      name: \"geojson-layer:unknown-field-types\",\n      message: \"Some fields types couldn't be inferred from the features and were dropped\",\n      details: {\n        unknownFields: n.unknownFields\n      }\n    });\n    const y = new S(o);\n    let h = y.get(d);\n    h ? (\"esriFieldTypeString\" !== h.type && (h.type = \"esriFieldTypeOID\"), h.editable = !1, h.nullable = !1, d = h.name) : (h = {\n      alias: d,\n      name: d,\n      type: \"string\" === n.objectIdFieldType ? \"esriFieldTypeString\" : \"esriFieldTypeOID\",\n      editable: !1,\n      nullable: !1\n    }, o.unshift(h));\n    const _ = {};\n    for (const a of o) {\n      if (null == a.name && (a.name = a.alias), null == a.alias && (a.alias = a.name), !a.name) throw new s(\"geojson-layer:invalid-field-name\", \"field name is missing\", {\n        field: a\n      });\n      if (!R.jsonValues.includes(a.type)) throw new s(\"geojson-layer:invalid-field-type\", `invalid type for field \"${a.name}\"`, {\n        field: a\n      });\n      if (a.name !== h.name) {\n        const e = O(a);\n        void 0 !== e && (_[a.name] = e);\n      }\n      null == a.length && (a.length = k(a));\n    }\n    if (c) {\n      if (c.startTimeField) {\n        const e = y.get(c.startTimeField);\n        e ? (c.startTimeField = e.name, e.type = \"esriFieldTypeDate\") : c.startTimeField = null;\n      }\n      if (c.endTimeField) {\n        const e = y.get(c.endTimeField);\n        e ? (c.endTimeField = e.name, e.type = \"esriFieldTypeDate\") : c.endTimeField = null;\n      }\n      if (c.trackIdField) {\n        const e = y.get(c.trackIdField);\n        e ? c.trackIdField = e.name : (c.trackIdField = null, i.push({\n          name: \"geojson-layer:invalid-timeInfo-trackIdField\",\n          message: \"trackIdField is missing\",\n          details: {\n            timeInfo: c\n          }\n        }));\n      }\n      c.startTimeField || c.endTimeField || (i.push({\n        name: \"geojson-layer:invalid-timeInfo\",\n        message: \"startTimeField and endTimeField are missing\",\n        details: {\n          timeInfo: c\n        }\n      }), c = null);\n    }\n    const F = u ? I(u) : void 0,\n      b = y.dateFields.length ? {\n        timeZoneIANA: C\n      } : null,\n      T = {\n        warnings: i,\n        featureErrors: [],\n        layerDefinition: {\n          ...D,\n          drawingInfo: F ?? void 0,\n          templates: j(_),\n          extent: void 0,\n          geometryType: u,\n          objectIdField: d,\n          fields: o,\n          hasZ: !!l,\n          timeInfo: c,\n          dateFieldsTimeReference: b\n        }\n      };\n    this._queryEngine = new f({\n      fieldsIndex: S.fromLayerJSON({\n        fields: o,\n        timeInfo: c,\n        dateFieldsTimeReference: b\n      }),\n      geometryType: u,\n      hasM: !1,\n      hasZ: l,\n      objectIdField: d,\n      spatialReference: p,\n      timeInfo: c,\n      featureStore: new m({\n        geometryType: u,\n        hasM: !1,\n        hasZ: l\n      }),\n      cacheSpatialQueries: !0\n    });\n    const w = this._queryEngine.fieldsIndex.requiredFields.indexOf(h);\n    w > -1 && this._queryEngine.fieldsIndex.requiredFields.splice(w, 1), this._createDefaultAttributes = E(_, d);\n    const q = await this._createFeatures(r);\n    this._objectIdGenerator = this._createObjectIdGenerator(this._queryEngine, q);\n    const x = this._normalizeFeatures(q, T.featureErrors);\n    this._queryEngine.featureStore.addMany(x);\n    const {\n      fullExtent: Q,\n      timeExtent: v\n    } = await this._queryEngine.fetchRecomputedExtents();\n    if (T.layerDefinition.extent = Q, v) {\n      const {\n        start: e,\n        end: t\n      } = v;\n      T.layerDefinition.timeInfo.timeExtent = [e, t];\n    }\n    return T;\n  }\n  async applyEdits(e) {\n    const {\n      spatialReference: t,\n      geometryType: s\n    } = this._queryEngine;\n    return await Promise.all([b(t, s), y(e.adds, t), y(e.updates, t)]), await this._waitSnapshotComplete(), this._applyEdits(e);\n  }\n  async queryFeatures(e = {}, t = {}) {\n    return await this._waitSnapshotComplete(), this._queryEngine.executeQuery(e, t.signal);\n  }\n  async queryFeatureCount(e = {}, t = {}) {\n    return await this._waitSnapshotComplete(), this._queryEngine.executeQueryForCount(e, t.signal);\n  }\n  async queryObjectIds(e = {}, t = {}) {\n    return await this._waitSnapshotComplete(), this._queryEngine.executeQueryForIds(e, t.signal);\n  }\n  async queryExtent(e = {}, t = {}) {\n    return await this._waitSnapshotComplete(), this._queryEngine.executeQueryForExtent(e, t.signal);\n  }\n  async querySnapping(e, t = {}) {\n    return await this._waitSnapshotComplete(), this._queryEngine.executeQueryForSnapping(e, t.signal);\n  }\n  async refresh(e) {\n    this._loadOptions.customParameters = e, this._snapshotTask?.abort(), this._snapshotTask = t(this._snapshotFeatures), this._snapshotTask.promise.then(e => {\n      this._queryEngine.featureStore.clear(), this._objectIdGenerator = this._createObjectIdGenerator(this._queryEngine, e);\n      const t = this._normalizeFeatures(e);\n      t && this._queryEngine.featureStore.addMany(t);\n    }, e => {\n      this._queryEngine.featureStore.clear(), r(e) || i.getLogger(\"esri.layers.GeoJSONLayer\").error(new s(\"geojson-layer:refresh\", \"An error occurred during refresh\", {\n        error: e\n      }));\n    }), await this._waitSnapshotComplete();\n    const {\n      fullExtent: n,\n      timeExtent: a\n    } = await this._queryEngine.fetchRecomputedExtents();\n    return {\n      extent: n,\n      timeExtent: a\n    };\n  }\n  async _createFeatures(e) {\n    if (null == e) return [];\n    const {\n        geometryType: t,\n        hasZ: s,\n        objectIdField: i\n      } = this._queryEngine,\n      r = _(e, {\n        geometryType: t,\n        hasZ: s,\n        objectIdField: i\n      });\n    if (!o(this._queryEngine.spatialReference, a)) for (const n of r) null != n.geometry && (n.geometry = l(h(u(n.geometry, this._queryEngine.geometryType, this._queryEngine.hasZ, !1), a, this._queryEngine.spatialReference)));\n    return r;\n  }\n  async _waitSnapshotComplete() {\n    if (this._snapshotTask && !this._snapshotTask.finished) {\n      try {\n        await this._snapshotTask.promise;\n      } catch {}\n      return this._waitSnapshotComplete();\n    }\n  }\n  async _fetch(t) {\n    const {\n        url: s,\n        customParameters: i\n      } = this._loadOptions,\n      r = (await e(s ?? \"\", {\n        responseType: \"json\",\n        query: {\n          ...i\n        },\n        signal: t\n      })).data;\n    return F(r), r;\n  }\n  _normalizeFeatures(e, t) {\n    const {\n        objectIdField: s,\n        fieldsIndex: i\n      } = this._queryEngine,\n      r = [];\n    for (const n of e) {\n      const e = this._createDefaultAttributes(),\n        a = T(i, e, n.attributes, !0);\n      a ? t?.push(a) : (this._assignObjectId(e, n.attributes, !0), n.attributes = e, n.objectId = e[s], r.push(n));\n    }\n    return r;\n  }\n  async _applyEdits(e) {\n    const {\n        adds: t,\n        updates: s,\n        deletes: i\n      } = e,\n      r = {\n        addResults: [],\n        deleteResults: [],\n        updateResults: [],\n        uidToObjectId: {}\n      };\n    if (t?.length && this._applyAddEdits(r, t), s?.length && this._applyUpdateEdits(r, s), i?.length) {\n      for (const e of i) r.deleteResults.push(w(e));\n      this._queryEngine.featureStore.removeManyById(i);\n    }\n    const {\n      fullExtent: n,\n      timeExtent: a\n    } = await this._queryEngine.fetchRecomputedExtents();\n    return {\n      extent: n,\n      timeExtent: a,\n      featureEditResults: r\n    };\n  }\n  _applyAddEdits(e, t) {\n    const {\n        addResults: s\n      } = e,\n      {\n        geometryType: i,\n        hasM: r,\n        hasZ: a,\n        objectIdField: o,\n        spatialReference: l,\n        featureStore: u,\n        fieldsIndex: p\n      } = this._queryEngine,\n      c = [];\n    for (const d of t) {\n      if (d.geometry && i !== n(d.geometry)) {\n        s.push(q(\"Incorrect geometry type.\"));\n        continue;\n      }\n      const t = this._createDefaultAttributes(),\n        r = T(p, t, d.attributes);\n      if (r) s.push(r);else {\n        if (this._assignObjectId(t, d.attributes), d.attributes = t, null != d.uid) {\n          const t = d.attributes[o];\n          e.uidToObjectId[d.uid] = t;\n        }\n        if (null != d.geometry) {\n          const e = d.geometry.spatialReference ?? l;\n          d.geometry = h(x(d.geometry, e), e, l);\n        }\n        c.push(d), s.push(w(d.attributes[o]));\n      }\n    }\n    u.addMany(d([], c, i, a, r, o));\n  }\n  _applyUpdateEdits({\n    updateResults: e\n  }, t) {\n    const {\n      geometryType: s,\n      hasM: i,\n      hasZ: r,\n      objectIdField: a,\n      spatialReference: o,\n      featureStore: l,\n      fieldsIndex: u\n    } = this._queryEngine;\n    for (const d of t) {\n      const {\n          attributes: t,\n          geometry: m\n        } = d,\n        y = t?.[a];\n      if (null == y) {\n        e.push(q(`Identifier field ${a} missing`));\n        continue;\n      }\n      if (!l.has(y)) {\n        e.push(q(`Feature with object id ${y} missing`));\n        continue;\n      }\n      const f = p(l.getFeature(y), s, r, i);\n      if (null != m) {\n        if (s !== n(m)) {\n          e.push(q(\"Incorrect geometry type.\"));\n          continue;\n        }\n        const t = m.spatialReference ?? o;\n        f.geometry = h(x(m, t), t, o);\n      }\n      if (t) {\n        const s = T(u, f.attributes, t);\n        if (s) {\n          e.push(s);\n          continue;\n        }\n      }\n      l.add(c(f, s, r, i, a)), e.push(w(y));\n    }\n  }\n  _createObjectIdGenerator(e, t) {\n    const s = e.fieldsIndex.get(e.objectIdField);\n    if (\"esriFieldTypeString\" === s.type) return () => s.name + \"-\" + Date.now().toString(16);\n    let i = Number.NEGATIVE_INFINITY;\n    for (const r of t) r.objectId && (i = Math.max(i, r.objectId));\n    return i = Math.max(0, i) + 1, () => i++;\n  }\n  _assignObjectId(e, t, s = !1) {\n    const i = this._queryEngine.objectIdField;\n    e[i] = s && i in t ? t[i] : this._objectIdGenerator();\n  }\n  async _checkProjection(e) {\n    try {\n      await y(a, e);\n    } catch {\n      throw new s(\"geojson-layer\", \"Projection not supported\");\n    }\n  }\n}\nexport { Q as default };"],
  "mappings": "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",
  "names": ["i", "n", "o", "d", "p", "c", "y", "e", "b", "x", "Q", "t", "s", "j", "r", "m", "f"]
}
