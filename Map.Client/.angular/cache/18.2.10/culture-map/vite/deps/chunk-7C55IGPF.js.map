{
  "version": 3,
  "sources": ["../../../../../../node_modules/@arcgis/core/layers/graphics/sources/support/uploadProgressWeights.js", "../../../../../../node_modules/@arcgis/core/support/progressUtils.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nconst e = {\n  upload: {\n    createFromFiles: .8,\n    loadMesh: .2\n  },\n  uploadAssetBlobs: {\n    prepareAssetItems: .9,\n    uploadAssetItems: .1\n  },\n  uploadConvertibleSource: {\n    uploadEditSource: .5,\n    serviceAssetsToGlb: .5\n  },\n  uploadLocalMesh: {\n    meshToAssetBlob: .5,\n    uploadAssetBlobs: .5\n  }\n};\nexport { e as uploadProgressWeights };", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { makeHandle as s } from \"../core/handleUtils.js\";\nimport has from \"../core/has.js\";\nimport { getOrCreateMapValue as t } from \"../core/MapUtils.js\";\nimport { millisecondsFromSeconds as e, Seconds as r, Milliseconds as o } from \"../core/time.js\";\nfunction i(s, t = s => {}, e) {\n  return new n(s, t, e);\n}\nclass n {\n  constructor(s, t = s => {}, e) {\n    if (this.onProgress = t, this.taskName = e, this._progressMap = new Map(), this._startTime = void 0, this._timingsMap = new Map(), \"number\" == typeof s) {\n      this._weights = {};\n      for (let t = 0; t < s; t++) {\n        const e = t,\n          r = 1 / s;\n        this._weights[e] = r, this._progressMap.set(e, 0);\n      }\n    } else this._weights = s;\n    this.emitProgress();\n  }\n  emitProgress() {\n    let s = 0;\n    for (const [t, e] of this._progressMap.entries()) {\n      s += e * this._weights[t];\n    }\n    if (1 === s && has(\"enable-feature:esri-3dofl-upload-timings\")) {\n      const s = Math.round(performance.now() - (this._startTime ?? 0)) / 1e3;\n      console.log(`${this.taskName} done in ${s} sec`);\n      for (const [t, e] of this._timingsMap) {\n        const r = Math.round(e.end - e.start) / 1e3,\n          o = Math.round(r / s * 100);\n        console.log(this.taskName ?? \"Task\", {\n          stepKey: t,\n          stepTime: r,\n          relativeTime: o\n        });\n      }\n    }\n    this.onProgress(s);\n  }\n  setProgress(s, e) {\n    if (this._progressMap.set(s, e), has(\"enable-feature:esri-3dofl-upload-timings\")) {\n      const r = performance.now();\n      this._startTime ??= r;\n      const o = t(this._timingsMap, s, () => ({\n        start: r,\n        end: 0\n      }));\n      1 === e && (o.end = r);\n    }\n    this.emitProgress();\n  }\n  simulate(s, t) {\n    return a(t => this.setProgress(s, t), t);\n  }\n  makeOnProgress(s) {\n    return t => this.setProgress(s, t);\n  }\n}\nfunction a(t = s => {}, e = l) {\n  const r = performance.now();\n  t(0);\n  const o = setInterval(() => {\n    const s = performance.now() - r,\n      o = 1 - Math.exp(-s / e);\n    t(o);\n  }, g);\n  return s(() => {\n    clearInterval(o), t(1);\n  });\n}\nfunction h(s, t = c) {\n  return e(r(s * f / t));\n}\nfunction m(s, t = p) {\n  return e(r(s * f / t));\n}\nconst c = 10,\n  p = 10,\n  f = 8e-6,\n  g = o(50),\n  l = o(1e3);\nexport { n as ProgressManager, m as estimatedConversionTime, h as estimatedTransferTime, i as makeProgressManager, a as simulateProgress };"],
  "mappings": "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",
  "names": ["e", "t", "s", "e", "n", "r", "o"]
}
