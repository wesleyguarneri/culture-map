{
  "version": 3,
  "sources": ["../../../../../../node_modules/@arcgis/core/views/3d/interactive/visualElements/ExtendedLineVisualElement.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport \"../../../../core/has.js\";\nimport { c as e, f as t, e as r, k as i } from \"../../../../chunks/vec32.js\";\nimport { create as s, fromValues as n } from \"../../../../core/libs/gl-matrix-2/factories/vec3f64.js\";\nimport { a, c as o } from \"../../../../chunks/vec42.js\";\nimport { fromValues as l, clone as h } from \"../../../../core/libs/gl-matrix-2/factories/vec4f32.js\";\nimport { create as d, fromRay as _, getStart as c, getEnd as p } from \"../../../../geometry/support/clipRay.js\";\nimport { intersectClipRay as u } from \"../../../../geometry/support/frustum.js\";\nimport { create as f, fromPoints as m, pointAt as y } from \"../../../../geometry/support/lineSegment.js\";\nimport { create as g, fromPoints as b } from \"../../../../geometry/support/ray.js\";\nimport { EngineVisualElement as D } from \"./EngineVisualElement.js\";\nimport { LaserlineVisualElement as O } from \"./LaserlineVisualElement.js\";\nimport { drapedZ as w } from \"../../terrain/OverlayRenderer.js\";\nimport { createPolylineGeometry as E } from \"../../webgl-engine/lib/GeometryUtil.js\";\nimport { RenderOccludedFlag as A } from \"../../webgl-engine/lib/Material.js\";\nimport { RenderGeometry as j } from \"../../webgl-engine/lib/RenderGeometry.js\";\nimport { VertexAttribute as R } from \"../../webgl-engine/lib/VertexAttribute.js\";\nimport { RibbonLineMaterial as C } from \"../../webgl-engine/materials/RibbonLineMaterial.js\";\nclass G extends D {\n  constructor(e) {\n    super(e), this._ray = g(), this._isWorldDown = !1, this._start = s(), this._end = n(1, 0, 0), this._width = 1, this._color = l(1, 0, 1, 1), this._polygonOffset = !1, this._writeDepthEnabled = !0, this._innerWidth = 0, this._innerColor = l(1, 1, 1, 1), this._stipplePattern = null, this._stippleOffColor = null, this._stipplePreferContinuous = !0, this._falloff = 0, this._extensionType = M.LINE, this._laserlineStyle = null, this._laserlineEnabled = !1, this._renderOccluded = A.OccludeAndTransparent, this._fadedExtensions = L, this._laserline = new O({\n      view: this.view,\n      isDecoration: e.isDecoration\n    }), this.applyProperties(e);\n  }\n  destroy() {\n    this._laserline.destroy(), super.destroy();\n  }\n  createObject3DResourceFactory(e) {\n    return {\n      view: e,\n      createResources: e => this._createObject3DResources(e),\n      destroyResources: P,\n      recreateGeometry: (e, t) => this._recreateObject3DGeometry(e, t),\n      cameraChanged: () => this._updateGeometry()\n    };\n  }\n  createDrapedResourceFactory(e) {\n    return {\n      view: e,\n      createResources: () => this._createDrapedResources(),\n      destroyResources: P,\n      recreateGeometry: e => this._recreateDrapedGeometry(e)\n    };\n  }\n  updateVisibility(e) {\n    super.updateVisibility(e), this._laserline.visible = e;\n  }\n  onAttachedChange() {\n    this._laserline.attached = this._laserlineAttached;\n  }\n  setStartEndFromWorldDownAtLocation(r) {\n    this._isWorldDown = !0, e(this._start, r), this.view.renderCoordsHelper.worldUpAtPosition(r, this._end), t(this._end, r, this._end), b(this._start, this._end, this._ray), this._updateGeometry();\n  }\n  get start() {\n    return this._start;\n  }\n  set start(t) {\n    this._isWorldDown = !1, r(this._start, t) || (e(this._start, t), b(this._start, this._end, this._ray), this._updateGeometry());\n  }\n  get end() {\n    return this._end;\n  }\n  set end(t) {\n    this._isWorldDown = !1, r(this._end, t) || (e(this._end, t), b(this._start, this._end, this._ray), this._updateGeometry());\n  }\n  get width() {\n    return this._width;\n  }\n  set width(e) {\n    e !== this._width && (this._width = e, this._updateMaterial());\n  }\n  get color() {\n    return this._color;\n  }\n  set color(e) {\n    a(e, this._color) || (o(this._color, e), this._updateMaterial());\n  }\n  get polygonOffset() {\n    return this._polygonOffset;\n  }\n  set polygonOffset(e) {\n    e !== this._polygonOffset && (this._polygonOffset = e, this._updateMaterial());\n  }\n  get writeDepthEnabled() {\n    return this._writeDepthEnabled;\n  }\n  set writeDepthEnabled(e) {\n    this._writeDepthEnabled !== e && (this._writeDepthEnabled = e, this._updateMaterial());\n  }\n  get innerWidth() {\n    return this._innerWidth;\n  }\n  set innerWidth(e) {\n    e !== this._innerWidth && (this._innerWidth = e, this._updateMaterial());\n  }\n  get innerColor() {\n    return this._innerColor;\n  }\n  set innerColor(e) {\n    a(e, this._innerColor) || (o(this._innerColor, e), this._updateMaterial());\n  }\n  get stipplePattern() {\n    return this._stipplePattern;\n  }\n  set stipplePattern(e) {\n    const t = null != e != (null != this._stipplePattern);\n    this._stipplePattern = e, t ? this.recreate() : this._updateMaterial();\n  }\n  get stippleOffColor() {\n    return this._stippleOffColor;\n  }\n  set stippleOffColor(e) {\n    null != e && null != this._stippleOffColor && a(e, this._stippleOffColor) || (this._stippleOffColor = null != e ? h(e) : null, this._updateMaterial());\n  }\n  get stipplePreferContinuous() {\n    return this._stipplePreferContinuous;\n  }\n  set stipplePreferContinuous(e) {\n    e !== this._stipplePreferContinuous && (this._stipplePreferContinuous = e, this._updateMaterial());\n  }\n  get falloff() {\n    return this._falloff;\n  }\n  set falloff(e) {\n    e !== this._falloff && (this._falloff = e, this._updateMaterial());\n  }\n  get extensionType() {\n    return this._extensionType;\n  }\n  set extensionType(e) {\n    e !== this._extensionType && (this._extensionType = e, this.recreateGeometry());\n  }\n  get _laserlineAttached() {\n    return this._laserlineEnabled && null != this._laserlineStyle && this.attached && !this.isDraped;\n  }\n  get laserlineStyle() {\n    return this._laserlineStyle;\n  }\n  set laserlineStyle(e) {\n    this._laserlineStyle = e, this._laserline.attached = this._laserlineAttached, null != e && (this._laserline.style = e);\n  }\n  get laserlineEnabled() {\n    return this._laserlineEnabled;\n  }\n  set laserlineEnabled(e) {\n    this._laserlineEnabled !== e && (this._laserlineEnabled = e, this._laserline.attached = this._laserlineAttached);\n  }\n  get renderOccluded() {\n    return this._renderOccluded;\n  }\n  set renderOccluded(e) {\n    e !== this._renderOccluded && (this._renderOccluded = e, this._updateMaterial());\n  }\n  get _normalizedRenderOccluded() {\n    return this.isDraped && this._renderOccluded === A.OccludeAndTransparentStencil ? A.OccludeAndTransparent : this._renderOccluded;\n  }\n  get fadedExtensions() {\n    return this._fadedExtensions;\n  }\n  set fadedExtensions(e) {\n    this._fadedExtensions = e ?? L, this.recreateGeometry();\n  }\n  _updateMaterial() {\n    const {\n      materialParameters: e\n    } = this;\n    this.object3dResources.resources?.material.setParameters(e), this.drapedResources.resources?.material.setParameters(e);\n  }\n  get materialParameters() {\n    return {\n      width: this._width,\n      color: this._color,\n      stippleOffColor: this._stippleOffColor,\n      stipplePattern: this._stipplePattern,\n      stipplePreferContinuous: this._stipplePreferContinuous,\n      innerWidth: this._innerWidth,\n      innerColor: this._innerColor,\n      falloff: this._falloff,\n      hasPolygonOffset: this._polygonOffset,\n      renderOccluded: this._normalizedRenderOccluded,\n      isDecoration: this.isDecoration,\n      writeDepth: this._writeDepthEnabled\n    };\n  }\n  _createObject3DResources(e) {\n    const t = new C(this.materialParameters),\n      r = new Array();\n    return this._createObject3DGeometry(t, e, r), {\n      material: t,\n      geometries: r,\n      forEach: e => {\n        e(t), r.forEach(e);\n      }\n    };\n  }\n  _recreateObject3DGeometry(e, t) {\n    e.geometries.length = 0, this._createObject3DGeometry(e.material, t, e.geometries);\n  }\n  _createObject3DGeometry(e, t, r) {\n    const i = this._createGeometry(e);\n    r.push(i), t.addGeometry(i), this._updateVerticesObject3D(t);\n  }\n  _createDrapedResources() {\n    const e = new C(this.materialParameters);\n    return {\n      material: e,\n      geometries: [this._createDrapedGeometry(e)]\n    };\n  }\n  _recreateDrapedGeometry(e) {\n    e.geometries = [this._createDrapedGeometry(e.material)];\n  }\n  _createDrapedGeometry(e) {\n    const t = this._createGeometry(e);\n    return this._updateVerticesDraped(t), new j(t);\n  }\n  _createGeometry(e) {\n    const t = this.extensionType === M.FADED,\n      r = t ? [s(), s(), s(), s()] : [s(), s()];\n    return E(e, r, null, t ? [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0] : null);\n  }\n  _updateGeometry() {\n    if (this.isDraped) this.drapedResources.recreateGeometry();else {\n      const e = this.object3dResources.object;\n      e && this._updateVerticesObject3D(e);\n    }\n  }\n  _updateVerticesObject3D(e) {\n    const t = this._lineSegment;\n    this._updateVertexAttributesObject3D(e, t), this._laserline.intersectsLine = t;\n  }\n  _updateVerticesDraped(e) {\n    this._updateVertexAttributesDraped(e, this._lineSegment);\n  }\n  get _lineSegment() {\n    return this._extensionType === M.FADED ? this._updateLineSegmentFinite(V) : this._updateLineSegmentInfinite(this._extensionType, V);\n  }\n  _updateLineSegmentFinite(e) {\n    return m(this._start, this._end, e);\n  }\n  _updateLineSegmentInfinite(e, t) {\n    const r = this.view.state.camera;\n    switch (_(this._ray, x), e) {\n      case M.LINE:\n        x.c0 = -Number.MAX_VALUE;\n        break;\n      case M.RAY:\n      case M.GROUND_RAY:\n        {\n          const e = this._ray.origin,\n            t = this.view.elevationProvider.getElevation(e[0], e[1], e[2], this.view.renderCoordsHelper.spatialReference, \"ground\") ?? 0,\n            r = this.view.renderCoordsHelper.getAltitude(e);\n          this._isWorldDown && r < t && i(x.ray.direction, x.ray.direction), this._extensionType === M.GROUND_RAY && null != t && (x.c1 = Math.abs(r - t));\n          break;\n        }\n    }\n    if (!u(r.frustum, x)) return this._updateLineSegmentFinite(t);\n    const s = c(x, v),\n      n = p(x, S);\n    return m(s, n, t);\n  }\n  _updateVertexAttributesObject3D(e, t) {\n    const r = e.geometries[0].getMutableAttribute(R.POSITION)?.data;\n    if (!r) return;\n    let i = 0;\n    for (const s of this._lineVertices(t)) r[i++] = s[0], r[i++] = s[1], r[i++] = s[2];\n    e.geometryVertexAttributeUpdated(e.geometries[0], R.POSITION);\n  }\n  _updateVertexAttributesDraped(e, t) {\n    const r = e.getMutableAttribute(R.POSITION)?.data;\n    if (!r) return;\n    let i = 0;\n    for (const s of this._lineVertices(t)) r[i++] = s[0], r[i++] = s[1], r[i++] = w;\n    e.invalidateBoundingInfo();\n  }\n  *_lineVertices(e) {\n    this.extensionType === M.FADED ? (yield y(e, -this.fadedExtensions.start, v), yield y(e, 0, v), yield y(e, 1, v), yield y(e, 1 + this.fadedExtensions.end, v)) : (yield y(e, 0, v), yield y(e, 1, v));\n  }\n}\nfunction P(e) {\n  e.geometries = [];\n}\nconst x = d(),\n  v = s(),\n  S = s(),\n  V = f();\nvar M;\n!function (e) {\n  e[e.LINE = 0] = \"LINE\", e[e.RAY = 1] = \"RAY\", e[e.GROUND_RAY = 2] = \"GROUND_RAY\", e[e.FADED = 3] = \"FADED\";\n}(M || (M = {}));\nconst T = 1 / 3,\n  L = {\n    start: T,\n    end: T\n  };\nexport { G as ExtendedLineVisualElement, M as ExtensionType };"],
  "mappings": "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",
  "names": ["G", "t", "e", "r", "h", "m", "j", "v", "n", "a"]
}
