{
  "version": 3,
  "sources": ["../../../../../../node_modules/@arcgis/core/views/3d/terrain/OverlayContent.js", "../../../../../../node_modules/@arcgis/core/views/3d/webgl-engine/core/renderPasses/AllRenderPasses.js", "../../../../../../node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/terrain/Overlay.glsl.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nvar o;\n!function (o) {\n  o[o.Color = 0] = \"Color\", o[o.ColorNoRasterImage = 1] = \"ColorNoRasterImage\", o[o.Highlight = 2] = \"Highlight\", o[o.WaterNormal = 3] = \"WaterNormal\", o[o.Occluded = 4] = \"Occluded\", o[o.ObjectAndLayerIdColor = 5] = \"ObjectAndLayerIdColor\";\n}(o || (o = {}));\nexport { o as OverlayContent };", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { create as s } from \"../../../../../core/libs/gl-matrix-2/factories/vec3f64.js\";\nimport { ShaderOutput as t } from \"../shaderLibrary/ShaderOutput.js\";\nimport { VertexNormalPassParameters as i, VertexNormalDrawParameters as r } from \"../shaderLibrary/attributes/VertexNormal.glsl.js\";\nclass e extends i {\n  constructor() {\n    super(...arguments), this.slicePlaneLocalOrigin = s(), this.origin = this.slicePlaneLocalOrigin, this.modelTransformation = null;\n  }\n}\nclass a extends r {}\nvar o;\n!function (s) {\n  s[s.Material = 0] = \"Material\", s[s.ShadowMap = 1] = \"ShadowMap\", s[s.Highlight = 2] = \"Highlight\", s[s.ViewshedShadowMap = 3] = \"ViewshedShadowMap\";\n}(o || (o = {}));\nclass h extends e {\n  constructor() {\n    super(...arguments), this.identifier = o.Material, this.output = t.Color, this.transparent = !1;\n  }\n}\nclass l extends e {\n  constructor() {\n    super(...arguments), this.identifier = o.ShadowMap;\n  }\n}\nclass n extends e {\n  constructor() {\n    super(...arguments), this.identifier = o.Highlight;\n  }\n}\nclass c extends e {\n  constructor() {\n    super(...arguments), this.identifier = o.ViewshedShadowMap;\n  }\n}\nexport { a as DrawParameters, n as HighlightPassParameters, h as MaterialPassParameters, e as PassParameters, o as RenderPassIdentifier, l as ShadowMapPassParameters, c as ViewshedShadowMapPassParameters };", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { create as e } from \"../../../../../../core/libs/gl-matrix-2/factories/vec4f64.js\";\nimport { hasArea as o, width as r, height as t } from \"../../../../../../geometry/support/aaBoundingRect.js\";\nimport { OverlayIndex as a } from \"../../../../terrain/interfaces.js\";\nimport { OverlayContent as i } from \"../../../../terrain/OverlayContent.js\";\nimport { RenderPassIdentifier as l } from \"../../renderPasses/AllRenderPasses.js\";\nimport { ShaderOutput as s } from \"../ShaderOutput.js\";\nimport { addMainLightDirection as n, addMainLightIntensity as d } from \"../shading/MainLighting.glsl.js\";\nimport { PBRMode as c } from \"../shading/PhysicallyBasedRenderingParameters.glsl.js\";\nimport { Water as v } from \"../shading/Water.glsl.js\";\nimport { Float4DrawUniform as x } from \"../../shaderModules/Float4DrawUniform.js\";\nimport { FloatPassUniform as p } from \"../../shaderModules/FloatPassUniform.js\";\nimport { glsl as y } from \"../../shaderModules/interfaces.js\";\nimport { Texture2DPassUniform as u } from \"../../shaderModules/Texture2DPassUniform.js\";\nimport { Uniform as m } from \"../../shaderModules/Uniform.js\";\nvar f;\nfunction C(e, o) {\n  const {\n    vertex: r,\n    fragment: t\n  } = e;\n  r.uniforms.add(new x(\"overlayTexOffset\", (e, o) => b(e, o)), new x(\"overlayTexScale\", (e, o) => M(e, o))), t.constants.add(\"overlayOpacity\", \"float\", 1), t.uniforms.add(new u(\"ovColorTex\", (e, o) => O(e, o))), T(e, o);\n}\nfunction g(e, o) {\n  const {\n    vertex: r,\n    fragment: t\n  } = e;\n  r.uniforms.add(new h(\"overlayTexOffset\"), new h(\"overlayTexScale\")), t.uniforms.add(new p(\"overlayOpacity\", e => e.overlayOpacity), new u(\"ovColorTex\", (e, o) => o.overlay?.getTexture(e.overlayContent))), T(e, o);\n}\n!function (e) {\n  e[e.Disabled = 0] = \"Disabled\", e[e.Enabled = 1] = \"Enabled\", e[e.EnabledWithWater = 2] = \"EnabledWithWater\", e[e.COUNT = 3] = \"COUNT\";\n}(f || (f = {}));\nclass h extends m {\n  constructor(e) {\n    super(e, \"vec4\");\n  }\n}\nfunction T(e, o) {\n  o.pbrMode !== c.Water && o.pbrMode !== c.WaterOnIntegratedMesh && o.pbrMode !== c.TerrainWithWater || e.include(v, o);\n  const {\n    vertex: r,\n    fragment: t\n  } = e;\n  e.varyings.add(\"vtcOverlay\", \"vec4\"), r.code.add(y`void setOverlayVTC(in vec2 uv) {\nvtcOverlay = vec4(uv, uv) * overlayTexScale + overlayTexOffset;\n}`), t.code.add(y`bool isValid(vec2 uv, vec2 dxdy) {\nreturn (uv.x >= 0.0 + dxdy.x) && (uv.x <= 1.0 - dxdy.x) && (uv.y >= 0.0 + dxdy.y) && (uv.y <= 1.0 - dxdy.y);\n}\nvec4 getOverlayColor(sampler2D ov0Tex, vec4 texCoords) {\nvec4 color0 = texture(ov0Tex, vec2(texCoords.x * 0.5, texCoords.y));\nvec4 color1 = texture(ov0Tex, vec2(texCoords.z * 0.5 + 0.5, texCoords.w));\nbool isValid0 = isValid(texCoords.xy, fwidth(texCoords.xy));\nbool isValid1 = isValid(texCoords.zw, vec2(0.0, 0.0));\nreturn mix(color1 * float(isValid1), color0, float(isValid0));\n}`), t.code.add(y`vec4 getCombinedOverlayColor() {\nreturn overlayOpacity * getOverlayColor(ovColorTex, vtcOverlay);\n}`), t.code.add(y`vec4 getOverlayColorTexel(vec4 texCoords) {\nvec2 texDim =  vec2(textureSize(ovColorTex, 0));\nvec4 color0 = texelFetch(ovColorTex, ivec2(vec2(texCoords.x * 0.5, texCoords.y) * texDim), 0);\nvec4 color1 = texelFetch(ovColorTex, ivec2(vec2(texCoords.z * 0.5 + 0.5, texCoords.w) * texDim), 0);\nbool isValid0 = isValid(texCoords.xy, fwidth(texCoords.xy));\nbool isValid1 = isValid(texCoords.zw, vec2(0.0, 0.0));\nreturn mix(color1 * float(isValid1), color0, float(isValid0));\n}`), o.pbrMode !== c.Water && o.pbrMode !== c.WaterOnIntegratedMesh && o.pbrMode !== c.TerrainWithWater || (n(t), d(t), t.code.add(y`vec4 getOverlayWaterColor(vec4 maskInput, vec4 colorInput, vec3 vposEyeDir,\nfloat shadow, vec3 localUp, mat3 tbn, vec3 position, vec3 positionWorld) {\nvec3 n = normalize(tbn *  (2.0 * maskInput.rgb - vec3(1.0)));\nvec3 v = vposEyeDir;\nvec3 final = getSeaColor(n, v, mainLightDirection, colorInput.rgb, mainLightIntensity, localUp, 1.0 - shadow, maskInput.w, position, positionWorld);\nreturn vec4(final, colorInput.w);\n}`));\n}\nfunction O(e, o) {\n  return e.identifier === l.Material && e.output === s.Color ? o.overlay?.getTexture(i.ColorNoRasterImage) : e.identifier === l.Material && e.output === s.ObjectAndLayerIdColor ? o.overlay?.getTexture(i.ObjectAndLayerIdColor) : e.identifier === l.Highlight ? o.overlay?.getTexture(i.Highlight) : null;\n}\nfunction b(e, i) {\n  const l = i.overlay?.overlays[a.INNER]?.extent;\n  o(l) && (w[0] = e.toMapSpace[0] / r(l) - l[0] / r(l), w[1] = e.toMapSpace[1] / t(l) - l[1] / t(l));\n  const s = i.overlay?.overlays[a.OUTER]?.extent;\n  return o(s) && (w[2] = e.toMapSpace[0] / r(s) - s[0] / r(s), w[3] = e.toMapSpace[1] / t(s) - s[1] / t(s)), w;\n}\nfunction M(e, i) {\n  const l = i.overlay?.overlays[a.INNER]?.extent;\n  o(l) && (w[0] = e.toMapSpace[2] / r(l), w[1] = e.toMapSpace[3] / t(l));\n  const s = i.overlay?.overlays[a.OUTER]?.extent;\n  return o(s) && (w[2] = e.toMapSpace[2] / r(s), w[3] = e.toMapSpace[3] / t(s)), w;\n}\nconst w = e();\nexport { C as OverlayIM, f as OverlayMode, g as OverlayTerrain, O as getIMColorTexture };"],
  "mappings": "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",
  "names": ["o", "o", "s", "n", "c", "f", "e", "o", "t", "M", "s", "h", "a", "l", "n"]
}
