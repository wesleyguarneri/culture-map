{
  "version": 3,
  "sources": ["../../../../../../node_modules/@arcgis/core/views/3d/layers/support/symbolColorUtils.js", "../../../../../../node_modules/@arcgis/core/views/3d/webgl-engine/collections/Component/Material/shader/DecodeSymbolColor.glsl.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { clamp as t } from \"../../../../core/mathUtils.js\";\nvar n;\nfunction e(t) {\n  switch (t) {\n    case \"multiply\":\n    default:\n      return n.Multiply;\n    case \"ignore\":\n      return n.Ignore;\n    case \"replace\":\n      return n.Replace;\n    case \"tint\":\n      return n.Tint;\n  }\n}\nfunction r(e, r, a) {\n  if (null == e || r === n.Ignore) return a[0] = 255, a[1] = 255, a[2] = 255, void (a[3] = 255);\n  const c = t(Math.round(e[3] * i), 0, i),\n    p = 0 === c || r === n.Tint ? 0 : r === n.Replace ? u : l;\n  a[0] = t(Math.round(e[0] * o), 0, o), a[1] = t(Math.round(e[1] * o), 0, o), a[2] = t(Math.round(e[2] * o), 0, o), a[3] = c + p;\n}\n!function (t) {\n  t[t.Multiply = 1] = \"Multiply\", t[t.Ignore = 2] = \"Ignore\", t[t.Replace = 3] = \"Replace\", t[t.Tint = 4] = \"Tint\";\n}(n || (n = {}));\nconst o = 255,\n  i = 85,\n  u = i,\n  l = 2 * i;\nexport { n as ColorMixModeEnum, r as encodeSymbolColor, e as parseColorMixMode };", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { ColorMixModeEnum as o } from \"../../../../../layers/support/symbolColorUtils.js\";\nimport { glsl as l } from \"../../../../core/shaderModules/interfaces.js\";\nfunction e(e) {\n  e.vertex.code.add(l`\n    vec4 decodeSymbolColor(vec4 symbolColor, out int colorMixMode) {\n      float symbolAlpha = 0.0;\n\n      const float maxTint = 85.0;\n      const float maxReplace = 170.0;\n      const float scaleAlpha = 3.0;\n\n      if (symbolColor.a > maxReplace) {\n        colorMixMode = ${l.int(o.Multiply)};\n        symbolAlpha = scaleAlpha * (symbolColor.a - maxReplace);\n      } else if (symbolColor.a > maxTint) {\n        colorMixMode = ${l.int(o.Replace)};\n        symbolAlpha = scaleAlpha * (symbolColor.a - maxTint);\n      } else if (symbolColor.a > 0.0) {\n        colorMixMode = ${l.int(o.Tint)};\n        symbolAlpha = scaleAlpha * symbolColor.a;\n      } else {\n        colorMixMode = ${l.int(o.Multiply)};\n        symbolAlpha = 0.0;\n      }\n\n      return vec4(symbolColor.r, symbolColor.g, symbolColor.b, symbolAlpha);\n    }\n  `);\n}\nexport { e as DecodeSymbolColor };"],
  "mappings": ";;;;;;;;AAKA,IAAI;AACJ,SAASA,GAAE,GAAG;AACZ,UAAQ,GAAG;AAAA,IACT,KAAK;AAAA,IACL;AACE,aAAO,EAAE;AAAA,IACX,KAAK;AACH,aAAO,EAAE;AAAA,IACX,KAAK;AACH,aAAO,EAAE;AAAA,IACX,KAAK;AACH,aAAO,EAAE;AAAA,EACb;AACF;AACA,SAAS,EAAEA,IAAGC,IAAG,GAAG;AAClB,MAAI,QAAQD,MAAKC,OAAM,EAAE,OAAQ,QAAO,EAAE,CAAC,IAAI,KAAK,EAAE,CAAC,IAAI,KAAK,EAAE,CAAC,IAAI,KAAK,MAAM,EAAE,CAAC,IAAI;AACzF,QAAM,IAAI,EAAE,KAAK,MAAMD,GAAE,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,GACpC,IAAI,MAAM,KAAKC,OAAM,EAAE,OAAO,IAAIA,OAAM,EAAE,UAAU,IAAI;AAC1D,IAAE,CAAC,IAAI,EAAE,KAAK,MAAMD,GAAE,CAAC,IAAIE,EAAC,GAAG,GAAGA,EAAC,GAAG,EAAE,CAAC,IAAI,EAAE,KAAK,MAAMF,GAAE,CAAC,IAAIE,EAAC,GAAG,GAAGA,EAAC,GAAG,EAAE,CAAC,IAAI,EAAE,KAAK,MAAMF,GAAE,CAAC,IAAIE,EAAC,GAAG,GAAGA,EAAC,GAAG,EAAE,CAAC,IAAI,IAAI;AAC/H;AACA,CAAC,SAAU,GAAG;AACZ,IAAE,EAAE,WAAW,CAAC,IAAI,YAAY,EAAE,EAAE,SAAS,CAAC,IAAI,UAAU,EAAE,EAAE,UAAU,CAAC,IAAI,WAAW,EAAE,EAAE,OAAO,CAAC,IAAI;AAC5G,EAAE,MAAM,IAAI,CAAC,EAAE;AACf,IAAMA,KAAI;AAAV,IACE,IAAI;AADN,IAEE,IAAI;AAFN,IAGE,IAAI,IAAI;;;ACzBV,SAASC,GAAEA,IAAG;AACZ,EAAAA,GAAE,OAAO,KAAK,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBASK,EAAE,IAAI,EAAE,QAAQ,CAAC;AAAA;AAAA;AAAA,yBAGjB,EAAE,IAAI,EAAE,OAAO,CAAC;AAAA;AAAA;AAAA,yBAGhB,EAAE,IAAI,EAAE,IAAI,CAAC;AAAA;AAAA;AAAA,yBAGb,EAAE,IAAI,EAAE,QAAQ,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAMvC;AACH;",
  "names": ["e", "r", "o", "e"]
}
