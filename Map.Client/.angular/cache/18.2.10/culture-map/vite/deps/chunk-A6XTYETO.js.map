{
  "version": 3,
  "sources": ["../../../../../../node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/attributes/VertexNormal.glsl.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { neverReached as r } from \"../../../../../../core/compilerUtils.js\";\nimport { create as o } from \"../../../../../../core/libs/gl-matrix-2/factories/mat3f64.js\";\nimport { create as a } from \"../../../../../../core/libs/gl-matrix-2/factories/vec4f64.js\";\nimport { NormalType as e, NormalAttribute as l } from \"./NormalAttribute.glsl.js\";\nimport { VertexPosition as m, VertexPositionPassParameters as s, VertexPositionDrawParameters as t } from \"./VertexPosition.glsl.js\";\nimport { glsl as i } from \"../../shaderModules/interfaces.js\";\nimport { Matrix3DrawUniform as d } from \"../../shaderModules/Matrix3DrawUniform.js\";\nimport { Matrix3PassUniform as c } from \"../../shaderModules/Matrix3PassUniform.js\";\nfunction n(o, a) {\n  switch (a.normalType) {\n    case e.Attribute:\n    case e.Compressed:\n      o.include(l, a), o.varyings.add(\"vNormalWorld\", \"vec3\"), o.varyings.add(\"vNormalView\", \"vec3\"), o.vertex.uniforms.add(new d(\"transformNormalGlobalFromModel\", r => r.transformNormalGlobalFromModel), new c(\"transformNormalViewFromGlobal\", r => r.transformNormalViewFromGlobal)), o.vertex.code.add(i`void forwardNormal() {\nvNormalWorld = transformNormalGlobalFromModel * normalModel();\nvNormalView = transformNormalViewFromGlobal * vNormalWorld;\n}`);\n      break;\n    case e.Ground:\n      o.include(m, a), o.varyings.add(\"vNormalWorld\", \"vec3\"), o.vertex.code.add(i`\n        void forwardNormal() {\n          vNormalWorld = ${a.spherical ? i`normalize(vPositionWorldCameraRelative);` : i`vec3(0.0, 0.0, 1.0);`}\n        }\n        `);\n      break;\n    case e.ScreenDerivative:\n      o.vertex.code.add(i`void forwardNormal() {}`);\n      break;\n    default:\n      r(a.normalType);\n    case e.COUNT:\n  }\n}\nclass f extends s {\n  constructor() {\n    super(...arguments), this.transformNormalViewFromGlobal = o();\n  }\n}\nclass v extends t {\n  constructor() {\n    super(...arguments), this.transformNormalGlobalFromModel = o(), this.toMapSpace = a();\n  }\n}\nexport { n as VertexNormal, v as VertexNormalDrawParameters, f as VertexNormalPassParameters };"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAYA,SAASA,GAAEC,IAAGC,IAAG;AACf,UAAQA,GAAE,YAAY;AAAA,IACpB,KAAK,EAAE;AAAA,IACP,KAAK,EAAE;AACL,MAAAD,GAAE,QAAQ,GAAGC,EAAC,GAAGD,GAAE,SAAS,IAAI,gBAAgB,MAAM,GAAGA,GAAE,SAAS,IAAI,eAAe,MAAM,GAAGA,GAAE,OAAO,SAAS,IAAI,IAAIA,GAAE,kCAAkC,OAAK,EAAE,8BAA8B,GAAG,IAAIE,GAAE,iCAAiC,OAAK,EAAE,6BAA6B,CAAC,GAAGF,GAAE,OAAO,KAAK,IAAI;AAAA;AAAA;AAAA,EAG3S;AACI;AAAA,IACF,KAAK,EAAE;AACL,MAAAA,GAAE,QAAQ,GAAGC,EAAC,GAAGD,GAAE,SAAS,IAAI,gBAAgB,MAAM,GAAGA,GAAE,OAAO,KAAK,IAAI;AAAA;AAAA,2BAEtDC,GAAE,YAAY,8CAA8C,uBAAuB;AAAA;AAAA,SAErG;AACH;AAAA,IACF,KAAK,EAAE;AACL,MAAAD,GAAE,OAAO,KAAK,IAAI,0BAA0B;AAC5C;AAAA,IACF;AACE,QAAEC,GAAE,UAAU;AAAA,IAChB,KAAK,EAAE;AAAA,EACT;AACF;AACA,IAAM,IAAN,cAAgB,EAAE;AAAA,EAChB,cAAc;AACZ,UAAM,GAAG,SAAS,GAAG,KAAK,gCAAgC,EAAE;AAAA,EAC9D;AACF;AACA,IAAME,KAAN,cAAgB,EAAE;AAAA,EAChB,cAAc;AACZ,UAAM,GAAG,SAAS,GAAG,KAAK,iCAAiC,EAAE,GAAG,KAAK,aAAaJ,GAAE;AAAA,EACtF;AACF;",
  "names": ["n", "o", "a", "e", "v"]
}
