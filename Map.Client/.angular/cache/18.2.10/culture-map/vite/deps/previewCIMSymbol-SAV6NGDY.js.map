{
  "version": 3,
  "sources": ["../../../../../../node_modules/@arcgis/core/symbols/support/previewCIMSymbol.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { px2pt as e, pt2px as t } from \"../../core/screenUtils.js\";\nimport { CIMSymbolHelper as i } from \"../cim/CIMSymbolHelper.js\";\nimport { CIMSymbolRasterizer as l } from \"../cim/CIMSymbolRasterizer.js\";\nimport { OverrideHelper as r } from \"../cim/OverrideHelper.js\";\nimport { mapCIMSymbolToGeometryType as n } from \"../cim/utils.js\";\nimport { SymbolSizeDefaults as a } from \"./previewUtils.js\";\nimport { renderSymbol as o } from \"./renderUtils.js\";\nconst s = new l(null),\n  c = e(a.size),\n  m = e(a.maxSize),\n  u = e(a.lineWidth),\n  f = 1;\nasync function h(e, t, i) {\n  const l = t?.size;\n  let r = null != l && \"object\" == typeof l && \"width\" in l ? l.width : l,\n    n = null != l && \"object\" == typeof l && \"height\" in l ? l.height : l;\n  if (null == r || null == n) if (\"esriGeometryPolygon\" === i) r = c, n = c;else {\n    const l = await y(e, t, i);\n    l && (r = l.width, n = l.height), \"esriGeometryPolyline\" === i && (r = u), r = null != r && isFinite(r) ? Math.min(r, m) : c, n = null != n && isFinite(n) ? Math.max(Math.min(n, m), f) : c;\n  }\n  return \"legend\" === t.style && \"esriGeometryPolyline\" === i && (r = u), {\n    width: r,\n    height: n\n  };\n}\nasync function y(e, t, l) {\n  const {\n      feature: n,\n      fieldMap: a,\n      viewParams: o\n    } = t.cimOptions || t,\n    c = await r.resolveSymbolOverrides(e.data, n, null, a, l, null, o);\n  if (!c) return null;\n  (e = e.clone()).data = {\n    type: \"CIMSymbolReference\",\n    symbol: c\n  }, e.data.primitiveOverrides = void 0;\n  const m = [];\n  return i.fetchResources(c, s.resourceManager, m), i.fetchFonts(c, s.resourceManager, m), m.length > 0 && (await Promise.all(m)), i.getEnvelope(c, null, s.resourceManager);\n}\nasync function p(e, i = {}) {\n  const {\n      node: l,\n      opacity: r,\n      symbolConfig: a\n    } = i,\n    c = null != a && \"object\" == typeof a && \"isSquareFill\" in a && a.isSquareFill,\n    m = i.cimOptions || i,\n    u = m.geometryType || n(e?.data?.symbol),\n    f = await h(e, i, u),\n    {\n      feature: y,\n      fieldMap: p\n    } = m,\n    d = c || \"esriGeometryPolygon\" !== u ? \"preview\" : \"legend\",\n    g = await s.rasterizeCIMSymbolAsync(e, y, f, d, p, u, null, m.viewParams, m.allowScalingUp);\n  if (!g) return null;\n  const {\n      width: w,\n      height: b\n    } = g,\n    v = document.createElement(\"canvas\");\n  v.width = w, v.height = b;\n  v.getContext(\"2d\").putImageData(g, 0, 0);\n  const M = t(f.width),\n    j = t(f.height),\n    S = new Image(M, j);\n  S.src = v.toDataURL(), S.ariaLabel = i.ariaLabel ?? null, S.alt = i.ariaLabel ?? \"\", null != r && (S.style.opacity = `${r}`);\n  let C = S;\n  if (null != i.effectView) {\n    const e = {\n      shape: {\n        type: \"image\",\n        x: 0,\n        y: 0,\n        width: M,\n        height: j,\n        src: S.src\n      },\n      fill: null,\n      stroke: null,\n      offset: [0, 0]\n    };\n    C = o([[e]], [M, j], {\n      effectView: i.effectView,\n      ariaLabel: i.ariaLabel\n    });\n  }\n  return l && C && l.appendChild(C), C;\n}\nexport { p as previewCIMSymbol };"],
  "mappings": "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",
  "names": ["u", "e", "t", "l", "y", "o", "c", "m", "f", "p"]
}
