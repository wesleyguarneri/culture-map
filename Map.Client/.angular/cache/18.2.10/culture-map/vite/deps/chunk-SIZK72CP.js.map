{
  "version": 3,
  "sources": ["../../../../../../node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderModules/ShaderBuilder.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport e from \"../../../../../core/Error.js\";\nimport \"../../../../../core/has.js\";\nimport t from \"../../../../../core/Logger.js\";\nimport { BindType as r } from \"../shaderTechnique/BindType.js\";\nimport { assert as n } from \"../../lib/Util.js\";\nconst s = () => t.getLogger(\"esri.views.3d.webgl-engine.core.shaderModules.shaderBuilder\");\nclass i {\n  constructor() {\n    this._includedModules = new Map();\n  }\n  include(e, t) {\n    this._includedModules.has(e) ? this._includedModules.get(e) : (this._includedModules.set(e, t), e(this.builder, t));\n  }\n}\nclass o extends i {\n  constructor() {\n    super(...arguments), this.vertex = new u(), this.fragment = new u(), this.attributes = new h(), this.varyings = new m(), this.extensions = new _(), this.constants = new d(), this.outputs = new l();\n  }\n  get fragmentUniforms() {\n    return this.fragment.uniforms.entries;\n  }\n  get builder() {\n    return this;\n  }\n  generate(e) {\n    const t = this.extensions.generateSource(e),\n      r = this.attributes.generateSource(e),\n      n = this.varyings.generateSource(e),\n      s = \"vertex\" === e ? this.vertex : this.fragment,\n      i = s.uniforms.generateSource(),\n      o = s.code.generateSource(),\n      a = \"vertex\" === e ? f : g,\n      c = this.constants.generateSource().concat(s.constants.generateSource()),\n      u = this.outputs.generateSource(e);\n    return `#version 300 es\\n${t.join(\"\\n\")}\\n\\n${a}\\n\\n${c.join(\"\\n\")}\\n\\n${i.join(\"\\n\")}\\n\\n${r.join(\"\\n\")}\\n\\n${n.join(\"\\n\")}\\n\\n${u.join(\"\\n\")}\\n\\n${o.join(\"\\n\")}`;\n  }\n  generateBindPass(e) {\n    const t = new Map();\n    this.vertex.uniforms.entries.forEach(e => {\n      const n = e.bind[r.Pass];\n      n && t.set(e.name, n);\n    }), this.fragment.uniforms.entries.forEach(e => {\n      const n = e.bind[r.Pass];\n      n && t.set(e.name, n);\n    });\n    const n = Array.from(t.values()),\n      s = n.length;\n    return (t, r) => {\n      for (let i = 0; i < s; ++i) n[i](e, t, r);\n    };\n  }\n  generateBindDraw(e) {\n    const t = new Map();\n    this.vertex.uniforms.entries.forEach(e => {\n      const n = e.bind[r.Draw];\n      n && t.set(e.name, n);\n    }), this.fragment.uniforms.entries.forEach(e => {\n      const n = e.bind[r.Draw];\n      n && t.set(e.name, n);\n    });\n    const n = Array.from(t.values()),\n      s = n.length;\n    return (t, r, i) => {\n      for (let o = 0; o < s; ++o) n[o](e, t, r, i);\n    };\n  }\n}\nclass a {\n  constructor(e) {\n    this._stage = e, this._entries = new Map();\n  }\n  add(...e) {\n    for (const t of e) this._add(t);\n    return this._stage;\n  }\n  get(e) {\n    return this._entries.get(e);\n  }\n  _add(t) {\n    if (null != t) {\n      if (this._entries.has(t.name) && !this._entries.get(t.name).equals(t)) throw new e(`Duplicate uniform name ${t.name} for different uniform type`);\n      this._entries.set(t.name, t);\n    } else s().error(`Trying to add null Uniform from ${new Error().stack}.`);\n  }\n  generateSource() {\n    return Array.from(this._entries.values()).map(e => null != e.arraySize ? `uniform ${e.type} ${e.name}[${e.arraySize}];` : `uniform ${e.type} ${e.name};`);\n  }\n  get entries() {\n    return Array.from(this._entries.values());\n  }\n}\nclass c {\n  constructor(e) {\n    this._stage = e, this._entries = new Array();\n  }\n  add(e) {\n    return this._entries.push(e), this._stage;\n  }\n  generateSource() {\n    return this._entries;\n  }\n}\nclass u extends i {\n  constructor() {\n    super(...arguments), this.uniforms = new a(this), this.code = new c(this), this.constants = new d();\n  }\n  get builder() {\n    return this;\n  }\n}\nclass h {\n  constructor() {\n    this._entries = new Array();\n  }\n  add(e, t) {\n    this._entries.push([e, t]);\n  }\n  generateSource(e) {\n    return \"fragment\" === e ? [] : this._entries.map(e => `in ${e[1]} ${e[0]};`);\n  }\n}\nclass m {\n  constructor() {\n    this._entries = new Map();\n  }\n  add(e, t) {\n    this._entries.has(e) && n(this._entries.get(e) === t), this._entries.set(e, t);\n  }\n  generateSource(e) {\n    const t = new Array();\n    return this._entries.forEach((r, n) => t.push(\"vertex\" === e ? `out ${r} ${n};` : `in ${r} ${n};`)), t;\n  }\n}\nclass _ {\n  constructor() {\n    this._entries = new Set();\n  }\n  add(e) {\n    this._entries.add(e);\n  }\n  generateSource(e) {\n    const t = \"vertex\" === e ? _.ALLOWLIST_VERTEX : _.ALLOWLIST_FRAGMENT;\n    return Array.from(this._entries).filter(e => t.includes(e)).map(e => `#extension ${e} : enable`);\n  }\n}\n_.ALLOWLIST_FRAGMENT = [\"GL_EXT_shader_texture_lod\", \"GL_OES_standard_derivatives\"], _.ALLOWLIST_VERTEX = [];\nclass l {\n  constructor() {\n    this._entries = new Map();\n  }\n  add(e, t, r = 0) {\n    const s = this._entries.get(r);\n    s ? n(s.name === e && s.type === t, `Fragment shader output location ${r} occupied`) : this._entries.set(r, {\n      name: e,\n      type: t\n    });\n  }\n  generateSource(e) {\n    if (\"vertex\" === e) return [];\n    0 === this._entries.size && this._entries.set(0, {\n      name: l.DEFAULT_NAME,\n      type: l.DEFAULT_TYPE\n    });\n    const t = new Array();\n    return this._entries.forEach((e, r) => t.push(`layout(location = ${r}) out ${e.type} ${e.name};`)), t;\n  }\n}\nl.DEFAULT_TYPE = \"vec4\", l.DEFAULT_NAME = \"fragColor\";\nclass d {\n  constructor() {\n    this._entries = new Set();\n  }\n  add(e, t, r) {\n    let n = \"ERROR_CONSTRUCTOR_STRING\";\n    switch (t) {\n      case \"float\":\n        n = d._numberToFloatStr(r);\n        break;\n      case \"int\":\n        n = d._numberToIntStr(r);\n        break;\n      case \"bool\":\n        n = r.toString();\n        break;\n      case \"vec2\":\n        n = `vec2(${d._numberToFloatStr(r[0])},                            ${d._numberToFloatStr(r[1])})`;\n        break;\n      case \"vec3\":\n        n = `vec3(${d._numberToFloatStr(r[0])},                            ${d._numberToFloatStr(r[1])},                            ${d._numberToFloatStr(r[2])})`;\n        break;\n      case \"vec4\":\n        n = `vec4(${d._numberToFloatStr(r[0])},                            ${d._numberToFloatStr(r[1])},                            ${d._numberToFloatStr(r[2])},                            ${d._numberToFloatStr(r[3])})`;\n        break;\n      case \"ivec2\":\n        n = `ivec2(${d._numberToIntStr(r[0])},                             ${d._numberToIntStr(r[1])})`;\n        break;\n      case \"ivec3\":\n        n = `ivec3(${d._numberToIntStr(r[0])},                             ${d._numberToIntStr(r[1])},                             ${d._numberToIntStr(r[2])})`;\n        break;\n      case \"ivec4\":\n        n = `ivec4(${d._numberToIntStr(r[0])},                             ${d._numberToIntStr(r[1])},                             ${d._numberToIntStr(r[2])},                             ${d._numberToIntStr(r[3])})`;\n        break;\n      case \"mat2\":\n      case \"mat3\":\n      case \"mat4\":\n        n = `${t}(${Array.prototype.map.call(r, e => d._numberToFloatStr(e)).join(\", \")})`;\n    }\n    return this._entries.add(`const ${t} ${e} = ${n};`), this;\n  }\n  static _numberToIntStr(e) {\n    return e.toFixed(0);\n  }\n  static _numberToFloatStr(e) {\n    return Number.isInteger(e) ? e.toFixed(1) : e.toString();\n  }\n  generateSource() {\n    return Array.from(this._entries);\n  }\n}\nconst g = \"#ifdef GL_FRAGMENT_PRECISION_HIGH\\n  precision highp float;\\n  precision highp sampler2D;\\n#else\\n  precision mediump float;\\n  precision mediump sampler2D;\\n#endif\",\n  f = \"precision highp float;\\nprecision highp sampler2D;\";\nexport { c as Code, i as Includes, o as ShaderBuilder, u as Stage, a as Uniforms };"],
  "mappings": ";;;;;;;;;;;;AASA,IAAMA,KAAI,MAAM,EAAE,UAAU,6DAA6D;AACzF,IAAM,IAAN,MAAQ;AAAA,EACN,cAAc;AACZ,SAAK,mBAAmB,oBAAI,IAAI;AAAA,EAClC;AAAA,EACA,QAAQ,GAAG,GAAG;AACZ,SAAK,iBAAiB,IAAI,CAAC,IAAI,KAAK,iBAAiB,IAAI,CAAC,KAAK,KAAK,iBAAiB,IAAI,GAAG,CAAC,GAAG,EAAE,KAAK,SAAS,CAAC;AAAA,EACnH;AACF;AACA,IAAM,IAAN,cAAgB,EAAE;AAAA,EAChB,cAAc;AACZ,UAAM,GAAG,SAAS,GAAG,KAAK,SAAS,IAAI,EAAE,GAAG,KAAK,WAAW,IAAI,EAAE,GAAG,KAAK,aAAa,IAAI,EAAE,GAAG,KAAK,WAAW,IAAI,EAAE,GAAG,KAAK,aAAa,IAAI,EAAE,GAAG,KAAK,YAAY,IAAI,EAAE,GAAG,KAAK,UAAU,IAAI,EAAE;AAAA,EACrM;AAAA,EACA,IAAI,mBAAmB;AACrB,WAAO,KAAK,SAAS,SAAS;AAAA,EAChC;AAAA,EACA,IAAI,UAAU;AACZ,WAAO;AAAA,EACT;AAAA,EACA,SAAS,GAAG;AACV,UAAM,IAAI,KAAK,WAAW,eAAe,CAAC,GACxC,IAAI,KAAK,WAAW,eAAe,CAAC,GACpCC,KAAI,KAAK,SAAS,eAAe,CAAC,GAClCD,KAAI,aAAa,IAAI,KAAK,SAAS,KAAK,UACxCE,KAAIF,GAAE,SAAS,eAAe,GAC9BG,KAAIH,GAAE,KAAK,eAAe,GAC1BI,KAAI,aAAa,IAAI,IAAI,GACzBC,KAAI,KAAK,UAAU,eAAe,EAAE,OAAOL,GAAE,UAAU,eAAe,CAAC,GACvEM,KAAI,KAAK,QAAQ,eAAe,CAAC;AACnC,WAAO;AAAA,EAAoB,EAAE,KAAK,IAAI,CAAC;AAAA;AAAA,EAAOF,EAAC;AAAA;AAAA,EAAOC,GAAE,KAAK,IAAI,CAAC;AAAA;AAAA,EAAOH,GAAE,KAAK,IAAI,CAAC;AAAA;AAAA,EAAO,EAAE,KAAK,IAAI,CAAC;AAAA;AAAA,EAAOD,GAAE,KAAK,IAAI,CAAC;AAAA;AAAA,EAAOK,GAAE,KAAK,IAAI,CAAC;AAAA;AAAA,EAAOH,GAAE,KAAK,IAAI,CAAC;AAAA,EACnK;AAAA,EACA,iBAAiB,GAAG;AAClB,UAAM,IAAI,oBAAI,IAAI;AAClB,SAAK,OAAO,SAAS,QAAQ,QAAQ,CAAAI,OAAK;AACxC,YAAMN,KAAIM,GAAE,KAAK,EAAE,IAAI;AACvB,MAAAN,MAAK,EAAE,IAAIM,GAAE,MAAMN,EAAC;AAAA,IACtB,CAAC,GAAG,KAAK,SAAS,SAAS,QAAQ,QAAQ,CAAAM,OAAK;AAC9C,YAAMN,KAAIM,GAAE,KAAK,EAAE,IAAI;AACvB,MAAAN,MAAK,EAAE,IAAIM,GAAE,MAAMN,EAAC;AAAA,IACtB,CAAC;AACD,UAAMA,KAAI,MAAM,KAAK,EAAE,OAAO,CAAC,GAC7BD,KAAIC,GAAE;AACR,WAAO,CAACO,IAAG,MAAM;AACf,eAASN,KAAI,GAAGA,KAAIF,IAAG,EAAEE,GAAG,CAAAD,GAAEC,EAAC,EAAE,GAAGM,IAAG,CAAC;AAAA,IAC1C;AAAA,EACF;AAAA,EACA,iBAAiB,GAAG;AAClB,UAAM,IAAI,oBAAI,IAAI;AAClB,SAAK,OAAO,SAAS,QAAQ,QAAQ,CAAAD,OAAK;AACxC,YAAMN,KAAIM,GAAE,KAAK,EAAE,IAAI;AACvB,MAAAN,MAAK,EAAE,IAAIM,GAAE,MAAMN,EAAC;AAAA,IACtB,CAAC,GAAG,KAAK,SAAS,SAAS,QAAQ,QAAQ,CAAAM,OAAK;AAC9C,YAAMN,KAAIM,GAAE,KAAK,EAAE,IAAI;AACvB,MAAAN,MAAK,EAAE,IAAIM,GAAE,MAAMN,EAAC;AAAA,IACtB,CAAC;AACD,UAAMA,KAAI,MAAM,KAAK,EAAE,OAAO,CAAC,GAC7BD,KAAIC,GAAE;AACR,WAAO,CAACO,IAAG,GAAGN,OAAM;AAClB,eAASC,KAAI,GAAGA,KAAIH,IAAG,EAAEG,GAAG,CAAAF,GAAEE,EAAC,EAAE,GAAGK,IAAG,GAAGN,EAAC;AAAA,IAC7C;AAAA,EACF;AACF;AACA,IAAME,KAAN,MAAQ;AAAA,EACN,YAAY,GAAG;AACb,SAAK,SAAS,GAAG,KAAK,WAAW,oBAAI,IAAI;AAAA,EAC3C;AAAA,EACA,OAAO,GAAG;AACR,eAAW,KAAK,EAAG,MAAK,KAAK,CAAC;AAC9B,WAAO,KAAK;AAAA,EACd;AAAA,EACA,IAAI,GAAG;AACL,WAAO,KAAK,SAAS,IAAI,CAAC;AAAA,EAC5B;AAAA,EACA,KAAK,GAAG;AACN,QAAI,QAAQ,GAAG;AACb,UAAI,KAAK,SAAS,IAAI,EAAE,IAAI,KAAK,CAAC,KAAK,SAAS,IAAI,EAAE,IAAI,EAAE,OAAO,CAAC,EAAG,OAAM,IAAI,EAAE,0BAA0B,EAAE,IAAI,6BAA6B;AAChJ,WAAK,SAAS,IAAI,EAAE,MAAM,CAAC;AAAA,IAC7B,MAAO,CAAAJ,GAAE,EAAE,MAAM,mCAAmC,IAAI,MAAM,EAAE,KAAK,GAAG;AAAA,EAC1E;AAAA,EACA,iBAAiB;AACf,WAAO,MAAM,KAAK,KAAK,SAAS,OAAO,CAAC,EAAE,IAAI,OAAK,QAAQ,EAAE,YAAY,WAAW,EAAE,IAAI,IAAI,EAAE,IAAI,IAAI,EAAE,SAAS,OAAO,WAAW,EAAE,IAAI,IAAI,EAAE,IAAI,GAAG;AAAA,EAC1J;AAAA,EACA,IAAI,UAAU;AACZ,WAAO,MAAM,KAAK,KAAK,SAAS,OAAO,CAAC;AAAA,EAC1C;AACF;AACA,IAAM,IAAN,MAAQ;AAAA,EACN,YAAY,GAAG;AACb,SAAK,SAAS,GAAG,KAAK,WAAW,IAAI,MAAM;AAAA,EAC7C;AAAA,EACA,IAAI,GAAG;AACL,WAAO,KAAK,SAAS,KAAK,CAAC,GAAG,KAAK;AAAA,EACrC;AAAA,EACA,iBAAiB;AACf,WAAO,KAAK;AAAA,EACd;AACF;AACA,IAAM,IAAN,cAAgB,EAAE;AAAA,EAChB,cAAc;AACZ,UAAM,GAAG,SAAS,GAAG,KAAK,WAAW,IAAII,GAAE,IAAI,GAAG,KAAK,OAAO,IAAI,EAAE,IAAI,GAAG,KAAK,YAAY,IAAI,EAAE;AAAA,EACpG;AAAA,EACA,IAAI,UAAU;AACZ,WAAO;AAAA,EACT;AACF;AACA,IAAM,IAAN,MAAQ;AAAA,EACN,cAAc;AACZ,SAAK,WAAW,IAAI,MAAM;AAAA,EAC5B;AAAA,EACA,IAAI,GAAG,GAAG;AACR,SAAK,SAAS,KAAK,CAAC,GAAG,CAAC,CAAC;AAAA,EAC3B;AAAA,EACA,eAAe,GAAG;AAChB,WAAO,eAAe,IAAI,CAAC,IAAI,KAAK,SAAS,IAAI,CAAAG,OAAK,MAAMA,GAAE,CAAC,CAAC,IAAIA,GAAE,CAAC,CAAC,GAAG;AAAA,EAC7E;AACF;AACA,IAAM,IAAN,MAAQ;AAAA,EACN,cAAc;AACZ,SAAK,WAAW,oBAAI,IAAI;AAAA,EAC1B;AAAA,EACA,IAAI,GAAG,GAAG;AACR,SAAK,SAAS,IAAI,CAAC,KAAKP,GAAE,KAAK,SAAS,IAAI,CAAC,MAAM,CAAC,GAAG,KAAK,SAAS,IAAI,GAAG,CAAC;AAAA,EAC/E;AAAA,EACA,eAAe,GAAG;AAChB,UAAM,IAAI,IAAI,MAAM;AACpB,WAAO,KAAK,SAAS,QAAQ,CAAC,GAAGC,OAAM,EAAE,KAAK,aAAa,IAAI,OAAO,CAAC,IAAIA,EAAC,MAAM,MAAM,CAAC,IAAIA,EAAC,GAAG,CAAC,GAAG;AAAA,EACvG;AACF;AACA,IAAM,IAAN,MAAM,GAAE;AAAA,EACN,cAAc;AACZ,SAAK,WAAW,oBAAI,IAAI;AAAA,EAC1B;AAAA,EACA,IAAI,GAAG;AACL,SAAK,SAAS,IAAI,CAAC;AAAA,EACrB;AAAA,EACA,eAAe,GAAG;AAChB,UAAM,IAAI,aAAa,IAAI,GAAE,mBAAmB,GAAE;AAClD,WAAO,MAAM,KAAK,KAAK,QAAQ,EAAE,OAAO,CAAAM,OAAK,EAAE,SAASA,EAAC,CAAC,EAAE,IAAI,CAAAA,OAAK,cAAcA,EAAC,WAAW;AAAA,EACjG;AACF;AACA,EAAE,qBAAqB,CAAC,6BAA6B,6BAA6B,GAAG,EAAE,mBAAmB,CAAC;AAC3G,IAAM,IAAN,MAAM,GAAE;AAAA,EACN,cAAc;AACZ,SAAK,WAAW,oBAAI,IAAI;AAAA,EAC1B;AAAA,EACA,IAAI,GAAG,GAAG,IAAI,GAAG;AACf,UAAMP,KAAI,KAAK,SAAS,IAAI,CAAC;AAC7B,IAAAA,KAAIA,GAAEA,GAAE,SAAS,KAAKA,GAAE,SAAS,GAAG,mCAAmC,CAAC,WAAW,IAAI,KAAK,SAAS,IAAI,GAAG;AAAA,MAC1G,MAAM;AAAA,MACN,MAAM;AAAA,IACR,CAAC;AAAA,EACH;AAAA,EACA,eAAe,GAAG;AAChB,QAAI,aAAa,EAAG,QAAO,CAAC;AAC5B,UAAM,KAAK,SAAS,QAAQ,KAAK,SAAS,IAAI,GAAG;AAAA,MAC/C,MAAM,GAAE;AAAA,MACR,MAAM,GAAE;AAAA,IACV,CAAC;AACD,UAAM,IAAI,IAAI,MAAM;AACpB,WAAO,KAAK,SAAS,QAAQ,CAACO,IAAG,MAAM,EAAE,KAAK,qBAAqB,CAAC,SAASA,GAAE,IAAI,IAAIA,GAAE,IAAI,GAAG,CAAC,GAAG;AAAA,EACtG;AACF;AACA,EAAE,eAAe,QAAQ,EAAE,eAAe;AAC1C,IAAM,IAAN,MAAM,GAAE;AAAA,EACN,cAAc;AACZ,SAAK,WAAW,oBAAI,IAAI;AAAA,EAC1B;AAAA,EACA,IAAI,GAAG,GAAG,GAAG;AACX,QAAIN,KAAI;AACR,YAAQ,GAAG;AAAA,MACT,KAAK;AACH,QAAAA,KAAI,GAAE,kBAAkB,CAAC;AACzB;AAAA,MACF,KAAK;AACH,QAAAA,KAAI,GAAE,gBAAgB,CAAC;AACvB;AAAA,MACF,KAAK;AACH,QAAAA,KAAI,EAAE,SAAS;AACf;AAAA,MACF,KAAK;AACH,QAAAA,KAAI,QAAQ,GAAE,kBAAkB,EAAE,CAAC,CAAC,CAAC,gCAAgC,GAAE,kBAAkB,EAAE,CAAC,CAAC,CAAC;AAC9F;AAAA,MACF,KAAK;AACH,QAAAA,KAAI,QAAQ,GAAE,kBAAkB,EAAE,CAAC,CAAC,CAAC,gCAAgC,GAAE,kBAAkB,EAAE,CAAC,CAAC,CAAC,gCAAgC,GAAE,kBAAkB,EAAE,CAAC,CAAC,CAAC;AACvJ;AAAA,MACF,KAAK;AACH,QAAAA,KAAI,QAAQ,GAAE,kBAAkB,EAAE,CAAC,CAAC,CAAC,gCAAgC,GAAE,kBAAkB,EAAE,CAAC,CAAC,CAAC,gCAAgC,GAAE,kBAAkB,EAAE,CAAC,CAAC,CAAC,gCAAgC,GAAE,kBAAkB,EAAE,CAAC,CAAC,CAAC;AAChN;AAAA,MACF,KAAK;AACH,QAAAA,KAAI,SAAS,GAAE,gBAAgB,EAAE,CAAC,CAAC,CAAC,iCAAiC,GAAE,gBAAgB,EAAE,CAAC,CAAC,CAAC;AAC5F;AAAA,MACF,KAAK;AACH,QAAAA,KAAI,SAAS,GAAE,gBAAgB,EAAE,CAAC,CAAC,CAAC,iCAAiC,GAAE,gBAAgB,EAAE,CAAC,CAAC,CAAC,iCAAiC,GAAE,gBAAgB,EAAE,CAAC,CAAC,CAAC;AACpJ;AAAA,MACF,KAAK;AACH,QAAAA,KAAI,SAAS,GAAE,gBAAgB,EAAE,CAAC,CAAC,CAAC,iCAAiC,GAAE,gBAAgB,EAAE,CAAC,CAAC,CAAC,iCAAiC,GAAE,gBAAgB,EAAE,CAAC,CAAC,CAAC,iCAAiC,GAAE,gBAAgB,EAAE,CAAC,CAAC,CAAC;AAC5M;AAAA,MACF,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AACH,QAAAA,KAAI,GAAG,CAAC,IAAI,MAAM,UAAU,IAAI,KAAK,GAAG,CAAAM,OAAK,GAAE,kBAAkBA,EAAC,CAAC,EAAE,KAAK,IAAI,CAAC;AAAA,IACnF;AACA,WAAO,KAAK,SAAS,IAAI,SAAS,CAAC,IAAI,CAAC,MAAMN,EAAC,GAAG,GAAG;AAAA,EACvD;AAAA,EACA,OAAO,gBAAgB,GAAG;AACxB,WAAO,EAAE,QAAQ,CAAC;AAAA,EACpB;AAAA,EACA,OAAO,kBAAkB,GAAG;AAC1B,WAAO,OAAO,UAAU,CAAC,IAAI,EAAE,QAAQ,CAAC,IAAI,EAAE,SAAS;AAAA,EACzD;AAAA,EACA,iBAAiB;AACf,WAAO,MAAM,KAAK,KAAK,QAAQ;AAAA,EACjC;AACF;AACA,IAAM,IAAI;AAAV,IACE,IAAI;",
  "names": ["s", "n", "i", "o", "a", "c", "u", "e", "t"]
}
