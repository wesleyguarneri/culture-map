{
  "version": 3,
  "sources": ["../../../../../../node_modules/@arcgis/core/views/3d/webgl-engine/lib/TextureBackedBuffer/SimpleIndexManager.js", "../../../../../../node_modules/@arcgis/core/views/3d/webgl-engine/lib/TextureBackedBuffer/TextureBackedBuffer.js", "../../../../../../node_modules/@arcgis/core/views/3d/webgl-engine/lib/TextureBackedBuffer/ManagedTextureBackedBuffer.js", "../../../../../../node_modules/@arcgis/core/views/3d/webgl-engine/lib/TextureBackedBuffer/BufferManager.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nclass e {\n  constructor(e) {\n    this._maxCount = e, this._nextIndex = 0, this._recycledIndices = [];\n  }\n  get activeCount() {\n    return this._nextIndex - this._recycledIndices.length;\n  }\n  get availableCount() {\n    return this._recycledIndices.length + this._maxCount - this._nextIndex;\n  }\n  acquire() {\n    return this._recycledIndices.length > 0 ? this._recycledIndices.pop() : this.availableCount ? this._nextIndex++ : void 0;\n  }\n  release(e) {\n    this._recycledIndices.push(e);\n  }\n}\nexport { e as SimpleIndexManager };", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { BufferViewVec4u8 as t } from \"../../../../../geometry/support/buffer/BufferView.js\";\nimport { TextureSamplingMode as e, TextureWrapMode as i } from \"../../../../webgl/enums.js\";\nimport { Texture as s } from \"../../../../webgl/Texture.js\";\nimport { TextureDescriptor as r } from \"../../../../webgl/TextureDescriptor.js\";\nclass h {\n  constructor(h, a = 1) {\n    this._rctx = h, this._fieldCount = a, this.textureWidth = 4096, this._dirty = !0;\n    const d = new r(this.textureWidth, 1);\n    d.samplingMode = e.NEAREST, d.wrapMode = i.CLAMP_TO_EDGE, this._texture = new s(this._rctx, d), this._data = new t(new ArrayBuffer(4 * this.textureWidth));\n  }\n  dispose() {\n    this._texture.dispose(), this._texture = void 0, this._data = void 0;\n  }\n  setData(t, e, i, s, r, h) {\n    const a = t * this._fieldCount + e;\n    this._dirty = !0, this._data.set(a, 0, i), this._data.set(a, 1, s), this._data.set(a, 2, r), this._data.set(a, 3, h);\n  }\n  setDataElement(t, e, i, s) {\n    const r = t * this._fieldCount + e;\n    this._dirty = !0, this._data.set(r, i, s);\n  }\n  getDataElement(t, e, i) {\n    const s = t * this._fieldCount + e;\n    return this._dirty = !0, this._data.get(s, i);\n  }\n  resizeToFit(e) {\n    const i = (e + 1) * this._fieldCount;\n    if (i > this._data.count) {\n      const e = Math.ceil(i / this.textureWidth) * this.textureWidth,\n        s = new t(new ArrayBuffer(4 * e));\n      s.typedBuffer.set(this._data.typedBuffer), this._data = s;\n    }\n  }\n  updateTexture() {\n    if (!this._dirty) return;\n    const t = this._texture.descriptor.width,\n      e = this._texture.descriptor.height;\n    this._data.count > t * e && this._texture.resize(t, this._data.count / t), this._texture.setData(this._data.typedBuffer), this._dirty = !1;\n  }\n  get texture() {\n    return this._texture;\n  }\n}\nexport { h as TextureBackedBuffer };", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { SimpleIndexManager as e } from \"./SimpleIndexManager.js\";\nimport { TextureBackedBuffer as t } from \"./TextureBackedBuffer.js\";\nconst r = 65536;\nclass i {\n  constructor(i, a = 1) {\n    this.textureBuffer = new t(i, a), this._indexManager = new e(r);\n  }\n  dispose() {\n    this.textureBuffer.dispose(), this.textureBuffer = void 0;\n  }\n  get availableCount() {\n    return this._indexManager.availableCount;\n  }\n  get activeCount() {\n    return this._indexManager.activeCount;\n  }\n  acquireIndex() {\n    const e = this._indexManager.acquire();\n    return this.textureBuffer.resizeToFit(e), e;\n  }\n  releaseIndex(e) {\n    this._indexManager.release(e);\n  }\n}\nexport { i as ManagedTextureBackedBuffer, r as maxIndexCount };", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { maxIndexCount as t, ManagedTextureBackedBuffer as e } from \"./ManagedTextureBackedBuffer.js\";\nclass r {\n  constructor(t, e = 1) {\n    this._rctx = t, this._fieldCount = e, this._buffers = [];\n  }\n  garbageCollect() {\n    this._buffers = this._buffers.filter(t => 0 !== t.activeCount || (t.dispose(), !1));\n  }\n  destroy() {\n    this._buffers.forEach(t => t.dispose()), this._buffers = [];\n  }\n  getBuffer(r) {\n    for (const t of this._buffers) if (t.availableCount >= r) return t;\n    if (r > t) return null;\n    const s = new e(this._rctx, this._fieldCount);\n    return this._buffers.push(s), s;\n  }\n  updateTextures() {\n    for (const t of this._buffers) t.textureBuffer.updateTexture();\n  }\n}\nexport { r as BufferManager };"],
  "mappings": "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",
  "names": ["e", "h", "e", "i", "r", "i", "e", "r", "e"]
}
