{
  "version": 3,
  "sources": ["../../../../../../node_modules/@esri/calcite-components/dist/components/icon.js"],
  "sourcesContent": ["/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\n * v2.13.2\n */\nimport { getAssetPath, proxyCustomElement, HTMLElement, h, Host } from '@stencil/core/internal/client';\nimport { a as getElementDir, t as toAriaBoolean } from './dom.js';\nimport { c as createObserver } from './observers.js';\nimport { i as isBrowser } from './browser.js';\nconst CSS = {\n  icon: \"icon\",\n  flipRtl: \"flip-rtl\"\n};\n\n/**\n * Icon data cache.\n * Exported for testing purposes.\n *\n * @private\n */\nconst iconCache = {};\n/**\n * Icon request cache.\n * Exported for testing purposes.\n *\n * @private\n */\nconst requestCache = {};\nconst scaleToPx = {\n  s: 16,\n  m: 24,\n  l: 32\n};\nfunction generateIconId({\n  icon,\n  scale\n}) {\n  const size = scaleToPx[scale];\n  const name = normalizeIconName(icon);\n  const filled = name.charAt(name.length - 1) === \"F\";\n  const iconName = filled ? name.substring(0, name.length - 1) : name;\n  return `${iconName}${size}${filled ? \"F\" : \"\"}`;\n}\nasync function fetchIcon(props) {\n  const cachedIconKey = generateIconId(props);\n  const cachedIconData = getCachedIconDataByKey(cachedIconKey);\n  if (cachedIconData) {\n    return cachedIconData;\n  }\n  if (!requestCache[cachedIconKey]) {\n    requestCache[cachedIconKey] = fetch(getAssetPath(`./assets/icon/${cachedIconKey}.json`)).then(resp => resp.json()).catch(() => {\n      console.error(`\"${cachedIconKey}\" is not a valid calcite-ui-icon name`);\n      return \"\";\n    });\n  }\n  const path = await requestCache[cachedIconKey];\n  iconCache[cachedIconKey] = path;\n  return path;\n}\n/**\n * Util to retrieve cached icon data based on icon name and scale.\n *\n * @param props – icon properties\n */\nfunction getCachedIconData(props) {\n  return getCachedIconDataByKey(generateIconId(props));\n}\nfunction getCachedIconDataByKey(id) {\n  return iconCache[id];\n}\n/**\n * Normalize the icon name to match the path data module exports.\n * Exported for testing purposes.\n *\n * @param name – an icon name that can be either kebab or camel-cased\n * @private\n */\nfunction normalizeIconName(name) {\n  const numberLeadingName = !isNaN(Number(name.charAt(0)));\n  const parts = name.split(\"-\");\n  const kebabCased = parts.length > 0;\n  if (kebabCased) {\n    const firstNonDigitInPartPattern = /[a-z]/i;\n    name = parts.map((part, partIndex) => {\n      return part.replace(firstNonDigitInPartPattern, function replacer(match, offset) {\n        const isFirstCharInName = partIndex === 0 && offset === 0;\n        if (isFirstCharInName) {\n          return match;\n        }\n        return match.toUpperCase();\n      });\n    }).join(\"\");\n  }\n  return numberLeadingName ? `i${name}` : name;\n}\nconst iconCss = \":host{display:inline-flex;color:var(--calcite-icon-color, var(--calcite-ui-icon-color, currentColor))}:host([scale=s]){inline-size:16px;block-size:16px;min-inline-size:16px;min-block-size:16px}:host([scale=m]){inline-size:24px;block-size:24px;min-inline-size:24px;min-block-size:24px}:host([scale=l]){inline-size:32px;block-size:32px;min-inline-size:32px;min-block-size:32px}.flip-rtl{transform:scaleX(-1)}.svg{display:block}:host([hidden]){display:none}[hidden]{display:none}\";\nconst CalciteIconStyle0 = iconCss;\nconst Icon = /*@__PURE__*/proxyCustomElement(class Icon extends HTMLElement {\n  constructor() {\n    super();\n    this.__registerHost();\n    this.__attachShadow();\n    this.icon = null;\n    this.flipRtl = false;\n    this.scale = \"m\";\n    this.textLabel = undefined;\n    this.pathData = undefined;\n    this.visible = false;\n  }\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n  connectedCallback() {\n    if (!this.visible) {\n      this.waitUntilVisible(() => {\n        this.visible = true;\n        this.loadIconPathData();\n      });\n    }\n  }\n  disconnectedCallback() {\n    this.intersectionObserver?.disconnect();\n    this.intersectionObserver = null;\n  }\n  render() {\n    const {\n      el,\n      flipRtl,\n      pathData,\n      scale,\n      textLabel\n    } = this;\n    const dir = getElementDir(el);\n    const size = scaleToPx[scale];\n    const semantic = !!textLabel;\n    const paths = [].concat(pathData || \"\");\n    return h(Host, {\n      key: '724265acdc6fb528bf7b25d7ec445c73a63f4c8e',\n      \"aria-hidden\": toAriaBoolean(!semantic),\n      \"aria-label\": semantic ? textLabel : null,\n      role: semantic ? \"img\" : null\n    }, h(\"svg\", {\n      key: '864ee2d80bebd282543ba5d94c57f84b48a6204d',\n      \"aria-hidden\": \"true\",\n      class: {\n        [CSS.flipRtl]: dir === \"rtl\" && flipRtl,\n        svg: true\n      },\n      fill: \"currentColor\",\n      height: \"100%\",\n      viewBox: `0 0 ${size} ${size}`,\n      width: \"100%\",\n      xmlns: \"http://www.w3.org/2000/svg\"\n    }, paths.map(path => typeof path === \"string\" ? h(\"path\", {\n      d: path\n    }) : h(\"path\", {\n      d: path.d,\n      opacity: \"opacity\" in path ? path.opacity : 1\n    }))));\n  }\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n  async loadIconPathData() {\n    const {\n      icon,\n      scale,\n      visible\n    } = this;\n    if (!isBrowser() || !icon || !visible) {\n      return;\n    }\n    const fetchIconProps = {\n      icon,\n      scale\n    };\n    const pathData = getCachedIconData(fetchIconProps) || (await fetchIcon(fetchIconProps));\n    // While the fetchIcon method is awaiting response, the icon requested can change. This check is to verify the response received belongs to the current icon.\n    if (icon !== this.icon) {\n      return;\n    }\n    this.pathData = pathData;\n  }\n  waitUntilVisible(callback) {\n    this.intersectionObserver = createObserver(\"intersection\", entries => {\n      entries.forEach(entry => {\n        if (entry.isIntersecting) {\n          this.intersectionObserver.disconnect();\n          this.intersectionObserver = null;\n          callback();\n        }\n      });\n    }, {\n      rootMargin: \"50px\"\n    });\n    if (!this.intersectionObserver) {\n      callback();\n      return;\n    }\n    this.intersectionObserver.observe(this.el);\n  }\n  static get assetsDirs() {\n    return [\"assets\"];\n  }\n  get el() {\n    return this;\n  }\n  static get watchers() {\n    return {\n      \"icon\": [\"loadIconPathData\"],\n      \"scale\": [\"loadIconPathData\"]\n    };\n  }\n  static get style() {\n    return CalciteIconStyle0;\n  }\n}, [1, \"calcite-icon\", {\n  \"icon\": [513],\n  \"flipRtl\": [516, \"flip-rtl\"],\n  \"scale\": [513],\n  \"textLabel\": [1, \"text-label\"],\n  \"pathData\": [32],\n  \"visible\": [32]\n}, undefined, {\n  \"icon\": [\"loadIconPathData\"],\n  \"scale\": [\"loadIconPathData\"]\n}]);\nfunction defineCustomElement() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n  const components = [\"calcite-icon\"];\n  components.forEach(tagName => {\n    switch (tagName) {\n      case \"calcite-icon\":\n        if (!customElements.get(tagName)) {\n          customElements.define(tagName, Icon);\n        }\n        break;\n    }\n  });\n}\ndefineCustomElement();\nexport { Icon as I, defineCustomElement as d };\n\n"],
  "mappings": "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",
  "names": ["Icon"]
}
