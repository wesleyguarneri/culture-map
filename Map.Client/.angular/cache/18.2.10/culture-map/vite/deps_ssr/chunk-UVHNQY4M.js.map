{
  "version": 3,
  "sources": ["../../../../../../node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/util/ScreenSizePerspective.glsl.js", "../../../../../../node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/attributes/VerticalOffset.glsl.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { s as e } from \"../../../../../../chunks/vec32.js\";\nimport { create as a } from \"../../../../../../core/libs/gl-matrix-2/factories/vec3f64.js\";\nimport { Float3PassUniform as r } from \"../../shaderModules/Float3PassUniform.js\";\nimport { glsl as c } from \"../../shaderModules/interfaces.js\";\nfunction s(e) {\n  e.vertex.code.add(c`float screenSizePerspectiveViewAngleDependentFactor(float absCosAngle) {\nreturn absCosAngle * absCosAngle * absCosAngle;\n}`), e.vertex.code.add(c`vec3 screenSizePerspectiveScaleFactor(float absCosAngle, float distanceToCamera, vec3 params) {\nreturn vec3(\nmin(params.x / (distanceToCamera - params.y), 1.0),\nscreenSizePerspectiveViewAngleDependentFactor(absCosAngle),\nparams.z\n);\n}`), e.vertex.code.add(c`float applyScreenSizePerspectiveScaleFactorFloat(float size, vec3 factor) {\nreturn mix(size * clamp(factor.x, factor.z, 1.0), size, factor.y);\n}`), e.vertex.code.add(c`float screenSizePerspectiveScaleFloat(float size, float absCosAngle, float distanceToCamera, vec3 params) {\nreturn applyScreenSizePerspectiveScaleFactorFloat(\nsize,\nscreenSizePerspectiveScaleFactor(absCosAngle, distanceToCamera, params)\n);\n}`), e.vertex.code.add(c`vec2 applyScreenSizePerspectiveScaleFactorVec2(vec2 size, vec3 factor) {\nreturn mix(size * clamp(factor.x, factor.z, 1.0), size, factor.y);\n}`), e.vertex.code.add(c`vec2 screenSizePerspectiveScaleVec2(vec2 size, float absCosAngle, float distanceToCamera, vec3 params) {\nreturn applyScreenSizePerspectiveScaleFactorVec2(size, screenSizePerspectiveScaleFactor(absCosAngle, distanceToCamera, params));\n}`);\n}\nfunction t(e) {\n  e.uniforms.add(new r(\"screenSizePerspective\", e => i(e.screenSizePerspective)));\n}\nfunction o(e) {\n  e.uniforms.add(new r(\"screenSizePerspectiveAlignment\", e => i(e.screenSizePerspectiveAlignment || e.screenSizePerspective)));\n}\nfunction i(a) {\n  return e(n, a.parameters.divisor, a.parameters.offset, a.minScaleFactor);\n}\nconst n = a();\nexport { s as ScreenSizePerspective, t as addScreenSizePerspective, o as addScreenSizePerspectiveAlignment };", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { s as e } from \"../../../../../../chunks/vec42.js\";\nimport { create as r } from \"../../../../../../core/libs/gl-matrix-2/factories/vec4f64.js\";\nimport { ScreenSizePerspective as t, addScreenSizePerspectiveAlignment as l } from \"../util/ScreenSizePerspective.glsl.js\";\nimport { addCameraPosition as o } from \"../util/View.glsl.js\";\nimport { Float4PassUniform as c } from \"../../shaderModules/Float4PassUniform.js\";\nimport { glsl as i } from \"../../shaderModules/interfaces.js\";\nfunction a(e, r) {\n  const c = e.vertex;\n  r.hasVerticalOffset ? (f(c), r.hasScreenSizePerspective && (e.include(t), l(c), o(e.vertex, r)), c.code.add(i`\n      vec3 calculateVerticalOffset(vec3 worldPos, vec3 localOrigin) {\n        float viewDistance = length((view * vec4(worldPos, 1.0)).xyz);\n        ${r.spherical ? i`vec3 worldNormal = normalize(worldPos + localOrigin);` : i`vec3 worldNormal = vec3(0.0, 0.0, 1.0);`}\n        ${r.hasScreenSizePerspective ? i`\n            float cosAngle = dot(worldNormal, normalize(worldPos - cameraPosition));\n            float verticalOffsetScreenHeight = screenSizePerspectiveScaleFloat(verticalOffset.x, abs(cosAngle), viewDistance, screenSizePerspectiveAlignment);` : i`\n            float verticalOffsetScreenHeight = verticalOffset.x;`}\n        // Screen sized offset in world space, used for example for line callouts\n        float worldOffset = clamp(verticalOffsetScreenHeight * verticalOffset.y * viewDistance, verticalOffset.z, verticalOffset.w);\n        return worldNormal * worldOffset;\n      }\n\n      vec3 addVerticalOffset(vec3 worldPos, vec3 localOrigin) {\n        return worldPos + calculateVerticalOffset(worldPos, localOrigin);\n      }\n    `)) : c.code.add(i`vec3 addVerticalOffset(vec3 worldPos, vec3 localOrigin) { return worldPos; }`);\n}\nconst s = r();\nfunction f(r) {\n  r.uniforms.add(new c(\"verticalOffset\", (r, t) => {\n    const {\n        minWorldLength: l,\n        maxWorldLength: o,\n        screenLength: c\n      } = r.verticalOffset,\n      i = Math.tan(.5 * t.camera.fovY) / (.5 * t.camera.fullViewport[3]),\n      a = t.camera.pixelRatio || 1;\n    return e(s, c * a, i, l, o);\n  }));\n}\nexport { a as VerticalOffset, f as addVerticalOffset };"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;AAQA,SAASA,GAAEC,IAAG;AACZ,EAAAA,GAAE,OAAO,KAAK,IAAIC;AAAA;AAAA,EAElB,GAAGD,GAAE,OAAO,KAAK,IAAIC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMrB,GAAGD,GAAE,OAAO,KAAK,IAAIC;AAAA;AAAA,EAErB,GAAGD,GAAE,OAAO,KAAK,IAAIC;AAAA;AAAA;AAAA;AAAA;AAAA,EAKrB,GAAGD,GAAE,OAAO,KAAK,IAAIC;AAAA;AAAA,EAErB,GAAGD,GAAE,OAAO,KAAK,IAAIC;AAAA;AAAA,EAErB;AACF;AACA,SAAS,EAAED,IAAG;AACZ,EAAAA,GAAE,SAAS,IAAI,IAAI,EAAE,yBAAyB,CAAAA,OAAK,EAAEA,GAAE,qBAAqB,CAAC,CAAC;AAChF;AACA,SAASC,GAAED,IAAG;AACZ,EAAAA,GAAE,SAAS,IAAI,IAAI,EAAE,kCAAkC,CAAAA,OAAK,EAAEA,GAAE,kCAAkCA,GAAE,qBAAqB,CAAC,CAAC;AAC7H;AACA,SAAS,EAAEE,IAAG;AACZ,SAAO,EAAEC,IAAGD,GAAE,WAAW,SAASA,GAAE,WAAW,QAAQA,GAAE,cAAc;AACzE;AACA,IAAMC,KAAI,EAAE;;;AC7BZ,SAAS,EAAEC,IAAG,GAAG;AACf,QAAM,IAAIA,GAAE;AACZ,IAAE,qBAAqBC,GAAE,CAAC,GAAG,EAAE,6BAA6BD,GAAE,QAAQE,EAAC,GAAGC,GAAE,CAAC,GAAG,EAAEH,GAAE,QAAQ,CAAC,IAAI,EAAE,KAAK,IAAIG;AAAA;AAAA;AAAA,UAGpG,EAAE,YAAYA,4DAA2DA,2CAA0C;AAAA,UACnH,EAAE,2BAA2BA;AAAA;AAAA,kKAE2HA;AAAA,iEACjG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAS5D,KAAK,EAAE,KAAK,IAAIA,gFAA+E;AACpG;AACA,IAAMD,KAAIE,GAAE;AACZ,SAASH,GAAE,GAAG;AACZ,IAAE,SAAS,IAAI,IAAID,GAAE,kBAAkB,CAACK,IAAGC,OAAM;AAC/C,UAAM;AAAA,MACF,gBAAgB;AAAA,MAChB,gBAAgBH;AAAA,MAChB,cAAc;AAAA,IAChB,IAAIE,GAAE,gBACNE,KAAI,KAAK,IAAI,MAAKD,GAAE,OAAO,IAAI,KAAK,MAAKA,GAAE,OAAO,aAAa,CAAC,IAChEE,KAAIF,GAAE,OAAO,cAAc;AAC7B,WAAO,EAAEJ,IAAG,IAAIM,IAAGD,IAAG,GAAGJ,EAAC;AAAA,EAC5B,CAAC,CAAC;AACJ;",
  "names": ["s", "e", "o", "a", "n", "e", "f", "s", "o", "n", "r", "t", "i", "a"]
}
