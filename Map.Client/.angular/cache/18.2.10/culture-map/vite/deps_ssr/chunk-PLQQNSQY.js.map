{
  "version": 3,
  "sources": ["../../../../../../node_modules/@arcgis/core/layers/support/rasterFunctions/rasterProjectionHelper.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport \"../../../geometry.js\";\nimport { isSome as e } from \"../../../core/arrayUtils.js\";\nimport t from \"../../../core/Error.js\";\nimport { getMetersPerUnitForSR as n } from \"../../../core/unitUtils.js\";\nimport { P as i, a as o, g as r, h as s, j as a } from \"../../../chunks/pe.js\";\nimport { canProjectWithoutEngine as l, isLoaded as c, load as f, getTransformation as u, project as m } from \"../../../geometry/projection.js\";\nimport { getInfo as x } from \"../../../geometry/support/spatialReferenceUtils.js\";\nimport h from \"../../../geometry/Extent.js\";\nimport p from \"../../../geometry/Point.js\";\nimport g from \"../../../geometry/Polygon.js\";\nimport y from \"../../../geometry/SpatialReference.js\";\nvar d;\nfunction M(e, t, n) {\n  return !l(e, t, n);\n}\nfunction w(e, n, i) {\n  const o = M(e, n, i);\n  if (o && !c()) throw new t(\"rasterprojectionhelper-project\", \"projection engine is not loaded\");\n  return o;\n}\n!function (e) {\n  e[e.None = 0] = \"None\", e[e.North = 1] = \"North\", e[e.South = 2] = \"South\", e[e.Both = 3] = \"Both\";\n}(d || (d = {}));\nconst R = (e, t, n, i = 0) => {\n    if (1 === n[0]) return [0, 0];\n    let o = 1,\n      r = -1,\n      s = 1,\n      a = -1;\n    for (let g = 0; g < e.length; g += 2) isNaN(e[g]) || (o = o > e[g] ? e[g] : o, r = r > e[g] ? r : e[g], s = s > e[g + 1] ? e[g + 1] : s, a = a > e[g + 1] ? a : e[g + 1]);\n    const {\n        cols: l,\n        rows: c\n      } = t,\n      f = (r - o) / l / n[0],\n      u = (a - s) / c / n[1],\n      m = 2 * i;\n    let x = 0,\n      h = !1,\n      p = [0, 0];\n    for (let g = 0; g < l - 3; g++) {\n      for (let t = 0; t < c - 3; t++) {\n        const n = g * c * 2 + 2 * t,\n          i = (e[n] + e[n + 4] + e[n + 4 * c] + e[n + 4 * c + 4]) / 4,\n          o = (e[n + 1] + e[n + 5] + e[n + 4 * c + 1] + e[n + 4 * c + 5]) / 4,\n          r = Math.abs((i - e[n + 2 * c + 2]) / f),\n          s = Math.abs((o - e[n + 2 * c + 3]) / u);\n        if (r + s > x && (x = r + s, p = [r, s]), m && x > m) {\n          h = !0;\n          break;\n        }\n      }\n      if (h) break;\n    }\n    return p;\n  },\n  S = {\n    3395: 20037508.342789244,\n    3410: 17334193.943686873,\n    3857: 20037508.342788905,\n    3975: 17367530.445161372,\n    4087: 20037508.342789244,\n    4088: 20015108.787169147,\n    6933: 17367530.445161372,\n    32662: 20037508.342789244,\n    53001: 20015086.79602057,\n    53002: 10007543.39801029,\n    53003: 20015086.79602057,\n    53004: 20015086.79602057,\n    53016: 14152803.599503474,\n    53017: 17333573.624304302,\n    53034: 20015086.79602057,\n    53079: 20015114.352186374,\n    53080: 20015114.352186374,\n    54001: 20037508.342789244,\n    54002: 10018754.171394624,\n    54003: 20037508.342789244,\n    54004: 20037508.342789244,\n    54016: 14168658.027268292,\n    54017: 17367530.44516137,\n    54034: 20037508.342789244,\n    54079: 20037508.342789244,\n    54080: 20037508.342789244,\n    54100: 20037508.342789244,\n    54101: 20037508.342789244\n  },\n  P = 32,\n  b = 4,\n  G = b,\n  k = new Map(),\n  N = new Map(),\n  E = 500;\nasync function T() {\n  c() || (await f());\n}\nfunction v(e, t, n) {\n  w(e.spatialReference, t);\n  return n ? u(t, e.spatialReference, e) : u(e.spatialReference, t, e);\n}\nfunction C(e, t, i, o = null) {\n  const r = e.spatialReference;\n  if (r.equals(t)) return e;\n  w(r, t, o);\n  const s = i.center,\n    a = new h({\n      xmin: s.x - e.x / 2,\n      xmax: s.x + e.x / 2,\n      ymin: s.y - e.y / 2,\n      ymax: s.y + e.y / 2,\n      spatialReference: r\n    }),\n    l = m(a, t, o),\n    c = D(t);\n  let f;\n  if (null == l || null != c && l.width >= c) {\n    const i = n(r) / n(t);\n    f = {\n      x: e.x * i,\n      y: e.y * i\n    };\n  } else f = {\n    x: l.width,\n    y: l.height\n  };\n  return f;\n}\nfunction _(e, t = .01) {\n  return n(e) ? t / n(e) : 0;\n}\nfunction j(e, t, n = null, i = !0) {\n  const o = e.spatialReference;\n  if (o.equals(t)) return e;\n  w(o, t, n);\n  const r = m(e, t, n);\n  return i && r ? (z([e], [r], o, t), r) : r;\n}\nfunction z(e, t, n, i) {\n  const o = H(n, !0),\n    r = H(i, !0),\n    s = _(n, E),\n    a = _(i, E);\n  if (s && null != o && null != r) for (let l = 0; l < e.length; l++) {\n    const n = t[l];\n    if (!n) continue;\n    const {\n        x: i\n      } = e[l],\n      {\n        x: c\n      } = n;\n    c >= r[1] - a && Math.abs(i - o[0]) < s ? n.x -= r[1] - r[0] : c <= r[0] + a && Math.abs(i - o[1]) < s && (n.x += r[1] - r[0]);\n  }\n}\nfunction L(e) {\n  const {\n    inSR: t,\n    outSR: n,\n    datumTransformation: i,\n    preferPE: o\n  } = e;\n  if (t.equals(n)) {\n    const {\n      points: t\n    } = F(e, null);\n    return t;\n  }\n  if (t.isWebMercator && n.isWGS84 || t.isWGS84 && n.isWebMercator) return O(e);\n  if (w(t, n, i) && o) {\n    if (t.isGeographic) return W(e);\n    if (null != A(t)) return W(e);\n  }\n  return I(e);\n}\nfunction I(e) {\n  const {\n      points: t\n    } = F(e, null),\n    {\n      inSR: n,\n      outSR: i,\n      datumTransformation: o\n    } = e,\n    r = t.map(e => new p(e[0], e[1], n)),\n    s = m(r, i, o);\n  return o && z(r, s, n, i), s.map(e => e ? [e.x, e.y] : [NaN, NaN]);\n}\nfunction W(e) {\n  const {\n      inSR: t,\n      outSR: n,\n      datumTransformation: a\n    } = e,\n    l = A(t),\n    {\n      points: c,\n      mask: f\n    } = F(e, l);\n  if (!t.isGeographic) {\n    const e = t.wkid ? i.coordsys(t.wkid) : i.fromString(t.isGeographic ? o.PE_TYPE_GEOGCS : o.PE_TYPE_PROJCS, t.wkt2 || t.wkt);\n    r.projToGeog(e, c.length, c);\n  }\n  if (null != a && a.steps.length) {\n    let e;\n    const t = 179.9955;\n    if (n.isGeographic && (e = c.map(([e]) => e > t ? 1 : e < -t ? -1 : 0)), a.steps.forEach(e => {\n      const t = e.wkid ? i.geogtran(e.wkid) : i.fromString(o.PE_TYPE_GEOGTRAN, e.wkt);\n      s.geogToGeog(t, c.length, c, null, e.isInverse ? o.PE_TRANSFORM_2_TO_1 : o.PE_TRANSFORM_1_TO_2);\n    }), e) for (let n = 0; n < c.length; n++) {\n      const i = e[n],\n        o = c[n][0],\n        r = o > t ? 1 : o < -t ? -1 : 0;\n      i && r && i !== r && (c[n][0] = i > 0 ? o + 360 : o - 360);\n    }\n  }\n  if (!n.isGeographic) {\n    const e = A(n, !0),\n      t = null != e && e.isEnvelope ? [e.bbox[1], e.bbox[3]] : [-90, 90];\n    Y(c, t);\n    const s = n.wkid ? i.coordsys(n.wkid) : i.fromString(n.isGeographic ? o.PE_TYPE_GEOGCS : o.PE_TYPE_PROJCS, n.wkt2 || n.wkt);\n    r.geogToProj(s, c.length, c);\n  }\n  let u = c;\n  if (f && c.length !== f.length) {\n    u = [];\n    for (let e = 0, t = 0; e < f.length; e++) f[e] ? u.push(c[t++]) : u.push([NaN, NaN]);\n  }\n  return u;\n}\nfunction O(e) {\n  const {\n    cols: t,\n    rows: n,\n    xres: i,\n    yres: o,\n    usePixelCenter: r,\n    inSR: s,\n    outSR: a\n  } = e;\n  let {\n    xmin: l,\n    ymax: c\n  } = e;\n  r && (l += i / 2, c -= o / 2);\n  const f = [],\n    u = [],\n    x = Math.max(t, n);\n  for (let g = 0; g < x; g++) {\n    const e = l + i * Math.min(t, g),\n      r = c - o * Math.min(n, g),\n      x = m(new p({\n        x: e,\n        y: r,\n        spatialReference: s\n      }), a);\n    g <= t && f.push(x.x), g <= n && u.push(x.y);\n  }\n  const h = [];\n  for (let m = 0; m < t; m++) for (let e = 0; e < n; e++) h.push([f[m], u[e]]);\n  return h;\n}\nfunction A(e, t = !1) {\n  let n = e.wkid || e.wkt2 || e.wkt;\n  if (!n || e.isGeographic) return null;\n  if (n = String(n), k.has(n)) {\n    const e = k.get(n);\n    return t ? e?.gcs : e?.pcs;\n  }\n  const r = e.wkid ? i.coordsys(e.wkid) : i.fromString(e.isGeographic ? o.PE_TYPE_GEOGCS : o.PE_TYPE_PROJCS, e.wkt2 || e.wkt),\n    s = B(r, _(e, 1e-4)),\n    a = B(r, 0, !0);\n  return k.set(n, {\n    pcs: s,\n    gcs: a\n  }), t ? a : s;\n}\nfunction B(e, t = 0, n = !1) {\n  const i = a.generate(e),\n    o = n ? e.horizonGcsGenerate() : e.horizonPcsGenerate();\n  if (!i || !o?.length) return null;\n  let r = !1,\n    s = o.find(e => 1 === e.getInclusive() && 1 === e.getKind());\n  if (!s) {\n    if (s = o.find(e => 1 === e.getInclusive() && 0 === e.getKind()), !s) return null;\n    r = !0;\n  }\n  const l = n ? 0 : (2 === i.getNorthPoleLocation() ? 1 : 0) | (2 === i.getSouthPoleLocation() ? 2 : 0),\n    c = i.isPannableRectangle(),\n    f = s.getCoord();\n  if (r) return {\n    isEnvelope: r,\n    isPannable: c,\n    vertices: f,\n    coef: null,\n    bbox: [f[0][0] - t, f[0][1] - t, f[1][0] + t, f[1][1] + t],\n    poleLocation: l\n  };\n  let u = 0;\n  const m = [];\n  let [x, h] = f[0],\n    [p, g] = f[0];\n  for (let a = 0, y = f.length; a < y; a++) {\n    u++, u === y && (u = 0);\n    const [e, t] = f[a],\n      [n, i] = f[u];\n    if (i === t) m.push([e, n, t, i, 2]);else {\n      const o = (n - e) / (i - t || 1e-4),\n        r = e - o * t;\n      t < i ? m.push([o, r, t, i, 0]) : m.push([o, r, i, t, 1]);\n    }\n    x = x < e ? x : e, h = h < t ? h : t, p = p > e ? p : e, g = g > t ? g : t;\n  }\n  return {\n    isEnvelope: !1,\n    isPannable: c,\n    vertices: f,\n    coef: m,\n    bbox: [x, h, p, g],\n    poleLocation: l\n  };\n}\nfunction F(e, t) {\n  const n = [],\n    {\n      cols: i,\n      rows: o,\n      xres: r,\n      yres: s,\n      usePixelCenter: a\n    } = e;\n  let {\n    xmin: l,\n    ymax: c\n  } = e;\n  if (a && (l += r / 2, c -= s / 2), null == t) {\n    for (let e = 0; e < i; e++) for (let t = 0; t < o; t++) n.push([l + r * e, c - s * t]);\n    return {\n      points: n\n    };\n  }\n  const f = new Uint8Array(i * o);\n  if (t.isEnvelope) {\n    const {\n      bbox: [e, a, u, m]\n    } = t;\n    for (let x = 0, h = 0; x < i; x++) {\n      const i = l + r * x,\n        p = t.isPannable || i >= e && i <= u;\n      for (let e = 0; e < o; e++, h++) {\n        const t = c - s * e;\n        p && t >= a && t <= m && (n.push([i, t]), f[h] = 1);\n      }\n    }\n    return {\n      points: n,\n      mask: f\n    };\n  }\n  const u = t.coef,\n    m = [];\n  for (let x = 0; x < o; x++) {\n    const e = c - s * x,\n      t = [],\n      n = [];\n    for (let o = 0; o < u.length; o++) {\n      const [i, r, s, a, l] = u[o];\n      if (e === s && s === a) t.push(i), t.push(r), n.push(2), n.push(2);else if (e >= s && e <= a) {\n        const o = i * e + r;\n        t.push(o), n.push(l);\n      }\n    }\n    let i = t;\n    if (t.length > 2) {\n      let e = 2 === n[0] ? 0 : n[0],\n        o = t[0];\n      i = [];\n      for (let r = 1; r < n.length; r++) 2 === n[r] && r !== n.length - 1 || (n[r] !== e && (i.push(0 === e ? Math.min(o, t[r - 1]) : Math.max(o, t[r - 1])), e = n[r], o = t[r]), r === n.length - 1 && i.push(0 === n[r] ? Math.min(o, t[r]) : Math.max(o, t[r])));\n      i.sort((e, t) => e - t);\n    } else t[0] > t[1] && (i = [t[1], t[0]]);\n    m.push(i);\n  }\n  for (let x = 0, h = 0; x < i; x++) {\n    const e = l + r * x;\n    for (let t = 0; t < o; t++, h++) {\n      const i = c - s * t,\n        o = m[t];\n      if (2 === o.length) e >= o[0] && e <= o[1] && (n.push([e, i]), f[h] = 1);else if (o.length > 2) {\n        let t = !1;\n        for (let n = 0; n < o.length; n += 2) if (e >= o[n] && e <= o[n + 1]) {\n          t = !0;\n          break;\n        }\n        t && (n.push([e, i]), f[h] = 1);\n      }\n    }\n  }\n  return {\n    points: n,\n    mask: f\n  };\n}\nfunction Y(e, t) {\n  const [n, i] = t;\n  for (let o = 0; o < e.length; o++) {\n    const t = e[o][1];\n    (t < n || t > i) && (e[o] = [NaN, NaN]);\n  }\n}\nfunction q(e, t) {\n  const n = D(e[0].spatialReference);\n  if (e.length < 2 || null == n) return e[0];\n  if (t = t ?? _(e[0].spatialReference), 1 === (e = e.filter(e => e.width > t)).length) return e[0];\n  let {\n    xmin: i,\n    xmax: o,\n    ymin: r,\n    ymax: s\n  } = e[0];\n  for (let a = 1; a < e.length; a++) {\n    const t = e[a];\n    o = t.xmax + n * a, r = Math.min(r, t.ymin), s = Math.max(s, t.ymax);\n  }\n  return new h({\n    xmin: i,\n    xmax: o,\n    ymin: r,\n    ymax: s,\n    spatialReference: e[0].spatialReference\n  });\n}\nfunction J(t, n, i = null, o = !0) {\n  const r = t.spatialReference;\n  if (r.equals(n)) return t;\n  const s = V(t),\n    a = D(r, !0),\n    l = D(n);\n  if (0 === s || null == a || null == l) {\n    const e = K(t, n, i, o);\n    if (null == a && null != l && Math.abs(e.width - l) < _(n) && c()) {\n      const i = A(r);\n      if (null != i && i.poleLocation === d.None && t.width < (i.bbox[2] - i.bbox[0]) / 2) return X(t, n) || e;\n    }\n    return e;\n  }\n  const f = t.clone().normalize();\n  if (1 === f.length && t.xmax < a && t.xmax - a / 2 > _(r)) {\n    const {\n      xmin: e,\n      xmax: n\n    } = t;\n    for (let i = 0; i <= s; i++) {\n      const o = 0 === i ? e : -a / 2,\n        l = i === s ? n - a * i : a / 2;\n      f[i] = new h({\n        xmin: o,\n        xmax: l,\n        ymin: t.ymin,\n        ymax: t.ymax,\n        spatialReference: r\n      });\n    }\n  }\n  return q(f.map(e => K(e, n, i, o)).filter(e));\n}\nfunction U(e, t, n) {\n  if (\"extent\" === e.type) {\n    const {\n      xmin: t,\n      ymin: n,\n      xmax: i,\n      ymax: o,\n      spatialReference: r\n    } = e;\n    e = new g({\n      rings: [[[t, o], [i, o], [i, n], [t, n], [t, o]]],\n      spatialReference: r\n    });\n  }\n  return e.spatialReference.equals(t) ? e : (w(e.spatialReference, t, n), m(e, t, n));\n}\nfunction X(e, t) {\n  const n = D(t);\n  if (null == n) return null;\n  let {\n    xmin: i,\n    ymin: o,\n    xmax: r,\n    ymax: s\n  } = e;\n  const a = e.spatialReference,\n    l = new g({\n      spatialReference: a,\n      rings: [[[i, o], [r, o], [r, s], [i, s], [i, o]]]\n    }),\n    c = m(l, t);\n  if (2 !== c.rings.length || !c.rings[0].length || !c.rings[1].length) return null;\n  const {\n      rings: f\n    } = c,\n    u = _(a),\n    x = new h({\n      spatialReference: t\n    });\n  for (let m = 0; m < 2; m++) {\n    i = r = f[m][0][0], o = s = f[m][0][1];\n    for (let e = 0; e < f[m].length; e++) i = i > f[m][e][0] ? f[m][e][0] : i, r = r < f[m][e][0] ? f[m][e][0] : r, o = o > f[m][e][1] ? f[m][e][1] : o, s = s < f[m][e][1] ? f[m][e][1] : s;\n    if (0 === m) x.ymin = o, x.ymax = s, x.xmin = i, x.xmax = r;else if (x.ymin = Math.min(x.ymin, o), x.ymax = Math.max(x.ymax, s), Math.abs(r - n / 2) < u) x.xmin = i, x.xmax = x.xmax + n;else {\n      if (!(Math.abs(i + n / 2) < u)) return null;\n      x.xmax = r + n;\n    }\n  }\n  return x;\n}\nfunction K(e, t, n = null, i = !0, o = !0) {\n  const r = e.spatialReference;\n  if (r.equals(t) || !t) return e;\n  w(r, t, n);\n  const s = m(e, t, n);\n  if (o && t.isWebMercator && s && (s.ymax = Math.min(20037508.342787, s.ymax), s.ymin = Math.max(-20037508.342787, s.ymin), s.ymin >= s.ymax)) return null;\n  if (!i || !s) return s;\n  const a = H(r, !0),\n    l = H(t, !0);\n  if (null == a || null == l) return s;\n  const c = _(r, .001),\n    f = _(r, E),\n    u = _(t, .001);\n  if (Math.abs(s.xmin - l[0]) < u && Math.abs(s.xmax - l[1]) < u) {\n    const i = Math.abs(e.xmin - a[0]),\n      o = Math.abs(a[1] - e.xmax);\n    if (i < c && o > f) {\n      s.xmin = l[0];\n      const i = [];\n      i.push(new p(e.xmax, e.ymin, r)), i.push(new p(e.xmax, (e.ymin + e.ymax) / 2, r)), i.push(new p(e.xmax, e.ymax, r));\n      const o = i.map(e => j(e, t, n)).filter(e => !isNaN(e?.x)).map(e => e.x);\n      s.xmax = Math.max.apply(null, o);\n    }\n    if (o < c && i > f) {\n      s.xmax = l[1];\n      const i = [];\n      i.push(new p(e.xmin, e.ymin, r)), i.push(new p(e.xmin, (e.ymin + e.ymax) / 2, r)), i.push(new p(e.xmin, e.ymax, r));\n      const o = i.map(e => j(e, t, n)).filter(e => !isNaN(e?.x)).map(e => e.x);\n      s.xmin = Math.min.apply(null, o);\n    }\n  } else {\n    const e = _(t, .001);\n    Math.abs(s.xmin - l[0]) < e && (s.xmin = l[0]), Math.abs(s.xmax - l[1]) < e && (s.xmax = l[1]);\n  }\n  return s;\n}\nfunction D(e, t = !1) {\n  if (!e) return null;\n  const n = t ? 20037508.342787 : 20037508.342788905;\n  return e.isWebMercator ? 2 * n : e.wkid && e.isGeographic ? 360 : 2 * S[e.wkid] || null;\n}\nfunction H(e, t = !1) {\n  if (e.isGeographic) return [-180, 180];\n  const n = D(e, t);\n  return null != n ? [-n / 2, n / 2] : null;\n}\nfunction Q(e, t, n, i) {\n  let o = (e - t) / n;\n  return o - Math.floor(o) != 0 ? o = Math.floor(o) : i && (o -= 1), o;\n}\nfunction V(e, t = !1) {\n  const n = D(e.spatialReference);\n  if (null == n) return 0;\n  const i = t ? 0 : -(n / 2),\n    o = _(e.spatialReference),\n    r = !t && Math.abs(e.xmax - n / 2) < o ? n / 2 : e.xmax,\n    s = !t && Math.abs(e.xmin + n / 2) < o ? -n / 2 : e.xmin;\n  return Q(r, i, n, !0) - Q(s, i, n, !1);\n}\nfunction Z(e) {\n  const t = e.storageInfo.origin.x,\n    n = D(e.spatialReference, !0);\n  if (null == n) return {\n    originX: t,\n    halfWorldWidth: null,\n    pyramidsInfo: null\n  };\n  const i = n / 2,\n    {\n      nativePixelSize: o,\n      storageInfo: r,\n      extent: s\n    } = e,\n    {\n      maximumPyramidLevel: a,\n      blockWidth: l,\n      pyramidScalingFactor: c\n    } = r;\n  let f = o.x;\n  const u = [],\n    m = null != e.transform && \"gcs-shift\" === e.transform.type,\n    x = t + (m ? 0 : i),\n    h = m ? n - t : i - t;\n  for (let p = 0; p <= a; p++) {\n    const e = (s.xmax - t) / f / l,\n      n = e - Math.floor(e) == 0 ? e : Math.ceil(e),\n      i = h / f / l,\n      o = i - Math.floor(i) == 0 ? i : Math.ceil(i),\n      r = Math.floor(x / f / l),\n      a = Math.round(x / f) % l,\n      m = (l - Math.round(h / f) % l) % l;\n    u.push({\n      resolutionX: f,\n      blockWidth: l,\n      datasetColumnCount: n,\n      worldColumnCountFromOrigin: o,\n      leftMargin: a,\n      rightPadding: m,\n      originColumnOffset: r\n    }), f *= c;\n  }\n  return {\n    originX: t,\n    halfWorldWidth: i,\n    pyramidsInfo: u,\n    hasGCSSShiftTransform: m\n  };\n}\nfunction $(e) {\n  if (!e || e.isGeographic) return e;\n  const t = String(e.wkid || e.wkt2 || e.wkt);\n  let n;\n  if (N.has(t)) n = N.get(t);else {\n    n = (e.wkid ? i.coordsys(e.wkid) : i.fromString(o.PE_TYPE_PROJCS, e.wkt2 || e.wkt)).getGeogcs().getCode(), N.set(t, n);\n  }\n  return new y({\n    wkid: n\n  });\n}\nfunction ee(e) {\n  const t = e.isAdaptive && null == e.spacing;\n  let n = e.spacing || [P, P],\n    i = te(e),\n    o = {\n      cols: i.size[0] + 1,\n      rows: i.size[1] + 1\n    };\n  const r = i.outofBoundPointCount > 0 && i.outofBoundPointCount < i.offsets.length / 2;\n  let s = i.outofBoundPointCount === i.offsets.length / 2 || t && r ? [0, 0] : R(i.offsets, o, n, G);\n  const a = (s[0] + s[1]) / 2,\n    l = e.projectedExtent.spatialReference,\n    c = e.srcBufferExtent.spatialReference;\n  if (t && (r || a > G)) {\n    M(l, c, e.datumTransformation) && (l.isGeographic || A(l)), n = [b, b], i = te({\n      ...e,\n      spacing: n\n    }), o = {\n      cols: i.size[0] + 1,\n      rows: i.size[1] + 1\n    }, s = R(i.offsets, o, n, G);\n  }\n  if (i.error = s, n[0] > 1 && (i.coefficients = ne(i.offsets, o, r)), e.includeGCSGrid && !l.isGeographic && !l.isWebMercator) if (c.isGeographic) i.gcsGrid = {\n    offsets: i.offsets,\n    coefficients: i.coefficients,\n    spacing: n\n  };else {\n    const t = A(l);\n    if (null != t && !t.isEnvelope) {\n      const t = $(l),\n        s = J(e.projectedExtent, t),\n        {\n          offsets: a\n        } = te({\n          ...e,\n          srcBufferExtent: s,\n          spacing: n\n        }),\n        c = ne(a, o, r);\n      i.gcsGrid = {\n        offsets: a,\n        coefficients: c,\n        spacing: n\n      };\n    }\n  }\n  return i;\n}\nfunction te(e) {\n  const {\n      projectedExtent: t,\n      srcBufferExtent: n,\n      pixelSize: i,\n      datumTransformation: o,\n      rasterTransform: r\n    } = e,\n    s = t.spatialReference,\n    a = n.spatialReference,\n    l = w(s, a),\n    {\n      xmin: c,\n      ymin: f,\n      xmax: u,\n      ymax: m\n    } = t,\n    x = D(a),\n    h = null != x && (e.hasWrapAround || \"gcs-shift\" === r?.type),\n    g = e.spacing || [P, P],\n    y = g[0] * i.x,\n    d = g[1] * i.y,\n    M = 1 === g[0],\n    R = Math.ceil((u - c) / y - .1 / g[0]) + (M ? 0 : 1),\n    S = Math.ceil((m - f) / d - .1 / g[1]) + (M ? 0 : 1),\n    G = L({\n      cols: R,\n      rows: S,\n      xmin: c,\n      ymax: m,\n      xres: y,\n      yres: d,\n      inSR: s,\n      outSR: a,\n      datumTransformation: o,\n      preferPE: g[0] <= b,\n      usePixelCenter: M\n    }),\n    k = [];\n  let N,\n    T = 0;\n  const v = M ? -1 : NaN,\n    {\n      xmin: C,\n      xmax: j,\n      ymax: z,\n      width: I,\n      height: W\n    } = n,\n    O = _(a, E),\n    B = null != x && C > 0 && j > x / 2;\n  let F = !1;\n  if (l) {\n    const e = A(s);\n    F = null != e && e.poleLocation > 0;\n  }\n  for (let w = 0; w < R; w++) {\n    const e = [];\n    for (let t = 0; t < S; t++) {\n      let n = G[w * S + t];\n      if (h && n[0] > j && n[0] > x / 2 - O ? n[0] -= x : h && 0 === w && n[0] < 0 && B && !r && (n[0] += x), !n || isNaN(n[0]) || isNaN(n[1])) k.push(v), k.push(v), e.push(null), T++;else {\n        if (r) {\n          const e = r.inverseTransform(new p({\n            x: n[0],\n            y: n[1],\n            spatialReference: a\n          }));\n          n = [e.x, e.y];\n        }\n        e.push(n), w > 0 && h && N[t] && n[0] < N[t][0] && (n[0] += x, F && n[0] > j && n[0] > x && (n[0] -= x)), k.push((n[0] - C) / I), k.push((z - n[1]) / W);\n      }\n    }\n    N = e;\n  }\n  return {\n    offsets: k,\n    error: null,\n    coefficients: null,\n    outofBoundPointCount: T,\n    spacing: g,\n    size: M ? [R, S] : [R - 1, S - 1]\n  };\n}\nfunction ne(e, t, n) {\n  const {\n      cols: i,\n      rows: o\n    } = t,\n    r = new Float32Array((i - 1) * (o - 1) * 2 * 6),\n    s = new Float32Array([-0, -1, 1, -1, 1, -0, 1, -0, -0]),\n    a = new Float32Array([-1, 1, 0, 0, -1, 1, 1, 0, 0]);\n  for (let l = 0; l < i - 1; l++) {\n    for (let t = 0; t < o - 1; t++) {\n      let n = l * o * 2 + 2 * t;\n      const c = e[n],\n        f = e[n + 1],\n        u = e[n + 2],\n        m = e[n + 3];\n      n += 2 * o;\n      const x = e[n],\n        h = e[n + 1],\n        p = e[n + 2],\n        g = e[n + 3];\n      let y = 0,\n        d = 12 * (t * (i - 1) + l);\n      for (let e = 0; e < 3; e++) r[d++] = s[y++] * c + s[y++] * u + s[y++] * p;\n      y = 0;\n      for (let e = 0; e < 3; e++) r[d++] = s[y++] * f + s[y++] * m + s[y++] * g;\n      y = 0;\n      for (let e = 0; e < 3; e++) r[d++] = a[y++] * c + a[y++] * x + a[y++] * p;\n      y = 0;\n      for (let e = 0; e < 3; e++) r[d++] = a[y++] * f + a[y++] * h + a[y++] * g;\n    }\n    if (n) for (let e = 0; e < r.length; e++) isNaN(r[e]) && (r[e] = -1);\n  }\n  return r;\n}\nfunction ie(e, t) {\n  const n = e.clone().normalize();\n  return 1 === n.length ? n[0] : q(n, t);\n}\nfunction oe(e) {\n  const {\n      spatialReference: t\n    } = e,\n    n = x(t);\n  if (!n) return e;\n  const [i, o] = n.valid,\n    r = o - i;\n  let s = 0;\n  if (e.xmin < i) {\n    const t = i - e.xmin;\n    s = Math.ceil(t / r);\n  } else if (e.xmin > o) {\n    const t = e.xmin - o;\n    s = -Math.ceil(t / r);\n  }\n  return new h({\n    spatialReference: e.spatialReference,\n    xmin: e.xmin + s * r,\n    ymin: e.ymin,\n    xmax: e.xmax + s * r,\n    ymax: e.ymax\n  });\n}\nfunction re(e, t, i) {\n  const {\n    storageInfo: o,\n    pixelSize: r\n  } = t;\n  let s = 0,\n    a = !1;\n  const {\n      pyramidResolutions: l\n    } = o,\n    c = \"mixed\" === o.tileInfo.format?.toLowerCase() ? Math.max(1, Math.min(3, o.tileInfo.dpi / 96)) : 1,\n    f = (e.x + e.y) / 2 / c;\n  if (null != l && l.length) {\n    const e = l[l.length - 1],\n      o = (e.x + e.y) / 2,\n      c = (r.x + r.y) / 2;\n    if (f <= c) s = 0;else if (f >= o) s = l.length, a = f / o > 8;else {\n      let e,\n        t = c;\n      for (let n = 1; n <= l.length; n++) {\n        if (e = (l[n - 1].x + l[n - 1].y) / 2, f <= e) {\n          f === e ? s = n : \"down\" === i ? (s = n - 1, a = f / t > 8) : s = \"up\" === i || f - t > e - f || f / t > 2 ? n : n - 1;\n          break;\n        }\n        t = e;\n      }\n    }\n    const u = 0 === s ? r : l[s - 1];\n    if (a) {\n      Math.min(u.x, u.y) * n(t.spatialReference) > 19567 && (a = !1);\n    }\n    return {\n      pyramidLevel: s,\n      pyramidResolution: new p({\n        x: u.x,\n        y: u.y,\n        spatialReference: t.spatialReference\n      }),\n      excessiveReading: a\n    };\n  }\n  const u = Math.log(e.x / r.x) / Math.LN2,\n    m = Math.log(e.y / r.y) / Math.LN2,\n    x = t.storageInfo.maximumPyramidLevel || 0;\n  s = \"down\" === i ? Math.floor(Math.min(u, m)) : \"up\" === i ? Math.ceil(Math.max(u, m)) : Math.round((u + m) / 2), s < 0 ? s = 0 : s > x && (a = s > x + 3, s = x);\n  const h = 2 ** s;\n  return {\n    pyramidLevel: s,\n    pyramidResolution: new p({\n      x: h * t.nativePixelSize.x,\n      y: h * t.nativePixelSize.y,\n      spatialReference: t.spatialReference\n    }),\n    excessiveReading: a\n  };\n}\nfunction se(e, t) {\n  const {\n      pixelSize: n,\n      extent: i\n    } = e,\n    o = v(i, t, !1);\n  return J(ie(i, (n.x + n.y) / 16), t, o);\n}\nfunction ae(e, t, i) {\n  const o = i?.tileSize ?? 512,\n    r = i?.alignGlobalDatasetWithAGOL ?? !0,\n    s = !!i?.limitToSrcResolution,\n    {\n      extent: a,\n      spatialReference: l,\n      pixelSize: c\n    } = e,\n    f = C(new p({\n      x: c.x,\n      y: c.y,\n      spatialReference: l\n    }), t, a);\n  if (null == f) return {\n    projectedPixelSize: null,\n    scales: null,\n    srcResolutions: null,\n    isCustomTilingScheme: !1\n  };\n  const u = (f.x + f.y) / 2,\n    m = n(t),\n    x = u * m * 96 * 39.37,\n    h = t.isGeographic ? 256 / o * 295828763.7958547 : 256 / o * 591657527.591555;\n  let g = \"vector-magdir\" === e.dataType || \"vector-uv\" === e.dataType;\n  const y = se(e, t),\n    d = Math.min(Math.ceil(Math.log(Math.min(e.width, e.height) / 32) / Math.LN2), Math.ceil(Math.log(h / 2 / x) / Math.LN2));\n  if (!g && r && (t.isGeographic || t.isWebMercator)) {\n    const n = D(t);\n    if (g = V(y) > 0 || null != n && y.width > n / 4, !g && null != n) {\n      let t = -1;\n      if (d < 3) t = 2 ** d * u * o;else if (e.storageInfo) {\n        const {\n          maximumPyramidLevel: n = 0,\n          pyramidScalingFactor: i = 2\n        } = e.storageInfo;\n        t = i ** n * u * o;\n      }\n      const i = Math.ceil(n / t);\n      g = 1 === i || 2 === i && n / 2 - y.xmax < t;\n    }\n  }\n  let M,\n    w = x;\n  const R = 1.001,\n    S = Math.min(2, Math.max(1.414, e.storageInfo?.pyramidScalingFactor || 2));\n  if (g) {\n    w = h;\n    const e = t.isGeographic ? 1341104507446289e-21 : .29858214164761665,\n      n = e * (96 * m * 39.37),\n      i = t.isGeographic ? 4326 : 3857;\n    M = C(new p({\n      x: e,\n      y: e,\n      spatialReference: {\n        wkid: i\n      }\n    }), l, y), M.x *= w / n, M.y *= w / n;\n  } else {\n    M = {\n      x: c.x,\n      y: c.y\n    };\n    let e = 0;\n    for (; w < h * (R / 2) && e < d;) e++, w *= S, M.x *= S, M.y *= S;\n    Math.max(w, h) / Math.min(w, h) <= R && (w = h);\n  }\n  const P = [w],\n    b = [{\n      x: M.x,\n      y: M.y\n    }],\n    G = 70.5310735,\n    k = Math.min(G, x) / R;\n  for (; w >= k;) w /= S, M.x /= S, M.y /= S, P.push(w), b.push({\n    x: M.x,\n    y: M.y\n  });\n  if (s) {\n    const e = .001 * c.x;\n    let t = b.findIndex(t => t.x >= c.x - e && t.x <= c.x + e);\n    t > -1 ? (b.length = t + 1, P.length = t + 1) : (t = b.findIndex(t => t.x <= c.x + e), t > 0 && (b.length = t, P.length = t));\n  }\n  return {\n    projectedPixelSize: f,\n    scales: P,\n    srcResolutions: b,\n    isCustomTilingScheme: !g\n  };\n}\nexport { ae as computeProjectedScales, P as defaultGridSpacing, G as defaultProjectionToleranceInPixels, v as getDefaultDatumTransformationForDataset, L as getProjectedGridPoints, ee as getProjectionOffsetGrid, Z as getRasterDatasetAlignmentInfo, D as getWorldWidth, V as getWorldWrapCount, T as load, b as minimumGridSpacing, se as projectDatasetExtent, J as projectExtent, j as projectPoint, U as projectPolygon, C as projectResolution, M as requirePE, oe as shiftExtent, ie as snapExtent, re as snapPyramid };"],
  "mappings": "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",
  "names": ["w", "_", "s", "a", "f", "t", "n", "i", "o", "r", "S", "P", "E", "W", "j", "O", "e", "Y", "x", "u", "m", "l", "J", "K", "c", "d", "M", "R", "G", "k", "N", "T", "v", "C", "z", "I", "B", "F", "b"]
}
