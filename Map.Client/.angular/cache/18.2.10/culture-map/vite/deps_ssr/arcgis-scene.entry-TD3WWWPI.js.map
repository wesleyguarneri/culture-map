{
  "version": 3,
  "sources": ["../../../../../../node_modules/@arcgis/map-components/dist/esm/arcgis-scene.entry.js"],
  "sourcesContent": ["/*!\n * All material copyright Esri, All Rights Reserved, unless otherwise specified.\n * See https://js.arcgis.com/4.30/esri/copyright.txt for details.\n * v4.30.7\n */\nimport { r as registerInstance, c as createEvent, h, g as getElement } from './index-7d33cc26.js';\nimport { l as load } from './chunk-PVEVZB4O-2c3b8893.js';\nimport { u as useControllerManager, a as accessorSupport, m as makeAccessorController } from './index-c99fc80c.js';\nimport { i as importCoreReactiveUtils, a0 as newWebScene, a1 as newViewsSceneView } from './index-d2df902e.js';\nimport { c as isNotSameCamera, p as parseCenter, e as isNotSameEnvironment, i as isNotSameViewpoint } from './component-utils-de9339fe.js';\nconst sceneCss = \".arcgis-scene{padding:0;margin:0;height:100%;width:100%}\";\nconst ArcgisSceneStyle0 = sceneCss;\nconst useWebScene = makeAccessorController(newWebScene);\nconst useSceneView = makeAccessorController(newViewsSceneView);\nconst ArcgisScene = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.arcgisViewReadyChange = createEvent(this, \"arcgisViewReadyChange\", 7);\n    this.arcgisViewChange = createEvent(this, \"arcgisViewChange\", 7);\n    this.arcgisViewClick = createEvent(this, \"arcgisViewClick\", 7);\n    this.arcgisViewDoubleClick = createEvent(this, \"arcgisViewDoubleClick\", 7);\n    this.arcgisViewDrag = createEvent(this, \"arcgisViewDrag\", 7);\n    this.arcgisViewHold = createEvent(this, \"arcgisViewHold\", 7);\n    this.arcgisViewImmediateClick = createEvent(this, \"arcgisViewImmediateClick\", 7);\n    this.arcgisViewImmediateDoubleClick = createEvent(this, \"arcgisViewImmediateDoubleClick\", 7);\n    this.arcgisViewKeyDown = createEvent(this, \"arcgisViewKeyDown\", 7);\n    this.arcgisViewKeyUp = createEvent(this, \"arcgisViewKeyUp\", 7);\n    this.arcgisViewLayerviewCreate = createEvent(this, \"arcgisViewLayerviewCreate\", 7);\n    this.arcgisViewLayerviewCreateError = createEvent(this, \"arcgisViewLayerviewCreateError\", 7);\n    this.arcgisViewLayerviewDestroy = createEvent(this, \"arcgisViewLayerviewDestroy\", 7);\n    this.arcgisViewMouseWheel = createEvent(this, \"arcgisViewMouseWheel\", 7);\n    this.arcgisViewPointerDown = createEvent(this, \"arcgisViewPointerDown\", 7);\n    this.arcgisViewPointerEnter = createEvent(this, \"arcgisViewPointerEnter\", 7);\n    this.arcgisViewPointerLeave = createEvent(this, \"arcgisViewPointerLeave\", 7);\n    this.arcgisViewPointerMove = createEvent(this, \"arcgisViewPointerMove\", 7);\n    this.arcgisViewPointerUp = createEvent(this, \"arcgisViewPointerUp\", 7);\n    this.manager = useControllerManager(this);\n    this.reactiveUtils = load(importCoreReactiveUtils);\n    /*\n     * This WebMap will be created only if user did not provide a map. Otherwise,\n     * it will be equal to this.view.map\n     */\n    this._map = useWebScene(this, {\n      editConstructorProperties: this._editMapProperties\n    });\n    //--------------------------------------------------------------------------\n    //\n    //  Private Methods\n    //\n    //--------------------------------------------------------------------------\n    this._setChildElement = el => {\n      this.el.childElem = el;\n    };\n    this.autoDestroyDisabled = false;\n    this.view = this.manager.readonly(useSceneView(this, {\n      editConstructorProperties: this._editViewProperties\n    }));\n    this.map = this.view.map;\n    this.allLayerViews = this.view.allLayerViews;\n    this.alphaCompositingEnabled = this.view.alphaCompositingEnabled;\n    this.analyses = this.view.analyses;\n    this.basemapView = this.view.basemapView;\n    this.basemap = this._map.basemap;\n    this.camera = this.manager.getSet(undefined, {\n      get: () => this.view.camera,\n      set: (newValue, oldValue) => isNotSameCamera(oldValue, newValue) ? newValue : oldValue\n    });\n    this.center = this.manager.getSet(undefined, {\n      get: value => this.view.center ?? value,\n      set: newValue => {\n        const parsed = parseCenter(newValue, this.ready ? this.view : undefined);\n        if (!this.ready) {\n          return parsed;\n        }\n        this.view.center = parsed;\n        return this.view.center;\n      }\n    });\n    this.clippingArea = this.manager.getSet(this.view.clippingArea, {\n      set: (newValue, oldValue) => oldValue?.equals(newValue) ? oldValue : newValue\n    });\n    this.constraints = this.view.constraints;\n    this.environment = this.manager.getSet(this.view.environment, {\n      set: (newValue, oldValue) => isNotSameEnvironment(oldValue, newValue) ? newValue : oldValue\n    });\n    this.extent = this.manager.getSet(undefined, {\n      get: extent => this.view.extent ?? extent,\n      set: (newValue, oldValue) => {\n        if (!this.view.ready) {\n          return newValue;\n        }\n        if (newValue && !oldValue?.equals(newValue)) {\n          this.view.extent = newValue;\n        }\n        return this.view.extent;\n      }\n    });\n    this.fatalError = this.view.fatalError;\n    this.floors = this.view.floors;\n    this.gamepad = this.manager.getSet(undefined, {\n      get: () => this.ready ? this.view.input.gamepad : undefined,\n      set: \"ignore\"\n    });\n    this.graphics = this.view.graphics;\n    this.ground = this._map.ground;\n    this.groundView = this.view.groundView;\n    this.highlightOptions = this.view.highlightOptions;\n    this.interacting = this.manager.getSet(false, {\n      get: () => this.view.interacting,\n      set: \"ignore\"\n    });\n    this.itemId = this.manager.getSet(undefined, {\n      get: value => this._map.portalItem?.id ?? value,\n      set: newValue => {\n        // SceneView does not react to WebScene.portalItem change, so we have to recreate it\n        if (this.ready) {\n          accessorSupport.reCreate(this._map, this).then(() => {\n            this.view.map = this._map;\n          }).catch(console.error);\n        }\n        return newValue;\n      }\n    });\n    this.layerViews = this.view.layerViews;\n    this.magnifier = this.view.magnifier;\n    this.navigating = this.manager.getSet(false, {\n      get: () => this.view.navigating,\n      set: \"ignore\"\n    });\n    this.navigation = this.view.navigation;\n    this.padding = this.view.padding;\n    this.performanceInfo = this.manager.getSet(undefined, {\n      get: () => this.view.performanceInfo,\n      set: \"ignore\"\n    });\n    this.popup = this.view.popup;\n    this.popupDisabled = this.view.popupEnabled;\n    this.qualityProfile = this.view.qualityProfile;\n    this.ready = this.view.ready;\n    this.resolution = this.manager.getSet(undefined, {\n      get: () => this.view.resolution,\n      set: \"ignore\"\n    });\n    this.scale = this.manager.getSet(undefined, {\n      get: scale => this.view.scale ?? scale,\n      set: newValue => {\n        if (this.ready) {\n          this.view.scale = newValue;\n        }\n        return newValue;\n      }\n    });\n    this.spatialReference = this.manager.getSet(this.view.spatialReference, {\n      set: (newValue, oldValue) => oldValue?.equals(newValue) ? oldValue : newValue\n    });\n    this.stationary = this.manager.getSet(true, {\n      get: () => this.view.stationary,\n      set: \"ignore\"\n    });\n    this.suspended = this.view.suspended;\n    this.theme = this.view.theme;\n    this.timeExtent = this.view.timeExtent;\n    this.toMap = this.manager.readonly((...args) => this.view.toMap(...args));\n    this.toScreen = this.manager.readonly((...args) => this.view.toScreen(...args));\n    this.updating = this.view.updating;\n    this.viewingMode = this.view.viewingMode;\n    this.viewpoint = this.manager.getSet(undefined, {\n      get: () => this.view.viewpoint,\n      set: (newValue, oldValue) => isNotSameViewpoint(oldValue, newValue) ? newValue : oldValue\n    });\n    this.zoom = this.manager.getSet(undefined, {\n      get: zoom => this.view.zoom ?? zoom,\n      set: newValue => {\n        if (this.ready) {\n          this.view.zoom = newValue;\n        }\n        return newValue;\n      }\n    });\n  }\n  //--------------------------------------------------------------------------\n  //\n  //  Methods\n  //\n  //--------------------------------------------------------------------------\n  /**\n   * Adds a layer to the map layers collection.\n   */\n  async addLayer(layer, index) {\n    this.map?.add(layer, index);\n  }\n  /**\n   * Adds a layer or array of layers to the map layers collection.\n   */\n  async addLayers(layers, index) {\n    this.map?.addMany(layers, index);\n  }\n  /**\n   * Closes the popup.\n   */\n  async closePopup() {\n    this.view?.closePopup();\n  }\n  /**\n   * Destroys the view, and any associated resources, including its map, popup, and UI elements.\n   */\n  async destroy() {\n    await this.manager.destroy();\n  }\n  /**\n   * Sets the view to a given target.\n   */\n  async goTo(target, options) {\n    return await this.view?.goTo(target, options);\n  }\n  /**\n   * Returns hit test results from each layer that intersects the specified screen coordinates.\n   */\n  async hitTest(screenPoint, options) {\n    return await this.view?.hitTest(screenPoint, options);\n  }\n  /**\n   * Opens the popup at the given location with content defined either explicitly with content or driven\n   * from the PopupTemplate of input features.\n   */\n  async openPopup(options) {\n    await this.view?.openPopup(options);\n  }\n  /**\n   * Create a screenshot of the current view.\n   */\n  async takeScreenshot(options) {\n    return await this.view?.takeScreenshot(options);\n  }\n  /**\n   * Call this method to clear any fatal errors resulting from a lost WebGL context.\n   */\n  async tryFatalErrorRecovery() {\n    this.view?.tryFatalErrorRecovery();\n  }\n  async whenAnalysisView(analysis) {\n    return await this.view?.whenAnalysisView(analysis);\n  }\n  /**\n   * Gets the LayerView created on the view for the given layer.\n   */\n  async whenLayerView(layer) {\n    return await this.view?.whenLayerView(layer);\n  }\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n  componentDidLoad() {\n    var _a;\n    (_a = this.view).container ?? (_a.container = this.el.childElem);\n    const {\n      watch\n    } = this.reactiveUtils;\n    this.manager.onLifecycle(() => [watch(() => this.view.stationary, () => {\n      this.arcgisViewChange.emit();\n    }, {\n      initial: true\n    }), watch(() => this.view.ready, () => this.arcgisViewReadyChange.emit(), {\n      initial: this.view.ready\n    })]);\n    accessorSupport.reEmitAccessorEvents(this.manager, this.view, this.reactiveUtils, \"arcgisView\");\n  }\n  render() {\n    return h(\"div\", {\n      key: '6ba77135d59e49e02877423619ed7dad7cd01d19',\n      class: \"arcgis-scene\",\n      ref: this._setChildElement\n    });\n  }\n  _editMapProperties(mapProperties) {\n    // If user provided a map, use that. Otherwise, a WebScene will be created by usWebScene\n    if (this.map) {\n      this._map = this.map;\n    }\n    if (this.itemId) {\n      mapProperties.portalItem = {\n        id: this.itemId\n      };\n    } else if (!this.basemap) {\n      mapProperties.basemap = \"topo-vector\";\n    }\n    if (!this.ground) {\n      mapProperties.ground = \"world-elevation\";\n    }\n    // See https://devtopia.esri.com/WebGIS/arcgis-web-components/issues/1244#issuecomment-4922799\n    const {\n      basemap,\n      ...rest\n    } = mapProperties;\n    if (!basemap) {\n      mapProperties = rest;\n    }\n    return mapProperties;\n  }\n  _editViewProperties(properties) {\n    // Don't overwrite UI if a custom one was already provided\n    if (!this.view.ui) {\n      properties.ui = {\n        components: [\"attribution\"]\n      };\n    }\n    // If user did not provide a map, use the WebScene we created\n    properties.map ?? (properties.map = this._map);\n    /*\n     * The following properties are not two-way bound like others as they change\n     * too often. Instead, they are assigned to getters to always get freshest\n     * value without triggering re-render. But that means, useAccessor is not\n     * aware of these properties, so we have to pass them manually here:\n     */\n    const center = parseCenter(this.center, undefined);\n    if (center) {\n      properties.center = center;\n    }\n    if (this.viewpoint) {\n      properties.viewpoint = this.viewpoint;\n    }\n    if (this.scale !== undefined) {\n      properties.scale = this.scale;\n    }\n    if (this.extent) {\n      properties.extent = this.extent;\n    }\n    if (this.camera) {\n      properties.camera = this.camera;\n    }\n    if (this.zoom !== undefined) {\n      properties.zoom = this.zoom;\n    }\n    return properties;\n  }\n  get el() {\n    return getElement(this);\n  }\n};\nArcgisScene.style = ArcgisSceneStyle0;\nexport { ArcgisScene as arcgis_scene };"],
  "mappings": "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",
  "names": []
}
