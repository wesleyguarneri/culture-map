{
  "version": 3,
  "sources": ["../../../../../../node_modules/@arcgis/core/portal/support/featureCollectionUtils.js", "../../../../../../node_modules/@arcgis/core/layers/support/layersCreator.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nfunction e(e) {\n  return t(e, \"notes\");\n}\nfunction r(e) {\n  return t(e, \"markup\");\n}\nfunction n(e) {\n  return t(e, \"route\");\n}\nfunction t(e, r) {\n  return !(!e.layerType || \"ArcGISFeatureLayer\" !== e.layerType) && e.featureCollectionType === r;\n}\nexport { e as isMapNotesLayer, r as isMarkupLayer, n as isRouteLayer };", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport e from \"../../core/Collection.js\";\nimport \"../../core/has.js\";\nimport { LayerLoadContext as r } from \"./LayerLoadContext.js\";\nimport { layerLookupMap as a } from \"./lazyLayerLoader.js\";\nimport t from \"../../portal/PortalItem.js\";\nimport { isMapNotesLayer as y, isMarkupLayer as i, isRouteLayer as L } from \"../../portal/support/featureCollectionUtils.js\";\nimport { selectLayerClassPath as o } from \"../../portal/support/portalLayers.js\";\nimport { loadStyleRenderer as n } from \"../../renderers/support/styleUtils.js\";\nasync function l(e, r, a) {\n  if (!r) return;\n  const t = r.map(e => G(e, a)),\n    y = await Promise.allSettled(t);\n  for (const i of y) \"rejected\" === i.status || i.value && e.add(i.value);\n}\nconst c = {\n    ArcGISDimensionLayer: \"DimensionLayer\",\n    ArcGISFeatureLayer: \"FeatureLayer\",\n    ArcGISImageServiceLayer: \"ImageryLayer\",\n    ArcGISMapServiceLayer: \"MapImageLayer\",\n    ArcGISSceneServiceLayer: \"SceneLayer\",\n    ArcGISTiledElevationServiceLayer: \"ElevationLayer\",\n    ArcGISTiledImageServiceLayer: \"ImageryTileLayer\",\n    ArcGISTiledMapServiceLayer: \"TileLayer\",\n    BuildingSceneLayer: \"BuildingSceneLayer\",\n    CatalogLayer: \"CatalogLayer\",\n    CSV: \"CSVLayer\",\n    DefaultTileLayer: \"TileLayer\",\n    GeoJSON: \"GeoJSONLayer\",\n    GroupLayer: \"GroupLayer\",\n    IntegratedMesh3DTilesLayer: \"IntegratedMesh3DTilesLayer\",\n    IntegratedMeshLayer: \"IntegratedMeshLayer\",\n    KML: \"KMLLayer\",\n    LineOfSightLayer: \"LineOfSightLayer\",\n    MediaLayer: \"MediaLayer\",\n    OGCFeatureLayer: \"OGCFeatureLayer\",\n    PointCloudLayer: \"PointCloudLayer\",\n    RasterDataLayer: \"UnsupportedLayer\",\n    VectorTileLayer: \"VectorTileLayer\",\n    Voxel: \"VoxelLayer\",\n    WFS: \"WFSLayer\",\n    WMS: \"WMSLayer\",\n    WebTiledLayer: \"WebTileLayer\"\n  },\n  s = {\n    ArcGISTiledElevationServiceLayer: \"ElevationLayer\",\n    DefaultTileLayer: \"ElevationLayer\",\n    RasterDataElevationLayer: \"UnsupportedLayer\"\n  },\n  p = {\n    ArcGISFeatureLayer: \"FeatureLayer\"\n  },\n  S = {\n    ArcGISImageServiceLayer: \"UnsupportedLayer\",\n    ArcGISMapServiceLayer: \"UnsupportedLayer\",\n    ArcGISSceneServiceLayer: \"SceneLayer\",\n    ArcGISTiledImageServiceLayer: \"ImageryTileLayer\",\n    ArcGISTiledMapServiceLayer: \"TileLayer\",\n    DefaultTileLayer: \"TileLayer\",\n    OpenStreetMap: \"OpenStreetMapLayer\",\n    VectorTileLayer: \"VectorTileLayer\",\n    WMS: \"UnsupportedLayer\",\n    WebTiledLayer: \"WebTileLayer\"\n  },\n  u = {\n    ArcGISAnnotationLayer: \"UnsupportedLayer\",\n    ArcGISDimensionLayer: \"UnsupportedLayer\",\n    ArcGISFeatureLayer: \"FeatureLayer\",\n    ArcGISImageServiceLayer: \"ImageryLayer\",\n    ArcGISImageServiceVectorLayer: \"ImageryLayer\",\n    ArcGISMapServiceLayer: \"MapImageLayer\",\n    ArcGISStreamLayer: \"StreamLayer\",\n    ArcGISTiledImageServiceLayer: \"ImageryTileLayer\",\n    ArcGISTiledMapServiceLayer: \"TileLayer\",\n    BingMapsAerial: \"BingMapsLayer\",\n    BingMapsHybrid: \"BingMapsLayer\",\n    BingMapsRoad: \"BingMapsLayer\",\n    CatalogLayer: \"CatalogLayer\",\n    CSV: \"CSVLayer\",\n    DefaultTileLayer: \"TileLayer\",\n    GeoJSON: \"GeoJSONLayer\",\n    GeoRSS: \"GeoRSSLayer\",\n    GroupLayer: \"GroupLayer\",\n    KML: \"KMLLayer\",\n    KnowledgeGraphLayer: \"KnowledgeGraphLayer\",\n    MediaLayer: \"MediaLayer\",\n    OGCFeatureLayer: \"OGCFeatureLayer\",\n    OrientedImageryLayer: \"OrientedImageryLayer\",\n    SubtypeGroupLayer: \"SubtypeGroupLayer\",\n    VectorTileLayer: \"VectorTileLayer\",\n    WFS: \"WFSLayer\",\n    WMS: \"WMSLayer\",\n    WebTiledLayer: \"WebTileLayer\"\n  },\n  d = {\n    ArcGISFeatureLayer: \"FeatureLayer\",\n    SubtypeGroupTable: \"UnsupportedLayer\"\n  },\n  I = {\n    ArcGISImageServiceLayer: \"ImageryLayer\",\n    ArcGISImageServiceVectorLayer: \"ImageryLayer\",\n    ArcGISMapServiceLayer: \"MapImageLayer\",\n    ArcGISTiledImageServiceLayer: \"ImageryTileLayer\",\n    ArcGISTiledMapServiceLayer: \"TileLayer\",\n    BingMapsAerial: \"BingMapsLayer\",\n    BingMapsHybrid: \"BingMapsLayer\",\n    BingMapsRoad: \"BingMapsLayer\",\n    DefaultTileLayer: \"TileLayer\",\n    OpenStreetMap: \"OpenStreetMapLayer\",\n    VectorTileLayer: \"VectorTileLayer\",\n    WMS: \"WMSLayer\",\n    WebTiledLayer: \"WebTileLayer\"\n  },\n  m = {\n    ...u,\n    LinkChartLayer: \"LinkChartLayer\"\n  },\n  g = {\n    ...d\n  },\n  T = {\n    ...I\n  };\nasync function G(e, r) {\n  return f(await M(e, r), e, r);\n}\nasync function f(e, r, a) {\n  const t = new e();\n  return t.read(r, a.context), \"group\" === t.type && (\"GroupLayer\" === r.layerType ? await w(t, r, a) : b(r) ? h(t, r, a.context) : A(r) && (await C(t, r, a.context))), await n(t, a.context), t;\n}\nasync function M(e, n) {\n  const l = n.context,\n    c = v(l);\n  let s = e.layerType || e.type;\n  !s && n?.defaultLayerType && (s = n.defaultLayerType);\n  const p = c[s];\n  let S = p ? a[p] : a.UnknownLayer;\n  if (b(e)) {\n    const y = l?.portal;\n    if (e.itemId) {\n      const i = new t({\n        id: e.itemId,\n        portal: y\n      });\n      await i.load();\n      const L = (await o(i, new r())).className || \"UnknownLayer\";\n      S = a[L];\n    }\n  } else \"ArcGISFeatureLayer\" === s ? y(e) || i(e) ? S = a.MapNotesLayer : L(e) ? S = a.RouteLayer : A(e) && (S = a.GroupLayer) : e.wmtsInfo?.url && e.wmtsInfo.layerIdentifier ? S = a.WMTSLayer : \"WFS\" === s && \"2.0.0\" !== e.wfsInfo?.version && (S = a.UnsupportedLayer);\n  return S();\n}\nfunction A(e) {\n  if (\"ArcGISFeatureLayer\" !== e.layerType || b(e)) return !1;\n  return (e.featureCollection?.layers?.length ?? 0) > 1;\n}\nfunction b(e) {\n  return \"Feature Collection\" === e.type;\n}\nfunction v(e) {\n  let r;\n  switch (e.origin) {\n    case \"web-scene\":\n      switch (e.layerContainerType) {\n        case \"basemap\":\n          r = S;\n          break;\n        case \"ground\":\n          r = s;\n          break;\n        case \"tables\":\n          r = p;\n          break;\n        default:\n          r = c;\n      }\n      break;\n    case \"link-chart\":\n      switch (e.layerContainerType) {\n        case \"basemap\":\n          r = T;\n          break;\n        case \"tables\":\n          r = g;\n          break;\n        default:\n          r = m;\n      }\n      break;\n    default:\n      switch (e.layerContainerType) {\n        case \"basemap\":\n          r = I;\n          break;\n        case \"tables\":\n          r = d;\n          break;\n        default:\n          r = u;\n      }\n  }\n  return r;\n}\nasync function w(r, a, t) {\n  const y = new e(),\n    i = l(y, Array.isArray(a.layers) ? a.layers : [], t);\n  try {\n    try {\n      if (await i, \"group\" === r.type) return r.layers.addMany(y), r;\n    } catch (L) {\n      r.destroy();\n      for (const e of y) e.destroy();\n      throw L;\n    }\n  } catch (L) {\n    throw L;\n  }\n}\nfunction h(e, r, a) {\n  r.itemId && (e.portalItem = new t({\n    id: r.itemId,\n    portal: a?.portal\n  }), e.when(() => {\n    const t = t => {\n      const y = t.layerId;\n      F(t, e, r, y, a);\n      const i = r.featureCollection?.layers?.[y];\n      i && t.read(i, a);\n    };\n    e.layers?.forEach(t), e.tables?.forEach(t);\n  }));\n}\nasync function C(e, r, t) {\n  const y = a.FeatureLayer,\n    i = await y(),\n    L = r.featureCollection,\n    o = L?.showLegend,\n    n = L?.layers?.map((a, y) => {\n      const L = new i();\n      L.read(a, t);\n      const n = {\n        ...t,\n        ignoreDefaults: !0\n      };\n      return F(L, e, r, y, n), null != o && L.read({\n        showLegend: o\n      }, n), L;\n    });\n  e.layers.addMany(n ?? []);\n}\nfunction F(e, r, a, t, y) {\n  e.read({\n    id: `${r.id}-sublayer-${t}`,\n    visibility: a.visibleLayers?.includes(t) ?? !0\n  }, y);\n}\nexport { w as populateGroupLayer, l as populateOperationalLayers };"],
  "mappings": "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",
  "names": ["e", "t", "r", "e", "r", "a", "t", "S", "d", "n", "l", "c", "s", "p", "y", "L"]
}
