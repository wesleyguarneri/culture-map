{
  "version": 3,
  "sources": ["../../../../../../node_modules/@arcgis/core/views/3d/layers/WMTSLayerView3D.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { _ as e } from \"../../../chunks/tslib.es6.js\";\nimport t from \"../../../core/Collection.js\";\nimport i from \"../../../core/Logger.js\";\nimport { whenOnce as r } from \"../../../core/reactiveUtils.js\";\nimport { property as s } from \"../../../core/accessorSupport/decorators/property.js\";\nimport \"../../../core/has.js\";\nimport \"../../../core/RandomLCG.js\";\nimport { subclass as o } from \"../../../core/accessorSupport/decorators/subclass.js\";\nimport { getTileMaxtrixSetFromActiveLayer as l } from \"../../../layers/support/layerUtils.js\";\nimport { LayerView3D as a } from \"./LayerView3D.js\";\nimport { TiledLayerView3D as n } from \"./TiledLayerView3D.js\";\nimport { fetchTile as h } from \"./support/fetchTile.js\";\nimport c from \"../../layers/LayerView.js\";\nimport p from \"../../layers/RefreshableLayerView.js\";\nlet d = class extends p(n(a(c))) {\n  constructor() {\n    super(...arguments), this.type = \"wmts-3d\";\n  }\n  initialize() {\n    this._getCompatibleTileInfoMatrixSet(e => this._getTileInfoSupportError(e.tileInfo, e.fullExtent));\n    const e = r(() => this.view?.basemapTerrain?.tilingSchemeLocked).then(() => {\n      const e = this._getCompatibleTileInfoMatrixSet(e => this._getTileInfoError(e.tileInfo, e.fullExtent));\n      null != e && (null !== e.id && this.layer.activeLayer.tileMatrixSetId !== e.id && (this.layer.activeLayer.tileMatrixSetId = e.id), e.tileInfo && (this.tileInfo = e.tileInfo), this.layer.fullExtent = e.fullExtent);\n    });\n    this.addResolvingPromise(e), this.when(() => this._postInitialize());\n  }\n  refresh() {\n    this.emit(\"data-changed\");\n  }\n  canResume() {\n    if (!super.canResume()) return !1;\n    const e = this.layer.activeLayer.tileMatrixSet;\n    return null != e && !this._getTileInfoError(e.tileInfo, e.fullExtent);\n  }\n  async fetchTile(e, t) {\n    return h(this, e, t);\n  }\n  async doRefresh() {\n    this.suspended || this.emit(\"data-changed\");\n  }\n  _postInitialize() {\n    this._updatingHandles.add(() => this.layer?.activeLayer?.styleId, () => this.refresh()), this._updatingHandles.add(() => this.layer?.activeLayer, e => {\n      const t = this._getCompatibleTileInfoMatrixSet(e => this._getTileInfoError(e.tileInfo, e.fullExtent), !0);\n      t && null != t.id && e.tileMatrixSetId !== t.id && (this.layer.activeLayer.tileMatrixSetId = t.id), this.notifyChange(\"suspended\"), this.canResume() && this.refresh();\n    });\n  }\n  _getCompatibleTileInfoMatrixSet(e, r = !1) {\n    const s = l(this.layer);\n    if (null != s) {\n      if (t.isCollection(s)) {\n        const t = s.find(t => {\n          const s = e(t);\n          return null != s && (r ? i.getLogger(this).error(\"The selected tile matrix set is not compatible with the view\", s) : this.addResolvingPromise(Promise.reject(s))), null == s;\n        });\n        return t;\n      }\n      const o = e(s);\n      return null != o && (r ? i.getLogger(this).error(\"The selected tile matrix set is not compatible with the view\", o) : this.addResolvingPromise(Promise.reject(o))), s;\n    }\n    return null;\n  }\n  _getTileInfoError(e, t) {\n    return this._getTileInfoSupportError(e, t) || this._getTileInfoCompatibilityError(e, this.view.basemapTerrain.tilingScheme);\n  }\n};\ne([s()], d.prototype, \"layer\", void 0), e([s()], d.prototype, \"suspended\", void 0), e([s()], d.prototype, \"tileInfo\", void 0), d = e([o(\"esri.views.3d.layers.WMTSLayerView3D\")], d);\nconst m = d;\nexport { m as default };"],
  "mappings": "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",
  "names": ["y", "e", "i", "t", "s"]
}
