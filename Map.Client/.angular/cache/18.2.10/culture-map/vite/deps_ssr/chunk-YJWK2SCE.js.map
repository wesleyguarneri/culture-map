{
  "version": 3,
  "sources": ["../../../../../../node_modules/@esri/calcite-components/dist/components/utils.js", "../../../../../../node_modules/@esri/calcite-components/dist/components/color-picker-swatch.js"],
  "sourcesContent": ["/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\n * v2.13.2\n */\nvar colorString$1 = {\n  exports: {}\n};\nvar colorName = {\n  \"aliceblue\": [240, 248, 255],\n  \"antiquewhite\": [250, 235, 215],\n  \"aqua\": [0, 255, 255],\n  \"aquamarine\": [127, 255, 212],\n  \"azure\": [240, 255, 255],\n  \"beige\": [245, 245, 220],\n  \"bisque\": [255, 228, 196],\n  \"black\": [0, 0, 0],\n  \"blanchedalmond\": [255, 235, 205],\n  \"blue\": [0, 0, 255],\n  \"blueviolet\": [138, 43, 226],\n  \"brown\": [165, 42, 42],\n  \"burlywood\": [222, 184, 135],\n  \"cadetblue\": [95, 158, 160],\n  \"chartreuse\": [127, 255, 0],\n  \"chocolate\": [210, 105, 30],\n  \"coral\": [255, 127, 80],\n  \"cornflowerblue\": [100, 149, 237],\n  \"cornsilk\": [255, 248, 220],\n  \"crimson\": [220, 20, 60],\n  \"cyan\": [0, 255, 255],\n  \"darkblue\": [0, 0, 139],\n  \"darkcyan\": [0, 139, 139],\n  \"darkgoldenrod\": [184, 134, 11],\n  \"darkgray\": [169, 169, 169],\n  \"darkgreen\": [0, 100, 0],\n  \"darkgrey\": [169, 169, 169],\n  \"darkkhaki\": [189, 183, 107],\n  \"darkmagenta\": [139, 0, 139],\n  \"darkolivegreen\": [85, 107, 47],\n  \"darkorange\": [255, 140, 0],\n  \"darkorchid\": [153, 50, 204],\n  \"darkred\": [139, 0, 0],\n  \"darksalmon\": [233, 150, 122],\n  \"darkseagreen\": [143, 188, 143],\n  \"darkslateblue\": [72, 61, 139],\n  \"darkslategray\": [47, 79, 79],\n  \"darkslategrey\": [47, 79, 79],\n  \"darkturquoise\": [0, 206, 209],\n  \"darkviolet\": [148, 0, 211],\n  \"deeppink\": [255, 20, 147],\n  \"deepskyblue\": [0, 191, 255],\n  \"dimgray\": [105, 105, 105],\n  \"dimgrey\": [105, 105, 105],\n  \"dodgerblue\": [30, 144, 255],\n  \"firebrick\": [178, 34, 34],\n  \"floralwhite\": [255, 250, 240],\n  \"forestgreen\": [34, 139, 34],\n  \"fuchsia\": [255, 0, 255],\n  \"gainsboro\": [220, 220, 220],\n  \"ghostwhite\": [248, 248, 255],\n  \"gold\": [255, 215, 0],\n  \"goldenrod\": [218, 165, 32],\n  \"gray\": [128, 128, 128],\n  \"green\": [0, 128, 0],\n  \"greenyellow\": [173, 255, 47],\n  \"grey\": [128, 128, 128],\n  \"honeydew\": [240, 255, 240],\n  \"hotpink\": [255, 105, 180],\n  \"indianred\": [205, 92, 92],\n  \"indigo\": [75, 0, 130],\n  \"ivory\": [255, 255, 240],\n  \"khaki\": [240, 230, 140],\n  \"lavender\": [230, 230, 250],\n  \"lavenderblush\": [255, 240, 245],\n  \"lawngreen\": [124, 252, 0],\n  \"lemonchiffon\": [255, 250, 205],\n  \"lightblue\": [173, 216, 230],\n  \"lightcoral\": [240, 128, 128],\n  \"lightcyan\": [224, 255, 255],\n  \"lightgoldenrodyellow\": [250, 250, 210],\n  \"lightgray\": [211, 211, 211],\n  \"lightgreen\": [144, 238, 144],\n  \"lightgrey\": [211, 211, 211],\n  \"lightpink\": [255, 182, 193],\n  \"lightsalmon\": [255, 160, 122],\n  \"lightseagreen\": [32, 178, 170],\n  \"lightskyblue\": [135, 206, 250],\n  \"lightslategray\": [119, 136, 153],\n  \"lightslategrey\": [119, 136, 153],\n  \"lightsteelblue\": [176, 196, 222],\n  \"lightyellow\": [255, 255, 224],\n  \"lime\": [0, 255, 0],\n  \"limegreen\": [50, 205, 50],\n  \"linen\": [250, 240, 230],\n  \"magenta\": [255, 0, 255],\n  \"maroon\": [128, 0, 0],\n  \"mediumaquamarine\": [102, 205, 170],\n  \"mediumblue\": [0, 0, 205],\n  \"mediumorchid\": [186, 85, 211],\n  \"mediumpurple\": [147, 112, 219],\n  \"mediumseagreen\": [60, 179, 113],\n  \"mediumslateblue\": [123, 104, 238],\n  \"mediumspringgreen\": [0, 250, 154],\n  \"mediumturquoise\": [72, 209, 204],\n  \"mediumvioletred\": [199, 21, 133],\n  \"midnightblue\": [25, 25, 112],\n  \"mintcream\": [245, 255, 250],\n  \"mistyrose\": [255, 228, 225],\n  \"moccasin\": [255, 228, 181],\n  \"navajowhite\": [255, 222, 173],\n  \"navy\": [0, 0, 128],\n  \"oldlace\": [253, 245, 230],\n  \"olive\": [128, 128, 0],\n  \"olivedrab\": [107, 142, 35],\n  \"orange\": [255, 165, 0],\n  \"orangered\": [255, 69, 0],\n  \"orchid\": [218, 112, 214],\n  \"palegoldenrod\": [238, 232, 170],\n  \"palegreen\": [152, 251, 152],\n  \"paleturquoise\": [175, 238, 238],\n  \"palevioletred\": [219, 112, 147],\n  \"papayawhip\": [255, 239, 213],\n  \"peachpuff\": [255, 218, 185],\n  \"peru\": [205, 133, 63],\n  \"pink\": [255, 192, 203],\n  \"plum\": [221, 160, 221],\n  \"powderblue\": [176, 224, 230],\n  \"purple\": [128, 0, 128],\n  \"rebeccapurple\": [102, 51, 153],\n  \"red\": [255, 0, 0],\n  \"rosybrown\": [188, 143, 143],\n  \"royalblue\": [65, 105, 225],\n  \"saddlebrown\": [139, 69, 19],\n  \"salmon\": [250, 128, 114],\n  \"sandybrown\": [244, 164, 96],\n  \"seagreen\": [46, 139, 87],\n  \"seashell\": [255, 245, 238],\n  \"sienna\": [160, 82, 45],\n  \"silver\": [192, 192, 192],\n  \"skyblue\": [135, 206, 235],\n  \"slateblue\": [106, 90, 205],\n  \"slategray\": [112, 128, 144],\n  \"slategrey\": [112, 128, 144],\n  \"snow\": [255, 250, 250],\n  \"springgreen\": [0, 255, 127],\n  \"steelblue\": [70, 130, 180],\n  \"tan\": [210, 180, 140],\n  \"teal\": [0, 128, 128],\n  \"thistle\": [216, 191, 216],\n  \"tomato\": [255, 99, 71],\n  \"turquoise\": [64, 224, 208],\n  \"violet\": [238, 130, 238],\n  \"wheat\": [245, 222, 179],\n  \"white\": [255, 255, 255],\n  \"whitesmoke\": [245, 245, 245],\n  \"yellow\": [255, 255, 0],\n  \"yellowgreen\": [154, 205, 50]\n};\nvar simpleSwizzle = {\n  exports: {}\n};\nvar isArrayish$1 = function isArrayish(obj) {\n  if (!obj || typeof obj === 'string') {\n    return false;\n  }\n  return obj instanceof Array || Array.isArray(obj) || obj.length >= 0 && (obj.splice instanceof Function || Object.getOwnPropertyDescriptor(obj, obj.length - 1) && obj.constructor.name !== 'String');\n};\nvar isArrayish = isArrayish$1;\nvar concat = Array.prototype.concat;\nvar slice = Array.prototype.slice;\nvar swizzle$1 = simpleSwizzle.exports = function swizzle(args) {\n  var results = [];\n  for (var i = 0, len = args.length; i < len; i++) {\n    var arg = args[i];\n    if (isArrayish(arg)) {\n      // http://jsperf.com/javascript-array-concat-vs-push/98\n      results = concat.call(results, slice.call(arg));\n    } else {\n      results.push(arg);\n    }\n  }\n  return results;\n};\nswizzle$1.wrap = function (fn) {\n  return function () {\n    return fn(swizzle$1(arguments));\n  };\n};\n\n/* MIT license */\n\nvar colorNames = colorName;\nvar swizzle = simpleSwizzle.exports;\nvar hasOwnProperty = Object.hasOwnProperty;\nvar reverseNames = Object.create(null);\n\n// create a list of reverse color names\nfor (var name in colorNames) {\n  if (hasOwnProperty.call(colorNames, name)) {\n    reverseNames[colorNames[name]] = name;\n  }\n}\nvar cs = colorString$1.exports = {\n  to: {},\n  get: {}\n};\ncs.get = function (string) {\n  var prefix = string.substring(0, 3).toLowerCase();\n  var val;\n  var model;\n  switch (prefix) {\n    case 'hsl':\n      val = cs.get.hsl(string);\n      model = 'hsl';\n      break;\n    case 'hwb':\n      val = cs.get.hwb(string);\n      model = 'hwb';\n      break;\n    default:\n      val = cs.get.rgb(string);\n      model = 'rgb';\n      break;\n  }\n  if (!val) {\n    return null;\n  }\n  return {\n    model: model,\n    value: val\n  };\n};\ncs.get.rgb = function (string) {\n  if (!string) {\n    return null;\n  }\n  var abbr = /^#([a-f0-9]{3,4})$/i;\n  var hex = /^#([a-f0-9]{6})([a-f0-9]{2})?$/i;\n  var rgba = /^rgba?\\(\\s*([+-]?\\d+)(?=[\\s,])\\s*(?:,\\s*)?([+-]?\\d+)(?=[\\s,])\\s*(?:,\\s*)?([+-]?\\d+)\\s*(?:[,|\\/]\\s*([+-]?[\\d\\.]+)(%?)\\s*)?\\)$/;\n  var per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,?\\s*([+-]?[\\d\\.]+)\\%\\s*,?\\s*([+-]?[\\d\\.]+)\\%\\s*(?:[,|\\/]\\s*([+-]?[\\d\\.]+)(%?)\\s*)?\\)$/;\n  var keyword = /^(\\w+)$/;\n  var rgb = [0, 0, 0, 1];\n  var match;\n  var i;\n  var hexAlpha;\n  if (match = string.match(hex)) {\n    hexAlpha = match[2];\n    match = match[1];\n    for (i = 0; i < 3; i++) {\n      // https://jsperf.com/slice-vs-substr-vs-substring-methods-long-string/19\n      var i2 = i * 2;\n      rgb[i] = parseInt(match.slice(i2, i2 + 2), 16);\n    }\n    if (hexAlpha) {\n      rgb[3] = parseInt(hexAlpha, 16) / 255;\n    }\n  } else if (match = string.match(abbr)) {\n    match = match[1];\n    hexAlpha = match[3];\n    for (i = 0; i < 3; i++) {\n      rgb[i] = parseInt(match[i] + match[i], 16);\n    }\n    if (hexAlpha) {\n      rgb[3] = parseInt(hexAlpha + hexAlpha, 16) / 255;\n    }\n  } else if (match = string.match(rgba)) {\n    for (i = 0; i < 3; i++) {\n      rgb[i] = parseInt(match[i + 1], 0);\n    }\n    if (match[4]) {\n      if (match[5]) {\n        rgb[3] = parseFloat(match[4]) * 0.01;\n      } else {\n        rgb[3] = parseFloat(match[4]);\n      }\n    }\n  } else if (match = string.match(per)) {\n    for (i = 0; i < 3; i++) {\n      rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n    }\n    if (match[4]) {\n      if (match[5]) {\n        rgb[3] = parseFloat(match[4]) * 0.01;\n      } else {\n        rgb[3] = parseFloat(match[4]);\n      }\n    }\n  } else if (match = string.match(keyword)) {\n    if (match[1] === 'transparent') {\n      return [0, 0, 0, 0];\n    }\n    if (!hasOwnProperty.call(colorNames, match[1])) {\n      return null;\n    }\n    rgb = colorNames[match[1]];\n    rgb[3] = 1;\n    return rgb;\n  } else {\n    return null;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] = clamp(rgb[i], 0, 255);\n  }\n  rgb[3] = clamp(rgb[3], 0, 1);\n  return rgb;\n};\ncs.get.hsl = function (string) {\n  if (!string) {\n    return null;\n  }\n  var hsl = /^hsla?\\(\\s*([+-]?(?:\\d{0,3}\\.)?\\d+)(?:deg)?\\s*,?\\s*([+-]?[\\d\\.]+)%\\s*,?\\s*([+-]?[\\d\\.]+)%\\s*(?:[,|\\/]\\s*([+-]?(?=\\.\\d|\\d)(?:0|[1-9]\\d*)?(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)\\s*)?\\)$/;\n  var match = string.match(hsl);\n  if (match) {\n    var alpha = parseFloat(match[4]);\n    var h = (parseFloat(match[1]) % 360 + 360) % 360;\n    var s = clamp(parseFloat(match[2]), 0, 100);\n    var l = clamp(parseFloat(match[3]), 0, 100);\n    var a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);\n    return [h, s, l, a];\n  }\n  return null;\n};\ncs.get.hwb = function (string) {\n  if (!string) {\n    return null;\n  }\n  var hwb = /^hwb\\(\\s*([+-]?\\d{0,3}(?:\\.\\d+)?)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?(?=\\.\\d|\\d)(?:0|[1-9]\\d*)?(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)\\s*)?\\)$/;\n  var match = string.match(hwb);\n  if (match) {\n    var alpha = parseFloat(match[4]);\n    var h = (parseFloat(match[1]) % 360 + 360) % 360;\n    var w = clamp(parseFloat(match[2]), 0, 100);\n    var b = clamp(parseFloat(match[3]), 0, 100);\n    var a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);\n    return [h, w, b, a];\n  }\n  return null;\n};\ncs.to.hex = function () {\n  var rgba = swizzle(arguments);\n  return '#' + hexDouble(rgba[0]) + hexDouble(rgba[1]) + hexDouble(rgba[2]) + (rgba[3] < 1 ? hexDouble(Math.round(rgba[3] * 255)) : '');\n};\ncs.to.rgb = function () {\n  var rgba = swizzle(arguments);\n  return rgba.length < 4 || rgba[3] === 1 ? 'rgb(' + Math.round(rgba[0]) + ', ' + Math.round(rgba[1]) + ', ' + Math.round(rgba[2]) + ')' : 'rgba(' + Math.round(rgba[0]) + ', ' + Math.round(rgba[1]) + ', ' + Math.round(rgba[2]) + ', ' + rgba[3] + ')';\n};\ncs.to.rgb.percent = function () {\n  var rgba = swizzle(arguments);\n  var r = Math.round(rgba[0] / 255 * 100);\n  var g = Math.round(rgba[1] / 255 * 100);\n  var b = Math.round(rgba[2] / 255 * 100);\n  return rgba.length < 4 || rgba[3] === 1 ? 'rgb(' + r + '%, ' + g + '%, ' + b + '%)' : 'rgba(' + r + '%, ' + g + '%, ' + b + '%, ' + rgba[3] + ')';\n};\ncs.to.hsl = function () {\n  var hsla = swizzle(arguments);\n  return hsla.length < 4 || hsla[3] === 1 ? 'hsl(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%)' : 'hsla(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%, ' + hsla[3] + ')';\n};\n\n// hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n// (hwb have alpha optional & 1 is default value)\ncs.to.hwb = function () {\n  var hwba = swizzle(arguments);\n  var a = '';\n  if (hwba.length >= 4 && hwba[3] !== 1) {\n    a = ', ' + hwba[3];\n  }\n  return 'hwb(' + hwba[0] + ', ' + hwba[1] + '%, ' + hwba[2] + '%' + a + ')';\n};\ncs.to.keyword = function (rgb) {\n  return reverseNames[rgb.slice(0, 3)];\n};\n\n// helpers\nfunction clamp(num, min, max) {\n  return Math.min(Math.max(min, num), max);\n}\nfunction hexDouble(num) {\n  var str = Math.round(num).toString(16).toUpperCase();\n  return str.length < 2 ? '0' + str : str;\n}\n\n/* MIT license */\n\n/* eslint-disable no-mixed-operators */\nconst cssKeywords = colorName;\n\n// NOTE: conversions should only return primitive values (i.e. arrays, or\n//       values that give correct `typeof` results).\n//       do not use box values types (i.e. Number(), String(), etc.)\n\nconst reverseKeywords = {};\nfor (const key of Object.keys(cssKeywords)) {\n  reverseKeywords[cssKeywords[key]] = key;\n}\nconst convert$2 = {\n  rgb: {\n    channels: 3,\n    labels: 'rgb'\n  },\n  hsl: {\n    channels: 3,\n    labels: 'hsl'\n  },\n  hsv: {\n    channels: 3,\n    labels: 'hsv'\n  },\n  hwb: {\n    channels: 3,\n    labels: 'hwb'\n  },\n  cmyk: {\n    channels: 4,\n    labels: 'cmyk'\n  },\n  xyz: {\n    channels: 3,\n    labels: 'xyz'\n  },\n  lab: {\n    channels: 3,\n    labels: 'lab'\n  },\n  lch: {\n    channels: 3,\n    labels: 'lch'\n  },\n  hex: {\n    channels: 1,\n    labels: ['hex']\n  },\n  keyword: {\n    channels: 1,\n    labels: ['keyword']\n  },\n  ansi16: {\n    channels: 1,\n    labels: ['ansi16']\n  },\n  ansi256: {\n    channels: 1,\n    labels: ['ansi256']\n  },\n  hcg: {\n    channels: 3,\n    labels: ['h', 'c', 'g']\n  },\n  apple: {\n    channels: 3,\n    labels: ['r16', 'g16', 'b16']\n  },\n  gray: {\n    channels: 1,\n    labels: ['gray']\n  }\n};\nvar conversions$2 = convert$2;\n\n// Hide .channels and .labels properties\nfor (const model of Object.keys(convert$2)) {\n  if (!('channels' in convert$2[model])) {\n    throw new Error('missing channels property: ' + model);\n  }\n  if (!('labels' in convert$2[model])) {\n    throw new Error('missing channel labels property: ' + model);\n  }\n  if (convert$2[model].labels.length !== convert$2[model].channels) {\n    throw new Error('channel and label counts mismatch: ' + model);\n  }\n  const {\n    channels,\n    labels\n  } = convert$2[model];\n  delete convert$2[model].channels;\n  delete convert$2[model].labels;\n  Object.defineProperty(convert$2[model], 'channels', {\n    value: channels\n  });\n  Object.defineProperty(convert$2[model], 'labels', {\n    value: labels\n  });\n}\nconvert$2.rgb.hsl = function (rgb) {\n  const r = rgb[0] / 255;\n  const g = rgb[1] / 255;\n  const b = rgb[2] / 255;\n  const min = Math.min(r, g, b);\n  const max = Math.max(r, g, b);\n  const delta = max - min;\n  let h;\n  let s;\n  if (max === min) {\n    h = 0;\n  } else if (r === max) {\n    h = (g - b) / delta;\n  } else if (g === max) {\n    h = 2 + (b - r) / delta;\n  } else if (b === max) {\n    h = 4 + (r - g) / delta;\n  }\n  h = Math.min(h * 60, 360);\n  if (h < 0) {\n    h += 360;\n  }\n  const l = (min + max) / 2;\n  if (max === min) {\n    s = 0;\n  } else if (l <= 0.5) {\n    s = delta / (max + min);\n  } else {\n    s = delta / (2 - max - min);\n  }\n  return [h, s * 100, l * 100];\n};\nconvert$2.rgb.hsv = function (rgb) {\n  let rdif;\n  let gdif;\n  let bdif;\n  let h;\n  let s;\n  const r = rgb[0] / 255;\n  const g = rgb[1] / 255;\n  const b = rgb[2] / 255;\n  const v = Math.max(r, g, b);\n  const diff = v - Math.min(r, g, b);\n  const diffc = function (c) {\n    return (v - c) / 6 / diff + 1 / 2;\n  };\n  if (diff === 0) {\n    h = 0;\n    s = 0;\n  } else {\n    s = diff / v;\n    rdif = diffc(r);\n    gdif = diffc(g);\n    bdif = diffc(b);\n    if (r === v) {\n      h = bdif - gdif;\n    } else if (g === v) {\n      h = 1 / 3 + rdif - bdif;\n    } else if (b === v) {\n      h = 2 / 3 + gdif - rdif;\n    }\n    if (h < 0) {\n      h += 1;\n    } else if (h > 1) {\n      h -= 1;\n    }\n  }\n  return [h * 360, s * 100, v * 100];\n};\nconvert$2.rgb.hwb = function (rgb) {\n  const r = rgb[0];\n  const g = rgb[1];\n  let b = rgb[2];\n  const h = convert$2.rgb.hsl(rgb)[0];\n  const w = 1 / 255 * Math.min(r, Math.min(g, b));\n  b = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n  return [h, w * 100, b * 100];\n};\nconvert$2.rgb.cmyk = function (rgb) {\n  const r = rgb[0] / 255;\n  const g = rgb[1] / 255;\n  const b = rgb[2] / 255;\n  const k = Math.min(1 - r, 1 - g, 1 - b);\n  const c = (1 - r - k) / (1 - k) || 0;\n  const m = (1 - g - k) / (1 - k) || 0;\n  const y = (1 - b - k) / (1 - k) || 0;\n  return [c * 100, m * 100, y * 100, k * 100];\n};\nfunction comparativeDistance(x, y) {\n  /*\n  \tSee https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance\n  */\n  return (x[0] - y[0]) ** 2 + (x[1] - y[1]) ** 2 + (x[2] - y[2]) ** 2;\n}\nconvert$2.rgb.keyword = function (rgb) {\n  const reversed = reverseKeywords[rgb];\n  if (reversed) {\n    return reversed;\n  }\n  let currentClosestDistance = Infinity;\n  let currentClosestKeyword;\n  for (const keyword of Object.keys(cssKeywords)) {\n    const value = cssKeywords[keyword];\n\n    // Compute comparative distance\n    const distance = comparativeDistance(rgb, value);\n\n    // Check if its less, if so set as closest\n    if (distance < currentClosestDistance) {\n      currentClosestDistance = distance;\n      currentClosestKeyword = keyword;\n    }\n  }\n  return currentClosestKeyword;\n};\nconvert$2.keyword.rgb = function (keyword) {\n  return cssKeywords[keyword];\n};\nconvert$2.rgb.xyz = function (rgb) {\n  let r = rgb[0] / 255;\n  let g = rgb[1] / 255;\n  let b = rgb[2] / 255;\n\n  // Assume sRGB\n  r = r > 0.04045 ? ((r + 0.055) / 1.055) ** 2.4 : r / 12.92;\n  g = g > 0.04045 ? ((g + 0.055) / 1.055) ** 2.4 : g / 12.92;\n  b = b > 0.04045 ? ((b + 0.055) / 1.055) ** 2.4 : b / 12.92;\n  const x = r * 0.4124 + g * 0.3576 + b * 0.1805;\n  const y = r * 0.2126 + g * 0.7152 + b * 0.0722;\n  const z = r * 0.0193 + g * 0.1192 + b * 0.9505;\n  return [x * 100, y * 100, z * 100];\n};\nconvert$2.rgb.lab = function (rgb) {\n  const xyz = convert$2.rgb.xyz(rgb);\n  let x = xyz[0];\n  let y = xyz[1];\n  let z = xyz[2];\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n  x = x > 0.008856 ? x ** (1 / 3) : 7.787 * x + 16 / 116;\n  y = y > 0.008856 ? y ** (1 / 3) : 7.787 * y + 16 / 116;\n  z = z > 0.008856 ? z ** (1 / 3) : 7.787 * z + 16 / 116;\n  const l = 116 * y - 16;\n  const a = 500 * (x - y);\n  const b = 200 * (y - z);\n  return [l, a, b];\n};\nconvert$2.hsl.rgb = function (hsl) {\n  const h = hsl[0] / 360;\n  const s = hsl[1] / 100;\n  const l = hsl[2] / 100;\n  let t2;\n  let t3;\n  let val;\n  if (s === 0) {\n    val = l * 255;\n    return [val, val, val];\n  }\n  if (l < 0.5) {\n    t2 = l * (1 + s);\n  } else {\n    t2 = l + s - l * s;\n  }\n  const t1 = 2 * l - t2;\n  const rgb = [0, 0, 0];\n  for (let i = 0; i < 3; i++) {\n    t3 = h + 1 / 3 * -(i - 1);\n    if (t3 < 0) {\n      t3++;\n    }\n    if (t3 > 1) {\n      t3--;\n    }\n    if (6 * t3 < 1) {\n      val = t1 + (t2 - t1) * 6 * t3;\n    } else if (2 * t3 < 1) {\n      val = t2;\n    } else if (3 * t3 < 2) {\n      val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n    } else {\n      val = t1;\n    }\n    rgb[i] = val * 255;\n  }\n  return rgb;\n};\nconvert$2.hsl.hsv = function (hsl) {\n  const h = hsl[0];\n  let s = hsl[1] / 100;\n  let l = hsl[2] / 100;\n  let smin = s;\n  const lmin = Math.max(l, 0.01);\n  l *= 2;\n  s *= l <= 1 ? l : 2 - l;\n  smin *= lmin <= 1 ? lmin : 2 - lmin;\n  const v = (l + s) / 2;\n  const sv = l === 0 ? 2 * smin / (lmin + smin) : 2 * s / (l + s);\n  return [h, sv * 100, v * 100];\n};\nconvert$2.hsv.rgb = function (hsv) {\n  const h = hsv[0] / 60;\n  const s = hsv[1] / 100;\n  let v = hsv[2] / 100;\n  const hi = Math.floor(h) % 6;\n  const f = h - Math.floor(h);\n  const p = 255 * v * (1 - s);\n  const q = 255 * v * (1 - s * f);\n  const t = 255 * v * (1 - s * (1 - f));\n  v *= 255;\n  switch (hi) {\n    case 0:\n      return [v, t, p];\n    case 1:\n      return [q, v, p];\n    case 2:\n      return [p, v, t];\n    case 3:\n      return [p, q, v];\n    case 4:\n      return [t, p, v];\n    case 5:\n      return [v, p, q];\n  }\n};\nconvert$2.hsv.hsl = function (hsv) {\n  const h = hsv[0];\n  const s = hsv[1] / 100;\n  const v = hsv[2] / 100;\n  const vmin = Math.max(v, 0.01);\n  let sl;\n  let l;\n  l = (2 - s) * v;\n  const lmin = (2 - s) * vmin;\n  sl = s * vmin;\n  sl /= lmin <= 1 ? lmin : 2 - lmin;\n  sl = sl || 0;\n  l /= 2;\n  return [h, sl * 100, l * 100];\n};\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nconvert$2.hwb.rgb = function (hwb) {\n  const h = hwb[0] / 360;\n  let wh = hwb[1] / 100;\n  let bl = hwb[2] / 100;\n  const ratio = wh + bl;\n  let f;\n\n  // Wh + bl cant be > 1\n  if (ratio > 1) {\n    wh /= ratio;\n    bl /= ratio;\n  }\n  const i = Math.floor(6 * h);\n  const v = 1 - bl;\n  f = 6 * h - i;\n  if ((i & 0x01) !== 0) {\n    f = 1 - f;\n  }\n  const n = wh + f * (v - wh); // Linear interpolation\n\n  let r;\n  let g;\n  let b;\n  /* eslint-disable max-statements-per-line,no-multi-spaces */\n  switch (i) {\n    default:\n    case 6:\n    case 0:\n      r = v;\n      g = n;\n      b = wh;\n      break;\n    case 1:\n      r = n;\n      g = v;\n      b = wh;\n      break;\n    case 2:\n      r = wh;\n      g = v;\n      b = n;\n      break;\n    case 3:\n      r = wh;\n      g = n;\n      b = v;\n      break;\n    case 4:\n      r = n;\n      g = wh;\n      b = v;\n      break;\n    case 5:\n      r = v;\n      g = wh;\n      b = n;\n      break;\n  }\n  /* eslint-enable max-statements-per-line,no-multi-spaces */\n\n  return [r * 255, g * 255, b * 255];\n};\nconvert$2.cmyk.rgb = function (cmyk) {\n  const c = cmyk[0] / 100;\n  const m = cmyk[1] / 100;\n  const y = cmyk[2] / 100;\n  const k = cmyk[3] / 100;\n  const r = 1 - Math.min(1, c * (1 - k) + k);\n  const g = 1 - Math.min(1, m * (1 - k) + k);\n  const b = 1 - Math.min(1, y * (1 - k) + k);\n  return [r * 255, g * 255, b * 255];\n};\nconvert$2.xyz.rgb = function (xyz) {\n  const x = xyz[0] / 100;\n  const y = xyz[1] / 100;\n  const z = xyz[2] / 100;\n  let r;\n  let g;\n  let b;\n  r = x * 3.2406 + y * -1.5372 + z * -0.4986;\n  g = x * -0.9689 + y * 1.8758 + z * 0.0415;\n  b = x * 0.0557 + y * -0.2040 + z * 1.0570;\n\n  // Assume sRGB\n  r = r > 0.0031308 ? 1.055 * r ** (1.0 / 2.4) - 0.055 : r * 12.92;\n  g = g > 0.0031308 ? 1.055 * g ** (1.0 / 2.4) - 0.055 : g * 12.92;\n  b = b > 0.0031308 ? 1.055 * b ** (1.0 / 2.4) - 0.055 : b * 12.92;\n  r = Math.min(Math.max(0, r), 1);\n  g = Math.min(Math.max(0, g), 1);\n  b = Math.min(Math.max(0, b), 1);\n  return [r * 255, g * 255, b * 255];\n};\nconvert$2.xyz.lab = function (xyz) {\n  let x = xyz[0];\n  let y = xyz[1];\n  let z = xyz[2];\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n  x = x > 0.008856 ? x ** (1 / 3) : 7.787 * x + 16 / 116;\n  y = y > 0.008856 ? y ** (1 / 3) : 7.787 * y + 16 / 116;\n  z = z > 0.008856 ? z ** (1 / 3) : 7.787 * z + 16 / 116;\n  const l = 116 * y - 16;\n  const a = 500 * (x - y);\n  const b = 200 * (y - z);\n  return [l, a, b];\n};\nconvert$2.lab.xyz = function (lab) {\n  const l = lab[0];\n  const a = lab[1];\n  const b = lab[2];\n  let x;\n  let y;\n  let z;\n  y = (l + 16) / 116;\n  x = a / 500 + y;\n  z = y - b / 200;\n  const y2 = y ** 3;\n  const x2 = x ** 3;\n  const z2 = z ** 3;\n  y = y2 > 0.008856 ? y2 : (y - 16 / 116) / 7.787;\n  x = x2 > 0.008856 ? x2 : (x - 16 / 116) / 7.787;\n  z = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787;\n  x *= 95.047;\n  y *= 100;\n  z *= 108.883;\n  return [x, y, z];\n};\nconvert$2.lab.lch = function (lab) {\n  const l = lab[0];\n  const a = lab[1];\n  const b = lab[2];\n  let h;\n  const hr = Math.atan2(b, a);\n  h = hr * 360 / 2 / Math.PI;\n  if (h < 0) {\n    h += 360;\n  }\n  const c = Math.sqrt(a * a + b * b);\n  return [l, c, h];\n};\nconvert$2.lch.lab = function (lch) {\n  const l = lch[0];\n  const c = lch[1];\n  const h = lch[2];\n  const hr = h / 360 * 2 * Math.PI;\n  const a = c * Math.cos(hr);\n  const b = c * Math.sin(hr);\n  return [l, a, b];\n};\nconvert$2.rgb.ansi16 = function (args, saturation = null) {\n  const [r, g, b] = args;\n  let value = saturation === null ? convert$2.rgb.hsv(args)[2] : saturation; // Hsv -> ansi16 optimization\n\n  value = Math.round(value / 50);\n  if (value === 0) {\n    return 30;\n  }\n  let ansi = 30 + (Math.round(b / 255) << 2 | Math.round(g / 255) << 1 | Math.round(r / 255));\n  if (value === 2) {\n    ansi += 60;\n  }\n  return ansi;\n};\nconvert$2.hsv.ansi16 = function (args) {\n  // Optimization here; we already know the value and don't need to get\n  // it converted for us.\n  return convert$2.rgb.ansi16(convert$2.hsv.rgb(args), args[2]);\n};\nconvert$2.rgb.ansi256 = function (args) {\n  const r = args[0];\n  const g = args[1];\n  const b = args[2];\n\n  // We use the extended greyscale palette here, with the exception of\n  // black and white. normal palette only has 4 greyscale shades.\n  if (r === g && g === b) {\n    if (r < 8) {\n      return 16;\n    }\n    if (r > 248) {\n      return 231;\n    }\n    return Math.round((r - 8) / 247 * 24) + 232;\n  }\n  const ansi = 16 + 36 * Math.round(r / 255 * 5) + 6 * Math.round(g / 255 * 5) + Math.round(b / 255 * 5);\n  return ansi;\n};\nconvert$2.ansi16.rgb = function (args) {\n  let color = args % 10;\n\n  // Handle greyscale\n  if (color === 0 || color === 7) {\n    if (args > 50) {\n      color += 3.5;\n    }\n    color = color / 10.5 * 255;\n    return [color, color, color];\n  }\n  const mult = (~~(args > 50) + 1) * 0.5;\n  const r = (color & 1) * mult * 255;\n  const g = (color >> 1 & 1) * mult * 255;\n  const b = (color >> 2 & 1) * mult * 255;\n  return [r, g, b];\n};\nconvert$2.ansi256.rgb = function (args) {\n  // Handle greyscale\n  if (args >= 232) {\n    const c = (args - 232) * 10 + 8;\n    return [c, c, c];\n  }\n  args -= 16;\n  let rem;\n  const r = Math.floor(args / 36) / 5 * 255;\n  const g = Math.floor((rem = args % 36) / 6) / 5 * 255;\n  const b = rem % 6 / 5 * 255;\n  return [r, g, b];\n};\nconvert$2.rgb.hex = function (args) {\n  const integer = ((Math.round(args[0]) & 0xFF) << 16) + ((Math.round(args[1]) & 0xFF) << 8) + (Math.round(args[2]) & 0xFF);\n  const string = integer.toString(16).toUpperCase();\n  return '000000'.substring(string.length) + string;\n};\nconvert$2.hex.rgb = function (args) {\n  const match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);\n  if (!match) {\n    return [0, 0, 0];\n  }\n  let colorString = match[0];\n  if (match[0].length === 3) {\n    colorString = colorString.split('').map(char => {\n      return char + char;\n    }).join('');\n  }\n  const integer = parseInt(colorString, 16);\n  const r = integer >> 16 & 0xFF;\n  const g = integer >> 8 & 0xFF;\n  const b = integer & 0xFF;\n  return [r, g, b];\n};\nconvert$2.rgb.hcg = function (rgb) {\n  const r = rgb[0] / 255;\n  const g = rgb[1] / 255;\n  const b = rgb[2] / 255;\n  const max = Math.max(Math.max(r, g), b);\n  const min = Math.min(Math.min(r, g), b);\n  const chroma = max - min;\n  let grayscale;\n  let hue;\n  if (chroma < 1) {\n    grayscale = min / (1 - chroma);\n  } else {\n    grayscale = 0;\n  }\n  if (chroma <= 0) {\n    hue = 0;\n  } else if (max === r) {\n    hue = (g - b) / chroma % 6;\n  } else if (max === g) {\n    hue = 2 + (b - r) / chroma;\n  } else {\n    hue = 4 + (r - g) / chroma;\n  }\n  hue /= 6;\n  hue %= 1;\n  return [hue * 360, chroma * 100, grayscale * 100];\n};\nconvert$2.hsl.hcg = function (hsl) {\n  const s = hsl[1] / 100;\n  const l = hsl[2] / 100;\n  const c = l < 0.5 ? 2.0 * s * l : 2.0 * s * (1.0 - l);\n  let f = 0;\n  if (c < 1.0) {\n    f = (l - 0.5 * c) / (1.0 - c);\n  }\n  return [hsl[0], c * 100, f * 100];\n};\nconvert$2.hsv.hcg = function (hsv) {\n  const s = hsv[1] / 100;\n  const v = hsv[2] / 100;\n  const c = s * v;\n  let f = 0;\n  if (c < 1.0) {\n    f = (v - c) / (1 - c);\n  }\n  return [hsv[0], c * 100, f * 100];\n};\nconvert$2.hcg.rgb = function (hcg) {\n  const h = hcg[0] / 360;\n  const c = hcg[1] / 100;\n  const g = hcg[2] / 100;\n  if (c === 0.0) {\n    return [g * 255, g * 255, g * 255];\n  }\n  const pure = [0, 0, 0];\n  const hi = h % 1 * 6;\n  const v = hi % 1;\n  const w = 1 - v;\n  let mg = 0;\n\n  /* eslint-disable max-statements-per-line */\n  switch (Math.floor(hi)) {\n    case 0:\n      pure[0] = 1;\n      pure[1] = v;\n      pure[2] = 0;\n      break;\n    case 1:\n      pure[0] = w;\n      pure[1] = 1;\n      pure[2] = 0;\n      break;\n    case 2:\n      pure[0] = 0;\n      pure[1] = 1;\n      pure[2] = v;\n      break;\n    case 3:\n      pure[0] = 0;\n      pure[1] = w;\n      pure[2] = 1;\n      break;\n    case 4:\n      pure[0] = v;\n      pure[1] = 0;\n      pure[2] = 1;\n      break;\n    default:\n      pure[0] = 1;\n      pure[1] = 0;\n      pure[2] = w;\n  }\n  /* eslint-enable max-statements-per-line */\n\n  mg = (1.0 - c) * g;\n  return [(c * pure[0] + mg) * 255, (c * pure[1] + mg) * 255, (c * pure[2] + mg) * 255];\n};\nconvert$2.hcg.hsv = function (hcg) {\n  const c = hcg[1] / 100;\n  const g = hcg[2] / 100;\n  const v = c + g * (1.0 - c);\n  let f = 0;\n  if (v > 0.0) {\n    f = c / v;\n  }\n  return [hcg[0], f * 100, v * 100];\n};\nconvert$2.hcg.hsl = function (hcg) {\n  const c = hcg[1] / 100;\n  const g = hcg[2] / 100;\n  const l = g * (1.0 - c) + 0.5 * c;\n  let s = 0;\n  if (l > 0.0 && l < 0.5) {\n    s = c / (2 * l);\n  } else if (l >= 0.5 && l < 1.0) {\n    s = c / (2 * (1 - l));\n  }\n  return [hcg[0], s * 100, l * 100];\n};\nconvert$2.hcg.hwb = function (hcg) {\n  const c = hcg[1] / 100;\n  const g = hcg[2] / 100;\n  const v = c + g * (1.0 - c);\n  return [hcg[0], (v - c) * 100, (1 - v) * 100];\n};\nconvert$2.hwb.hcg = function (hwb) {\n  const w = hwb[1] / 100;\n  const b = hwb[2] / 100;\n  const v = 1 - b;\n  const c = v - w;\n  let g = 0;\n  if (c < 1) {\n    g = (v - c) / (1 - c);\n  }\n  return [hwb[0], c * 100, g * 100];\n};\nconvert$2.apple.rgb = function (apple) {\n  return [apple[0] / 65535 * 255, apple[1] / 65535 * 255, apple[2] / 65535 * 255];\n};\nconvert$2.rgb.apple = function (rgb) {\n  return [rgb[0] / 255 * 65535, rgb[1] / 255 * 65535, rgb[2] / 255 * 65535];\n};\nconvert$2.gray.rgb = function (args) {\n  return [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];\n};\nconvert$2.gray.hsl = function (args) {\n  return [0, 0, args[0]];\n};\nconvert$2.gray.hsv = convert$2.gray.hsl;\nconvert$2.gray.hwb = function (gray) {\n  return [0, 100, gray[0]];\n};\nconvert$2.gray.cmyk = function (gray) {\n  return [0, 0, 0, gray[0]];\n};\nconvert$2.gray.lab = function (gray) {\n  return [gray[0], 0, 0];\n};\nconvert$2.gray.hex = function (gray) {\n  const val = Math.round(gray[0] / 100 * 255) & 0xFF;\n  const integer = (val << 16) + (val << 8) + val;\n  const string = integer.toString(16).toUpperCase();\n  return '000000'.substring(string.length) + string;\n};\nconvert$2.rgb.gray = function (rgb) {\n  const val = (rgb[0] + rgb[1] + rgb[2]) / 3;\n  return [val / 255 * 100];\n};\nconst conversions$1 = conversions$2;\n\n/*\n\tThis function routes a model to all other models.\n\n\tall functions that are routed have a property `.conversion` attached\n\tto the returned synthetic function. This property is an array\n\tof strings, each with the steps in between the 'from' and 'to'\n\tcolor models (inclusive).\n\n\tconversions that are not possible simply are not included.\n*/\n\nfunction buildGraph() {\n  const graph = {};\n  // https://jsperf.com/object-keys-vs-for-in-with-closure/3\n  const models = Object.keys(conversions$1);\n  for (let len = models.length, i = 0; i < len; i++) {\n    graph[models[i]] = {\n      // http://jsperf.com/1-vs-infinity\n      // micro-opt, but this is simple.\n      distance: -1,\n      parent: null\n    };\n  }\n  return graph;\n}\n\n// https://en.wikipedia.org/wiki/Breadth-first_search\nfunction deriveBFS(fromModel) {\n  const graph = buildGraph();\n  const queue = [fromModel]; // Unshift -> queue -> pop\n\n  graph[fromModel].distance = 0;\n  while (queue.length) {\n    const current = queue.pop();\n    const adjacents = Object.keys(conversions$1[current]);\n    for (let len = adjacents.length, i = 0; i < len; i++) {\n      const adjacent = adjacents[i];\n      const node = graph[adjacent];\n      if (node.distance === -1) {\n        node.distance = graph[current].distance + 1;\n        node.parent = current;\n        queue.unshift(adjacent);\n      }\n    }\n  }\n  return graph;\n}\nfunction link(from, to) {\n  return function (args) {\n    return to(from(args));\n  };\n}\nfunction wrapConversion(toModel, graph) {\n  const path = [graph[toModel].parent, toModel];\n  let fn = conversions$1[graph[toModel].parent][toModel];\n  let cur = graph[toModel].parent;\n  while (graph[cur].parent) {\n    path.unshift(graph[cur].parent);\n    fn = link(conversions$1[graph[cur].parent][cur], fn);\n    cur = graph[cur].parent;\n  }\n  fn.conversion = path;\n  return fn;\n}\nvar route$1 = function (fromModel) {\n  const graph = deriveBFS(fromModel);\n  const conversion = {};\n  const models = Object.keys(graph);\n  for (let len = models.length, i = 0; i < len; i++) {\n    const toModel = models[i];\n    const node = graph[toModel];\n    if (node.parent === null) {\n      // No possible conversion, or this node is the source model.\n      continue;\n    }\n    conversion[toModel] = wrapConversion(toModel, graph);\n  }\n  return conversion;\n};\nconst conversions = conversions$2;\nconst route = route$1;\nconst convert$1 = {};\nconst models = Object.keys(conversions);\nfunction wrapRaw(fn) {\n  const wrappedFn = function (...args) {\n    const arg0 = args[0];\n    if (arg0 === undefined || arg0 === null) {\n      return arg0;\n    }\n    if (arg0.length > 1) {\n      args = arg0;\n    }\n    return fn(args);\n  };\n\n  // Preserve .conversion property if there is one\n  if ('conversion' in fn) {\n    wrappedFn.conversion = fn.conversion;\n  }\n  return wrappedFn;\n}\nfunction wrapRounded(fn) {\n  const wrappedFn = function (...args) {\n    const arg0 = args[0];\n    if (arg0 === undefined || arg0 === null) {\n      return arg0;\n    }\n    if (arg0.length > 1) {\n      args = arg0;\n    }\n    const result = fn(args);\n\n    // We're assuming the result is an array here.\n    // see notice in conversions.js; don't use box types\n    // in conversion functions.\n    if (typeof result === 'object') {\n      for (let len = result.length, i = 0; i < len; i++) {\n        result[i] = Math.round(result[i]);\n      }\n    }\n    return result;\n  };\n\n  // Preserve .conversion property if there is one\n  if ('conversion' in fn) {\n    wrappedFn.conversion = fn.conversion;\n  }\n  return wrappedFn;\n}\nmodels.forEach(fromModel => {\n  convert$1[fromModel] = {};\n  Object.defineProperty(convert$1[fromModel], 'channels', {\n    value: conversions[fromModel].channels\n  });\n  Object.defineProperty(convert$1[fromModel], 'labels', {\n    value: conversions[fromModel].labels\n  });\n  const routes = route(fromModel);\n  const routeModels = Object.keys(routes);\n  routeModels.forEach(toModel => {\n    const fn = routes[toModel];\n    convert$1[fromModel][toModel] = wrapRounded(fn);\n    convert$1[fromModel][toModel].raw = wrapRaw(fn);\n  });\n});\nvar colorConvert = convert$1;\nconst colorString = colorString$1.exports;\nconst convert = colorConvert;\nconst skippedModels = [\n// To be honest, I don't really feel like keyword belongs in color convert, but eh.\n'keyword',\n// Gray conflicts with some method names, and has its own method defined.\n'gray',\n// Shouldn't really be in color-convert either...\n'hex'];\nconst hashedModelKeys = {};\nfor (const model of Object.keys(convert)) {\n  hashedModelKeys[[...convert[model].labels].sort().join('')] = model;\n}\nconst limiters = {};\nfunction Color(object, model) {\n  if (!(this instanceof Color)) {\n    return new Color(object, model);\n  }\n  if (model && model in skippedModels) {\n    model = null;\n  }\n  if (model && !(model in convert)) {\n    throw new Error('Unknown model: ' + model);\n  }\n  let i;\n  let channels;\n  if (object == null) {\n    // eslint-disable-line no-eq-null,eqeqeq\n    this.model = 'rgb';\n    this.color = [0, 0, 0];\n    this.valpha = 1;\n  } else if (object instanceof Color) {\n    this.model = object.model;\n    this.color = [...object.color];\n    this.valpha = object.valpha;\n  } else if (typeof object === 'string') {\n    const result = colorString.get(object);\n    if (result === null) {\n      throw new Error('Unable to parse color from string: ' + object);\n    }\n    this.model = result.model;\n    channels = convert[this.model].channels;\n    this.color = result.value.slice(0, channels);\n    this.valpha = typeof result.value[channels] === 'number' ? result.value[channels] : 1;\n  } else if (object.length > 0) {\n    this.model = model || 'rgb';\n    channels = convert[this.model].channels;\n    const newArray = Array.prototype.slice.call(object, 0, channels);\n    this.color = zeroArray(newArray, channels);\n    this.valpha = typeof object[channels] === 'number' ? object[channels] : 1;\n  } else if (typeof object === 'number') {\n    // This is always RGB - can be converted later on.\n    this.model = 'rgb';\n    this.color = [object >> 16 & 0xFF, object >> 8 & 0xFF, object & 0xFF];\n    this.valpha = 1;\n  } else {\n    this.valpha = 1;\n    const keys = Object.keys(object);\n    if ('alpha' in object) {\n      keys.splice(keys.indexOf('alpha'), 1);\n      this.valpha = typeof object.alpha === 'number' ? object.alpha : 0;\n    }\n    const hashedKeys = keys.sort().join('');\n    if (!(hashedKeys in hashedModelKeys)) {\n      throw new Error('Unable to parse color from object: ' + JSON.stringify(object));\n    }\n    this.model = hashedModelKeys[hashedKeys];\n    const {\n      labels\n    } = convert[this.model];\n    const color = [];\n    for (i = 0; i < labels.length; i++) {\n      color.push(object[labels[i]]);\n    }\n    this.color = zeroArray(color);\n  }\n\n  // Perform limitations (clamping, etc.)\n  if (limiters[this.model]) {\n    channels = convert[this.model].channels;\n    for (i = 0; i < channels; i++) {\n      const limit = limiters[this.model][i];\n      if (limit) {\n        this.color[i] = limit(this.color[i]);\n      }\n    }\n  }\n  this.valpha = Math.max(0, Math.min(1, this.valpha));\n  if (Object.freeze) {\n    Object.freeze(this);\n  }\n}\nColor.prototype = {\n  toString() {\n    return this.string();\n  },\n  toJSON() {\n    return this[this.model]();\n  },\n  string(places) {\n    let self = this.model in colorString.to ? this : this.rgb();\n    self = self.round(typeof places === 'number' ? places : 1);\n    const args = self.valpha === 1 ? self.color : [...self.color, this.valpha];\n    return colorString.to[self.model](args);\n  },\n  percentString(places) {\n    const self = this.rgb().round(typeof places === 'number' ? places : 1);\n    const args = self.valpha === 1 ? self.color : [...self.color, this.valpha];\n    return colorString.to.rgb.percent(args);\n  },\n  array() {\n    return this.valpha === 1 ? [...this.color] : [...this.color, this.valpha];\n  },\n  object() {\n    const result = {};\n    const {\n      channels\n    } = convert[this.model];\n    const {\n      labels\n    } = convert[this.model];\n    for (let i = 0; i < channels; i++) {\n      result[labels[i]] = this.color[i];\n    }\n    if (this.valpha !== 1) {\n      result.alpha = this.valpha;\n    }\n    return result;\n  },\n  unitArray() {\n    const rgb = this.rgb().color;\n    rgb[0] /= 255;\n    rgb[1] /= 255;\n    rgb[2] /= 255;\n    if (this.valpha !== 1) {\n      rgb.push(this.valpha);\n    }\n    return rgb;\n  },\n  unitObject() {\n    const rgb = this.rgb().object();\n    rgb.r /= 255;\n    rgb.g /= 255;\n    rgb.b /= 255;\n    if (this.valpha !== 1) {\n      rgb.alpha = this.valpha;\n    }\n    return rgb;\n  },\n  round(places) {\n    places = Math.max(places || 0, 0);\n    return new Color([...this.color.map(roundToPlace(places)), this.valpha], this.model);\n  },\n  alpha(value) {\n    if (value !== undefined) {\n      return new Color([...this.color, Math.max(0, Math.min(1, value))], this.model);\n    }\n    return this.valpha;\n  },\n  // Rgb\n  red: getset('rgb', 0, maxfn(255)),\n  green: getset('rgb', 1, maxfn(255)),\n  blue: getset('rgb', 2, maxfn(255)),\n  hue: getset(['hsl', 'hsv', 'hsl', 'hwb', 'hcg'], 0, value => (value % 360 + 360) % 360),\n  saturationl: getset('hsl', 1, maxfn(100)),\n  lightness: getset('hsl', 2, maxfn(100)),\n  saturationv: getset('hsv', 1, maxfn(100)),\n  value: getset('hsv', 2, maxfn(100)),\n  chroma: getset('hcg', 1, maxfn(100)),\n  gray: getset('hcg', 2, maxfn(100)),\n  white: getset('hwb', 1, maxfn(100)),\n  wblack: getset('hwb', 2, maxfn(100)),\n  cyan: getset('cmyk', 0, maxfn(100)),\n  magenta: getset('cmyk', 1, maxfn(100)),\n  yellow: getset('cmyk', 2, maxfn(100)),\n  black: getset('cmyk', 3, maxfn(100)),\n  x: getset('xyz', 0, maxfn(95.047)),\n  y: getset('xyz', 1, maxfn(100)),\n  z: getset('xyz', 2, maxfn(108.833)),\n  l: getset('lab', 0, maxfn(100)),\n  a: getset('lab', 1),\n  b: getset('lab', 2),\n  keyword(value) {\n    if (value !== undefined) {\n      return new Color(value);\n    }\n    return convert[this.model].keyword(this.color);\n  },\n  hex(value) {\n    if (value !== undefined) {\n      return new Color(value);\n    }\n    return colorString.to.hex(this.rgb().round().color);\n  },\n  hexa(value) {\n    if (value !== undefined) {\n      return new Color(value);\n    }\n    const rgbArray = this.rgb().round().color;\n    let alphaHex = Math.round(this.valpha * 255).toString(16).toUpperCase();\n    if (alphaHex.length === 1) {\n      alphaHex = '0' + alphaHex;\n    }\n    return colorString.to.hex(rgbArray) + alphaHex;\n  },\n  rgbNumber() {\n    const rgb = this.rgb().color;\n    return (rgb[0] & 0xFF) << 16 | (rgb[1] & 0xFF) << 8 | rgb[2] & 0xFF;\n  },\n  luminosity() {\n    // http://www.w3.org/TR/WCAG20/#relativeluminancedef\n    const rgb = this.rgb().color;\n    const lum = [];\n    for (const [i, element] of rgb.entries()) {\n      const chan = element / 255;\n      lum[i] = chan <= 0.04045 ? chan / 12.92 : ((chan + 0.055) / 1.055) ** 2.4;\n    }\n    return 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n  },\n  contrast(color2) {\n    // http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n    const lum1 = this.luminosity();\n    const lum2 = color2.luminosity();\n    if (lum1 > lum2) {\n      return (lum1 + 0.05) / (lum2 + 0.05);\n    }\n    return (lum2 + 0.05) / (lum1 + 0.05);\n  },\n  level(color2) {\n    // https://www.w3.org/TR/WCAG/#contrast-enhanced\n    const contrastRatio = this.contrast(color2);\n    if (contrastRatio >= 7) {\n      return 'AAA';\n    }\n    return contrastRatio >= 4.5 ? 'AA' : '';\n  },\n  isDark() {\n    // YIQ equation from http://24ways.org/2010/calculating-color-contrast\n    const rgb = this.rgb().color;\n    const yiq = (rgb[0] * 2126 + rgb[1] * 7152 + rgb[2] * 722) / 10000;\n    return yiq < 128;\n  },\n  isLight() {\n    return !this.isDark();\n  },\n  negate() {\n    const rgb = this.rgb();\n    for (let i = 0; i < 3; i++) {\n      rgb.color[i] = 255 - rgb.color[i];\n    }\n    return rgb;\n  },\n  lighten(ratio) {\n    const hsl = this.hsl();\n    hsl.color[2] += hsl.color[2] * ratio;\n    return hsl;\n  },\n  darken(ratio) {\n    const hsl = this.hsl();\n    hsl.color[2] -= hsl.color[2] * ratio;\n    return hsl;\n  },\n  saturate(ratio) {\n    const hsl = this.hsl();\n    hsl.color[1] += hsl.color[1] * ratio;\n    return hsl;\n  },\n  desaturate(ratio) {\n    const hsl = this.hsl();\n    hsl.color[1] -= hsl.color[1] * ratio;\n    return hsl;\n  },\n  whiten(ratio) {\n    const hwb = this.hwb();\n    hwb.color[1] += hwb.color[1] * ratio;\n    return hwb;\n  },\n  blacken(ratio) {\n    const hwb = this.hwb();\n    hwb.color[2] += hwb.color[2] * ratio;\n    return hwb;\n  },\n  grayscale() {\n    // http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n    const rgb = this.rgb().color;\n    const value = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n    return Color.rgb(value, value, value);\n  },\n  fade(ratio) {\n    return this.alpha(this.valpha - this.valpha * ratio);\n  },\n  opaquer(ratio) {\n    return this.alpha(this.valpha + this.valpha * ratio);\n  },\n  rotate(degrees) {\n    const hsl = this.hsl();\n    let hue = hsl.color[0];\n    hue = (hue + degrees) % 360;\n    hue = hue < 0 ? 360 + hue : hue;\n    hsl.color[0] = hue;\n    return hsl;\n  },\n  mix(mixinColor, weight) {\n    // Ported from sass implementation in C\n    // https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n    if (!mixinColor || !mixinColor.rgb) {\n      throw new Error('Argument to \"mix\" was not a Color instance, but rather an instance of ' + typeof mixinColor);\n    }\n    const color1 = mixinColor.rgb();\n    const color2 = this.rgb();\n    const p = weight === undefined ? 0.5 : weight;\n    const w = 2 * p - 1;\n    const a = color1.alpha() - color2.alpha();\n    const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2;\n    const w2 = 1 - w1;\n    return Color.rgb(w1 * color1.red() + w2 * color2.red(), w1 * color1.green() + w2 * color2.green(), w1 * color1.blue() + w2 * color2.blue(), color1.alpha() * p + color2.alpha() * (1 - p));\n  }\n};\n\n// Model conversion methods and static constructors\nfor (const model of Object.keys(convert)) {\n  if (skippedModels.includes(model)) {\n    continue;\n  }\n  const {\n    channels\n  } = convert[model];\n\n  // Conversion methods\n  Color.prototype[model] = function (...args) {\n    if (this.model === model) {\n      return new Color(this);\n    }\n    if (args.length > 0) {\n      return new Color(args, model);\n    }\n    return new Color([...assertArray(convert[this.model][model].raw(this.color)), this.valpha], model);\n  };\n\n  // 'static' construction methods\n  Color[model] = function (...args) {\n    let color = args[0];\n    if (typeof color === 'number') {\n      color = zeroArray(args, channels);\n    }\n    return new Color(color, model);\n  };\n}\nfunction roundTo(number, places) {\n  return Number(number.toFixed(places));\n}\nfunction roundToPlace(places) {\n  return function (number) {\n    return roundTo(number, places);\n  };\n}\nfunction getset(model, channel, modifier) {\n  model = Array.isArray(model) ? model : [model];\n  for (const m of model) {\n    (limiters[m] || (limiters[m] = []))[channel] = modifier;\n  }\n  model = model[0];\n  return function (value) {\n    let result;\n    if (value !== undefined) {\n      if (modifier) {\n        value = modifier(value);\n      }\n      result = this[model]();\n      result.color[channel] = value;\n      return result;\n    }\n    result = this[model]().color[channel];\n    if (modifier) {\n      result = modifier(result);\n    }\n    return result;\n  };\n}\nfunction maxfn(max) {\n  return function (v) {\n    return Math.max(0, Math.min(max, v));\n  };\n}\nfunction assertArray(value) {\n  return Array.isArray(value) ? value : [value];\n}\nfunction zeroArray(array, length) {\n  for (let i = 0; i < length; i++) {\n    if (typeof array[i] !== 'number') {\n      array[i] = 0;\n    }\n  }\n  return array;\n}\nvar color = Color;\nconst Color$1 = color;\nconst CSS = {\n  channel: \"channel\",\n  channels: \"channels\",\n  colorField: \"color-field\",\n  colorFieldScope: \"scope--color-field\",\n  colorMode: \"color-mode\",\n  colorModeContainer: \"color-mode-container\",\n  container: \"container\",\n  control: \"control\",\n  controlAndScope: \"control-and-scope\",\n  controlSection: \"control-section\",\n  deleteColor: \"delete-color\",\n  header: \"header\",\n  hexAndChannelsGroup: \"hex-and-channels-group\",\n  hexOptions: \"color-hex-options\",\n  hueScope: \"scope--hue\",\n  hueSlider: \"hue-slider\",\n  opacityScope: \"scope--opacity\",\n  opacitySlider: \"opacity-slider\",\n  preview: \"preview\",\n  previewAndSliders: \"preview-and-sliders\",\n  saveColor: \"save-color\",\n  savedColor: \"saved-color\",\n  savedColors: \"saved-colors\",\n  savedColorsButtons: \"saved-colors-buttons\",\n  savedColorsSection: \"saved-colors-section\",\n  scope: \"scope\",\n  section: \"section\",\n  slider: \"slider\",\n  sliders: \"sliders\",\n  splitSection: \"section--split\"\n};\nconst DEFAULT_COLOR = Color$1(\"#007AC2\");\nconst DEFAULT_STORAGE_KEY_PREFIX = \"calcite-color-\";\nconst RGB_LIMITS = {\n  r: 255,\n  g: 255,\n  b: 255\n};\nconst HSV_LIMITS = {\n  h: 360,\n  s: 100,\n  v: 100\n};\n// 0 and 360 represent the same value, so we limit the hue to 359\nconst HUE_LIMIT_CONSTRAINED = HSV_LIMITS.h - 1;\nconst OPACITY_LIMITS = {\n  min: 0,\n  max: 100\n};\nconst DIMENSIONS = {\n  s: {\n    slider: {\n      height: 12,\n      width: 104\n    },\n    colorField: {\n      height: 80,\n      width: 160\n    },\n    thumb: {\n      radius: 7\n    },\n    preview: {\n      size: 20\n    }\n  },\n  m: {\n    slider: {\n      height: 12,\n      width: 204\n    },\n    colorField: {\n      height: 150,\n      width: 272\n    },\n    thumb: {\n      radius: 7\n    },\n    preview: {\n      size: 24\n    }\n  },\n  l: {\n    slider: {\n      height: 12,\n      width: 384\n    },\n    colorField: {\n      height: 200,\n      width: 464\n    },\n    thumb: {\n      radius: 7\n    },\n    preview: {\n      size: 32\n    }\n  }\n};\nconst SCOPE_SIZE = 1;\nconst hexChar = /^[0-9A-F]$/i;\nconst shorthandHex = /^#[0-9A-F]{3}$/i;\nconst longhandHex = /^#[0-9A-F]{6}$/i;\nconst shorthandHexWithAlpha = /^#[0-9A-F]{4}$/i;\nconst longhandHexWithAlpha = /^#[0-9A-F]{8}$/i;\nconst alphaToOpacity = alpha => Number((alpha * 100).toFixed());\nconst opacityToAlpha = opacity => Number((opacity / 100).toFixed(2));\nfunction isValidHex(hex, hasAlpha = false) {\n  return isShorthandHex(hex, hasAlpha) || isLonghandHex(hex, hasAlpha);\n}\nfunction evaluateHex(hex, length, pattern) {\n  if (!hex) {\n    return false;\n  }\n  return hex.length === length && pattern.test(hex);\n}\nfunction isShorthandHex(hex, hasAlpha = false) {\n  const hexLength = hasAlpha ? 5 : 4;\n  const hexPattern = hasAlpha ? shorthandHexWithAlpha : shorthandHex;\n  return evaluateHex(hex, hexLength, hexPattern);\n}\nfunction isLonghandHex(hex, hasAlpha = false) {\n  const hexLength = hasAlpha ? 9 : 7;\n  const hexPattern = hasAlpha ? longhandHexWithAlpha : longhandHex;\n  return evaluateHex(hex, hexLength, hexPattern);\n}\nfunction normalizeHex(hex, hasAlpha = false, convertFromHexToHexa = false) {\n  hex = hex.toLowerCase();\n  if (!hex.startsWith(\"#\")) {\n    hex = `#${hex}`;\n  }\n  if (isShorthandHex(hex, hasAlpha)) {\n    return rgbToHex(hexToRGB(hex, hasAlpha));\n  }\n  if (hasAlpha && convertFromHexToHexa && isValidHex(hex, false /* we only care about RGB hex for conversion */)) {\n    const isShorthand = isShorthandHex(hex, false);\n    return rgbToHex(hexToRGB(`${hex}${isShorthand ? \"f\" : \"ff\"}`, true));\n  }\n  return hex;\n}\nfunction hexify(color, hasAlpha = false) {\n  return hasAlpha ? color.hexa() : color.hex();\n}\nfunction rgbToHex(color) {\n  const {\n    r,\n    g,\n    b\n  } = color;\n  const rChars = numToHex(r);\n  const gChars = numToHex(g);\n  const bChars = numToHex(b);\n  const alphaChars = \"a\" in color ? numToHex(color.a * 255) : \"\";\n  return `#${rChars}${gChars}${bChars}${alphaChars}`.toLowerCase();\n}\nfunction numToHex(num) {\n  return num.toString(16).padStart(2, \"0\");\n}\nfunction normalizeAlpha(colorObject) {\n  const normalized = {\n    ...colorObject,\n    a: colorObject.alpha ?? 1 /* Color() will omit alpha if 1 */\n  };\n  delete normalized.alpha;\n  return normalized;\n}\nfunction normalizeColor(alphaColorObject) {\n  const normalized = {\n    ...alphaColorObject,\n    alpha: alphaColorObject.a ?? 1\n  };\n  delete normalized.a;\n  return normalized;\n}\nfunction hexToRGB(hex, hasAlpha = false) {\n  if (!isValidHex(hex, hasAlpha)) {\n    return null;\n  }\n  hex = hex.replace(\"#\", \"\");\n  let r;\n  let g;\n  let b;\n  let a;\n  const isShorthand = hex.length === 3 || hex.length === 4;\n  if (isShorthand) {\n    const [first, second, third, fourth] = hex.split(\"\");\n    r = parseInt(`${first}${first}`, 16);\n    g = parseInt(`${second}${second}`, 16);\n    b = parseInt(`${third}${third}`, 16);\n    a = parseInt(`${fourth}${fourth}`, 16) / 255;\n  } else {\n    r = parseInt(hex.slice(0, 2), 16);\n    g = parseInt(hex.slice(2, 4), 16);\n    b = parseInt(hex.slice(4, 6), 16);\n    a = parseInt(hex.slice(6, 8), 16) / 255;\n  }\n  return isNaN(a) ? {\n    r,\n    g,\n    b\n  } : {\n    r,\n    g,\n    b,\n    a\n  };\n}\n// these utils allow users to pass enum values as strings without having to access the enum\n// based on the approach suggested by https://github.com/microsoft/TypeScript/issues/17690#issuecomment-321365759,\nconst enumify = x => x;\nconst CSSColorMode = enumify({\n  HEX: \"hex\",\n  HEXA: \"hexa\",\n  RGB_CSS: \"rgb-css\",\n  RGBA_CSS: \"rgba-css\",\n  HSL_CSS: \"hsl-css\",\n  HSLA_CSS: \"hsla-css\"\n});\nconst ObjectColorMode = enumify({\n  RGB: \"rgb\",\n  RGBA: \"rgba\",\n  HSL: \"hsl\",\n  HSLA: \"hsla\",\n  HSV: \"hsv\",\n  HSVA: \"hsva\"\n});\nfunction parseMode(colorValue) {\n  if (typeof colorValue === \"string\") {\n    if (colorValue.startsWith(\"#\")) {\n      const {\n        length\n      } = colorValue;\n      if (length === 4 || length === 7) {\n        return CSSColorMode.HEX;\n      }\n      if (length === 5 || length === 9) {\n        return CSSColorMode.HEXA;\n      }\n    }\n    if (colorValue.startsWith(\"rgba(\")) {\n      return CSSColorMode.RGBA_CSS;\n    }\n    if (colorValue.startsWith(\"rgb(\")) {\n      return CSSColorMode.RGB_CSS;\n    }\n    if (colorValue.startsWith(\"hsl(\")) {\n      return CSSColorMode.HSL_CSS;\n    }\n    if (colorValue.startsWith(\"hsla(\")) {\n      return CSSColorMode.HSLA_CSS;\n    }\n  }\n  if (typeof colorValue === \"object\") {\n    if (hasChannels(colorValue, \"r\", \"g\", \"b\")) {\n      return hasChannels(colorValue, \"a\") ? ObjectColorMode.RGBA : ObjectColorMode.RGB;\n    }\n    if (hasChannels(colorValue, \"h\", \"s\", \"l\")) {\n      return hasChannels(colorValue, \"a\") ? ObjectColorMode.HSLA : ObjectColorMode.HSL;\n    }\n    if (hasChannels(colorValue, \"h\", \"s\", \"v\")) {\n      return hasChannels(colorValue, \"a\") ? ObjectColorMode.HSVA : ObjectColorMode.HSV;\n    }\n  }\n  return null;\n}\nfunction hasChannels(colorObject, ...channels) {\n  return channels.every(channel => channel && colorObject && `${channel}` in colorObject);\n}\nfunction colorEqual(value1, value2) {\n  return value1?.rgb().array().toString() === value2?.rgb().array().toString();\n}\nfunction alphaCompatible(mode) {\n  return mode === CSSColorMode.HEXA || mode === CSSColorMode.RGBA_CSS || mode === CSSColorMode.HSLA_CSS || mode === ObjectColorMode.RGBA || mode === ObjectColorMode.HSLA || mode === ObjectColorMode.HSVA;\n}\nfunction toAlphaMode(mode) {\n  const alphaMode = mode === CSSColorMode.HEX ? CSSColorMode.HEXA : mode === CSSColorMode.RGB_CSS ? CSSColorMode.RGBA_CSS : mode === CSSColorMode.HSL_CSS ? CSSColorMode.HSLA_CSS : mode === ObjectColorMode.RGB ? ObjectColorMode.RGBA : mode === ObjectColorMode.HSL ? ObjectColorMode.HSLA : mode === ObjectColorMode.HSV ? ObjectColorMode.HSVA : mode;\n  return alphaMode;\n}\nfunction toNonAlphaMode(mode) {\n  const nonAlphaMode = mode === CSSColorMode.HEXA ? CSSColorMode.HEX : mode === CSSColorMode.RGBA_CSS ? CSSColorMode.RGB_CSS : mode === CSSColorMode.HSLA_CSS ? CSSColorMode.HSL_CSS : mode === ObjectColorMode.RGBA ? ObjectColorMode.RGB : mode === ObjectColorMode.HSLA ? ObjectColorMode.HSL : mode === ObjectColorMode.HSVA ? ObjectColorMode.HSV : mode;\n  return nonAlphaMode;\n}\nfunction getSliderWidth(activeDimensions, hasAlpha) {\n  const {\n    slider: {\n      width\n    },\n    preview\n  } = activeDimensions;\n  if (hasAlpha) {\n    return width;\n  }\n  const previewWidthOffset = DIMENSIONS[\"l\"].preview.size - preview.size;\n  return width + previewWidthOffset;\n}\nexport { CSSColorMode as C, DEFAULT_COLOR as D, HSV_LIMITS as H, OPACITY_LIMITS as O, RGB_LIMITS as R, SCOPE_SIZE as S, hexify as a, alphaCompatible as b, Color$1 as c, CSS as d, alphaToOpacity as e, DIMENSIONS as f, getSliderWidth as g, hexToRGB as h, isValidHex as i, normalizeColor as j, colorEqual as k, normalizeAlpha as l, HUE_LIMIT_CONSTRAINED as m, normalizeHex as n, opacityToAlpha as o, parseMode as p, DEFAULT_STORAGE_KEY_PREFIX as q, toAlphaMode as r, isLonghandHex as s, toNonAlphaMode as t, isShorthandHex as u, rgbToHex as v, hexChar as w };\n\n", "/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\n * v2.13.2\n */\nimport { proxyCustomElement, HTMLElement, h, Fragment } from '@stencil/core/internal/client';\nimport { c as Color, a as hexify } from './utils.js';\nimport { p as getModeName } from './dom.js';\nconst CSS = {\n  swatch: \"swatch\",\n  noColorSwatch: \"swatch--no-color\",\n  checker: \"checker\"\n};\nconst COLORS = {\n  borderLight: \"rgba(0, 0, 0, 0.3)\",\n  borderDark: \"rgba(255, 255, 255, 0.15)\"\n};\nconst checkerSquareSize = 4;\nconst CHECKER_DIMENSIONS = {\n  squareSize: checkerSquareSize,\n  size: checkerSquareSize * 2\n};\nconst colorPickerSwatchCss = \":host{position:relative;display:inline-flex}:host([scale=s]){block-size:1.25rem;inline-size:1.25rem}:host([scale=m]){block-size:1.5rem;inline-size:1.5rem}:host([scale=l]){block-size:2rem;inline-size:2rem}.swatch{overflow:hidden;block-size:inherit;inline-size:inherit}.swatch rect{transition-property:all;transition-duration:150ms;transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1)}.swatch--no-color rect{fill:var(--calcite-color-foreground-1)}.swatch--no-color line{stroke:var(--calcite-color-status-danger)}.checker{fill:#cacaca}:host([hidden]){display:none}[hidden]{display:none}\";\nconst CalciteColorPickerSwatchStyle0 = colorPickerSwatchCss;\nconst ColorPickerSwatch = /*@__PURE__*/proxyCustomElement(class ColorPickerSwatch extends HTMLElement {\n  constructor() {\n    super();\n    this.__registerHost();\n    this.__attachShadow();\n    this.active = false;\n    this.color = undefined;\n    this.scale = \"m\";\n  }\n  handleColorChange(color) {\n    this.internalColor = color ? Color(color) : null;\n  }\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n  componentWillLoad() {\n    this.handleColorChange(this.color);\n  }\n  render() {\n    const isEmpty = !this.internalColor;\n    const classes = {\n      [CSS.swatch]: true,\n      [CSS.noColorSwatch]: isEmpty\n    };\n    return h(\"svg\", {\n      key: 'd808ca40b9f81aad24291cabcfaf95d74d89f7cd',\n      class: classes,\n      xmlns: \"http://www.w3.org/2000/svg\"\n    }, this.renderSwatch());\n  }\n  renderSwatch() {\n    const {\n      active,\n      el,\n      internalColor\n    } = this;\n    const borderRadius = active ? \"100%\" : \"0\";\n    const theme = getModeName(el);\n    const borderColor = theme === \"light\" ? COLORS.borderLight : COLORS.borderDark;\n    const isEmpty = !internalColor;\n    const commonSwatchProps = {\n      height: \"100%\",\n      rx: borderRadius,\n      stroke: borderColor,\n      strokeWidth: \"2\",\n      width: \"100%\"\n    };\n    if (isEmpty) {\n      return h(Fragment, null, h(\"clipPath\", {\n        id: \"shape\"\n      }, h(\"rect\", {\n        height: \"100%\",\n        rx: borderRadius,\n        width: \"100%\"\n      })), this.renderSwatchRect({\n        clipPath: `inset(0 round ${borderRadius})`,\n        ...commonSwatchProps\n      }), h(\"line\", {\n        \"clip-path\": \"url(#shape)\",\n        \"stroke-width\": \"3\",\n        x1: \"100%\",\n        x2: \"0\",\n        y1: \"0\",\n        y2: \"100%\"\n      }));\n    }\n    const alpha = internalColor.alpha();\n    const hex = hexify(internalColor);\n    const hexa = hexify(internalColor, alpha < 1);\n    return h(Fragment, null, h(\"title\", null, hexa), h(\"defs\", null, h(\"pattern\", {\n      height: CHECKER_DIMENSIONS.size,\n      id: \"checker\",\n      patternUnits: \"userSpaceOnUse\",\n      width: CHECKER_DIMENSIONS.size,\n      x: \"0\",\n      y: \"0\"\n    }, h(\"rect\", {\n      class: CSS.checker,\n      height: CHECKER_DIMENSIONS.squareSize,\n      width: CHECKER_DIMENSIONS.squareSize,\n      x: \"0\",\n      y: \"0\"\n    }), h(\"rect\", {\n      class: CSS.checker,\n      height: CHECKER_DIMENSIONS.squareSize,\n      width: CHECKER_DIMENSIONS.squareSize,\n      x: CHECKER_DIMENSIONS.squareSize,\n      y: CHECKER_DIMENSIONS.squareSize\n    }))), this.renderSwatchRect({\n      fill: \"url(#checker)\",\n      rx: commonSwatchProps.rx,\n      height: commonSwatchProps.height,\n      width: commonSwatchProps.width\n    }), this.renderSwatchRect({\n      clipPath: alpha < 1 ? \"polygon(100% 0, 0 0, 0 100%)\" : `inset(0 round ${borderRadius})`,\n      fill: hex,\n      ...commonSwatchProps\n    }), alpha < 1 ? this.renderSwatchRect({\n      clipPath: \"polygon(100% 0, 100% 100%, 0 100%)\",\n      fill: hexa,\n      key: \"opacity-fill\",\n      ...commonSwatchProps\n    }) : null);\n  }\n  renderSwatchRect({\n    clipPath,\n    fill,\n    height,\n    key,\n    rx,\n    stroke,\n    strokeWidth,\n    width\n  }) {\n    return h(\"rect\", {\n      \"clip-path\": clipPath,\n      fill: fill,\n      height: height,\n      key: key,\n      rx: rx,\n      stroke: stroke,\n      \"stroke-width\": strokeWidth,\n      width: width\n    });\n  }\n  get el() {\n    return this;\n  }\n  static get watchers() {\n    return {\n      \"color\": [\"handleColorChange\"]\n    };\n  }\n  static get style() {\n    return CalciteColorPickerSwatchStyle0;\n  }\n}, [1, \"calcite-color-picker-swatch\", {\n  \"active\": [516],\n  \"color\": [1],\n  \"scale\": [513]\n}, undefined, {\n  \"color\": [\"handleColorChange\"]\n}]);\nfunction defineCustomElement() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n  const components = [\"calcite-color-picker-swatch\"];\n  components.forEach(tagName => {\n    switch (tagName) {\n      case \"calcite-color-picker-swatch\":\n        if (!customElements.get(tagName)) {\n          customElements.define(tagName, ColorPickerSwatch);\n        }\n        break;\n    }\n  });\n}\ndefineCustomElement();\nexport { ColorPickerSwatch as C, defineCustomElement as d };\n\n"],
  "mappings": "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",
  "names": ["isArrayish", "swizzle", "h", "color", "colorString", "models", "CSS", "ColorPickerSwatch", "color"]
}
