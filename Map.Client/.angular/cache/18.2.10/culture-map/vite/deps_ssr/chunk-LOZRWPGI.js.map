{
  "version": 3,
  "sources": ["../../../../../../node_modules/@arcgis/core/rest/support/AttachmentQuery.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { _ as t } from \"../../chunks/tslib.es6.js\";\nimport { JSONSupport as e } from \"../../core/JSONSupport.js\";\nimport { clone as r } from \"../../core/lang.js\";\nimport { property as o } from \"../../core/accessorSupport/decorators/property.js\";\nimport { ensureType as s } from \"../../core/accessorSupport/ensureType.js\";\nimport { subclass as i } from \"../../core/accessorSupport/decorators/subclass.js\";\nimport { writer as n } from \"../../core/accessorSupport/decorators/writer.js\";\nvar a;\nlet p = a = class extends e {\n  constructor(t) {\n    super(t), this.attachmentTypes = null, this.attachmentsWhere = null, this.cacheHint = void 0, this.keywords = null, this.globalIds = null, this.name = null, this.num = null, this.objectIds = null, this.returnMetadata = !1, this.size = null, this.start = null, this.where = null;\n  }\n  writeStart(t, e) {\n    e.resultOffset = this.start, e.resultRecordCount = this.num || 10;\n  }\n  clone() {\n    return new a(r({\n      attachmentTypes: this.attachmentTypes,\n      attachmentsWhere: this.attachmentsWhere,\n      cacheHint: this.cacheHint,\n      keywords: this.keywords,\n      where: this.where,\n      globalIds: this.globalIds,\n      name: this.name,\n      num: this.num,\n      objectIds: this.objectIds,\n      returnMetadata: this.returnMetadata,\n      size: this.size,\n      start: this.start\n    }));\n  }\n};\nt([o({\n  type: [String],\n  json: {\n    write: !0\n  }\n})], p.prototype, \"attachmentTypes\", void 0), t([o({\n  type: String,\n  json: {\n    read: {\n      source: \"attachmentsDefinitionExpression\"\n    },\n    write: {\n      target: \"attachmentsDefinitionExpression\"\n    }\n  }\n})], p.prototype, \"attachmentsWhere\", void 0), t([o({\n  type: Boolean,\n  json: {\n    write: !0\n  }\n})], p.prototype, \"cacheHint\", void 0), t([o({\n  type: [String],\n  json: {\n    write: !0\n  }\n})], p.prototype, \"keywords\", void 0), t([o({\n  type: [Number],\n  json: {\n    write: !0\n  }\n})], p.prototype, \"globalIds\", void 0), t([o({\n  json: {\n    write: !0\n  }\n})], p.prototype, \"name\", void 0), t([o({\n  type: Number,\n  json: {\n    read: {\n      source: \"resultRecordCount\"\n    }\n  }\n})], p.prototype, \"num\", void 0), t([o({\n  type: [Number],\n  json: {\n    write: !0\n  }\n})], p.prototype, \"objectIds\", void 0), t([o({\n  type: Boolean,\n  json: {\n    default: !1,\n    write: !0\n  }\n})], p.prototype, \"returnMetadata\", void 0), t([o({\n  type: [Number],\n  json: {\n    write: !0\n  }\n})], p.prototype, \"size\", void 0), t([o({\n  type: Number,\n  json: {\n    read: {\n      source: \"resultOffset\"\n    }\n  }\n})], p.prototype, \"start\", void 0), t([n(\"start\"), n(\"num\")], p.prototype, \"writeStart\", null), t([o({\n  type: String,\n  json: {\n    read: {\n      source: \"definitionExpression\"\n    },\n    write: {\n      target: \"definitionExpression\"\n    }\n  }\n})], p.prototype, \"where\", void 0), p = a = t([i(\"esri.rest.support.AttachmentQuery\")], p), p.from = s(p);\nconst c = p;\nexport { c as default };"],
  "mappings": "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",
  "names": ["a", "e"]
}
