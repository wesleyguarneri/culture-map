{
  "version": 3,
  "sources": ["../../../../../../node_modules/@arcgis/core/views/interactive/tooltip/infos/MovePointTooltipInfo.js", "../../../../../../node_modules/@arcgis/core/views/interactive/tooltip/infos/SelectedVertexTooltipInfo.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { _ as o } from \"../../../../chunks/tslib.es6.js\";\nimport { property as t } from \"../../../../core/accessorSupport/decorators/property.js\";\nimport \"../../../../core/has.js\";\nimport \"../../../../core/Logger.js\";\nimport \"../../../../core/RandomLCG.js\";\nimport { subclass as s } from \"../../../../core/accessorSupport/decorators/subclass.js\";\nimport { SketchTooltipInfo as r } from \"./SketchTooltipInfo.js\";\nimport { TooltipInfoWithCoordinates as e } from \"./TooltipInfoWithCoordinates.js\";\nlet i = class extends e(r) {\n  constructor(o) {\n    super(o), this.type = \"move-point\", this.allFields.forEach(o => {\n      o.lockable = !1, o.setActual(null);\n    });\n  }\n  get allFields() {\n    return [this.longitude, this.latitude, this.x, this.y, this.elevation];\n  }\n};\no([t()], i.prototype, \"allFields\", null), i = o([s(\"esri.views.interactive.tooltip.infos.MovePointTooltipInfo\")], i);\nexport { i as MovePointTooltipInfo };", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { _ as t } from \"../../../../chunks/tslib.es6.js\";\nimport { property as o } from \"../../../../core/accessorSupport/decorators/property.js\";\nimport \"../../../../core/has.js\";\nimport \"../../../../core/Logger.js\";\nimport \"../../../../core/RandomLCG.js\";\nimport { subclass as e } from \"../../../../core/accessorSupport/decorators/subclass.js\";\nimport { makeAreaField as s, makeTotalLengthField as r } from \"../fields/fields.js\";\nimport { SketchTooltipInfo as i } from \"./SketchTooltipInfo.js\";\nimport { TooltipInfoWithCoordinates as l } from \"./TooltipInfoWithCoordinates.js\";\nlet p = class extends l(i) {\n  constructor(t) {\n    super(t), this.type = \"selected-vertex\", this.area = s(), this.totalLength = r(), this.geometryType = \"polyline\", this.allFields.forEach(t => {\n      t.lockable = !1, t.setActual(null);\n    });\n  }\n  get allFields() {\n    return [this.longitude, this.latitude, this.x, this.y, this.elevation, \"polygon\" === this.geometryType ? this.area : this.totalLength];\n  }\n};\nt([o()], p.prototype, \"geometryType\", void 0), t([o()], p.prototype, \"allFields\", null), p = t([e(\"esri.views.interactive.tooltip.infos.SelectedVertexTooltipInfo\")], p);\nexport { p as SelectedVertexTooltipInfo };"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAYA,IAAI,IAAI,cAAc,EAAE,CAAC,EAAE;AAAA,EACzB,YAAY,GAAG;AACb,UAAM,CAAC,GAAG,KAAK,OAAO,cAAc,KAAK,UAAU,QAAQ,CAAAA,OAAK;AAC9D,MAAAA,GAAE,WAAW,OAAIA,GAAE,UAAU,IAAI;AAAA,IACnC,CAAC;AAAA,EACH;AAAA,EACA,IAAI,YAAY;AACd,WAAO,CAAC,KAAK,WAAW,KAAK,UAAU,KAAK,GAAG,KAAK,GAAG,KAAK,SAAS;AAAA,EACvE;AACF;AACA,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,WAAW,aAAa,IAAI,GAAG,IAAI,EAAE,CAAC,EAAE,2DAA2D,CAAC,GAAG,CAAC;;;ACTnH,IAAI,IAAI,cAAc,EAAE,CAAC,EAAE;AAAA,EACzB,YAAY,GAAG;AACb,UAAM,CAAC,GAAG,KAAK,OAAO,mBAAmB,KAAK,OAAO,EAAE,GAAG,KAAK,cAAc,EAAE,GAAG,KAAK,eAAe,YAAY,KAAK,UAAU,QAAQ,CAAAC,OAAK;AAC5I,MAAAA,GAAE,WAAW,OAAIA,GAAE,UAAU,IAAI;AAAA,IACnC,CAAC;AAAA,EACH;AAAA,EACA,IAAI,YAAY;AACd,WAAO,CAAC,KAAK,WAAW,KAAK,UAAU,KAAK,GAAG,KAAK,GAAG,KAAK,WAAW,cAAc,KAAK,eAAe,KAAK,OAAO,KAAK,WAAW;AAAA,EACvI;AACF;AACA,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,WAAW,gBAAgB,MAAM,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,WAAW,aAAa,IAAI,GAAG,IAAI,EAAE,CAAC,EAAE,gEAAgE,CAAC,GAAG,CAAC;",
  "names": ["o", "t"]
}
