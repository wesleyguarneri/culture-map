{
  "version": 3,
  "sources": ["../../../../../../node_modules/@arcgis/core/geometry/support/clipRay.js", "../../../../../../node_modules/@arcgis/core/geometry/support/frustum.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { ObjectStack as r } from \"../../core/ObjectStack.js\";\nimport { l as c, g as n, j as t } from \"../../chunks/vec32.js\";\nimport { create as o, copy as e, fromValues as u } from \"./ray.js\";\nfunction a(r) {\n  return r ? {\n    ray: o(r.ray),\n    c0: r.c0,\n    c1: r.c1\n  } : {\n    ray: o(),\n    c0: 0,\n    c1: Number.MAX_VALUE\n  };\n}\nfunction i(r, c, n) {\n  const t = A.get();\n  return t.ray = r, t.c0 = c, t.c1 = n, t;\n}\nfunction s(r, c = a()) {\n  return f(r.ray, r.c0, r.c1, c);\n}\nfunction f(r, c, n, t = a()) {\n  return e(r, t.ray), t.c0 = c, t.c1 = n, t;\n}\nfunction y(r, c = a()) {\n  return e(r, c.ray), c.c0 = 0, c.c1 = Number.MAX_VALUE, c;\n}\nfunction m(r, n, t = a()) {\n  const o = c(r.vector);\n  return u(r.origin, n, t.ray), t.c0 = 0, t.c1 = o, t;\n}\nfunction j(r, c) {\n  return g(r, r.c0, c);\n}\nfunction p(r, c) {\n  return g(r, r.c1, c);\n}\nfunction g(r, c, o) {\n  return n(o, r.ray.origin, t(o, r.ray.direction, c));\n}\nconst A = new r(() => a());\nexport { s as copy, a as create, m as fromLineSegmentAndDirection, y as fromRay, f as fromValues, g as getAt, p as getEnd, j as getStart, i as wrap };", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { ObjectStack as T } from \"../../core/ObjectStack.js\";\nimport { multiply as _, invert as O } from \"../../core/libs/gl-matrix-2/math/mat4.js\";\nimport { s as R } from \"../../chunks/vec32.js\";\nimport { create as t } from \"../../core/libs/gl-matrix-2/factories/vec3f64.js\";\nimport { t as r } from \"../../chunks/vec42.js\";\nimport { fromValues as A } from \"../../core/libs/gl-matrix-2/factories/vec4f64.js\";\nimport { create as E, fromRay as F, fromLineSegmentAndDirection as o } from \"./clipRay.js\";\nimport { create as n, copy as e, fromPoints as c, clipInfinite as f, signedDistance as i, clip as B } from \"./plane.js\";\nimport { sm4d as M, sv4d as G } from \"./vectorStacks.js\";\nfunction H(T) {\n  return T ? [n(T[0]), n(T[1]), n(T[2]), n(T[3]), n(T[4]), n(T[5])] : [n(), n(), n(), n(), n(), n()];\n}\nfunction I() {\n  return [t(), t(), t(), t(), t(), t(), t(), t()];\n}\nfunction N(T, _) {\n  for (let O = 0; O < b; O++) e(T[O], _[O]);\n  return T;\n}\nfunction L(T, t, A, E = y) {\n  const F = _(M.get(), t, T);\n  O(F, F);\n  for (let _ = 0; _ < h; ++_) {\n    const T = r(G.get(), k[_], F);\n    R(E[_], T[0] / T[3], T[1] / T[3], T[2] / T[3]);\n  }\n  P(A, E);\n}\nfunction P(T, _) {\n  c(_[g.FAR_BOTTOM_LEFT], _[g.NEAR_BOTTOM_LEFT], _[g.NEAR_TOP_LEFT], T[j.LEFT]), c(_[g.NEAR_BOTTOM_RIGHT], _[g.FAR_BOTTOM_RIGHT], _[g.FAR_TOP_RIGHT], T[j.RIGHT]), c(_[g.FAR_BOTTOM_LEFT], _[g.FAR_BOTTOM_RIGHT], _[g.NEAR_BOTTOM_RIGHT], T[j.BOTTOM]), c(_[g.NEAR_TOP_LEFT], _[g.NEAR_TOP_RIGHT], _[g.FAR_TOP_RIGHT], T[j.TOP]), c(_[g.NEAR_BOTTOM_LEFT], _[g.NEAR_BOTTOM_RIGHT], _[g.NEAR_TOP_RIGHT], T[j.NEAR]), c(_[g.FAR_BOTTOM_RIGHT], _[g.FAR_BOTTOM_LEFT], _[g.FAR_TOP_LEFT], T[j.FAR]);\n}\nfunction s(T, _) {\n  for (let O = 0; O < b; O++) {\n    const R = T[O];\n    if (R[0] * _[0] + R[1] * _[1] + R[2] * _[2] + R[3] >= _[3]) return !1;\n  }\n  return !0;\n}\nfunction u(T, _) {\n  return p(T, F(_, x.get()));\n}\nfunction m(T, _) {\n  for (let O = 0; O < b; O++) {\n    const R = T[O];\n    if (!f(R, _)) return !1;\n  }\n  return !0;\n}\nfunction a(T, _, O) {\n  return p(T, o(_, O, x.get()));\n}\nfunction l(T, _) {\n  for (let O = 0; O < b; O++) {\n    if (i(T[O], _) > 0) return !1;\n  }\n  return !0;\n}\nfunction p(T, _) {\n  for (let O = 0; O < b; O++) if (!B(T[O], _)) return !1;\n  return !0;\n}\nvar j, g;\n!function (T) {\n  T[T.LEFT = 0] = \"LEFT\", T[T.RIGHT = 1] = \"RIGHT\", T[T.BOTTOM = 2] = \"BOTTOM\", T[T.TOP = 3] = \"TOP\", T[T.NEAR = 4] = \"NEAR\", T[T.FAR = 5] = \"FAR\";\n}(j || (j = {})), function (T) {\n  T[T.NEAR_BOTTOM_LEFT = 0] = \"NEAR_BOTTOM_LEFT\", T[T.NEAR_BOTTOM_RIGHT = 1] = \"NEAR_BOTTOM_RIGHT\", T[T.NEAR_TOP_RIGHT = 2] = \"NEAR_TOP_RIGHT\", T[T.NEAR_TOP_LEFT = 3] = \"NEAR_TOP_LEFT\", T[T.FAR_BOTTOM_LEFT = 4] = \"FAR_BOTTOM_LEFT\", T[T.FAR_BOTTOM_RIGHT = 5] = \"FAR_BOTTOM_RIGHT\", T[T.FAR_TOP_RIGHT = 6] = \"FAR_TOP_RIGHT\", T[T.FAR_TOP_LEFT = 7] = \"FAR_TOP_LEFT\";\n}(g || (g = {}));\nconst v = {\n    bottom: [g.FAR_BOTTOM_RIGHT, g.NEAR_BOTTOM_RIGHT, g.NEAR_BOTTOM_LEFT, g.FAR_BOTTOM_LEFT],\n    near: [g.NEAR_BOTTOM_LEFT, g.NEAR_BOTTOM_RIGHT, g.NEAR_TOP_RIGHT, g.NEAR_TOP_LEFT],\n    far: [g.FAR_BOTTOM_RIGHT, g.FAR_BOTTOM_LEFT, g.FAR_TOP_LEFT, g.FAR_TOP_RIGHT],\n    right: [g.NEAR_BOTTOM_RIGHT, g.FAR_BOTTOM_RIGHT, g.FAR_TOP_RIGHT, g.NEAR_TOP_RIGHT],\n    left: [g.FAR_BOTTOM_LEFT, g.NEAR_BOTTOM_LEFT, g.NEAR_TOP_LEFT, g.FAR_TOP_LEFT],\n    top: [g.FAR_TOP_LEFT, g.NEAR_TOP_LEFT, g.NEAR_TOP_RIGHT, g.FAR_TOP_RIGHT]\n  },\n  b = 6,\n  h = 8,\n  k = [A(-1, -1, -1, 1), A(1, -1, -1, 1), A(1, 1, -1, 1), A(-1, 1, -1, 1), A(-1, -1, 1, 1), A(1, -1, 1, 1), A(1, 1, 1, 1), A(-1, 1, 1, 1)],\n  x = new T(E),\n  y = I();\nexport { j as PlaneIndex, g as PointIndex, P as computePlanes, N as copy, H as create, I as createPoints, L as fromMatrix, m as intersectClipRay, a as intersectsLineSegment, l as intersectsPoint, u as intersectsRay, s as intersectsSphere, b as numPlanes, h as numPoints, v as planePointIndices };"],
  "mappings": "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",
  "names": ["r", "r", "c", "m", "n", "o", "g", "A", "s", "H", "b", "A", "E", "y", "h", "T", "r", "g", "j", "s", "u", "p", "m", "a", "v"]
}
