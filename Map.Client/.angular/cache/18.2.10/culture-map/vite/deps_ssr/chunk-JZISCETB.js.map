{
  "version": 3,
  "sources": ["../../../../../../node_modules/@arcgis/core/chunks/TextureOnly.glsl.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { fromValues as e } from \"../core/libs/gl-matrix-2/factories/vec3f64.js\";\nimport { ScreenSpacePass as r } from \"../views/3d/webgl-engine/core/shaderLibrary/ScreenSpacePass.glsl.js\";\nimport { Float3PassUniform as o } from \"../views/3d/webgl-engine/core/shaderModules/Float3PassUniform.js\";\nimport { NoParameters as s, glsl as t } from \"../views/3d/webgl-engine/core/shaderModules/interfaces.js\";\nimport { ShaderBuilder as i } from \"../views/3d/webgl-engine/core/shaderModules/ShaderBuilder.js\";\nimport { Texture2DPassUniform as n } from \"../views/3d/webgl-engine/core/shaderModules/Texture2DPassUniform.js\";\nclass a extends s {\n  constructor() {\n    super(...arguments), this.color = e(1, 1, 1);\n  }\n}\nfunction l() {\n  const e = new i();\n  return e.include(r), e.fragment.uniforms.add(new n(\"tex\", e => e.texture), new o(\"uColor\", e => e.color)), e.fragment.code.add(t`void main() {\nvec4 texColor = texture(tex, uv);\nfragColor = texColor * vec4(uColor, 1.0);\n}`), e;\n}\nconst d = Object.freeze(Object.defineProperty({\n  __proto__: null,\n  TextureOnlyPassParameters: a,\n  build: l\n}, Symbol.toStringTag, {\n  value: \"Module\"\n}));\nexport { a as T, d as a, l as b };"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;AAUA,IAAM,IAAN,cAAgB,EAAE;AAAA,EAChB,cAAc;AACZ,UAAM,GAAG,SAAS,GAAG,KAAK,QAAQ,EAAE,GAAG,GAAG,CAAC;AAAA,EAC7C;AACF;AACA,SAAS,IAAI;AACX,QAAMA,KAAI,IAAIC,GAAE;AAChB,SAAOD,GAAE,QAAQC,EAAC,GAAGD,GAAE,SAAS,SAAS,IAAI,IAAI,EAAE,OAAO,CAAAA,OAAKA,GAAE,OAAO,GAAG,IAAI,EAAE,UAAU,CAAAA,OAAKA,GAAE,KAAK,CAAC,GAAGA,GAAE,SAAS,KAAK,IAAI;AAAA;AAAA;AAAA,EAG/H,GAAGA;AACL;AACA,IAAM,IAAI,OAAO,OAAO,OAAO,eAAe;AAAA,EAC5C,WAAW;AAAA,EACX,2BAA2B;AAAA,EAC3B,OAAO;AACT,GAAG,OAAO,aAAa;AAAA,EACrB,OAAO;AACT,CAAC,CAAC;",
  "names": ["e", "o"]
}
