{
  "version": 3,
  "sources": ["../../../../../../node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/util/IsNaN.glsl.js", "../../../../../../node_modules/@arcgis/core/views/3d/webgl-engine/shaders/sources/edgeRenderer/AdjustProjectedPosition.glsl.js", "../../../../../../node_modules/@arcgis/core/views/3d/webgl-engine/shaders/sources/edgeRenderer/DiscardByCoverage.glsl.js", "../../../../../../node_modules/@arcgis/core/views/3d/webgl-engine/shaders/sources/edgeRenderer/DiscardNonSilhouetteEdges.glsl.js", "../../../../../../node_modules/@arcgis/core/views/3d/webgl-engine/shaders/sources/edgeRenderer/UnpackAttributes.glsl.js", "../../../../../../node_modules/@arcgis/core/views/3d/webgl-engine/shaders/sources/edgeRenderer/LineAmplitude.glsl.js", "../../../../../../node_modules/@arcgis/core/views/3d/webgl-engine/shaders/sources/edgeRenderer/LineOffset.glsl.js", "../../../../../../node_modules/@arcgis/core/chunks/EdgeShader.glsl.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { glsl as a } from \"../../shaderModules/interfaces.js\";\nfunction o(o) {\n  const e = a`bool isNaN( float val )\n{\nreturn ( val < 0.0 || 0.0 < val || val == 0.0 ) ? false : true;\n}`;\n  o.code.add(e);\n}\nexport { o as IsNaN };", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { fromValues as o } from \"../../../../../../core/libs/gl-matrix-2/factories/vec2f64.js\";\nimport { IsNaN as r } from \"../../../core/shaderLibrary/util/IsNaN.glsl.js\";\nimport { Float2PassUniform as e } from \"../../../core/shaderModules/Float2PassUniform.js\";\nimport { glsl as a } from \"../../../core/shaderModules/interfaces.js\";\nimport { Matrix3PassUniform as s } from \"../../../core/shaderModules/Matrix3PassUniform.js\";\nimport { Matrix4PassUniform as t } from \"../../../core/shaderModules/Matrix4PassUniform.js\";\nconst l = o(.5, -4e-4);\nfunction i(o, i) {\n  const c = o.vertex;\n  c.include(r), c.constants.add(\"depthBias\", \"vec2\", l), c.uniforms.add(new e(\"inverseViewport\", (o, r) => r.inverseViewport)), i.legacy ? (c.uniforms.add(new t(\"proj\", (o, r) => r.camera.projectionMatrix)), c.code.add(a`vec2 calculateProjectedBiasXY(vec4 projPos, vec3 globalNormal) {\nfloat offsetXY = depthBias.x;\nvec4 projNormal = proj * localView * vec4(globalNormal, 0.0);\nreturn offsetXY * projPos.w * 2.0 * inverseViewport * normalize(projNormal.xyz).xy;\n}`)) : (c.uniforms.add(new s(\"transformNormalViewFromGlobal\", o => o.transformNormalViewFromGlobal), new t(\"transformProjFromView\", o => o.transformProjFromView)), c.code.add(a`vec2 calculateProjectedBiasXY(vec4 projPos, vec3 globalNormal) {\nfloat offsetXY = depthBias.x;\nvec4 projNormal = transformProjFromView * vec4(transformNormalViewFromGlobal * globalNormal, 0.0);\nreturn offsetXY * projPos.w * 2.0 * inverseViewport * normalize(projNormal.xyz).xy;\n}`)), c.code.add(a`float _calculateProjectedBiasZ(vec4 projPos) {\nfloat offsetZ = depthBias.y;\nreturn sqrt(max(projPos.z,0.0)) * offsetZ;\n}\nvec4 adjustProjectedPosition(vec4 projPos, vec3 worldNormal, float lineWidth) {\nvec2 offsetXY = calculateProjectedBiasXY(projPos, worldNormal);\nif (!isNaN(offsetXY.x) && !isNaN(offsetXY.y)) {\nprojPos.xy += offsetXY;\n}\nprojPos.z += _calculateProjectedBiasZ(projPos);\nreturn projPos;\n}`);\n}\nexport { i as AdjustProjectedPosition };", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { glsl as e } from \"../../../core/shaderModules/interfaces.js\";\nfunction o(o) {\n  const r = o.fragment;\n  r.constants.add(\"coverageTestThreshold\", \"float\", .01), r.code.add(e`#define discardByCoverage(radius, coverage) { if (coverage < coverageTestThreshold) discard; }`);\n}\nexport { o as DiscardByCoverage };", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { glsl as e } from \"../../../core/shaderModules/interfaces.js\";\nfunction o(o, r) {\n  const a = o.vertex;\n  r.silhouette ? (a.code.add(e`bool isSilhouetteEdge(vec3 viewDir, vec3 normalA, vec3 normalB) {\nfloat faceAVisible = dot(viewDir, normalA);\nfloat faceBVisible = dot(viewDir, normalB);\nreturn faceAVisible * faceBVisible < 0.0;\n}`), r.legacy ? a.code.add(e`bool discardNonSilhouetteEdges(vec3 viewPos, vec3 worldPos, ComponentData data) {\nvec3 viewNormalA = _modelToViewNormal(data.normal);\nvec3 viewNormalB = _modelToViewNormal(data.normal2);\nvec3 viewDir = -viewPos;\nif (isSilhouetteEdge(viewDir, viewNormalA, viewNormalB)) {\nreturn false;\n}\ngl_Position = vec4(10.0, 10.0, 10.0, 1.0);\nreturn true;\n}`) : a.code.add(e`bool discardNonSilhouetteEdges(vec3 viewPos, vec3 worldPos, ComponentData data) {\nvec3 worldNormalA = _modelToWorldNormal(data.normal);\nvec3 worldNormalB = _modelToWorldNormal(data.normal2);\nvec3 viewDir = -worldPos;\nif (isSilhouetteEdge(viewDir, worldNormalA, worldNormalB)) {\nreturn false;\n}\ngl_Position = vec4(10.0, 10.0, 10.0, 1.0);\nreturn true;\n}`)) : a.code.add(e`bool discardNonSilhouetteEdges(vec3 viewPos, vec3 worldPos, ComponentData data) {\nreturn false;\n}`);\n}\nexport { o as DiscardNonSilhouetteEdges };", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { neverReached as e } from \"../../../../../../core/compilerUtils.js\";\nimport { glsl as t } from \"../../../core/shaderModules/interfaces.js\";\nimport { VertexAttribute as n } from \"../../../lib/VertexAttribute.js\";\nimport { EdgeType as s } from \"./EdgeUtil.glsl.js\";\nfunction i(i, o) {\n  const d = i.vertex;\n  switch (i.attributes.add(n.SIDENESS, \"vec2\"), o.type === s.Mixed ? d.code.add(t`struct UnpackedAttributes {\nvec2 sideness;\nvec2 sidenessNorm;\nfloat lineWidthPixels;\nfloat extensionLengthPixels;\nfloat type;\n};`) : d.code.add(t`struct UnpackedAttributes {\nvec2 sideness;\nvec2 sidenessNorm;\nfloat lineWidthPixels;\nfloat extensionLengthPixels;\n};`), o.type) {\n    case s.Mixed:\n      d.code.add(t`UnpackedAttributes unpackAttributes(ComponentData component) {\nvec2 sidenessNorm = sideness;\nvec2 sideness = sidenessNorm * 2.0 - 1.0;\nfloat fType = component.type;\nfloat extensionLengthPixels = component.extensionLength;\nfloat lineWidth = component.lineWidth;\nif (fType <= 0.0) {\nextensionLengthPixels *= variantExtension * 2.0 - 1.0;\n}\nreturn UnpackedAttributes(sideness, sidenessNorm, lineWidth, extensionLengthPixels, fType);\n}`);\n      break;\n    case s.Sketch:\n      d.code.add(t`UnpackedAttributes unpackAttributes(ComponentData component) {\nvec2 sidenessNorm = sideness;\nvec2 sideness = sidenessNorm * 2.0 - 1.0;\nfloat extensionLengthPixels = component.extensionLength;\nextensionLengthPixels *= variantExtension * 2.0 - 1.0;\nfloat lineWidth = component.lineWidth;\nreturn UnpackedAttributes(sideness, sidenessNorm, lineWidth, extensionLengthPixels);\n}`);\n      break;\n    case s.Solid:\n      d.code.add(t`UnpackedAttributes unpackAttributes(ComponentData component) {\nvec2 sidenessNorm = sideness;\nvec2 sideness = sidenessNorm * 2.0 - 1.0;\nfloat extensionLengthPixels = component.extensionLength;\nfloat lineWidth = component.lineWidth;\nreturn UnpackedAttributes(sideness, sidenessNorm, lineWidth, extensionLengthPixels);\n}`);\n      break;\n    case s.COUNT:\n      break;\n    default:\n      e(o.type);\n  }\n}\nexport { i as UnpackAttributes };", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { neverReached as e } from \"../../../../../../core/compilerUtils.js\";\nimport { FloatDrawUniform as t } from \"../../../core/shaderModules/FloatDrawUniform.js\";\nimport { glsl as r } from \"../../../core/shaderModules/interfaces.js\";\nimport { EdgeType as s } from \"./EdgeUtil.glsl.js\";\nimport { UnpackAttributes as a } from \"./UnpackAttributes.glsl.js\";\nfunction d(d, i) {\n  const o = d.vertex;\n  switch (d.include(a, i), i.type) {\n    case s.Solid:\n      o.code.add(r`float calculateLineAmplitude(UnpackedAttributes unpackedAttributes) {\nreturn 0.0;\n}`);\n      break;\n    case s.Sketch:\n      o.uniforms.add(new t(\"strokesAmplitude\", e => e.strokesTexture.amplitude)), o.code.add(r`float calculateLineAmplitude(UnpackedAttributes unpackedAttributes) {\nreturn strokesAmplitude;\n}`);\n      break;\n    case s.Mixed:\n      o.uniforms.add(new t(\"strokesAmplitude\", e => e.strokesTexture.amplitude)), o.code.add(r`float calculateLineAmplitude(UnpackedAttributes unpackedAttributes) {\nfloat type = unpackedAttributes.type;\nif (type <= 0.0) {\nreturn strokesAmplitude;\n}\nreturn 0.0;\n}`);\n      break;\n    case s.COUNT:\n      break;\n    default:\n      e(i.type);\n  }\n}\nexport { d as LineAmplitude };", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { neverReached as e } from \"../../../../../../core/compilerUtils.js\";\nimport { RgbaFloatEncoding as t } from \"../../../core/shaderLibrary/util/RgbaFloatEncoding.glsl.js\";\nimport { FloatDrawUniform as r } from \"../../../core/shaderModules/FloatDrawUniform.js\";\nimport { NoParameters as a, glsl as s } from \"../../../core/shaderModules/interfaces.js\";\nimport { Texture2DDrawUniform as o } from \"../../../core/shaderModules/Texture2DDrawUniform.js\";\nimport { usesSketchLogic as u, EdgeType as l } from \"./EdgeUtil.glsl.js\";\nimport { UnpackAttributes as c } from \"./UnpackAttributes.glsl.js\";\nclass i extends a {}\nfunction n(a, i) {\n  a.include(c, i);\n  const {\n    vertex: n,\n    fragment: d\n  } = a;\n  switch (u(i.type) && (n.uniforms.add(new o(\"strokesTexture\", e => e.strokesTexture.texture)), n.uniforms.add(new r(\"strokesLog2Resolution\", e => Math.log2(e.strokesTexture.resolution)), new r(\"strokeVariants\", e => e.strokesTexture.variants)), a.varyings.add(\"vStrokeUV\", \"vec2\"), d.uniforms.add(new o(\"strokesTexture\", e => e.strokesTexture.texture), new r(\"strokesNormalizationScale\", e => e.strokesTexture.normalizationScale)), n.code.add(s`void calculateStyleOutputsSketch(float lineLength, UnpackedAttributes unpackedAttributes) {\nvec2 sidenessNorm = unpackedAttributes.sidenessNorm;\nfloat lineIndex = clamp(ceil(log2(lineLength)), 0.0, strokesLog2Resolution);\nvStrokeUV = vec2(exp2(lineIndex) * sidenessNorm.y, lineIndex * strokeVariants + variantStroke + 0.5) / vec2(textureSize(strokesTexture, 0));\nvStrokeUV.x += variantOffset;\n}`), a.fragment.include(t), d.code.add(s`float calculateLineOffsetSketch() {\nfloat offsetNorm = rgba2float(texture(strokesTexture, vStrokeUV));\nreturn (offsetNorm - 0.5) * strokesNormalizationScale;\n}\nfloat calculateLinePressureSketch() {\nreturn rgba2float(texture(strokesTexture, vStrokeUV + vec2(0.0, 0.5)));\n}`)), i.type) {\n    case l.Solid:\n      n.code.add(s`void calculateStyleOutputs(UnpackedAttributes unpackedAttributes) {}`), d.code.add(s`float calculateLineOffset() {\nreturn 0.0;\n}\nfloat calculateLinePressure() {\nreturn 1.0;\n}`);\n      break;\n    case l.Sketch:\n      n.code.add(s`void calculateStyleOutputs(UnpackedAttributes unpackedAttributes)\n{\ncalculateStyleOutputsSketch(vLineLengthPixels, unpackedAttributes);\n}`), d.code.add(s`float calculateLineOffset() {\nreturn calculateLineOffsetSketch();\n}\nfloat calculateLinePressure() {\nreturn calculateLinePressureSketch();\n}`);\n      break;\n    case l.Mixed:\n      a.varyings.add(\"vType\", \"float\"), n.code.add(s`void calculateStyleOutputs(UnpackedAttributes unpackedAttributes)\n{\nvType = unpackedAttributes.type;\nif (unpackedAttributes.type <= 0.0) {\ncalculateStyleOutputsSketch(vLineLengthPixels, unpackedAttributes);\n}\n}`), d.code.add(s`float calculateLineOffset() {\nif (vType <= 0.0) {\nreturn calculateLineOffsetSketch();\n}\nelse {\nreturn 0.0;\n}\n}\nfloat calculateLinePressure() {\nif (vType <= 0.0) {\nreturn calculateLinePressureSketch();\n}\nelse {\nreturn 1.0;\n}\n}`);\n      break;\n    case l.COUNT:\n      break;\n    default:\n      e(i.type);\n  }\n}\nexport { n as LineOffset, i as LineOffsetDrawParameters };", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { set as e } from \"../core/libs/gl-matrix-2/math/vec2.js\";\nimport { create as i } from \"../core/libs/gl-matrix-2/factories/vec2f64.js\";\nimport { SliceDraw as o } from \"../views/3d/webgl-engine/core/shaderLibrary/Slice.glsl.js\";\nimport { multipassTerrainTest as s } from \"../views/3d/webgl-engine/core/shaderLibrary/shading/MultipassTerrainTest.glsl.js\";\nimport { Float2PassUniform as n } from \"../views/3d/webgl-engine/core/shaderModules/Float2PassUniform.js\";\nimport { Float4PassUniform as t } from \"../views/3d/webgl-engine/core/shaderModules/Float4PassUniform.js\";\nimport { FloatPassUniform as d } from \"../views/3d/webgl-engine/core/shaderModules/FloatPassUniform.js\";\nimport { glsl as a } from \"../views/3d/webgl-engine/core/shaderModules/interfaces.js\";\nimport { ShaderBuilder as l } from \"../views/3d/webgl-engine/core/shaderModules/ShaderBuilder.js\";\nimport { Uniform as r } from \"../views/3d/webgl-engine/core/shaderModules/Uniform.js\";\nimport { VertexAttribute as c } from \"../views/3d/webgl-engine/lib/VertexAttribute.js\";\nimport { AdjustProjectedPosition as p } from \"../views/3d/webgl-engine/shaders/sources/edgeRenderer/AdjustProjectedPosition.glsl.js\";\nimport { DiscardByCoverage as P } from \"../views/3d/webgl-engine/shaders/sources/edgeRenderer/DiscardByCoverage.glsl.js\";\nimport { DiscardNonSilhouetteEdges as u } from \"../views/3d/webgl-engine/shaders/sources/edgeRenderer/DiscardNonSilhouetteEdges.glsl.js\";\nimport { EdgeUtil as g, EdgeType as v } from \"../views/3d/webgl-engine/shaders/sources/edgeRenderer/EdgeUtil.glsl.js\";\nimport { LineAmplitude as f } from \"../views/3d/webgl-engine/shaders/sources/edgeRenderer/LineAmplitude.glsl.js\";\nimport { LineOffset as m } from \"../views/3d/webgl-engine/shaders/sources/edgeRenderer/LineOffset.glsl.js\";\nimport { UnpackAttributes as x } from \"../views/3d/webgl-engine/shaders/sources/edgeRenderer/UnpackAttributes.glsl.js\";\nfunction w(i) {\n  const r = new l(),\n    {\n      vertex: w,\n      fragment: A\n    } = r;\n  return i.legacy && w.uniforms.add(new L(\"model\"), new L(\"localView\")), r.include(p, i), r.include(g, i), r.include(f, i), r.include(x, i), r.include(m, i), r.include(o, i), r.include(u, i), r.include(P, i), r.include(s, i), r.varyings.add(\"vColor\", \"vec4\"), r.varyings.add(\"vRadius\", \"float\"), r.varyings.add(\"vPosition\", \"vec3\"), r.varyings.add(\"vWorldPosition\", \"vec3\"), i.multipassEnabled && r.varyings.add(\"vViewPos\", \"vec3\"), r.varyings.add(\"vLineLengthPixels\", \"float\"), r.varyings.add(\"vSizeFalloffFactor\", \"float\"), w.uniforms.add(new n(\"pixelToNDC\", (i, o) => e(h, 2 / o.camera.fullViewport[2], 2 / o.camera.fullViewport[3])), new t(\"viewport\", (e, i) => i.camera.fullViewport), new d(\"pixelRatio\", (e, i) => i.camera.pixelRatio)), r.attributes.add(c.POSITION0, \"vec3\"), r.attributes.add(c.POSITION1, \"vec3\"), r.attributes.add(c.VARIANTOFFSET, \"float\"), r.attributes.add(c.VARIANTSTROKE, \"float\"), r.attributes.add(c.VARIANTEXTENSION, \"float\"), w.code.add(a`\n    const float opaqueCutoff = 1.0 / 255.0;\n\n    void calculateGeometricOutputs(vec3 viewPosV0, vec3 viewPosV1, vec3 worldPosV0, vec3 worldPosV1, vec3 worldNormal, UnpackedAttributes unpackedAttributes) {\n      vec2 sideness = unpackedAttributes.sideness;\n      vec2 sidenessNorm = unpackedAttributes.sidenessNorm;\n\n      vWorldPosition = mix(worldPosV0, worldPosV1, sidenessNorm.y).xyz;\n\n      vec3 viewPos = mix(viewPosV0, viewPosV1, sidenessNorm.y);\n      ${i.multipassEnabled ? \"vViewPos = viewPos;\" : \"\"}\n\n      vec4 projPosV0 = projFromViewPosition(viewPosV0);\n      vec4 projPosV1 = projFromViewPosition(viewPosV1);\n      vec4 projPos = projFromViewPosition(viewPos);\n\n      vec3 screenSpaceLineNDC = (projPosV1.xyz / projPosV1.w - projPosV0.xyz / projPosV0.w);\n      vec2 ndcToPixel = viewport.zw * 0.5;\n      vec2 screenSpaceLinePixels = screenSpaceLineNDC.xy * ndcToPixel;\n      float lineLengthPixels = length(screenSpaceLinePixels);\n\n      float dzPerPixel = screenSpaceLineNDC.z / lineLengthPixels;\n      vec2 screenSpaceDirection = screenSpaceLinePixels / lineLengthPixels;\n      vec2 perpendicularScreenSpaceDirection = vec2(screenSpaceDirection.y, -screenSpaceDirection.x) * sideness.x;\n\n      float falloffFactor = distanceBasedPerspectiveFactor(-viewPos.z) * pixelRatio;\n      float lineWidthPixels = unpackedAttributes.lineWidthPixels * falloffFactor;\n\n      float extensionLengthPixels = calculateExtensionLength(unpackedAttributes.extensionLengthPixels, lineLengthPixels) * falloffFactor;\n      float lineAmplitudePixels = calculateLineAmplitude(unpackedAttributes) * pixelRatio;\n\n      vSizeFalloffFactor = falloffFactor;\n\n      float lineWidthAndAmplitudePixels = lineWidthPixels + lineAmplitudePixels + lineAmplitudePixels;\n      float extendedLineLengthPixels = lineLengthPixels + extensionLengthPixels + extensionLengthPixels;\n\n      const float aaPaddingPixels = 1.0;\n\n      // Line size with padding\n      float halfAAPaddedLineWidthAndAmplitudePixels = lineWidthAndAmplitudePixels * 0.5 + aaPaddingPixels;\n      float aaPaddedRoundedCapSizePixels = lineWidthPixels * 0.5 + aaPaddingPixels;\n\n      // Half line width in NDC including padding for anti aliasing\n      vec2 halfAAPaddedLineWidthAndAmplitudeNDC = halfAAPaddedLineWidthAndAmplitudePixels * pixelToNDC;\n      vec2 aaPaddedRoundedCapSizeNDC = aaPaddedRoundedCapSizePixels * pixelToNDC;\n      vec2 extensionLengthNDC = extensionLengthPixels * pixelToNDC;\n\n      // Compute screen space position of vertex, offsetting for line size and end caps\n      vec2 ndcOffset = (\n          screenSpaceDirection * sideness.y * (aaPaddedRoundedCapSizeNDC + extensionLengthNDC)\n        + perpendicularScreenSpaceDirection * halfAAPaddedLineWidthAndAmplitudeNDC\n      );\n\n      projPos.xy += ndcOffset * projPos.w;\n      projPos.z += (dzPerPixel * (aaPaddedRoundedCapSizePixels + extensionLengthPixels)) * sideness.y * projPos.w;\n\n      projPos = adjustProjectedPosition(projPos, worldNormal, 1.0 + max((lineWidthAndAmplitudePixels - 1.0) * 0.5, 0.0));\n\n      // Line length with end caps\n      float aaPaddedLineWithCapsLengthPixels = extendedLineLengthPixels + aaPaddedRoundedCapSizePixels + aaPaddedRoundedCapSizePixels;\n\n      float pixelPositionAlongLine = aaPaddedLineWithCapsLengthPixels * sidenessNorm.y - aaPaddedRoundedCapSizePixels;\n\n      // Position in pixels with origin at first vertex of line segment\n      vPosition = vec3(\n        halfAAPaddedLineWidthAndAmplitudePixels * sideness.x,\n        pixelPositionAlongLine,\n        pixelPositionAlongLine / extendedLineLengthPixels\n      );\n\n      // The line width radius in pixels\n      vRadius = lineWidthPixels * 0.5;\n      vLineLengthPixels = extendedLineLengthPixels;\n\n      // discard short edges below a certain length threshold\n      ${i.type === v.Sketch ? a`\n        if (lineLengthPixels <= 3.0) {\n          gl_Position = vec4(10.0, 10.0, 10.0, 1.0);\n          return;\n        }` : i.type === v.Mixed ? a`\n        if (lineLengthPixels <= 3.0 && unpackedAttributes.type <= 0.0) {\n           gl_Position = vec4(10.0, 10.0, 10.0, 1.0);\n           return;\n        }` : \"\"}\n      gl_Position = projPos;\n    }\n\n    void main() {\n      ComponentData component = readComponentData();\n      UnpackedAttributes unpackedAttributes = unpackAttributes(component);\n\n      vec3 worldPosV0, worldPosV1, viewPosV0, viewPosV1;\n      worldAndViewFromModelPosition(position0, component.verticalOffset, worldPosV0, viewPosV0);\n      worldAndViewFromModelPosition(position1, component.verticalOffset, worldPosV1, viewPosV1);\n\n      // Component color\n      vColor = component.color;\n\n      // Discard fully transparent edges\n      if (vColor.a < opaqueCutoff) {\n        gl_Position = vec4(10.0, 10.0, 10.0, 1.0);\n        return;\n      }\n\n      if (discardNonSilhouetteEdges(viewPosV0, worldPosV0, component)) {\n        return;\n      }\n\n      // General geometric computation for all types of edges\n      calculateGeometricOutputs(viewPosV0, viewPosV1, worldPosV0, worldPosV1, worldNormal(component), unpackedAttributes);\n\n      // Specific computation for different edge styles\n      calculateStyleOutputs(unpackedAttributes);\n    }\n  `), A.code.add(a`\n    vec2 lineWithCapsDistance(float radius, vec2 position, float lineLength) {\n      float positionX = position.x - calculateLineOffset();\n\n      if (radius < 1.0) {\n        float coverageX = clamp(min(radius, positionX + 0.5) - max(-radius, positionX - 0.5), 0.0, 1.0);\n        float coverageY = clamp(min(lineLength, position.y + 0.5) - max(0.0, position.y - 0.5), 0.0, 1.0);\n        return vec2(0.5 - min(coverageX, coverageY), 0.0);\n      }\n      else {\n        // Between -radius -> 0 for start cap, 0 for line, 0 -> radius\n        float positionOnCap = position.y - clamp(position.y, 0.0, lineLength);\n\n        vec2 lineToPosition = vec2(positionX, positionOnCap);\n        return vec2(length(lineToPosition) - radius, positionOnCap / radius);\n      }\n    }\n\n    void main() {\n      ${i.multipassEnabled ? \"terrainDepthTest(vViewPos.z);\" : \"\"}\n      float radius = vRadius * calculateLinePressure();\n\n      vec2 distance = lineWithCapsDistance(radius, vPosition.xy, vLineLengthPixels);\n      float coverage = clamp(0.5 - distance.x, 0.0, 1.0);\n\n      discardByCoverage(radius, coverage);\n      discardBySlice(vWorldPosition);\n\n      fragColor = vec4(vColor.rgb, vColor.a * coverage);\n    }\n  `), r;\n}\nconst h = i();\nclass L extends r {\n  constructor(e) {\n    super(e, \"mat4\");\n  }\n}\nconst A = Object.freeze(Object.defineProperty({\n  __proto__: null,\n  build: w\n}, Symbol.toStringTag, {\n  value: \"Module\"\n}));\nexport { A as E, w as b };"],
  "mappings": "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",
  "names": ["o", "e", "o", "i", "e", "r", "o", "r", "o", "r", "a", "i", "o", "d", "d", "i", "o", "e", "n", "a", "i", "d", "e", "i", "r", "o", "w", "A", "n", "a", "e"]
}
