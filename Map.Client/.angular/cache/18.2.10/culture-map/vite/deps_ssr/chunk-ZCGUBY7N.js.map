{
  "version": 3,
  "sources": ["../../../../../../node_modules/@arcgis/core/views/3d/support/MemoryManagedView.js", "../../../../../../node_modules/@arcgis/core/views/3d/support/MemoryController.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nfunction e(e) {\n  return \"usedMemory\" in e && \"unloadedMemory\" in e && \"ignoresMemoryFactor\" in e;\n}\nexport { e as isMemoryManagedView };", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { _ as e } from \"../../../chunks/tslib.es6.js\";\nimport t from \"../../../core/Accessor.js\";\nimport \"../../../core/has.js\";\nimport i from \"../../../core/Logger.js\";\nimport { MemCacheStorage as s, MemCache as r } from \"../../../core/MemCache.js\";\nimport { addFrameTask as a } from \"../../../core/scheduling.js\";\nimport { property as o } from \"../../../core/accessorSupport/decorators/property.js\";\nimport \"../../../core/RandomLCG.js\";\nimport { subclass as h } from \"../../../core/accessorSupport/decorators/subclass.js\";\nimport { isMemoryManagedView as y } from \"./MemoryManagedView.js\";\nfunction d(e) {\n  return new p({\n    view: e\n  });\n}\nconst l = .1,\n  m = 1,\n  u = 1,\n  n = .75,\n  _ = .6,\n  c = 1.3;\nlet p = class extends t {\n  constructor(e) {\n    super(e), this._quality = 1, this._usedMemory = 0, this._updating = !1, this._stableQuality = 0, this._downscaleMemoryUsed = 0, this._canFastRecover = !1, this._memoryPredicted = 0, this._cacheStorage = new s(), this._warnMemoryUsage = null, this._numQualityChanges = 0, this._maxMemory = 750, this._additionalCacheMemory = 0, this.addHandles(a({\n      prepare: () => this._updateMemory()\n    }));\n  }\n  destroy() {\n    this._cacheStorage.destroy();\n  }\n  get maxMemory() {\n    return this._maxMemory;\n  }\n  set maxMemory(e) {\n    null == e || e <= 0 || (this._stableQuality = 0, this._canFastRecover = !1, this._maxMemory < e && this._updateQuality(m), this._maxMemory = e);\n  }\n  get additionalCacheMemory() {\n    return this._additionalCacheMemory;\n  }\n  set additionalCacheMemory(e) {\n    null != e && (this._additionalCacheMemory = e);\n  }\n  get memoryFactor() {\n    return this._quality;\n  }\n  get updating() {\n    return this._updating;\n  }\n  get usedMemory() {\n    return this._usedMemory;\n  }\n  get usedCacheMemory() {\n    return this._cacheStorage.size;\n  }\n  newCache(e, t) {\n    return new r(e, this._cacheStorage, t);\n  }\n  resetStableQuality() {\n    this._stableQuality = 0;\n  }\n  disableMemCache() {\n    this.additionalCacheMemory = -4096;\n  }\n  update() {\n    if (this._memoryPredicted <= 0 && !this._updating) return;\n    let e = this._layersUpdating();\n    if (this._memoryPredicted < _ && this._canFastRecover) this._downscaleMemoryUsed = 0, this._stableQuality = 0, this._canFastRecover = !1, this._updateQuality(m);else if (e) (this._memoryPredicted > 1.1 * u || this._usedMemory > u) && (this._stableQuality > 0 ? (this._downscaleMemoryUsed = 0, this._updateQuality(this._stableQuality)) : this._quality > l && this._downscaleMemoryUsed < this._usedMemory && (this._updateQuality(this._quality / c), this._downscaleMemoryUsed = this._usedMemory, this._canFastRecover = !1));else if (this._downscaleMemoryUsed = 0, this._usedMemory > u) this._stableQuality = 0, this._canFastRecover = !1, e = this._updateQuality(this._quality / c), this._downscaleMemoryUsed = this._memoryPredicted;else if (this._stableQuality !== this._quality) if (this._usedMemory < n && this._quality < m) {\n      this._stableQuality = this._quality;\n      const t = .05;\n      e = this._updateQuality(this._quality + t);\n    } else this._quality < 1 && (this._canFastRecover = !0);\n    this._updating = e;\n  }\n  _updateQuality(e) {\n    return (e = Math.min(Math.max(e, l), m)) !== this._quality && (this._quality = e, ++this._numQualityChanges, !0);\n  }\n  _layersUpdating() {\n    return this.view.allLayerViews.some(e => !!e.updating);\n  }\n  _updateMemory() {\n    if (!this.view) return;\n    this.view._stage?.renderer?.tick();\n    const e = this.view._stage?.renderer?.usedMemory;\n    let t = (this.view.basemapTerrain?.usedMemory ?? 0) + (e ? e.fbos + e.edges + e.plugins : 0),\n      s = 0;\n    this.view.allLayerViews && this.view.allLayerViews.forEach(e => {\n      if (y(e)) {\n        const i = e.ignoresMemoryFactor ? this._quality : 1;\n        t += e.usedMemory * i, s += e.unloadedMemory * i;\n      }\n    });\n    const r = null == this._warnMemoryUsage || Math.round(10 * t) !== Math.round(10 * this._warnMemoryUsage),\n      a = 1048576 * this.maxMemory;\n    if (t > a && r) {\n      this._warnMemoryUsage = t;\n      const e = e => (e / 1048576).toLocaleString(void 0, {\n          maximumFractionDigits: 1\n        }) + \" MB\",\n        r = Math.round(100 * this._quality);\n      i.getLogger(this).warn(`Memory Limit exceeded! Limit: ${e(a)} Current: ${e(t)} Projected: ${e(t + s)} Quality: ${r}%`);\n    }\n    this._usedMemory = t / a, this._memoryPredicted = (t + s) / a;\n    const o = a - t;\n    this._cacheStorage.maxSize = Math.max(0, o + 1048576 * this.additionalCacheMemory);\n  }\n  get test() {}\n};\ne([o({\n  constructOnly: !0\n})], p.prototype, \"view\", void 0), e([o()], p.prototype, \"maxMemory\", null), e([o()], p.prototype, \"additionalCacheMemory\", null), e([o({\n  readOnly: !0\n})], p.prototype, \"memoryFactor\", null), e([o({\n  readOnly: !0\n})], p.prototype, \"updating\", null), e([o({\n  readOnly: !0\n})], p.prototype, \"usedMemory\", null), e([o({\n  readOnly: !0\n})], p.prototype, \"usedCacheMemory\", null), e([o()], p.prototype, \"_quality\", void 0), e([o()], p.prototype, \"_usedMemory\", void 0), e([o()], p.prototype, \"_updating\", void 0), e([o()], p.prototype, \"_stableQuality\", void 0), e([o()], p.prototype, \"_maxMemory\", void 0), e([o()], p.prototype, \"_additionalCacheMemory\", void 0), p = e([h(\"esri.views.3d.support.MemoryController\")], p);\nexport { l as minQuality, d as newMemoryController };"],
  "mappings": "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",
  "names": ["e", "e", "n", "r", "a"]
}
