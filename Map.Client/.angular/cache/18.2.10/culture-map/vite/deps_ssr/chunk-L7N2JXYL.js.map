{
  "version": 3,
  "sources": ["../../../../../../node_modules/@arcgis/core/chunks/ShadowHighlight.glsl.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { invert as e, translate as i } from \"../core/libs/gl-matrix-2/math/mat4.js\";\nimport { create as o } from \"../core/libs/gl-matrix-2/factories/mat4f64.js\";\nimport { n as t, h as a } from \"./vec32.js\";\nimport { create as r } from \"../core/libs/gl-matrix-2/factories/vec3f64.js\";\nimport { NormalFromDepth as l } from \"../views/3d/webgl-engine/core/shaderLibrary/NormalFromDepth.glsl.js\";\nimport { ScreenSpacePass as s } from \"../views/3d/webgl-engine/core/shaderLibrary/ScreenSpacePass.glsl.js\";\nimport { unoccludedHighlightFlag as d } from \"../views/3d/webgl-engine/core/shaderLibrary/output/OutputHighlight.glsl.js\";\nimport { ReadShadowMapPass as h } from \"../views/3d/webgl-engine/core/shaderLibrary/shading/ReadShadowMap.glsl.js\";\nimport { RgbaFloatEncoding as n } from \"../views/3d/webgl-engine/core/shaderLibrary/util/RgbaFloatEncoding.glsl.js\";\nimport { Float3PassUniform as c } from \"../views/3d/webgl-engine/core/shaderModules/Float3PassUniform.js\";\nimport { Float4PassUniform as g } from \"../views/3d/webgl-engine/core/shaderModules/Float4PassUniform.js\";\nimport { FloatPassUniform as p } from \"../views/3d/webgl-engine/core/shaderModules/FloatPassUniform.js\";\nimport { glsl as m } from \"../views/3d/webgl-engine/core/shaderModules/interfaces.js\";\nimport { Matrix4PassUniform as w } from \"../views/3d/webgl-engine/core/shaderModules/Matrix4PassUniform.js\";\nimport { ShaderBuilder as u } from \"../views/3d/webgl-engine/core/shaderModules/ShaderBuilder.js\";\nimport { Texture2DPassUniform as f } from \"../views/3d/webgl-engine/core/shaderModules/Texture2DPassUniform.js\";\nimport { SnapshotSlot as v } from \"../views/3d/webgl-engine/lib/ShadowMap.js\";\nconst x = .99999,\n  b = .025;\nfunction M(o) {\n  const r = new u();\n  r.include(h, o), r.include(s), r.include(l);\n  const M = r.fragment;\n  return M.include(n), M.uniforms.add(new f(\"defaultDepthTex\", (e, i) => i.shadowMap.getSnapshot(v.ExcludeHighlight)), new f(\"highlightDepthTex\", (e, i) => i.shadowMap.getSnapshot(v.Highlight)), new f(\"depthMap\", (e, i) => i.depth?.attachment), new f(\"highlightTexture\", e => e.highlight), new g(\"uColor\", e => e.shadowColor), new p(\"opacity\", e => e.shadowOpacity), new p(\"occludedOpacity\", e => e.occludedShadowOpacity), new p(\"terminationFactor\", e => e.opacityElevation * e.dayNightTerminator), new c(\"lightingMainDirectionView\", (e, i) => t(S, a(S, i.lighting.mainLight.direction, i.camera.viewInverseTransposeMatrix))), new w(\"inverseViewMatrix\", (o, t) => e(y, i(y, t.camera.viewMatrix, t.camera.center)))), M.constants.add(\"unoccludedHighlightFlag\", \"vec4\", d), M.code.add(m`\n    void main(void) {\n      vec4 highlightInfo = texture(highlightTexture, uv);\n      float visiblyHighlighted = (1.0 - clamp(distance(unoccludedHighlightFlag, highlightInfo), 0.0, 1.0)) * highlightInfo.a;\n      if (visiblyHighlighted > ${m.float(x)}) {\n        discard;\n      }\n\n      float depth = depthFromTexture(depthMap, uv);\n\n      // 1.0 is the clear value of depthMap, which means nothing has been drawn there and we should discard\n      if (depth >= 1.0 || depth <= 0.0) {\n        discard;\n      }\n\n      float currentPixelDepth = linearizeDepth(depth);\n      vec4 currentPixelPos = vec4(reconstructPosition(gl_FragCoord.xy, currentPixelDepth), 1.0);\n      vec4 worldSpacePos = inverseViewMatrix * currentPixelPos;\n\n      mat4 shadowMatrix;\n      float linearDepth = -currentPixelDepth;\n      int i = chooseCascade(linearDepth, shadowMatrix);\n      if (i >= numCascades) {\n        discard;\n      }\n\n      vec3 lvpos = lightSpacePosition(worldSpacePos.xyz, shadowMatrix);\n\n      // vertex completely outside? -> no shadow\n      if (lvpos.z >= 1.0 || lvpos.x < 0.0 || lvpos.x > 1.0 || lvpos.y < 0.0 || lvpos.y > 1.0) {\n        discard;\n      }\n\n      ivec2 texSize = textureSize(highlightDepthTex, 0);\n      ivec2 uvShadow = ivec2(cascadeCoordinates(i, texSize, lvpos) * vec2(texSize));\n\n      float depthHighlight = readShadowMapDepth(uvShadow, highlightDepthTex);\n      bool shadowHighlight = depthHighlight < lvpos.z;\n      if (!shadowHighlight) {\n        discard;\n      }\n\n      float depthDefault = readShadowMapDepth(uvShadow, defaultDepthTex);\n      bool shadowDefault = depthDefault < lvpos.z;\n\n      vec3 normal = normalFromDepth(depthMap, currentPixelPos.xyz, gl_FragCoord.xy, uv);\n      bool shaded = dot(normal, lightingMainDirectionView) < ${m.float(b)};\n\n      float fragOpacity = (shadowDefault || shaded) ? occludedOpacity : opacity;\n      fragColor = vec4(uColor.rgb, uColor.a * fragOpacity * terminationFactor);\n    }\n  `), r;\n}\nconst y = o(),\n  S = r(),\n  D = Object.freeze(Object.defineProperty({\n    __proto__: null,\n    build: M\n  }, Symbol.toStringTag, {\n    value: \"Module\"\n  }));\nexport { D as S, M as b };"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqBA,IAAM,IAAI;AAAV,IACE,IAAI;AACN,SAAS,EAAEA,IAAG;AACZ,QAAM,IAAI,IAAIA,GAAE;AAChB,IAAE,QAAQ,GAAGA,EAAC,GAAG,EAAE,QAAQA,EAAC,GAAG,EAAE,QAAQC,EAAC;AAC1C,QAAMC,KAAI,EAAE;AACZ,SAAOA,GAAE,QAAQ,CAAC,GAAGA,GAAE,SAAS,IAAI,IAAI,EAAE,mBAAmB,CAACC,IAAGF,OAAMA,GAAE,UAAU,YAAY,EAAE,gBAAgB,CAAC,GAAG,IAAI,EAAE,qBAAqB,CAACE,IAAGF,OAAMA,GAAE,UAAU,YAAY,EAAE,SAAS,CAAC,GAAG,IAAI,EAAE,YAAY,CAACE,IAAGF,OAAMA,GAAE,OAAO,UAAU,GAAG,IAAI,EAAE,oBAAoB,CAAAE,OAAKA,GAAE,SAAS,GAAG,IAAIA,GAAE,UAAU,CAAAA,OAAKA,GAAE,WAAW,GAAG,IAAIH,GAAE,WAAW,CAAAG,OAAKA,GAAE,aAAa,GAAG,IAAIH,GAAE,mBAAmB,CAAAG,OAAKA,GAAE,qBAAqB,GAAG,IAAIH,GAAE,qBAAqB,CAAAG,OAAKA,GAAE,mBAAmBA,GAAE,kBAAkB,GAAG,IAAIA,GAAE,6BAA6B,CAACA,IAAGF,OAAM,EAAE,GAAG,EAAE,GAAGA,GAAE,SAAS,UAAU,WAAWA,GAAE,OAAO,0BAA0B,CAAC,CAAC,GAAG,IAAIE,GAAE,qBAAqB,CAACH,IAAG,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,YAAY,EAAE,OAAO,MAAM,CAAC,CAAC,CAAC,GAAGE,GAAE,UAAU,IAAI,2BAA2B,QAAQ,CAAC,GAAGA,GAAE,KAAK,IAAI;AAAA;AAAA;AAAA;AAAA,iCAI5uB,EAAE,MAAM,CAAC,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+DA0CoB,EAAE,MAAM,CAAC,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA,GAKtE,GAAG;AACN;AACA,IAAM,IAAI,EAAE;AAAZ,IACE,IAAI,EAAE;AADR,IAEE,IAAI,OAAO,OAAO,OAAO,eAAe;AAAA,EACtC,WAAW;AAAA,EACX,OAAO;AACT,GAAG,OAAO,aAAa;AAAA,EACrB,OAAO;AACT,CAAC,CAAC;",
  "names": ["o", "i", "M", "e"]
}
