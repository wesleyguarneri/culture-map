{
  "version": 3,
  "sources": ["../../../../../../node_modules/@arcgis/core/chunks/Laserlines.glsl.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { deg2rad as e } from \"../core/mathUtils.js\";\nimport { set as i } from \"../core/libs/gl-matrix-2/math/vec2.js\";\nimport { create as t } from \"../core/libs/gl-matrix-2/factories/vec2f64.js\";\nimport { f as n, n as a, l as o, p as r, h as l, c as s, b as c, g as d } from \"./vec32.js\";\nimport { create as f } from \"../core/libs/gl-matrix-2/factories/vec3f64.js\";\nimport { t as p } from \"./vec42.js\";\nimport { create as g } from \"../core/libs/gl-matrix-2/factories/vec4f64.js\";\nimport { pointAt as h } from \"../geometry/support/lineSegment.js\";\nimport { create as m, fromPositionAndNormal as u } from \"../geometry/support/plane.js\";\nimport { g as x, c as w } from \"./sphere.js\";\nimport { Laserline as P } from \"../views/3d/webgl-engine/core/shaderLibrary/Laserline.glsl.js\";\nimport { ScreenSpacePass as b } from \"../views/3d/webgl-engine/core/shaderLibrary/ScreenSpacePass.glsl.js\";\nimport { Float2PassUniform as v } from \"../views/3d/webgl-engine/core/shaderModules/Float2PassUniform.js\";\nimport { Float3PassUniform as D } from \"../views/3d/webgl-engine/core/shaderModules/Float3PassUniform.js\";\nimport { Float4PassUniform as M } from \"../views/3d/webgl-engine/core/shaderModules/Float4PassUniform.js\";\nimport { FloatPassUniform as S } from \"../views/3d/webgl-engine/core/shaderModules/FloatPassUniform.js\";\nimport { glsl as C } from \"../views/3d/webgl-engine/core/shaderModules/interfaces.js\";\nimport { ShaderBuilder as L } from \"../views/3d/webgl-engine/core/shaderModules/ShaderBuilder.js\";\nconst A = e(6);\nfunction j(e) {\n  const i = new L();\n  i.include(b), i.include(P, e);\n  const t = i.fragment;\n  if (e.lineVerticalPlaneEnabled || e.heightManifoldEnabled) if (t.uniforms.add(new S(\"maxPixelDistance\", (i, t) => e.heightManifoldEnabled ? 2 * t.camera.computeScreenPixelSizeAt(i.heightManifoldTarget) : 2 * t.camera.computeScreenPixelSizeAt(i.lineVerticalPlaneSegment.origin))), t.code.add(C`float planeDistancePixels(vec4 plane, vec3 pos) {\nfloat dist = dot(plane.xyz, pos) + plane.w;\nfloat width = fwidth(dist);\ndist /= min(width, maxPixelDistance);\nreturn abs(dist);\n}`), e.spherical) {\n    const e = (e, i, t) => l(e, i.heightManifoldTarget, t.camera.viewMatrix),\n      i = (e, i) => l(e, [0, 0, 0], i.camera.viewMatrix);\n    t.uniforms.add(new M(\"heightManifoldOrigin\", (t, r) => (e(R, t, r), i(F, r), n(F, F, R), a(G, F), G[3] = o(F), G)), new D(\"globalOrigin\", (e, t) => i(R, t)), new S(\"cosSphericalAngleThreshold\", (e, i) => 1 - Math.max(2, r(i.camera.eye, e.heightManifoldTarget) * i.camera.perRenderPixelRatio) / o(e.heightManifoldTarget))), t.code.add(C`float globeDistancePixels(float posInGlobalOriginLength) {\nfloat dist = abs(posInGlobalOriginLength - heightManifoldOrigin.w);\nfloat width = fwidth(dist);\ndist /= min(width, maxPixelDistance);\nreturn abs(dist);\n}\nfloat heightManifoldDistancePixels(vec4 heightPlane, vec3 pos) {\nvec3 posInGlobalOriginNorm = normalize(globalOrigin - pos);\nfloat cosAngle = dot(posInGlobalOriginNorm, heightManifoldOrigin.xyz);\nvec3 posInGlobalOrigin = globalOrigin - pos;\nfloat posInGlobalOriginLength = length(posInGlobalOrigin);\nfloat sphericalDistance = globeDistancePixels(posInGlobalOriginLength);\nfloat planarDistance = planeDistancePixels(heightPlane, pos);\nreturn cosAngle < cosSphericalAngleThreshold ? sphericalDistance : planarDistance;\n}`);\n  } else t.code.add(C`float heightManifoldDistancePixels(vec4 heightPlane, vec3 pos) {\nreturn planeDistancePixels(heightPlane, pos);\n}`);\n  if (e.pointDistanceEnabled && (t.uniforms.add(new S(\"maxPixelDistance\", (e, i) => 2 * i.camera.computeScreenPixelSizeAt(e.pointDistanceTarget))), t.code.add(C`float sphereDistancePixels(vec4 sphere, vec3 pos) {\nfloat dist = distance(sphere.xyz, pos) - sphere.w;\nfloat width = fwidth(dist);\ndist /= min(width, maxPixelDistance);\nreturn abs(dist);\n}`)), e.intersectsLineEnabled && (t.uniforms.add(new S(\"perScreenPixelRatio\", (e, i) => i.camera.perScreenPixelRatio)), t.code.add(C`float lineDistancePixels(vec3 start, vec3 dir, float radius, vec3 pos) {\nfloat dist = length(cross(dir, pos - start)) / (length(pos) * perScreenPixelRatio);\nreturn abs(dist) - radius;\n}`)), (e.lineVerticalPlaneEnabled || e.intersectsLineEnabled) && t.code.add(C`bool pointIsWithinLine(vec3 pos, vec3 start, vec3 end) {\nvec3 dir = end - start;\nfloat t2 = dot(dir, pos - start);\nfloat l2 = dot(dir, dir);\nreturn t2 >= 0.0 && t2 <= l2;\n}`), t.code.add(C`void main() {\nvec3 pos;\nvec3 normal;\nfloat angleCutoffAdjust;\nfloat depthDiscontinuityAlpha;\nif (!laserlineReconstructFromDepth(pos, normal, angleCutoffAdjust, depthDiscontinuityAlpha)) {\ndiscard;\n}\nvec4 color = vec4(0, 0, 0, 0);`), e.heightManifoldEnabled) {\n    t.uniforms.add(new v(\"angleCutoff\", e => V(e)), new M(\"heightPlane\", (e, i) => I(e.heightManifoldTarget, e.renderCoordsHelper.worldUpAtPosition(e.heightManifoldTarget, R), i.camera.viewMatrix)));\n    const i = e.spherical ? C`normalize(globalOrigin - pos)` : C`heightPlane.xyz`;\n    t.code.add(C`\n    {\n      vec2 angleCutoffAdjusted = angleCutoff - angleCutoffAdjust;\n\n      // Fade out laserlines on flat surfaces\n      float heightManifoldAlpha = 1.0 - smoothstep(angleCutoffAdjusted.x, angleCutoffAdjusted.y, abs(dot(normal, ${i})));\n\n      vec4 heightManifoldColor = laserlineProfile(heightManifoldDistancePixels(heightPlane, pos));\n      color = max(color, heightManifoldColor * heightManifoldAlpha);\n    }\n    `);\n  }\n  return e.pointDistanceEnabled && (t.uniforms.add(new v(\"angleCutoff\", e => V(e)), new M(\"pointDistanceSphere\", (e, i) => y(e, i))), t.code.add(C`{\nfloat pointDistanceSphereDistance = sphereDistancePixels(pointDistanceSphere, pos);\nvec4 pointDistanceSphereColor = laserlineProfile(pointDistanceSphereDistance);\nfloat pointDistanceSphereAlpha = 1.0 - smoothstep(angleCutoff.x, angleCutoff.y, abs(dot(normal, normalize(pos - pointDistanceSphere.xyz))));\ncolor = max(color, pointDistanceSphereColor * pointDistanceSphereAlpha);\n}`)), e.lineVerticalPlaneEnabled && (t.uniforms.add(new v(\"angleCutoff\", e => V(e)), new M(\"lineVerticalPlane\", (e, i) => O(e, i)), new D(\"lineVerticalStart\", (e, i) => E(e, i)), new D(\"lineVerticalEnd\", (e, i) => z(e, i))), t.code.add(C`{\nif (pointIsWithinLine(pos, lineVerticalStart, lineVerticalEnd)) {\nfloat lineVerticalDistance = planeDistancePixels(lineVerticalPlane, pos);\nvec4 lineVerticalColor = laserlineProfile(lineVerticalDistance);\nfloat lineVerticalAlpha = 1.0 - smoothstep(angleCutoff.x, angleCutoff.y, abs(dot(normal, lineVerticalPlane.xyz)));\ncolor = max(color, lineVerticalColor * lineVerticalAlpha);\n}\n}`)), e.intersectsLineEnabled && (t.uniforms.add(new v(\"angleCutoff\", e => V(e)), new D(\"intersectsLineStart\", (e, i) => l(R, e.lineStartWorld, i.camera.viewMatrix)), new D(\"intersectsLineEnd\", (e, i) => l(R, e.lineEndWorld, i.camera.viewMatrix)), new D(\"intersectsLineDirection\", (e, i) => (s(G, e.intersectsLineSegment.vector), G[3] = 0, a(R, p(G, G, i.camera.viewMatrix)))), new S(\"intersectsLineRadius\", e => e.intersectsLineRadius)), t.code.add(C`{\nif (pointIsWithinLine(pos, intersectsLineStart, intersectsLineEnd)) {\nfloat intersectsLineDistance = lineDistancePixels(intersectsLineStart, intersectsLineDirection, intersectsLineRadius, pos);\nvec4 intersectsLineColor = laserlineProfile(intersectsLineDistance);\nfloat intersectsLineAlpha = 1.0 - smoothstep(angleCutoff.x, angleCutoff.y, 1.0 - abs(dot(normal, intersectsLineDirection)));\ncolor = max(color, intersectsLineColor * intersectsLineAlpha);\n}\n}`)), t.code.add(C`fragColor = laserlineOutput(color * depthDiscontinuityAlpha);\n}`), i;\n}\nfunction V(t) {\n  return i(T, Math.cos(t.angleCutoff), Math.cos(Math.max(0, t.angleCutoff - e(2))));\n}\nfunction y(e, i) {\n  return l(x(_), e.pointDistanceOrigin, i.camera.viewMatrix), _[3] = r(e.pointDistanceOrigin, e.pointDistanceTarget), _;\n}\nfunction O(e, i) {\n  const t = h(e.lineVerticalPlaneSegment, .5, R),\n    n = e.renderCoordsHelper.worldUpAtPosition(t, U),\n    o = a(F, e.lineVerticalPlaneSegment.vector),\n    r = c(R, n, o);\n  return a(r, r), I(e.lineVerticalPlaneSegment.origin, r, i.camera.viewMatrix);\n}\nfunction E(e, i) {\n  const t = s(R, e.lineVerticalPlaneSegment.origin);\n  return e.renderCoordsHelper.setAltitude(t, 0), l(t, t, i.camera.viewMatrix);\n}\nfunction z(e, i) {\n  const t = d(R, e.lineVerticalPlaneSegment.origin, e.lineVerticalPlaneSegment.vector);\n  return e.renderCoordsHelper.setAltitude(t, 0), l(t, t, i.camera.viewMatrix);\n}\nfunction I(e, i, t) {\n  return l(W, e, t), s(G, i), G[3] = 0, p(G, G, t), u(W, G, H);\n}\nconst T = t(),\n  R = f(),\n  G = g(),\n  U = f(),\n  F = f(),\n  W = f(),\n  H = m(),\n  _ = w(),\n  N = Object.freeze(Object.defineProperty({\n    __proto__: null,\n    build: j,\n    defaultAngleCutoff: A\n  }, Symbol.toStringTag, {\n    value: \"Module\"\n  }));\nexport { N as L, j as b, A as d };"],
  "mappings": "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",
  "names": ["j", "e", "o", "n", "i", "t", "r", "V", "O", "E", "z", "_"]
}
