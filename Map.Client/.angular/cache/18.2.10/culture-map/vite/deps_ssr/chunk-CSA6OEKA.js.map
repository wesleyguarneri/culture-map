{
  "version": 3,
  "sources": ["../../../../../../node_modules/@arcgis/core/views/webgl/ShaderCompiler.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nclass e {\n  constructor(e) {\n    this._readFile = e;\n  }\n  resolveIncludes(e) {\n    return this._resolve(e);\n  }\n  _resolve(e, t = new Map()) {\n    if (t.has(e)) return t.get(e);\n    const r = this._read(e);\n    if (!r) throw new Error(`cannot find shader file ${e}`);\n    const s = /^[^\\S\\n]*#include\\s+<(\\S+)>[^\\S\\n]?/gm;\n    let n = s.exec(r);\n    const l = [];\n    for (; null != n;) l.push({\n      path: n[1],\n      start: n.index,\n      length: n[0].length\n    }), n = s.exec(r);\n    let a = 0,\n      h = \"\";\n    return l.forEach(e => {\n      h += r.slice(a, e.start), h += t.has(e.path) ? \"\" : this._resolve(e.path, t), a = e.start + e.length;\n    }), h += r.slice(a), t.set(e, h), h;\n  }\n  _read(e) {\n    return this._readFile(e);\n  }\n}\nexport { e as ShaderCompiler };"],
  "mappings": ";;;AAIA,IAAM,IAAN,MAAQ;AAAA,EACN,YAAYA,IAAG;AACb,SAAK,YAAYA;AAAA,EACnB;AAAA,EACA,gBAAgBA,IAAG;AACjB,WAAO,KAAK,SAASA,EAAC;AAAA,EACxB;AAAA,EACA,SAASA,IAAG,IAAI,oBAAI,IAAI,GAAG;AACzB,QAAI,EAAE,IAAIA,EAAC,EAAG,QAAO,EAAE,IAAIA,EAAC;AAC5B,UAAM,IAAI,KAAK,MAAMA,EAAC;AACtB,QAAI,CAAC,EAAG,OAAM,IAAI,MAAM,2BAA2BA,EAAC,EAAE;AACtD,UAAM,IAAI;AACV,QAAI,IAAI,EAAE,KAAK,CAAC;AAChB,UAAM,IAAI,CAAC;AACX,WAAO,QAAQ,IAAI,GAAE,KAAK;AAAA,MACxB,MAAM,EAAE,CAAC;AAAA,MACT,OAAO,EAAE;AAAA,MACT,QAAQ,EAAE,CAAC,EAAE;AAAA,IACf,CAAC,GAAG,IAAI,EAAE,KAAK,CAAC;AAChB,QAAI,IAAI,GACN,IAAI;AACN,WAAO,EAAE,QAAQ,CAAAA,OAAK;AACpB,WAAK,EAAE,MAAM,GAAGA,GAAE,KAAK,GAAG,KAAK,EAAE,IAAIA,GAAE,IAAI,IAAI,KAAK,KAAK,SAASA,GAAE,MAAM,CAAC,GAAG,IAAIA,GAAE,QAAQA,GAAE;AAAA,IAChG,CAAC,GAAG,KAAK,EAAE,MAAM,CAAC,GAAG,EAAE,IAAIA,IAAG,CAAC,GAAG;AAAA,EACpC;AAAA,EACA,MAAMA,IAAG;AACP,WAAO,KAAK,UAAUA,EAAC;AAAA,EACzB;AACF;",
  "names": ["e"]
}
