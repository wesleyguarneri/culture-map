{
  "version": 3,
  "sources": ["../../../../../../node_modules/@arcgis/core/views/2d/layers/GraphicsLayerView2D.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { _ as i } from \"../../../chunks/tslib.es6.js\";\nimport t from \"../../../Graphic.js\";\nimport { isSome as e } from \"../../../core/arrayUtils.js\";\nimport r from \"../../../core/Collection.js\";\nimport { makeHandle as s } from \"../../../core/handleUtils.js\";\nimport { destroyMaybe as h } from \"../../../core/maybe.js\";\nimport { property as a } from \"../../../core/accessorSupport/decorators/property.js\";\nimport \"../../../core/has.js\";\nimport \"../../../core/Logger.js\";\nimport { subclass as o } from \"../../../core/accessorSupport/decorators/subclass.js\";\nimport { getHighlightBits as p } from \"../engine/highlightReasons.js\";\nimport { LayerView2DMixin as g } from \"./LayerView2D.js\";\nimport c from \"./graphics/GraphicContainer.js\";\nimport l from \"./graphics/GraphicsView2D.js\";\nimport { HighlightCounter as n } from \"./support/HighlightCounter.js\";\nimport d from \"../../layers/LayerView.js\";\nlet m = class extends g(d) {\n  constructor() {\n    super(...arguments), this._highlightCounter = new n();\n  }\n  attach() {\n    this.graphicsView = new l({\n      requestUpdateCallback: () => this.requestUpdate(),\n      view: this.view,\n      graphics: this.layer.graphics,\n      container: new c(this.view.featuresTilingScheme),\n      layerId: this.layer.id\n    }), this.container.addChild(this.graphicsView.container), this.addAttachHandles([this.layer.on(\"graphic-update\", this.graphicsView.graphicUpdateHandler), this.watch(\"layer.visible\", i => {\n      i && (this.graphicsView.update({\n        state: this.view.state\n      }), this.graphicsView.pushUpdate());\n    })]), this._updateHighlight();\n  }\n  detach() {\n    this.container.removeAllChildren(), this.graphicsView = h(this.graphicsView);\n  }\n  async hitTest(i) {\n    return this.graphicsView ? this.graphicsView.hitTest(i).map(t => ({\n      type: \"graphic\",\n      graphic: t,\n      mapPoint: i,\n      layer: this.layer\n    })) : null;\n  }\n  queryGraphics() {\n    return Promise.resolve(this.graphicsView.graphics);\n  }\n  update(i) {\n    this.graphicsView.processUpdate(i);\n  }\n  viewChange() {\n    this.graphicsView.viewChange();\n  }\n  moveEnd() {}\n  isUpdating() {\n    return !this.graphicsView || this.graphicsView.updating;\n  }\n  highlight(i, h = \"highlight\") {\n    let a;\n    \"number\" == typeof i ? a = [i] : i instanceof t ? a = [i.uid] : Array.isArray(i) && i.length > 0 ? a = \"number\" == typeof i[0] ? i : i.map(i => i && i.uid) : r.isCollection(i) && i.length > 0 && (a = i.map(i => i && i.uid).toArray());\n    const o = a?.filter(e);\n    return o?.length ? (this._addHighlight(o, h), s(() => this._removeHighlight(o, h))) : s();\n  }\n  _addHighlight(i, t) {\n    this._highlightCounter.addReason(i, t), this._updateHighlight();\n  }\n  _removeHighlight(i, t) {\n    this._highlightCounter.deleteReason(i, t), this._updateHighlight();\n  }\n  _updateHighlight() {\n    const i = [];\n    for (const t of this._highlightCounter.ids()) {\n      const e = this._highlightCounter.getHighlightReason(t),\n        r = p(e);\n      i.push({\n        objectId: t,\n        highlightFlags: r\n      });\n    }\n    this.graphicsView?.setHighlight(i);\n  }\n};\ni([a()], m.prototype, \"graphicsView\", void 0), m = i([o(\"esri.views.2d.layers.GraphicsLayerView2D\")], m);\nconst u = m;\nexport { u as default };"],
  "mappings": "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",
  "names": ["y", "e", "V", "t", "a", "i", "u"]
}
