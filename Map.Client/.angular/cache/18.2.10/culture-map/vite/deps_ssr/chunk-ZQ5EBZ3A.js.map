{
  "version": 3,
  "sources": ["../../../../../../node_modules/@arcgis/core/views/3d/webgl-engine/collections/Component/Material/ComponentTechnique.js", "../../../../../../node_modules/@arcgis/core/views/3d/webgl-engine/core/material/MaterialBase.js", "../../../../../../node_modules/@arcgis/core/views/3d/webgl-engine/collections/Component/Material/ComponentMaterial.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { ViewingMode as e } from \"../../../../../ViewingMode.js\";\nimport { IntegratedMeshMode as r } from \"./ComponentTechniqueConfiguration.js\";\nimport { C as i } from \"../../../../../../chunks/ComponentShader.glsl.js\";\nimport { ShaderOutput as t } from \"../../../core/shaderLibrary/ShaderOutput.js\";\nimport { ReloadableShaderModule as o } from \"../../../core/shaderTechnique/ReloadableShaderModule.js\";\nimport { ShaderTechnique as n } from \"../../../core/shaderTechnique/ShaderTechnique.js\";\nimport { StencilBits as s } from \"../../../lib/basicInterfaces.js\";\nimport { blendingDefault as l, oitBlending as a, oitDepthTest as u, oitDrawBuffers as c, OITPolygonOffset as d } from \"../../../lib/OrderIndependentTransparency.js\";\nimport { Program as p } from \"../../../lib/Program.js\";\nimport { stencilWriteMaskOn as m, replaceBitWhenDepthTestPasses as f, stencilBaseAllZerosParams as h } from \"../../../lib/StencilUtils.js\";\nimport { TransparencyPassType as b } from \"../../../lib/TransparencyPassType.js\";\nimport { VertexAttribute as g } from \"../../../lib/VertexAttribute.js\";\nimport { SpecialDrawBuffers as O } from \"../../../../../webgl/enums.js\";\nimport { makePipelineState as j, cullingParams as P, defaultDepthWriteParams as T, defaultColorWriteParams as M } from \"../../../../../webgl/renderState.js\";\nclass N extends n {\n  initializeConfiguration(r, i) {\n    i.spherical = r.viewingMode === e.Global, i.doublePrecisionRequiresObfuscation = r.rctx.driverTest.doublePrecisionRequiresObfuscation.result;\n  }\n  initializeProgram(e) {\n    return new p(e.rctx, N.shader.get().build(this.configuration), S);\n  }\n  _setPipelineState(e) {\n    const i = this.configuration,\n      o = i.integratedMeshMode !== r.None,\n      n = e === b.NONE,\n      p = e === b.FrontFace;\n    return j({\n      blending: i.output === t.Color && i.blendingEnabled ? n ? l : a(e) : null,\n      culling: P(i.cullFace),\n      depthTest: {\n        func: u(e)\n      },\n      depthWrite: n || p ? T : null,\n      drawBuffers: i.output === t.Depth ? {\n        buffers: [O.NONE]\n      } : c(e),\n      colorWrite: M,\n      stencilWrite: o || i.hasOccludees ? m : null,\n      stencilTest: o ? f(s.IntegratedMeshMaskExcluded) : i.hasOccludees ? h : null,\n      polygonOffset: n || p ? i.hasPolygonOffset ? {\n        factor: 2,\n        units: 2\n      } : null : d\n    });\n  }\n  initializePipeline() {\n    return this._setPipelineState(this.configuration.transparencyPassType);\n  }\n}\nN.shader = new o(i, () => import(\"./shader/ComponentShader.glsl.js\"));\nconst S = new Map([[g.POSITION, 0], [g.NORMAL, 1], [g.NORMALCOMPRESSED, 1], [g.COLOR, 2], [g.UV0, 3], [g.UVREGION, 4], [g.COMPONENTINDEX, 5]]);\nexport { N as ComponentTechnique, S as attributeLocations };", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { NoParameters as t } from \"../shaderModules/interfaces.js\";\nclass e extends t {\n  constructor() {\n    super(...arguments), this._dirty = !0;\n  }\n  _setDirty() {\n    this._dirty = !0;\n  }\n  _setClean() {\n    if (this._dirty = !1, null != this._parameterBlocks) for (const t of this._parameterBlocks) this[t]._setClean();\n  }\n  get dirty() {\n    return this._dirty || this._checkParameterBlocksDirty();\n  }\n  _checkParameterBlocksDirty() {\n    if (null == this._parameterBlocks) return !1;\n    for (const t of this._parameterBlocks) if (this[t].dirty) return !0;\n    return !1;\n  }\n}\nclass r {\n  constructor() {\n    this._dirty = !0;\n  }\n  _setDirty() {\n    this._dirty = !0;\n  }\n  _setClean() {\n    this._dirty = !1;\n  }\n  get dirty() {\n    return this._dirty;\n  }\n}\nfunction s(t = {}) {\n  return (e, r) => {\n    const s = e._parameterCount ?? 0;\n    if (e._parameterCount = s + 1, t.vectorOps) {\n      const i = t.vectorOps;\n      Object.defineProperty(e, r, {\n        get() {\n          return this[s];\n        },\n        set(t) {\n          const e = this[s];\n          if (null == e) this[s] = t;else {\n            if (i.equals(e, t)) return;\n            i.copy(e, t);\n          }\n          this._setDirty();\n        }\n      });\n    } else Object.defineProperty(e, r, {\n      get() {\n        return this[s];\n      },\n      set(e) {\n        this[s] !== e && (t.dispose && this[s] && this[s].dispose(), this[s] = e, this._setDirty());\n      }\n    });\n  };\n}\nfunction i() {\n  return (t, e) => {\n    const r = t._parameterCount ?? 0;\n    t._parameterCount = r + 1, t._parameterBlocks = t._parameterBlocks || [], t._parameterBlocks.push(r), Object.defineProperty(t, e, {\n      get() {\n        return this[r];\n      },\n      set(t) {\n        this[r] !== t && (this[r] = t, this._setDirty());\n      }\n    });\n  };\n}\nexport { e as MaterialBase, r as MaterialParameterBlock, s as parameter, i as parameterBlock };", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { _ as e } from \"../../../../../../chunks/tslib.es6.js\";\nimport { releaseMaybe as t } from \"../../../../../../core/maybe.js\";\nimport { invert as r, transpose as o } from \"../../../../../../core/libs/gl-matrix-2/math/mat3.js\";\nimport { clone as s } from \"../../../../../../core/libs/gl-matrix-2/factories/mat3f64.js\";\nimport { I as a } from \"../../../../../../chunks/vec32.js\";\nimport { fromArray as i, fromValues as l } from \"../../../../../../core/libs/gl-matrix-2/factories/vec3f64.js\";\nimport { v as n } from \"../../../../../../chunks/vec42.js\";\nimport { fromValues as u } from \"../../../../../../core/libs/gl-matrix-2/factories/vec4f64.js\";\nimport { ColorMixModeEnum as h } from \"../../../../layers/support/symbolColorUtils.js\";\nimport { OverlayContent as p } from \"../../../../terrain/OverlayContent.js\";\nimport { ComponentTechnique as d } from \"./ComponentTechnique.js\";\nimport { ComponentTechniqueConfiguration as c, IntegratedMeshMode as m } from \"./ComponentTechniqueConfiguration.js\";\nimport { ComponentDataType as g } from \"./shader/ComponentData.glsl.js\";\nimport { VertexDiscardMode as x } from \"./shader/VertexDiscardByOpacity.glsl.js\";\nimport { MaterialBase as y, parameter as b, parameterBlock as f, MaterialParameterBlock as v } from \"../../../core/material/MaterialBase.js\";\nimport { RenderPassIdentifier as T } from \"../../../core/renderPasses/AllRenderPasses.js\";\nimport { ShaderOutput as M } from \"../../../core/shaderLibrary/ShaderOutput.js\";\nimport { NormalType as w } from \"../../../core/shaderLibrary/attributes/NormalAttribute.glsl.js\";\nimport { NormalsDoubleSidedMode as O } from \"../../../core/shaderLibrary/shading/Normals.glsl.js\";\nimport { PBRMode as C } from \"../../../core/shaderLibrary/shading/PhysicallyBasedRenderingParameters.glsl.js\";\nimport { defaultMaskAlphaCutoff as S } from \"../../../core/shaderLibrary/util/AlphaCutoff.js\";\nimport { EllipsoidMode as P } from \"../../../core/shaderLibrary/util/EllipsoidMode.js\";\nimport { TwoVectorPosition as j } from \"../../../core/util/TwoVectorPosition.js\";\nimport { AlphaDiscardMode as N, CullFaceOptions as q } from \"../../../lib/basicInterfaces.js\";\nimport { TransparencyPassType as D } from \"../../../lib/TransparencyPassType.js\";\nimport { defaultAdvancedMRRFactors as A } from \"../../../materials/pbrUtils.js\";\nclass R extends y {\n  constructor(e, t) {\n    super(), this.toMapSpace = t, this.baseColor = u(1, 1, 1, 1), this.usePBR = !1, this.hasParametersFromSource = !1, this.mrrFactors = i(A), this.emissiveFactor = l(0, 0, 0), this.baseColorTexture = null, this.metallicRoughnessTexture = null, this.emissionTexture = null, this.occlusionTexture = null, this.normalTexture = null, this.objectOpacity = 1, this.commonMaterialParameters = new E(), this.componentParameters = new W(), this.textureAlphaCutoff = S, this.alphaDiscardMode = N.Opaque, this.isIntegratedMesh = !1, this.polygonOffsetEnabled = !1, this.ellipsoidMode = P.Earth, this.hasOccludees = !1, this._techniqueConfiguration = new c();\n    const a = new j(e.position),\n      n = s(e.rotationScale);\n    r(n, n), o(n, n), this.transformNormalGlobalFromModel = n, this.transformWorldFromModelTL = a.low, this.transformWorldFromModelTH = a.high, this.transformWorldFromModelRS = e.rotationScale;\n  }\n  dispose() {\n    this._technique = t(this._technique), this.baseColorTexture = null, this.metallicRoughnessTexture = null, this.emissionTexture = null, this.occlusionTexture = null, this.normalTexture = null;\n  }\n  get texture() {\n    return null != this.baseColorTexture ? this.baseColorTexture.glTexture : null;\n  }\n  get textureMetallicRoughness() {\n    return null != this.metallicRoughnessTexture ? this.metallicRoughnessTexture.glTexture : null;\n  }\n  get textureEmissive() {\n    return null != this.emissionTexture ? this.emissionTexture.glTexture : null;\n  }\n  get textureOcclusion() {\n    return null != this.occlusionTexture ? this.occlusionTexture.glTexture : null;\n  }\n  get textureNormal() {\n    return null != this.normalTexture ? this.normalTexture.glTexture : null;\n  }\n  prepareTechnique(e, t, r, o) {\n    const s = this._techniqueConfiguration;\n    s.hasVertexColors = o.colors, s.hasNormals = o.hasNormals, s.textureCoordinateType = o.textureCoordinates, s.hasMetallicRoughnessTexture = null != this.metallicRoughnessTexture, s.hasEmissionTexture = null != this.emissionTexture, s.hasOcclusionTexture = null != this.occlusionTexture, s.hasNormalTexture = null != this.normalTexture, s.transparencyPassType = t.identifier === T.Material && null != r.transparencyPassType ? r.transparencyPassType : D.NONE, s.multipassEnabled = t.identifier === T.Material && r.multipassEnabled, s.cullAboveGround = t.identifier === T.Material && r.multipassTerrain.cullAboveGround, s.ellipsoidMode = this.ellipsoidMode, s.componentData = this.componentParameters.type, s.cullFace = this.commonMaterialParameters.cullFace, s.doubleSidedMode = this.commonMaterialParameters.doubleSided ? O.View : O.None, s.hasColorTexture = null != this.baseColorTexture;\n    const a = this._computeWhichMaterialPass();\n    if (s.blendingEnabled = a === F.Transparent || a === F.OpaqueAndTransparent, s.alphaDiscardMode = this.alphaDiscardMode, s.integratedMeshMode = this.isIntegratedMesh ? L(r) ? B(r) ? m.ColorOverlayWithWater : m.ColorOverlay : m.NoOverlay : m.None, s.hasPolygonOffset = this.polygonOffsetEnabled, s.pbrMode = s.integratedMeshMode === m.ColorOverlayWithWater ? C.WaterOnIntegratedMesh : this.usePBR ? this.hasParametersFromSource ? o.needsNormals && this.isIntegratedMesh ? C.Disabled : C.Schematic : C.Normal : C.Disabled, s.normalType = o.needsNormals ? s.hasNormals ? w.Compressed : w.ScreenDerivative : w.Ground, s.hasSlicePlane = null != r.slicePlane && this.commonMaterialParameters.hasSlicePlane, t.identifier === T.ShadowMap) s.output = M.Shadow, s.vertexDiscardMode = x.None;else if (t.identifier === T.ViewshedShadowMap) s.output = M.ViewshedShadow, s.vertexDiscardMode = x.None;else if (t.identifier === T.Highlight) s.output = M.Highlight, s.vertexDiscardMode = x.None;else {\n      switch (a === F.OpaqueAndTransparent ? s.vertexDiscardMode = t.transparent ? x.Opaque : x.Transparent : s.vertexDiscardMode = x.None, s.output = t.output, s.receiveAmbientOcclusion = !1, s.receiveShadows = !1, t.output) {\n        case M.Color:\n          s.receiveAmbientOcclusion = null != r.ssao, s.hasOccludees = r.hasOccludees, s.receiveShadows = r.shadowMap.ready, s.hasScreenSpaceReflections = null != r.ssr.lastFrameColor, s.hasCloudsReflections = null != r.cloudsFade.data;\n          break;\n        case M.ObjectAndLayerIdColor:\n          s.objectAndLayerIdColor = !0;\n      }\n      s.snowCover = this.hasSnowCover(r);\n    }\n    return this._technique = e.releaseAndAcquire(d, s, this._technique), this._setClean(), this._technique;\n  }\n  hasSnowCover(e) {\n    return null != e.weather && e.weatherVisible && \"snowy\" === e.weather.type && \"enabled\" === e.weather.snowCover;\n  }\n  submit(e, t, r) {\n    if (0 === this.objectOpacity) return;\n    const o = r.renderable.geometry,\n      s = r.components,\n      a = r.renderable.meta.cameraDepthSquared,\n      i = s.geometryRanges,\n      l = s.highlightRanges,\n      n = s.defaultShadowMapRanges;\n    switch (this._computeWhichMaterialPass()) {\n      case F.Opaque:\n        e.materialOpaque.submitDraw(this, o, i, a);\n        break;\n      case F.Transparent:\n        e.materialTransparent.submitDraw(this, o, i, a);\n        break;\n      case F.OpaqueAndTransparent:\n        e.materialOpaque.submitDraw(this, o, i, a), e.materialTransparent.submitDraw(this, o, i, a);\n        break;\n      case F.IntegratedMesh:\n        e.materialIntegratedMesh.submitDraw(this, o, i, a), k(t) && e.highlightIntegratedMesh.submitDraw(this, o, i, a);\n    }\n    const u = this.componentParameters.castShadows !== I.None;\n    u && e.shadowMap.submitDraw(this, o, i, a), null != l && (e.highlight.submitDraw(this, o, l, a), u && e.highlightShadowMap.submitDraw(this, o, l, a)), t.viewshedEnabled && e.viewshedShadowMap.submitDraw(this, o, i, a), u && null != n && e.defaultShadowMap.submitDraw(this, o, n, a);\n  }\n  _computeWhichMaterialPass() {\n    return this.isIntegratedMesh ? F.IntegratedMesh : this.objectOpacity < 1 ? F.Transparent : this.componentParameters.opaqueOverride === I.All ? F.Opaque : this.baseColor[3] < 1 || this.alphaDiscardMode === N.Blend || this.alphaDiscardMode === N.MaskBlend ? F.Transparent : this.componentParameters.transparent === I.None ? F.Opaque : this.componentParameters.transparent === I.All ? F.Transparent : F.OpaqueAndTransparent;\n  }\n}\nvar F, I;\ne([b({\n  vectorOps: n\n})], R.prototype, \"baseColor\", void 0), e([b()], R.prototype, \"usePBR\", void 0), e([b()], R.prototype, \"hasParametersFromSource\", void 0), e([b({\n  vectorOps: a\n})], R.prototype, \"mrrFactors\", void 0), e([b({\n  vectorOps: a\n})], R.prototype, \"emissiveFactor\", void 0), e([b({\n  dispose: !0\n})], R.prototype, \"baseColorTexture\", void 0), e([b({\n  dispose: !0\n})], R.prototype, \"metallicRoughnessTexture\", void 0), e([b({\n  dispose: !0\n})], R.prototype, \"emissionTexture\", void 0), e([b({\n  dispose: !0\n})], R.prototype, \"occlusionTexture\", void 0), e([b({\n  dispose: !0\n})], R.prototype, \"normalTexture\", void 0), e([b()], R.prototype, \"objectOpacity\", void 0), e([f()], R.prototype, \"commonMaterialParameters\", void 0), e([f()], R.prototype, \"componentParameters\", void 0), e([b()], R.prototype, \"textureAlphaCutoff\", void 0), e([b()], R.prototype, \"alphaDiscardMode\", void 0), e([b()], R.prototype, \"isIntegratedMesh\", void 0), e([b()], R.prototype, \"polygonOffsetEnabled\", void 0), e([b()], R.prototype, \"ellipsoidMode\", void 0), e([b()], R.prototype, \"hasOccludees\", void 0), function (e) {\n  e[e.Opaque = 0] = \"Opaque\", e[e.Transparent = 1] = \"Transparent\", e[e.OpaqueAndTransparent = 2] = \"OpaqueAndTransparent\", e[e.IntegratedMesh = 3] = \"IntegratedMesh\";\n}(F || (F = {}));\nclass E extends v {\n  constructor() {\n    super(...arguments), this.doubleSided = !1, this.cullFace = q.Back, this.hasSlicePlane = !0;\n  }\n}\ne([b()], E.prototype, \"doubleSided\", void 0), e([b()], E.prototype, \"cullFace\", void 0), e([b()], E.prototype, \"hasSlicePlane\", void 0);\nclass W extends v {\n  constructor() {\n    super(...arguments), this.externalColor = u(1, 1, 1, 1), this.externalColorMixMode = h.Multiply, this.castShadows = I.All;\n  }\n  get transparent() {\n    return this.externalColor[3] < 1 ? I.All : I.None;\n  }\n  get opaqueOverride() {\n    return this.externalColorMixMode === h.Replace && 1 === this.externalColor[3] ? I.All : I.None;\n  }\n  get visible() {\n    return this.externalColor[3] > 0 ? I.All : I.None;\n  }\n  get type() {\n    return g.Uniform;\n  }\n}\ne([b({\n  vectorOps: n\n})], W.prototype, \"externalColor\", void 0), e([b()], W.prototype, \"externalColorMixMode\", void 0), e([b()], W.prototype, \"castShadows\", void 0), function (e) {\n  e[e.All = 0] = \"All\", e[e.Some = 1] = \"Some\", e[e.None = 2] = \"None\";\n}(I || (I = {}));\nclass _ extends v {\n  constructor() {\n    super(...arguments), this.texture = null, this.transparent = I.None, this.opaqueOverride = I.None, this.castShadows = I.None;\n  }\n  get type() {\n    return g.Varying;\n  }\n}\nfunction k(e) {\n  return null != e.overlay?.getTexture(p.Highlight);\n}\nfunction B(e) {\n  return null != e.overlay?.getTexture(p.WaterNormal);\n}\nfunction L(e) {\n  return null != e.overlay?.getTexture(p.ColorNoRasterImage);\n}\ne([b()], _.prototype, \"texture\", void 0), e([b()], _.prototype, \"transparent\", void 0), e([b()], _.prototype, \"opaqueOverride\", void 0), e([b()], _.prototype, \"castShadows\", void 0);\nexport { E as CommonMaterialParameters, R as ComponentMaterial, I as ComponentParameterSummary, W as ComponentParametersUniform, _ as ComponentParametersVarying };"],
  "mappings": "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",
  "names": ["N", "r", "i", "e", "S", "o", "n", "c", "f", "s", "u", "t", "e", "n", "t", "r", "s", "i", "e", "t", "r", "o", "s", "a", "n", "N", "i", "l", "u", "I", "_"]
}
