{
  "version": 3,
  "sources": ["../../../../../../node_modules/@arcgis/core/views/2d/engine/webgl/AttributeStoreView.js", "../../../../../../node_modules/@arcgis/core/views/2d/engine/AFeatureContainer.js", "../../../../../../node_modules/@arcgis/core/views/2d/engine/webgl/shaderGraph/techniques/mesh/instanceIdUtils.js", "../../../../../../node_modules/@arcgis/core/views/2d/engine/webgl/shaderGraph/techniques/TechniqueInstance.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport t from \"../../../../core/Error.js\";\nimport has from \"../../../../core/has.js\";\nimport e from \"../../../../core/Logger.js\";\nimport { AttributeDataType as i, filterFlagsUnit as s, animationUnit as r, gpgpuUnit as a, visualVariableUnit as n, dataDrivenUnit0 as u, dataDrivenUnit1 as h, dataDrivenUnit2 as o } from \"./definitions.js\";\nimport { getDisplayIdTexel as d } from \"./DisplayId.js\";\nimport { getPixelArrayCtor as l, getPixelBytes as p } from \"./Utils.js\";\nimport { TextureWrapMode as _, TextureSamplingMode as g } from \"../../../webgl/enums.js\";\nimport { FramebufferObject as c } from \"../../../webgl/FramebufferObject.js\";\nimport { Texture as x } from \"../../../webgl/Texture.js\";\nimport { TextureDescriptor as f } from \"../../../webgl/TextureDescriptor.js\";\nconst b = () => e.getLogger(\"esri.views.2d.engine.webgl.AttributeStoreView\");\nclass T {\n  constructor(t, e, i) {\n    this._texture = null, this._lastTexture = null, this._fbos = {}, this.texelSize = 4;\n    const {\n        buffer: s,\n        pixelType: r,\n        textureOnly: a\n      } = t,\n      n = l(r);\n    this.blockIndex = i, this.pixelType = r, this.size = e, this.textureOnly = a, a || (this.data = new n(s)), this._resetRange();\n  }\n  destroy() {\n    this._texture?.dispose();\n    for (const t in this._fbos) {\n      const e = this._fbos[t];\n      e && (\"0\" === t && e.detachColorTexture(), e.dispose()), this._fbos[t] = null;\n    }\n    this._texture = null;\n  }\n  get _textureDesc() {\n    const t = new f();\n    return t.wrapMode = _.CLAMP_TO_EDGE, t.samplingMode = g.NEAREST, t.dataType = this.pixelType, t.width = this.size, t.height = this.size, t;\n  }\n  setData(t, e, i) {\n    const s = d(t),\n      r = this.data,\n      a = s * this.texelSize + e;\n    !r || a >= r.length || (r[a] = i, this.dirtyStart = Math.min(this.dirtyStart, s), this.dirtyEnd = Math.max(this.dirtyEnd, s));\n  }\n  getData(t, e) {\n    if (null == this.data) return null;\n    const i = d(t) * this.texelSize + e;\n    return !this.data || i >= this.data.length ? null : this.data[i];\n  }\n  getTexture(t) {\n    return this._texture ?? this._initTexture(t);\n  }\n  getFBO(t, e = 0) {\n    if (!this._fbos[e]) {\n      const i = 0 === e ? this.getTexture(t) : this._textureDesc;\n      this._fbos[e] = new c(t, i);\n    }\n    return this._fbos[e];\n  }\n  get hasDirty() {\n    const t = this.dirtyStart;\n    return this.dirtyEnd >= t;\n  }\n  updateTexture(e, i) {\n    try {\n      const s = this.dirtyStart,\n        r = this.dirtyEnd;\n      if (!this.hasDirty) return;\n      has(\"esri-2d-update-debug\") && console.debug(`Version[${i}] AttributeStoreView.updateTexture`, {\n        start: s,\n        end: r,\n        firstBytes: new Uint8Array(this.data.buffer.slice(0, 16)),\n        block: this\n      }), this._resetRange();\n      const a = this.data.buffer,\n        n = this.getTexture(e),\n        u = 4,\n        h = (s - s % this.size) / this.size,\n        o = (r - r % this.size) / this.size,\n        d = h,\n        p = this.size,\n        _ = o,\n        g = h * this.size * u,\n        c = (p + _ * this.size) * u - g,\n        x = l(this.pixelType),\n        f = new x(a, g * x.BYTES_PER_ELEMENT, c),\n        T = this.size,\n        m = _ - d + 1;\n      if (m > this.size) return void b().error(new t(\"mapview-webgl\", \"Out-of-bounds index when updating AttributeData\"));\n      n.updateData(0, 0, d, T, m, f);\n    } catch (s) {}\n  }\n  update(t) {\n    const {\n      data: e,\n      start: i,\n      end: s\n    } = t;\n    if (null != e && null != this.data) {\n      const s = this.data,\n        r = i * this.texelSize;\n      for (let i = 0; i < e.length; i++) {\n        const a = 1 << i % this.texelSize;\n        t.layout & a && (s[r + i] = e[i]);\n      }\n    }\n    this.dirtyStart = Math.min(this.dirtyStart, i), this.dirtyEnd = Math.max(this.dirtyEnd, s);\n  }\n  resize(t, e) {\n    const i = this.size;\n    if (this.size = e, this.textureOnly) return void (i !== this.size && (this._lastTexture = this._texture, this._texture = null));\n    const s = l(this.pixelType);\n    this.destroy(), this.data = new s(t.buffer);\n  }\n  _resetRange() {\n    this.dirtyStart = 2147483647, this.dirtyEnd = 0;\n  }\n  _initTexture(t) {\n    const e = new x(t, this._textureDesc, this.data ?? void 0);\n    if (null != this._lastTexture && this._fbos[0]) {\n      const i = this._lastTexture.descriptor.width,\n        s = this._lastTexture.descriptor.height,\n        r = this._lastTexture.descriptor.dataType,\n        a = this._lastTexture.descriptor.pixelFormat,\n        n = this.getFBO(t),\n        u = p(r),\n        h = new (l(r))(new ArrayBuffer(i * s * u * this.texelSize)),\n        o = t.getBoundFramebufferObject(),\n        {\n          x: d,\n          y: _,\n          width: g,\n          height: c\n        } = t.getViewport();\n      t.bindFramebuffer(n), n.readPixels(0, 0, i, s, a, r, h), e.updateData(0, 0, 0, 2 * i, s / 2, h), t.setViewport(d, _, g, c), t.bindFramebuffer(o);\n    }\n    return this.destroy(), this._texture = e, this._texture;\n  }\n}\nclass m {\n  constructor() {\n    this.size = 0, this._pendingAttributeUpdates = [], this._version = 0, this._epoch = 0, this._locked = !1;\n  }\n  _initialize(t) {\n    if (!t) throw new Error(\"InternalError: initArgs must be defined\");\n    const e = t.blockDescriptors;\n    if (this.size = t.blockSize, has(\"esri-2d-update-debug\") && console.debug(\"AttributeStoreView.initialize\", {\n      message: t\n    }), null == this._data) this._data = e.map((t, e) => null != t ? new T(t, this.size, e) : null);else for (let i = 0; i < this._data.length; i++) {\n      const t = this._data[i],\n        s = e[i];\n      null != s && (null == t ? this._data[i] = new T(s, this.size, i) : t.resize(s, this.size));\n    }\n  }\n  destroy() {\n    for (const t of this._data ?? []) t?.destroy();\n    this._defaultTexture?.dispose(), this._defaultTexture = null, this._pendingAttributeUpdates = [];\n  }\n  isEmpty() {\n    return null == this._data;\n  }\n  getBlock(t) {\n    if (null == this._data) return null;\n    return this._data[t];\n  }\n  setLabelMinZoom(t, e) {\n    this.setData(t, 0, 1, e);\n  }\n  getLabelMinZoom(t) {\n    return this.getData(t, 0, 1, 255);\n  }\n  getFilterFlags(t) {\n    return this.getData(t, 0, 0, 0);\n  }\n  getVVSize(t) {\n    return this.getData(t, i.VV, 0, 0);\n  }\n  getData(t, e, i, s) {\n    if (!this._data) return 0;\n    const r = this._data[e];\n    if (null == r) return 0;\n    const a = r.getData(t, i);\n    return null != a ? a : s;\n  }\n  setData(t, e, i, s) {\n    this._data[e].setData(t, i, s);\n  }\n  lockTextureUploads() {\n    this._locked = !0;\n  }\n  unlockTextureUploads() {\n    this._locked = !1, this.update();\n  }\n  requestUpdate(t) {\n    this._version = t.version, this._pendingAttributeUpdates.push(t), has(\"esri-2d-update-debug\") && console.debug(`Version[${this._version}] AttributeStoreView.requestUpdate`, {\n      message: t\n    });\n  }\n  get currentEpoch() {\n    return this._epoch;\n  }\n  update() {\n    if (this._locked) return;\n    const t = this._pendingAttributeUpdates;\n    this._pendingAttributeUpdates = [];\n    for (const e of t) {\n      const {\n        blockData: t,\n        initArgs: i,\n        sendUpdateEpoch: s,\n        version: r\n      } = e;\n      has(\"esri-2d-update-debug\") && console.debug(`Version[${this._version}] Epoch[${s}] AttributeStoreView.applyUpdate`), this._version = r, this._epoch = s, null != i && this._initialize(i);\n      const a = this._data;\n      for (let e = 0; e < t.length; e++) {\n        const i = t[e],\n          s = a[e];\n        null != s && null != i && (has(\"esri-2d-update-debug\") && console.debug(`Version[${this._version}] CpuBlock[${e}] AttributeStoreView.update`, {\n          block: i\n        }), s.update(i));\n      }\n    }\n  }\n  getUniforms(t) {\n    return {\n      filterFlags: {\n        texture: this._getTexture(t, i.FilterFlags),\n        unit: s\n      },\n      animation: {\n        texture: this._getTexture(t, i.Animation),\n        unit: r\n      },\n      gpgpu: {\n        texture: this._getTexture(t, i.GPGPU),\n        unit: a\n      },\n      visualVariableData: {\n        texture: this._getTexture(t, i.VV),\n        unit: n\n      },\n      dataDriven0: {\n        texture: this._getTexture(t, i.DD0),\n        unit: u\n      },\n      dataDriven1: {\n        texture: this._getTexture(t, i.DD1),\n        unit: h\n      },\n      dataDriven2: {\n        texture: this._getTexture(t, i.DD2),\n        unit: o\n      },\n      size: this.size\n    };\n  }\n  _getTexture(t, e) {\n    const i = this._data?.[e];\n    return i ? (i.updateTexture(t, this._version), i.getTexture(t)) : this._getDefaultTexture(t);\n  }\n  _getDefaultTexture(t) {\n    if (null == this._defaultTexture) {\n      const e = new f();\n      e.wrapMode = _.CLAMP_TO_EDGE, e.samplingMode = g.NEAREST, e.width = 1, e.height = 1, this._defaultTexture = new x(t, e, new Uint8Array(4));\n    }\n    return this._defaultTexture;\n  }\n}\nexport { m as AttributeStoreView };", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { AttributeStoreView as e } from \"./webgl/AttributeStoreView.js\";\nimport t from \"./webgl/TileContainer.js\";\nclass r extends t {\n  constructor(t) {\n    super(t), this._statisticsByLevel = new Map(), this.attributeView = new e();\n  }\n  destroy() {\n    this.children.forEach(e => e.destroy()), this.removeAllChildren(), this.attributeView.destroy();\n  }\n  doRender(e) {\n    e.context.capabilities.enable(\"textureFloatLinear\"), super.doRender(e);\n  }\n  createRenderParams(e) {\n    const t = super.createRenderParams(e);\n    return t.attributeView = this.attributeView, t.instanceStore = this._instanceStore, t.statisticsByLevel = this._statisticsByLevel, t;\n  }\n}\nexport { r as AFeatureContainer };", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nfunction n(n) {\n  return n;\n}\nfunction r(n) {\n  return n;\n}\nexport { r as castInstanceId, n as castStrictInstanceId };", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { castStrictInstanceId as t } from \"./mesh/instanceIdUtils.js\";\nclass i {\n  constructor(t, i, e) {\n    this._instanceId = t, this.techniqueRef = i, this._input = e;\n  }\n  get instanceId() {\n    return t(this._instanceId);\n  }\n  createMeshInfo(i) {\n    return {\n      id: t(this._instanceId),\n      techniqueType: this.techniqueRef.type,\n      inputParams: i,\n      optionalAttributes: this._input.optionalAttributes\n    };\n  }\n  getInput() {\n    return this._input;\n  }\n  setInput(t) {\n    this._input = t;\n  }\n}\nexport { i as FeatureTechniqueInstance };"],
  "mappings": "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",
  "names": ["e", "i", "s", "r", "n", "E", "d", "c", "f", "T", "m", "t", "L", "e", "n", "r", "i", "e", "n"]
}
