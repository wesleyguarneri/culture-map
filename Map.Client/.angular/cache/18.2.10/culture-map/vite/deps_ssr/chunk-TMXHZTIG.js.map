{
  "version": 3,
  "sources": ["../../../../../../node_modules/@arcgis/core/views/3d/webgl-engine/lib/Octree.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport t from \"../../../../core/ObjectPool.js\";\nimport e from \"../../../../core/PooledArray.js\";\nimport { c as n, o, j as i, g as r, a as s } from \"../../../../chunks/vec32.js\";\nimport { create as h, fromValues as a } from \"../../../../core/libs/gl-matrix-2/factories/vec3f64.js\";\nimport { intersectsSphere as l } from \"../../../../geometry/support/frustum.js\";\nimport { wrap as d } from \"../../../../geometry/support/ray.js\";\nimport { a as u, b as c, j as f, g as m, c as _ } from \"../../../../chunks/sphere.js\";\nimport { rayBoxTest as p } from \"./Util.js\";\nclass b {\n  get bounds() {\n    return this._root.bounds;\n  }\n  get halfSize() {\n    return this._root.halfSize;\n  }\n  get root() {\n    return this._root.node;\n  }\n  get maximumObjectsPerNode() {\n    return this._maximumObjectsPerNode;\n  }\n  get maximumDepth() {\n    return this._maximumDepth;\n  }\n  get objectCount() {\n    return this._objectCount;\n  }\n  constructor(t, e) {\n    this.objectToBoundingSphere = t, this._maximumObjectsPerNode = 10, this._maximumDepth = 20, this._degenerateObjects = new Set(), this._root = new g(), this._objectCount = 0, e && (void 0 !== e.maximumObjectsPerNode && (this._maximumObjectsPerNode = e.maximumObjectsPerNode), void 0 !== e.maximumDepth && (this._maximumDepth = e.maximumDepth));\n  }\n  destroy() {\n    this._degenerateObjects.clear(), g.clearPool(), q[0] = null, K.prune(), Q.prune();\n  }\n  add(t, e = t.length) {\n    this._objectCount += e, this._grow(t, e);\n    const n = g.acquire();\n    for (let o = 0; o < e; o++) {\n      const e = t[o];\n      this._isDegenerate(e) ? this._degenerateObjects.add(e) : (n.init(this._root), this._add(e, n));\n    }\n    g.release(n);\n  }\n  remove(t, e = null) {\n    this._objectCount -= t.length;\n    const n = g.acquire();\n    for (const o of t) {\n      const t = e ?? u(this.objectToBoundingSphere(o), J);\n      C(t[3]) ? (n.init(this._root), O(o, t, n)) : this._degenerateObjects.delete(o);\n    }\n    g.release(n), this._shrink();\n  }\n  update(t, e) {\n    if (!C(e[3]) && this._isDegenerate(t)) return;\n    const n = y(t);\n    this.remove(n, e), this.add(n);\n  }\n  forEachAlongRay(t, e, n) {\n    const o = d(t, e);\n    S(this._root, t => {\n      if (!T(o, t)) return !1;\n      const e = t.node;\n      return e.terminals.forAll(t => {\n        this._intersectsObject(o, t) && n(t);\n      }), null !== e.residents && e.residents.forAll(t => {\n        this._intersectsObject(o, t) && n(t);\n      }), !0;\n    });\n  }\n  forEachAlongRayWithVerticalOffset(t, e, n, o) {\n    const i = d(t, e);\n    S(this._root, t => {\n      if (!z(i, t, o)) return !1;\n      const e = t.node;\n      return e.terminals.forAll(t => {\n        this._intersectsObjectWithOffset(i, t, o) && n(t);\n      }), null !== e.residents && e.residents.forAll(t => {\n        this._intersectsObjectWithOffset(i, t, o) && n(t);\n      }), !0;\n    });\n  }\n  forEach(t) {\n    S(this._root, e => {\n      const n = e.node;\n      return n.terminals.forAll(t), null !== n.residents && n.residents.forAll(t), !0;\n    }), this._degenerateObjects.forEach(t);\n  }\n  forEachDegenerateObject(t) {\n    this._degenerateObjects.forEach(t);\n  }\n  findClosest(t, e, n, o = () => !0, s = 1 / 0) {\n    let h = 1 / 0,\n      a = 1 / 0,\n      d = null;\n    const u = F(t, e),\n      c = i => {\n        if (--s, !o(i)) return;\n        const r = this.objectToBoundingSphere(i);\n        if (!l(n, r)) return;\n        const u = v(t, e, m(r)),\n          c = u - r[3],\n          f = u + r[3];\n        c < h && (h = c, a = f, d = i);\n      };\n    return j(this._root, o => {\n      if (s <= 0 || !l(n, o.bounds)) return !1;\n      i(I, u, o.halfSize), r(I, I, m(o.bounds));\n      if (v(t, e, I) > a) return !1;\n      const h = o.node;\n      return h.terminals.forAll(t => c(t)), null !== h.residents && h.residents.forAll(t => c(t)), !0;\n    }, t, e), d;\n  }\n  forEachInDepthRange(t, e, n, o, s, h, a) {\n    let d = -1 / 0,\n      u = 1 / 0;\n    const c = {\n      setRange: t => {\n        n === b.DepthOrder.FRONT_TO_BACK ? (d = Math.max(d, t.near), u = Math.min(u, t.far)) : (d = Math.max(d, -t.far), u = Math.min(u, -t.near));\n      }\n    };\n    c.setRange(o);\n    const f = v(e, n, t),\n      _ = F(e, n),\n      p = F(e, -n),\n      g = t => {\n        if (!a(t)) return;\n        const o = this.objectToBoundingSphere(t),\n          i = m(o),\n          r = v(e, n, i) - f,\n          _ = r - o[3],\n          p = r + o[3];\n        _ > u || p < d || !l(h, o) || s(t, c);\n      };\n    j(this._root, t => {\n      if (!l(h, t.bounds)) return !1;\n      i(I, _, t.halfSize), r(I, I, m(t.bounds));\n      if (v(e, n, I) - f > u) return !1;\n      i(I, p, t.halfSize), r(I, I, m(t.bounds));\n      if (v(e, n, I) - f < d) return !1;\n      const o = t.node;\n      return o.terminals.forAll(t => g(t)), null !== o.residents && o.residents.forAll(t => g(t)), !0;\n    }, e, n);\n  }\n  forEachNode(t) {\n    S(this._root, e => t(e.node, e.bounds, e.halfSize, e.depth));\n  }\n  forEachNeighbor(t, e) {\n    const n = c(e),\n      o = m(e),\n      i = e => {\n        const i = this.objectToBoundingSphere(e),\n          r = c(i),\n          h = n + r;\n        return !(s(m(i), o) - h * h <= 0) || t(e);\n      };\n    let r = !0;\n    const h = t => {\n      r && (r = i(t));\n    };\n    S(this._root, t => {\n      const e = c(t.bounds),\n        i = n + e;\n      if (s(m(t.bounds), o) - i * i > 0) return !1;\n      const a = t.node;\n      return a.terminals.forAll(h), r && null !== a.residents && a.residents.forAll(h), r;\n    }), r && this.forEachDegenerateObject(h);\n  }\n  _intersectsObject(t, e) {\n    const n = this.objectToBoundingSphere(e);\n    return !(n[3] > 0) || f(n, t);\n  }\n  _intersectsObjectWithOffset(t, e, n) {\n    const o = this.objectToBoundingSphere(e);\n    return !(o[3] > 0) || f(n.applyToBoundingSphere(o), t);\n  }\n  _add(t, e) {\n    e.advanceTo(this.objectToBoundingSphere(t)) ? e.node.terminals.push(t) : (e.node.residents.push(t), e.node.residents.length > this._maximumObjectsPerNode && e.depth < this._maximumDepth && this._split(e));\n  }\n  _split(t) {\n    const e = t.node.residents;\n    t.node.residents = null;\n    for (let n = 0; n < e.length; n++) {\n      const o = g.acquire().init(t);\n      this._add(e.at(n), o), g.release(o);\n    }\n  }\n  _grow(t, e) {\n    if (0 !== e && (D(t, e, t => this.objectToBoundingSphere(t), W), C(W[3]) && !this._fitsInsideTree(W))) if (N(this._root.node)) u(W, this._root.bounds), this._root.halfSize = 1.25 * this._root.bounds[3], this._root.updateBoundsRadiusFromHalfSize();else {\n      const t = this._rootBoundsForRootAsSubNode(W);\n      this._placingRootViolatesMaxDepth(t) ? this._rebuildTree(W, t) : this._growRootAsSubNode(t), g.release(t);\n    }\n  }\n  _rebuildTree(t, e) {\n    n(m(V), m(e.bounds)), V[3] = e.halfSize, D([t, V], 2, t => t, G);\n    const o = g.acquire().init(this._root);\n    this._root.initFrom(null, G, G[3]), this._root.increaseHalfSize(1.25), S(o, t => (this.add(t.node.terminals.data, t.node.terminals.length), null !== t.node.residents && this.add(t.node.residents.data, t.node.residents.length), !0)), g.release(o);\n  }\n  _placingRootViolatesMaxDepth(t) {\n    const e = Math.log(t.halfSize / this._root.halfSize) * Math.LOG2E;\n    let n = 0;\n    return S(this._root, t => (n = Math.max(n, t.depth), n + e <= this._maximumDepth)), n + e > this._maximumDepth;\n  }\n  _rootBoundsForRootAsSubNode(t) {\n    const e = t[3],\n      n = t;\n    let o = -1 / 0;\n    const i = this._root.bounds,\n      r = this._root.halfSize;\n    for (let h = 0; h < 3; h++) {\n      const t = i[h] - r - (n[h] - e),\n        s = n[h] + e - (i[h] + r),\n        a = Math.max(0, Math.ceil(t / (2 * r))),\n        l = Math.max(0, Math.ceil(s / (2 * r))) + 1,\n        d = 2 ** Math.ceil(Math.log(a + l) * Math.LOG2E);\n      o = Math.max(o, d), U[h].min = a, U[h].max = l;\n    }\n    for (let h = 0; h < 3; h++) {\n      let t = U[h].min,\n        e = U[h].max;\n      const n = (o - (t + e)) / 2;\n      t += Math.ceil(n), e += Math.floor(n);\n      const s = i[h] - r - t * r * 2;\n      k[h] = s + (e + t) * r;\n    }\n    const s = o * r;\n    return k[3] = s * w, g.acquire().initFrom(null, k, s, 0);\n  }\n  _growRootAsSubNode(t) {\n    const e = this._root.node;\n    n(m(W), m(this._root.bounds)), W[3] = this._root.halfSize, this._root.init(t), t.advanceTo(W, null, !0), t.node.children = e.children, t.node.residents = e.residents, t.node.terminals = e.terminals;\n  }\n  _shrink() {\n    for (;;) {\n      const t = this._findShrinkIndex();\n      if (-1 === t) break;\n      this._root.advance(t), this._root.depth = 0;\n    }\n  }\n  _findShrinkIndex() {\n    if (0 !== this._root.node.terminals.length || this._root.isLeaf()) return -1;\n    let t = null;\n    const e = this._root.node.children;\n    let n = 0,\n      o = 0;\n    for (; o < e.length && null == t;) n = o++, t = e[n];\n    for (; o < e.length;) if (e[o++]) return -1;\n    return n;\n  }\n  _isDegenerate(t) {\n    return !C(this.objectToBoundingSphere(t)[3]);\n  }\n  _fitsInsideTree(t) {\n    const e = this._root.bounds,\n      n = this._root.halfSize;\n    return t[3] <= n && t[0] >= e[0] - n && t[0] <= e[0] + n && t[1] >= e[1] - n && t[1] <= e[1] + n && t[2] >= e[2] - n && t[2] <= e[2] + n;\n  }\n  toJSON() {\n    const {\n        maximumDepth: t,\n        maximumObjectsPerNode: e,\n        _objectCount: n\n      } = this,\n      o = this._nodeToJSON(this._root.node);\n    return {\n      maximumDepth: t,\n      maximumObjectsPerNode: e,\n      objectCount: n,\n      root: {\n        bounds: this._root.bounds,\n        halfSize: this._root.halfSize,\n        depth: this._root.depth,\n        node: o\n      }\n    };\n  }\n  _nodeToJSON(t) {\n    const e = t.children.map(t => t ? this._nodeToJSON(t) : null),\n      n = t.residents?.map(t => this.objectToBoundingSphere(t)),\n      o = t.terminals?.map(t => this.objectToBoundingSphere(t));\n    return {\n      children: e,\n      residents: n,\n      terminals: o\n    };\n  }\n  static fromJSON(t) {\n    const e = new b(t => t, {\n      maximumDepth: t.maximumDepth,\n      maximumObjectsPerNode: t.maximumObjectsPerNode\n    });\n    return e._objectCount = t.objectCount, e._root.initFrom(t.root.node, t.root.bounds, t.root.halfSize, t.root.depth), e;\n  }\n}\nclass g {\n  constructor() {\n    this.bounds = _(), this.halfSize = 0, this.initFrom(null, null, 0, 0);\n  }\n  init(t) {\n    return this.initFrom(t.node, t.bounds, t.halfSize, t.depth);\n  }\n  initFrom(t, e, n, o = this.depth) {\n    return this.node = null != t ? t : g.createEmptyNode(), e && u(e, this.bounds), this.halfSize = n, this.depth = o, this;\n  }\n  increaseHalfSize(t) {\n    this.halfSize *= t, this.updateBoundsRadiusFromHalfSize();\n  }\n  updateBoundsRadiusFromHalfSize() {\n    this.bounds[3] = this.halfSize * w;\n  }\n  advance(t) {\n    let e = this.node.children[t];\n    e || (e = g.createEmptyNode(), this.node.children[t] = e), this.node = e, this.halfSize /= 2, this.depth++;\n    const n = E[t];\n    return this.bounds[0] += n[0] * this.halfSize, this.bounds[1] += n[1] * this.halfSize, this.bounds[2] += n[2] * this.halfSize, this.updateBoundsRadiusFromHalfSize(), this;\n  }\n  advanceTo(t, e, n = !1) {\n    for (;;) {\n      if (this.isTerminalFor(t)) return e && e(this, -1), !0;\n      if (this.isLeaf()) {\n        if (!n) return e && e(this, -1), !1;\n        this.node.residents = null;\n      }\n      const o = this._childIndex(t);\n      e && e(this, o), this.advance(o);\n    }\n  }\n  isLeaf() {\n    return null != this.node.residents;\n  }\n  isTerminalFor(t) {\n    return t[3] > this.halfSize / 2;\n  }\n  _childIndex(t) {\n    const e = this.bounds;\n    return (e[0] < t[0] ? 1 : 0) + (e[1] < t[1] ? 2 : 0) + (e[2] < t[2] ? 4 : 0);\n  }\n  static createEmptyNode() {\n    return {\n      children: [null, null, null, null, null, null, null, null],\n      terminals: new e({\n        shrink: !0\n      }),\n      residents: new e({\n        shrink: !0\n      })\n    };\n  }\n  static acquire() {\n    return g._pool.acquire();\n  }\n  static release(t) {\n    g._pool.release(t);\n  }\n  static clearPool() {\n    g._pool.prune();\n  }\n}\nfunction S(t, e) {\n  let n = g.acquire().init(t);\n  const o = [n];\n  for (; 0 !== o.length;) {\n    if (n = o.pop(), e(n) && !n.isLeaf()) for (let t = 0; t < n.node.children.length; t++) {\n      n.node.children[t] && o.push(g.acquire().init(n).advance(t));\n    }\n    g.release(n);\n  }\n}\nfunction j(t, e, n, o = b.DepthOrder.FRONT_TO_BACK) {\n  let i = g.acquire().init(t);\n  const r = [i];\n  for (R(n, o, X); 0 !== r.length;) {\n    if (i = r.pop(), e(i) && !i.isLeaf()) for (let t = 7; t >= 0; --t) {\n      const e = X[t];\n      i.node.children[e] && r.push(g.acquire().init(i).advance(e));\n    }\n    g.release(i);\n  }\n}\nfunction O(t, e, n) {\n  K.clear();\n  const o = n.advanceTo(e, (t, e) => {\n    K.push(t.node), K.push(e);\n  }) ? n.node.terminals : n.node.residents;\n  if (o.removeUnordered(t), 0 === o.length) for (let i = K.length - 2; i >= 0; i -= 2) {\n    if (!x(K.data[i], K.data[i + 1])) break;\n  }\n}\nfunction x(t, n) {\n  return n >= 0 && (t.children[n] = null), !!N(t) && (null === t.residents && (t.residents = new e({\n    shrink: !0\n  })), !0);\n}\nfunction T(t, e) {\n  return B(m(e.bounds), 2 * -e.halfSize, L), B(m(e.bounds), 2 * e.halfSize, H), p(t.origin, t.direction, L, H);\n}\nfunction z(t, e, n) {\n  return B(m(e.bounds), 2 * -e.halfSize, L), B(m(e.bounds), 2 * e.halfSize, H), n.applyToMinMax(L, H), p(t.origin, t.direction, L, H);\n}\nfunction N(t) {\n  if (0 !== t.terminals.length) return !1;\n  if (null !== t.residents) return 0 === t.residents.length;\n  for (let e = 0; e < t.children.length; e++) if (t.children[e]) return !1;\n  return !0;\n}\nfunction M(t, e) {\n  t[0] = Math.min(t[0], e[0] - e[3]), t[1] = Math.min(t[1], e[1] - e[3]), t[2] = Math.min(t[2], e[2] - e[3]);\n}\nfunction A(t, e) {\n  t[0] = Math.max(t[0], e[0] + e[3]), t[1] = Math.max(t[1], e[1] + e[3]), t[2] = Math.max(t[2], e[2] + e[3]);\n}\nfunction B(t, e, n) {\n  n[0] = t[0] + e, n[1] = t[1] + e, n[2] = t[2] + e;\n}\nfunction D(t, e, n, i) {\n  if (1 === e) {\n    const e = n(t[0]);\n    u(e, i);\n  } else {\n    L[0] = 1 / 0, L[1] = 1 / 0, L[2] = 1 / 0, H[0] = -1 / 0, H[1] = -1 / 0, H[2] = -1 / 0;\n    for (let o = 0; o < e; o++) {\n      const e = n(t[o]);\n      C(e[3]) && (M(L, e), A(H, e));\n    }\n    o(m(i), L, H, .5), i[3] = Math.max(H[0] - L[0], H[1] - L[1], H[2] - L[2]) / 2;\n  }\n}\nfunction R(t, e, n) {\n  if (!Q.length) for (let o = 0; o < 8; ++o) Q.push({\n    index: 0,\n    distance: 0\n  });\n  for (let o = 0; o < 8; ++o) {\n    const n = E[o];\n    Q.data[o].index = o, Q.data[o].distance = v(t, e, n);\n  }\n  Q.sort((t, e) => t.distance - e.distance);\n  for (let o = 0; o < 8; ++o) n[o] = Q.data[o].index;\n}\nfunction F(t, e) {\n  let n,\n    o = 1 / 0;\n  for (let i = 0; i < 8; ++i) {\n    const r = v(t, e, P[i]);\n    r < o && (o = r, n = P[i]);\n  }\n  return n;\n}\nfunction v(t, e, n) {\n  return e * (t[0] * n[0] + t[1] * n[1] + t[2] * n[2]);\n}\nfunction C(t) {\n  return !isNaN(t) && t !== -1 / 0 && t !== 1 / 0 && t > 0;\n}\ng._pool = new t(g), function (t) {\n  var e;\n  (e = t.DepthOrder || (t.DepthOrder = {}))[e.FRONT_TO_BACK = 1] = \"FRONT_TO_BACK\", e[e.BACK_TO_FRONT = -1] = \"BACK_TO_FRONT\";\n}(b || (b = {}));\nconst E = [a(-1, -1, -1), a(1, -1, -1), a(-1, 1, -1), a(1, 1, -1), a(-1, -1, 1), a(1, -1, 1), a(-1, 1, 1), a(1, 1, 1)],\n  P = [a(-1, -1, -1), a(-1, -1, 1), a(-1, 1, -1), a(-1, 1, 1), a(1, -1, -1), a(1, -1, 1), a(1, 1, -1), a(1, 1, 1)],\n  w = Math.sqrt(3),\n  q = [null];\nfunction y(t) {\n  return q[0] = t, q;\n}\nconst k = _(),\n  I = h(),\n  L = h(),\n  H = h(),\n  K = new e(),\n  J = _(),\n  W = _(),\n  V = _(),\n  G = _(),\n  U = [{\n    min: 0,\n    max: 0\n  }, {\n    min: 0,\n    max: 0\n  }, {\n    min: 0,\n    max: 0\n  }],\n  Q = new e(),\n  X = [0, 0, 0, 0, 0, 0, 0, 0],\n  Y = b;\nexport { Y as default };"],
  "mappings": "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",
  "names": ["e", "g", "n", "t", "l", "T", "i", "s", "u", "r", "c", "o", "h", "_", "p", "N", "V", "H", "A"]
}
