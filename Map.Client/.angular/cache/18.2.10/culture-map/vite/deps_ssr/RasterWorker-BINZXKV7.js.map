{
  "version": 3,
  "sources": ["../../../../../../node_modules/@arcgis/core/layers/support/rasterTransforms/IdentityTransform.js", "../../../../../../node_modules/@arcgis/core/layers/support/rasterTransforms/utils.js", "../../../../../../node_modules/@arcgis/core/layers/support/RasterWorker.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { _ as r } from \"../../../chunks/tslib.es6.js\";\nimport \"../../../core/Logger.js\";\nimport \"../../../core/has.js\";\nimport \"../../../core/RandomLCG.js\";\nimport \"../../../core/Error.js\";\nimport { enumeration as o } from \"../../../core/accessorSupport/decorators/enumeration.js\";\nimport { subclass as s } from \"../../../core/accessorSupport/decorators/subclass.js\";\nimport t from \"./BaseRasterTransform.js\";\nvar e;\nlet a = e = class extends t {\n  constructor() {\n    super(...arguments), this.type = \"identity\";\n  }\n  clone() {\n    return new e();\n  }\n};\nr([o({\n  IdentityXform: \"identity\"\n})], a.prototype, \"type\", void 0), a = e = r([s(\"esri.layers.support.rasterTransforms.IdentityTransform\")], a);\nconst p = a;\nexport { p as default };", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport r from \"./GCSShiftTransform.js\";\nimport t from \"./IdentityTransform.js\";\nimport n from \"./PolynomialTransform.js\";\nconst o = {\n    GCSShiftXform: r,\n    IdentityXform: t,\n    PolynomialXform: n\n  },\n  e = Object.keys(o);\nfunction f(r) {\n  const t = r?.type;\n  return !r || e.includes(t);\n}\nfunction i(r) {\n  const t = r?.type;\n  if (!t) return null;\n  const n = o[r?.type];\n  if (n) {\n    const t = new n();\n    return t.read(r), t;\n  }\n  return null;\n}\nexport { f as isTransformSupported, i as readTransform };", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport \"../../geometry.js\";\nimport r from \"../../geometry/support/GeographicTransformation.js\";\nimport e from \"./PixelBlock.js\";\nimport { decode as t } from \"./rasterFormats/RasterCodec.js\";\nimport { split as s, clipTile as o, mosaic as i, approximateTransform as n, getLocalArithmeticNorthRotations as a } from \"./rasterFunctions/pixelUtils.js\";\nimport { create as l } from \"./rasterFunctions/rasterFunctionHelper.js\";\nimport { requirePE as m, load as c, getProjectionOffsetGrid as f } from \"./rasterFunctions/rasterProjectionHelper.js\";\nimport { computeStatisticsHistograms as p, estimateStatisticsHistograms as u } from \"./rasterFunctions/stretchUtils.js\";\nimport { convertVectorFieldData as S, convertToLocalDirections as d } from \"./rasterFunctions/vectorFieldUtils.js\";\nimport { readTransform as x } from \"./rasterTransforms/utils.js\";\nimport y from \"../../renderers/support/RasterSymbolizer.js\";\nimport { createFlowMesh as O } from \"../../views/2d/engine/flow/dataUtils.js\";\nimport h from \"../../geometry/Extent.js\";\nimport N from \"../../geometry/Point.js\";\nclass J {\n  convertVectorFieldData(r) {\n    const t = e.fromJSON(r.pixelBlock),\n      s = S(t, r.type);\n    return Promise.resolve(null != s ? s.toJSON() : null);\n  }\n  computeStatisticsHistograms(r) {\n    const t = e.fromJSON(r.pixelBlock),\n      s = p(t);\n    return Promise.resolve(s);\n  }\n  async decode(r) {\n    const e = await t(r.data, r.options);\n    return e && e.toJSON();\n  }\n  symbolize(r) {\n    r.pixelBlock = e.fromJSON(r.pixelBlock), r.extent = r.extent ? h.fromJSON(r.extent) : null;\n    const t = this.symbolizer.symbolize(r);\n    return Promise.resolve(null != t ? t.toJSON() : null);\n  }\n  async updateSymbolizer(r) {\n    this.symbolizer = y.fromJSON(r.symbolizerJSON), r.histograms && \"rasterStretch\" === this.symbolizer?.rendererJSON.type && (this.symbolizer.rendererJSON.histograms = r.histograms);\n  }\n  async updateRasterFunction(r) {\n    this.rasterFunction = l(r.rasterFunctionJSON);\n  }\n  async process(r) {\n    const t = this.rasterFunction.process({\n      extent: h.fromJSON(r.extent),\n      primaryPixelBlocks: r.primaryPixelBlocks.map(r => null != r ? e.fromJSON(r) : null),\n      primaryPixelSizes: r.primaryPixelSizes?.map(r => null != r ? N.fromJSON(r) : null),\n      primaryRasterIds: r.primaryRasterIds\n    });\n    return null != t ? t.toJSON() : null;\n  }\n  stretch(r) {\n    const t = this.symbolizer.simpleStretch(e.fromJSON(r.srcPixelBlock), r.stretchParams);\n    return Promise.resolve(t?.toJSON());\n  }\n  estimateStatisticsHistograms(r) {\n    const t = u(e.fromJSON(r.srcPixelBlock));\n    return Promise.resolve(t);\n  }\n  split(r) {\n    const t = s(e.fromJSON(r.srcPixelBlock), r.tileSize, r.maximumPyramidLevel ?? 0, !1 === r.useBilinear);\n    return t && t.forEach((r, e) => {\n      t.set(e, r?.toJSON());\n    }), Promise.resolve(t);\n  }\n  clipTile(r) {\n    const t = e.fromJSON(r.pixelBlock),\n      s = o({\n        ...r,\n        pixelBlock: t\n      });\n    return Promise.resolve(s?.toJSON());\n  }\n  async mosaicAndTransform(r) {\n    const t = r.srcPixelBlocks.map(r => r ? new e(r) : null),\n      s = i(t, r.srcMosaicSize, {\n        blockWidths: r.blockWidths,\n        alignmentInfo: r.alignmentInfo,\n        clipOffset: r.clipOffset,\n        clipSize: r.clipSize\n      });\n    let o,\n      l = s;\n    return r.coefs && (l = n(s, r.destDimension, r.coefs, r.sampleSpacing, r.interpolation)), r.projectDirections && r.gcsGrid && (o = a(r.destDimension, r.gcsGrid), l = d(l, r.isUV ? \"vector-uv\" : \"vector-magdir\", o)), {\n      pixelBlock: l?.toJSON(),\n      localNorthDirections: o\n    };\n  }\n  async createFlowMesh(r, e) {\n    const t = {\n        data: new Float32Array(r.flowData.buffer),\n        mask: new Uint8Array(r.flowData.maskBuffer),\n        width: r.flowData.width,\n        height: r.flowData.height\n      },\n      {\n        vertexData: s,\n        indexData: o\n      } = await O(r.meshType, r.simulationSettings, t, e.signal);\n    return {\n      result: {\n        vertexBuffer: s.buffer,\n        indexBuffer: o.buffer\n      },\n      transferList: [s.buffer, o.buffer]\n    };\n  }\n  async getProjectionOffsetGrid(e) {\n    const t = h.fromJSON(e.projectedExtent),\n      s = h.fromJSON(e.srcBufferExtent);\n    let o = null;\n    e.datumTransformationSteps && (o = new r({\n      steps: e.datumTransformationSteps\n    })), (e.includeGCSGrid || m(t.spatialReference, s.spatialReference, o)) && (await c());\n    const i = e.rasterTransform ? x(e.rasterTransform) : null;\n    return f({\n      ...e,\n      projectedExtent: t,\n      srcBufferExtent: s,\n      datumTransformation: o,\n      rasterTransform: i\n    });\n  }\n}\nexport { J as default };"],
  "mappings": "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",
  "names": ["e", "a", "o", "e", "o", "t", "s", "e", "r", "o", "i"]
}
