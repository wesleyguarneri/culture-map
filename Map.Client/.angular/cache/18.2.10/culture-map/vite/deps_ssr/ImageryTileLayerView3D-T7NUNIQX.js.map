{
  "version": 3,
  "sources": ["../../../../../../node_modules/@arcgis/core/views/3d/terrain/RasterTile.js", "../../../../../../node_modules/@arcgis/core/views/3d/layers/ImageryTileLayerView3D.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { disposeMaybe as t } from \"../../../core/maybe.js\";\nimport { C as e } from \"../../../chunks/RasterColorizer.glsl.js\";\nimport { TextureSamplingMode as r } from \"../../webgl/enums.js\";\nimport { createTransformTexture as s, getCommonUniforms as i, getColormapUniforms as o, getStretchUniforms as a, getShadedReliefUniforms as l, createRasterTexture as h, createColormapTexture as n } from \"../../webgl/rasterUtils.js\";\nconst u = {\n  bandCount: 3,\n  outMin: 0,\n  outMax: 1,\n  minCutOff: [0, 0, 0],\n  maxCutOff: [255, 255, 255],\n  factor: [1 / 255, 1 / 255, 1 / 255],\n  useGamma: !1,\n  gamma: [1, 1, 1],\n  gammaCorrection: [1, 1, 1],\n  colormap: null,\n  colormapOffset: null,\n  stretchType: \"none\",\n  type: \"stretch\"\n};\nclass m {\n  constructor(t, e, r = null, s = null) {\n    this.lij = t, this.type = \"raster-tile\", this._memoryUsed = null, this._source = null, this._symbolizerParameters = null, this._bandIds = null, this._interpolation = null, this._dirty = !1, this._transformGrid = null, this.isRendereredSource = !1, this.symbolizerRenderer = null, this.rawPixelData = null, this.opacity = 1, this.source = e, this.width = r || e.width, this.height = s || e.height;\n  }\n  get source() {\n    return this._source;\n  }\n  set source(e) {\n    this._source = e, this._rasterTexture = t(this._rasterTexture), this._memoryUsed = null;\n  }\n  get symbolizerParameters() {\n    return this.isRendereredSource ? {\n      ...u,\n      maxCutOff: [1, 1, 1],\n      factor: [1, 1, 1]\n    } : this._symbolizerParameters || u;\n  }\n  set symbolizerParameters(t) {\n    this._symbolizerParameters = t;\n  }\n  get bandIds() {\n    return this._bandIds;\n  }\n  set bandIds(t) {\n    if (null != t && t.length > 0) {\n      this._bandIds && t.every((t, e) => !!this._bandIds?.[e] && t === this._bandIds[e]) || (this._bandIds = t, this._dirty = !0);\n    } else this._bandIds = null;\n  }\n  get interpolation() {\n    return this._interpolation || \"nearest\";\n  }\n  set interpolation(t) {\n    if (this._interpolation = t, null != this._rasterTexture) {\n      const e = this._getRasterTextureInterpolation(t);\n      this._rasterTexture.setSamplingMode(\"bilinear\" === e ? r.LINEAR : r.NEAREST);\n    }\n  }\n  get transformGrid() {\n    return this._transformGrid;\n  }\n  set transformGrid(e) {\n    this._transformGrid = e, this._transformGridTexture = t(this._transformGridTexture), this._memoryUsed = null;\n  }\n  bind(t) {\n    return !!(this.source && this.source.pixels && this.source.pixels.length > 0) && ((null == this._rasterTexture || this._dirty) && this._updateRasterTexture(t, this.bandIds), null != this._rasterTexture && (this._updateColormapTexture(t), this.transformGrid && null == this._transformGridTexture && (this._transformGridTexture = s(t, this.transformGrid))), !0);\n  }\n  getUniforms() {\n    const {\n        symbolizerParameters: t,\n        transformGrid: r,\n        width: s,\n        height: h,\n        opacity: n\n      } = this,\n      u = i(r, [s, h], [this.source.width, this.source.height], n),\n      m = o(t.colormap, t.colormapOffset),\n      d = \"stretch\" === this.symbolizerParameters.type ? a(this.symbolizerParameters) : null,\n      _ = \"hillshade\" === this.symbolizerParameters.type ? l(this.symbolizerParameters) : null;\n    return new e(u, m, d || _, this._rasterTexture, this._transformGridTexture, this._colormapTexture);\n  }\n  get isBilinearWithStretchColorRamp() {\n    const {\n      symbolizerParameters: t\n    } = this;\n    return \"bilinear\" === this.interpolation && null != t.colormap && \"stretch\" === t.type;\n  }\n  get memoryUsage() {\n    if (null == this._memoryUsed) {\n      const t = [this._rasterTexture, this._transformGridTexture, this._colormapTexture];\n      this._memoryUsed = t.map(t => null != t ? t.descriptor.width * t.descriptor.height * 4 : 0).reduce((t, e) => t + e, 0);\n    }\n    return this._memoryUsed;\n  }\n  release() {\n    return this._rasterTexture = t(this._rasterTexture), this._transformGridTexture = t(this._transformGridTexture), this._colormapTexture = t(this._colormapTexture), this.source = null, this.transformGrid = null, this.rawPixelData = null, !0;\n  }\n  _updateRasterTexture(e, r) {\n    const s = this.source ? this.source.extractBands(r) : null;\n    if (!(s?.pixels && s.pixels.length > 0)) return void (this._rasterTexture = t(this._rasterTexture));\n    const i = null == r && null == this.bandIds || null != r && null != this.bandIds && r.join(\"\") === this.bandIds.join(\"\");\n    if (null != this._rasterTexture && i) return;\n    this._rasterTexture = t(this._rasterTexture);\n    const o = this._getRasterTextureInterpolation(this.interpolation);\n    this._rasterTexture = h(e, s, o, this.isRendereredSource || this.hasStretchTypeNone());\n  }\n  hasStretchTypeNone() {\n    return \"stretchType\" in this.symbolizerParameters && \"none\" === this.symbolizerParameters.stretchType && !this.symbolizerParameters.useGamma && \"u8\" === this.source.pixelType;\n  }\n  _getRasterTextureInterpolation(t) {\n    return \"lut\" === this.symbolizerParameters.type || \"nearest\" === t || \"majority\" === t || this.isBilinearWithStretchColorRamp ? \"nearest\" : \"bilinear\";\n  }\n  _updateColormapTexture(e) {\n    const r = this._colormap,\n      s = this.symbolizerParameters.colormap;\n    return s ? r ? s.length !== r.length || s.some((t, e) => t !== r[e]) ? (this._colormapTexture = t(this._colormapTexture), this._colormapTexture = n(e, s), void (this._colormap = s)) : void 0 : (this._colormapTexture = n(e, s), void (this._colormap = s)) : (this._colormapTexture = t(this._colormapTexture), void (this._colormap = null));\n  }\n}\nexport { m as RasterTile };", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { _ as e } from \"../../../chunks/tslib.es6.js\";\nimport t from \"../../../core/Error.js\";\nimport { whenOnce as r } from \"../../../core/reactiveUtils.js\";\nimport { property as i } from \"../../../core/accessorSupport/decorators/property.js\";\nimport \"../../../core/has.js\";\nimport \"../../../core/Logger.js\";\nimport \"../../../core/RandomLCG.js\";\nimport { subclass as s } from \"../../../core/accessorSupport/decorators/subclass.js\";\nimport { projectDatasetExtent as a } from \"../../../layers/support/rasterFunctions/rasterProjectionHelper.js\";\nimport { LayerView3D as l } from \"./LayerView3D.js\";\nimport { TiledLayerView3D as n } from \"./TiledLayerView3D.js\";\nimport { RasterTile as o } from \"../terrain/RasterTile.js\";\nimport m from \"../../layers/ImageryTileLayerView.js\";\nimport p from \"../../layers/LayerView.js\";\nimport h from \"../../layers/RefreshableLayerView.js\";\nimport { createQueryGeometry as c } from \"../../support/drapedUtils.js\";\nimport { getWebGLCapabilities as d } from \"../../webgl/capabilities.js\";\nlet y = class extends m(h(n(l(p)))) {\n  constructor() {\n    super(...arguments), this.type = \"imagery-tile-3d\", this._isAlignedMapTile = !0;\n  }\n  initialize() {\n    this.layer.increaseRasterJobHandlerUsage(), null == this.fullExtent && this.addResolvingPromise(Promise.reject(new t(\"layerview:spatial-reference-incompatible\", \"The layer extent cannot be projected to the view's spatial reference\", {\n      layer: this.layer\n    })));\n    const e = r(() => this.view?.basemapTerrain?.tilingSchemeLocked).then(() => {\n      const e = this.view.basemapTerrain.tilingScheme,\n        t = this.layer.tileInfo;\n      this._isAlignedMapTile = [\"png\", \"png24\", \"png32\", \"jpg\", \"mixed\"].includes(t.format) && e.compatibleWith(t), this.tileInfo = this._isAlignedMapTile ? t : e.toTileInfo(), this._updatingHandles.add(() => [this.layer.renderer, this.layer.interpolation, this.layer.bandIds, this.layer.multidimensionalDefinition, this.layer.multidimensionalSubset, this.layer.rasterFunction, this.timeExtent], () => this.refresh());\n    });\n    this.addResolvingPromise(e);\n  }\n  destroy() {\n    this.layer.decreaseRasterJobHandlerUsage();\n  }\n  get _blankTile() {\n    const e = document.createElement(\"canvas\"),\n      t = e.getContext(\"2d\"),\n      [r, i] = this.tileInfo.size;\n    return e.width = r, e.height = i, t.clearRect(0, 0, r, i), t.getImageData(0, 0, r, i);\n  }\n  get imageFormatIsOpaque() {\n    return \"jpg\" === this.layer.tileInfo.format;\n  }\n  get hasMixedImageFormats() {\n    return \"mixed\" === this.layer.tileInfo.format;\n  }\n  get dataLevelRange() {\n    const e = this.layer.tileInfo,\n      t = this.tileInfo.lodAt(0)?.scale,\n      r = this.layer.tileInfo.lodAt(e.lods.length - 1)?.scale;\n    return this.levelRangeFromScaleRange(t, r);\n  }\n  _getfullExtent() {\n    return a(this.layer.serviceRasterInfo, this.view.basemapTerrain?.spatialReference ?? this.view.spatialReference);\n  }\n  async fetchTile(e, t) {\n    const r = this.tileInfo,\n      i = this._canSymbolizeInWebGL(),\n      s = {\n        tileInfo: r,\n        requestRawData: i,\n        signal: t.signal,\n        timeExtent: this.timeExtent,\n        requestAsImageElement: this._isAlignedMapTile,\n        noClip: !1\n      },\n      {\n        layer: a\n      } = this,\n      [l, n, m] = e,\n      p = await a.fetchTile(l, n, m, s);\n    if (p instanceof HTMLImageElement) return p;\n    let h = p?.pixelBlock;\n    if (null == h) return this._blankTile;\n    if (!i && (h = await a.applyRenderer(p), null == h)) return this._blankTile;\n    const c = new o([l, n, m], h, r.size[0], r.size[1]);\n    return i ? (c.symbolizerRenderer = a.symbolizer.rendererJSON, c.symbolizerParameters = a.symbolizer.generateWebGLParameters(this._getSymbolizerOptions(l)), c.transformGrid = p.transformGrid, c.bandIds = a.bandIds) : (c.isRendereredSource = !0, c.bandIds = null), c.interpolation = a.interpolation, c;\n  }\n  _getSymbolizerOptions(e) {\n    const t = this.tileInfo.lodAt(e).resolution;\n    return {\n      pixelBlock: null,\n      isGCS: null != this.view.basemapTerrain?.spatialReference ? this.view.basemapTerrain.spatialReference.isGeographic : this.view.spatialReference.isGeographic,\n      resolution: {\n        x: t,\n        y: t\n      },\n      bandIds: this.layer.bandIds\n    };\n  }\n  ensureSymbolizerParameters(e) {\n    this._canSymbolizeInWebGL() && JSON.stringify(e.symbolizerRenderer) !== JSON.stringify(this.layer.symbolizer.rendererJSON) && (e.symbolizerParameters = this.layer.symbolizer.generateWebGLParameters(this._getSymbolizerOptions(e.lij[0])));\n  }\n  createFetchPopupFeaturesQueryGeometry(e, t) {\n    return c(e, t, this.view);\n  }\n  refresh() {\n    this.emit(\"data-changed\");\n  }\n  async doRefresh() {\n    this.suspended || this.emit(\"data-changed\");\n  }\n  _canSymbolizeInWebGL() {\n    const e = d(),\n      {\n        symbolizer: t\n      } = this.layer,\n      r = t.lookup?.colormapLut?.indexedColormap,\n      i = !!this.layer.rasterFunction?.hasClipFunction,\n      s = r && r.length > 4 * (e.maxTextureSize || 4906);\n    return t.canRenderInWebGL && !s && !i;\n  }\n};\ne([i({\n  readOnly: !0\n})], y.prototype, \"_blankTile\", null), e([i({\n  readOnly: !0\n})], y.prototype, \"imageFormatIsOpaque\", null), e([i({\n  readOnly: !0\n})], y.prototype, \"hasMixedImageFormats\", null), e([i({\n  readOnly: !0\n})], y.prototype, \"dataLevelRange\", null), y = e([s(\"esri.views.3d.layers.ImageryTileLayerView3D\")], y);\nconst u = y;\nexport { u as default };"],
  "mappings": "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",
  "names": ["u", "m", "t", "e", "r", "s", "_", "i", "y", "p", "l", "e", "t", "r", "i", "s", "a", "m", "c", "u"]
}
