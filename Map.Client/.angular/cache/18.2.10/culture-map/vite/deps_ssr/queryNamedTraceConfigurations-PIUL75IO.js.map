{
  "version": 3,
  "sources": ["../../../../../../node_modules/@arcgis/core/rest/networks/support/QueryNamedTraceConfigurationsResult.js", "../../../../../../node_modules/@arcgis/core/rest/networks/queryNamedTraceConfigurations.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { _ as r } from \"../../../chunks/tslib.es6.js\";\nimport { JSONSupport as o } from \"../../../core/JSONSupport.js\";\nimport { property as s } from \"../../../core/accessorSupport/decorators/property.js\";\nimport \"../../../core/has.js\";\nimport \"../../../core/Logger.js\";\nimport \"../../../core/RandomLCG.js\";\nimport { subclass as t } from \"../../../core/accessorSupport/decorators/subclass.js\";\nimport e from \"../../../networks/support/NamedTraceConfiguration.js\";\nlet a = class extends o {\n  constructor(r) {\n    super(r), this.namedTraceConfigurations = [];\n  }\n};\nr([s({\n  type: [e],\n  json: {\n    read: {\n      source: \"traceConfigurations\"\n    },\n    write: {\n      target: \"traceConfigurations\"\n    }\n  }\n})], a.prototype, \"namedTraceConfigurations\", void 0), a = r([t(\"esri.rest.networks.support.QueryNamedTraceConfigurationsResult\")], a);\nconst c = a;\nexport { c as default };", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport t from \"../../request.js\";\nimport { parseUrl as s, encode as r, asValidOptions as o } from \"../utils.js\";\nimport a from \"./support/QueryNamedTraceConfigurationsResult.js\";\nasync function e(e, n, g) {\n  const i = s(e),\n    l = n.toJSON();\n  n.globalIds && n.globalIds.length > 0 && (l.globalIds = JSON.stringify(n.globalIds)), n.creators && n.creators.length > 0 && (l.creators = JSON.stringify(n.creators)), n.tags && n.tags.length > 0 && (l.tags = JSON.stringify(n.tags)), n.names && n.names.length > 0 && (l.names = JSON.stringify(n.names));\n  const m = {\n      ...l,\n      f: \"json\"\n    },\n    f = r({\n      ...i.query,\n      ...m\n    }),\n    u = o(f, {\n      ...g,\n      method: \"post\"\n    }),\n    c = `${i.path}/traceConfigurations/query`,\n    {\n      data: p\n    } = await t(c, u);\n  return a.fromJSON(p);\n}\nexport { e as queryNamedTraceConfigurations };"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAYA,IAAIA,KAAI,cAAc,EAAE;AAAA,EACtB,YAAY,GAAG;AACb,UAAM,CAAC,GAAG,KAAK,2BAA2B,CAAC;AAAA,EAC7C;AACF;AACA,EAAE,CAAC,EAAE;AAAA,EACH,MAAM,CAAC,CAAC;AAAA,EACR,MAAM;AAAA,IACJ,MAAM;AAAA,MACJ,QAAQ;AAAA,IACV;AAAA,IACA,OAAO;AAAA,MACL,QAAQ;AAAA,IACV;AAAA,EACF;AACF,CAAC,CAAC,GAAGA,GAAE,WAAW,4BAA4B,MAAM,GAAGA,KAAI,EAAE,CAAC,EAAE,gEAAgE,CAAC,GAAGA,EAAC;AACrI,IAAM,IAAIA;;;ACrBV,SAAeC,GAAEA,IAAG,GAAG,GAAG;AAAA;AACxB,UAAMC,KAAIC,GAAEF,EAAC,GACX,IAAI,EAAE,OAAO;AACf,MAAE,aAAa,EAAE,UAAU,SAAS,MAAM,EAAE,YAAY,KAAK,UAAU,EAAE,SAAS,IAAI,EAAE,YAAY,EAAE,SAAS,SAAS,MAAM,EAAE,WAAW,KAAK,UAAU,EAAE,QAAQ,IAAI,EAAE,QAAQ,EAAE,KAAK,SAAS,MAAM,EAAE,OAAO,KAAK,UAAU,EAAE,IAAI,IAAI,EAAE,SAAS,EAAE,MAAM,SAAS,MAAM,EAAE,QAAQ,KAAK,UAAU,EAAE,KAAK;AAC5S,UAAM,IAAI,iCACH,IADG;AAAA,MAEN,GAAG;AAAA,IACL,IACAE,KAAI,EAAE,kCACDD,GAAE,QACF,EACJ,GACD,IAAI,EAAEC,IAAG,iCACJ,IADI;AAAA,MAEP,QAAQ;AAAA,IACV,EAAC,GACDC,KAAI,GAAGF,GAAE,IAAI,8BACb;AAAA,MACE,MAAM;AAAA,IACR,IAAI,MAAM,EAAEE,IAAG,CAAC;AAClB,WAAO,EAAE,SAAS,CAAC;AAAA,EACrB;AAAA;",
  "names": ["a", "e", "i", "f", "c"]
}
