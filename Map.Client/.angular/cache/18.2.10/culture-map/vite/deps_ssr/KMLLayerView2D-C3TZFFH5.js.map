{
  "version": 3,
  "sources": ["../../../../../../node_modules/@arcgis/core/views/support/imageReprojection.js", "../../../../../../node_modules/@arcgis/core/views/2d/layers/KMLLayerView2D.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport t from \"../../request.js\";\nimport e from \"../../geometry/Point.js\";\nimport { project as r } from \"../../geometry/projection.js\";\nimport { projectResolution as i, getProjectionOffsetGrid as a } from \"../../layers/support/rasterFunctions/rasterProjectionHelper.js\";\nimport { isImageSource as s, rasterize as n } from \"../2d/engine/Bitmap.js\";\nimport o from \"../2d/engine/webgl/VertexStream.js\";\nimport { createProgramTemplate as m } from \"../2d/engine/webgl/shaders/MaterialPrograms.js\";\nimport { createContext as c } from \"../webgl/contextUtils.js\";\nimport { TextureWrapMode as p, PixelFormat as h, PixelType as x, ColorAttachment as u } from \"../webgl/enums.js\";\nimport { FramebufferObject as d } from \"../webgl/FramebufferObject.js\";\nimport { createTransformTexture as _ } from \"../webgl/rasterUtils.js\";\nimport { RenderingContext as g } from \"../webgl/RenderingContext.js\";\nimport { Texture as f } from \"../webgl/Texture.js\";\nimport { TextureDescriptor as l } from \"../webgl/TextureDescriptor.js\";\nclass w {\n  constructor(t) {\n    if (this._ownsRctx = !1, t) this._ownsRctx = !1, this._rctx = t;else {\n      if (w._instance) return w._instanceRefCount++, w._instance;\n      w._instanceRefCount = 1, w._instance = this, this._ownsRctx = !0;\n      const t = document.createElement(\"canvas\"),\n        e = c(t);\n      e.getExtension(\"OES_texture_float\"), this._rctx = new g(e, {});\n    }\n    const e = {\n        applyProjection: !0,\n        bilinear: !1,\n        bicubic: !1\n      },\n      r = m(\"raster/reproject\", \"raster/reproject\", new Map([[\"a_position\", 0]]), e);\n    this._program = this._rctx.programCache.acquire(r.shaders.vertexShader, r.shaders.fragmentShader, r.attributes), this._rctx.useProgram(this._program), this._program.setUniform1f(\"u_opacity\", 1), this._program.setUniform1i(\"u_image\", 0), this._program.setUniform1i(\"u_flipY\", 0), this._program.setUniform1i(\"u_transformGrid\", 1), this._quad = new o(this._rctx, [0, 0, 1, 0, 0, 1, 1, 1]);\n  }\n  reprojectTexture(t, s, n = !1) {\n    const o = r(t.extent, s),\n      m = new e({\n        x: (t.extent.xmax - t.extent.xmin) / t.texture.descriptor.width,\n        y: (t.extent.ymax - t.extent.ymin) / t.texture.descriptor.height,\n        spatialReference: t.extent.spatialReference\n      }),\n      {\n        x: c,\n        y: g\n      } = i(m, s, t.extent);\n    let f = (c + g) / 2;\n    const w = Math.round((o.xmax - o.xmin) / f),\n      b = Math.round((o.ymax - o.ymin) / f);\n    f = (o.width / w + o.height / b) / 2;\n    const j = new e({\n        x: f,\n        y: f,\n        spatialReference: o.spatialReference\n      }),\n      D = a({\n        projectedExtent: o,\n        srcBufferExtent: t.extent,\n        pixelSize: j,\n        hasWrapAround: !0,\n        spacing: [16, 16]\n      }),\n      R = _(this._rctx, D),\n      T = new l(w, b);\n    T.wrapMode = p.CLAMP_TO_EDGE;\n    const C = new d(this._rctx, T);\n    this._rctx.bindFramebuffer(C), this._rctx.setViewport(0, 0, w, b), this._rctx.useProgram(this._program), this._rctx.bindTexture(t.texture, 0), this._rctx.bindTexture(R, 1), this._quad.bind();\n    const {\n      width: y = 0,\n      height: E = 0\n    } = t.texture.descriptor;\n    if (this._program.setUniform2f(\"u_srcImageSize\", y, E), this._program.setUniform2fv(\"u_transformSpacing\", D.spacing), this._program.setUniform2fv(\"u_transformGridSize\", D.size), this._program.setUniform2f(\"u_targetImageSize\", w, b), this._quad.draw(), this._quad.unbind(), this._rctx.useProgram(null), this._rctx.bindFramebuffer(null), R.dispose(), n) {\n      const {\n          width: t,\n          height: e\n        } = C,\n        r = new ImageData(t ?? 0, e ?? 0);\n      C.readPixels(0, 0, t ?? 0, e ?? 0, h.RGBA, x.UNSIGNED_BYTE, r.data);\n      const i = C.detachColorTexture(u.COLOR_ATTACHMENT0);\n      return C.dispose(), {\n        texture: i,\n        extent: o,\n        imageData: r\n      };\n    }\n    const U = C.detachColorTexture(u.COLOR_ATTACHMENT0);\n    return C.dispose(), {\n      texture: U,\n      extent: o\n    };\n  }\n  reprojectBitmapData(t, e) {\n    const r = s(t.bitmapData) ? n(t.bitmapData) : t.bitmapData,\n      i = new l();\n    i.wrapMode = p.CLAMP_TO_EDGE, i.width = t.bitmapData.width, i.height = t.bitmapData.height;\n    const a = new f(this._rctx, i, r),\n      o = this.reprojectTexture({\n        texture: a,\n        extent: t.extent\n      }, e, !0);\n    o.texture.dispose();\n    const m = document.createElement(\"canvas\"),\n      c = o.imageData;\n    m.width = c.width, m.height = c.height;\n    return m.getContext(\"2d\").putImageData(c, 0, 0), {\n      bitmapData: m,\n      extent: o.extent\n    };\n  }\n  async loadAndReprojectBitmapData(e, r, i) {\n    const a = (await t(e, {\n        responseType: \"image\"\n      })).data,\n      s = document.createElement(\"canvas\");\n    s.width = a.width, s.height = a.height;\n    const n = s.getContext(\"2d\");\n    n.drawImage(a, 0, 0);\n    const o = n.getImageData(0, 0, s.width, s.height);\n    if (r.spatialReference.equals(i)) return {\n      bitmapData: o,\n      extent: r\n    };\n    const m = this.reprojectBitmapData({\n      bitmapData: o,\n      extent: r\n    }, i);\n    return {\n      bitmapData: m.bitmapData,\n      extent: m.extent\n    };\n  }\n  destroy() {\n    this._ownsRctx ? (w._instanceRefCount--, 0 === w._instanceRefCount && (this._quad.dispose(), this._program.dispose(), this._rctx.dispose(), w._instance = null)) : (this._quad.dispose(), this._program.dispose());\n  }\n}\nw._instanceRefCount = 0;\nexport { w as ImageReprojector };", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { _ as e } from \"../../../chunks/tslib.es6.js\";\nimport { version as i } from \"../../../kernel.js\";\nimport t from \"../../../core/Collection.js\";\nimport { abortMaybe as s, destroyMaybe as a } from \"../../../core/maybe.js\";\nimport { watch as o } from \"../../../core/reactiveUtils.js\";\nimport { queryToObject as l, objectToQuery as r } from \"../../../core/urlUtils.js\";\nimport { property as n } from \"../../../core/accessorSupport/decorators/property.js\";\nimport \"../../../core/has.js\";\nimport \"../../../core/Logger.js\";\nimport \"../../../core/RandomLCG.js\";\nimport { subclass as h } from \"../../../core/accessorSupport/decorators/subclass.js\";\nimport p from \"../../../geometry/Extent.js\";\nimport { load as m, project as c } from \"../../../geometry/projection.js\";\nimport d from \"../../../geometry/SpatialReference.js\";\nimport { getGraphics as y, fetchService as g, parseKML as w } from \"../../../layers/support/kmlUtils.js\";\nimport { parseUrl as u } from \"../../../rest/utils.js\";\nimport { GraphicsCollection as _ } from \"../../../support/GraphicsCollection.js\";\nimport { Bitmap as b } from \"../engine/Bitmap.js\";\nimport { BitmapContainer as V } from \"../engine/BitmapContainer.js\";\nimport { LayerView2DMixin as f } from \"./LayerView2D.js\";\nimport v from \"./graphics/GraphicContainer.js\";\nimport S from \"./graphics/GraphicsView2D.js\";\nimport I from \"../../layers/LayerView.js\";\nimport { ImageReprojector as x } from \"../../support/imageReprojection.js\";\nclass C {\n  constructor() {\n    this.allSublayers = new Map(), this.allPoints = [], this.allPolylines = [], this.allPolygons = [], this.allMapImages = [];\n  }\n}\nlet j = class extends f(I) {\n  constructor() {\n    super(...arguments), this._bitmapIndex = new Map(), this._mapImageContainer = new V(), this._kmlVisualData = new C(), this._fetchController = null, this.allVisiblePoints = new _(), this.allVisiblePolylines = new _(), this.allVisiblePolygons = new _(), this.allVisibleMapImages = new t();\n  }\n  async hitTest(e, i) {\n    const t = this.layer;\n    return [this._pointsView?.hitTest(e), this._polylinesView?.hitTest(e), this._polygonsView?.hitTest(e)].flat().filter(Boolean).map(i => (i.layer = t, i.sourceLayer = t, {\n      type: \"graphic\",\n      graphic: i,\n      layer: t,\n      mapPoint: e\n    }));\n  }\n  update(e) {\n    this._polygonsView && this._polygonsView.processUpdate(e), this._polylinesView && this._polylinesView.processUpdate(e), this._pointsView && this._pointsView.processUpdate(e);\n  }\n  attach() {\n    this._fetchController = new AbortController(), this.container.addChild(this._mapImageContainer), this._polygonsView = new S({\n      view: this.view,\n      graphics: this.allVisiblePolygons,\n      requestUpdateCallback: () => this.requestUpdate(),\n      container: new v(this.view.featuresTilingScheme)\n    }), this.container.addChild(this._polygonsView.container), this._polylinesView = new S({\n      view: this.view,\n      graphics: this.allVisiblePolylines,\n      requestUpdateCallback: () => this.requestUpdate(),\n      container: new v(this.view.featuresTilingScheme)\n    }), this.container.addChild(this._polylinesView.container), this._pointsView = new S({\n      view: this.view,\n      graphics: this.allVisiblePoints,\n      requestUpdateCallback: () => this.requestUpdate(),\n      container: new v(this.view.featuresTilingScheme)\n    }), this.container.addChild(this._pointsView.container), this.addAttachHandles([this.allVisibleMapImages.on(\"change\", e => {\n      e.added.forEach(e => this._addMapImage(e)), e.removed.forEach(e => this._removeMapImage(e));\n    }), o(() => this.layer.visibleSublayers, e => {\n      for (const [i, t] of this._kmlVisualData.allSublayers) t.visibility = 0;\n      for (const i of e) {\n        const e = this._kmlVisualData.allSublayers.get(i.id);\n        e && (e.visibility = 1);\n      }\n      this._refreshCollections();\n    })]), this._updatingHandles.addPromise(this._fetchService(this._fetchController.signal)), this._imageReprojector = new x();\n  }\n  detach() {\n    this._fetchController = s(this._fetchController), this._mapImageContainer.removeAllChildren(), this.container.removeAllChildren(), this._bitmapIndex.clear(), this._polygonsView = a(this._polygonsView), this._polylinesView = a(this._polylinesView), this._pointsView = a(this._pointsView), this._imageReprojector = a(this._imageReprojector);\n  }\n  viewChange() {\n    this._polygonsView.viewChange(), this._polylinesView.viewChange(), this._pointsView.viewChange();\n  }\n  moveEnd() {}\n  isUpdating() {\n    return this._pointsView.updating || this._polygonsView.updating || this._polylinesView.updating;\n  }\n  _addMapImage(e) {\n    (this.view.spatialReference?.isWGS84 || this.view.spatialReference?.isWebMercator) && this._imageReprojector.loadAndReprojectBitmapData(e.href, p.fromJSON(e.extent), this.view.spatialReference).then(i => {\n      const t = new b(i.bitmapData);\n      t.x = i.extent.xmin, t.y = i.extent.ymax, t.resolution = i.extent.width / i.bitmapData.width, t.rotation = e.rotation, this._mapImageContainer.addChild(t), this._bitmapIndex.set(e, t);\n    });\n  }\n  async _getViewDependentUrl(e, t) {\n    const {\n      viewFormat: s,\n      viewBoundScale: a,\n      httpQuery: o\n    } = e;\n    if (null != s) {\n      if (null == t) throw new Error(\"Loading this network link requires a view state.\");\n      let n;\n      if (await m(), null != a && 1 !== a) {\n        const e = new p(t.extent);\n        e.expand(a), n = e;\n      } else n = t.extent;\n      n = c(n, d.WGS84);\n      const h = c(n, d.WebMercator),\n        y = n.xmin,\n        g = n.xmax,\n        w = n.ymin,\n        _ = n.ymax,\n        b = t.size[0] * t.pixelRatio,\n        V = t.size[1] * t.pixelRatio,\n        f = Math.max(h.width, h.height),\n        v = {\n          \"[bboxWest]\": y.toString(),\n          \"[bboxEast]\": g.toString(),\n          \"[bboxSouth]\": w.toString(),\n          \"[bboxNorth]\": _.toString(),\n          \"[lookatLon]\": n.center.x.toString(),\n          \"[lookatLat]\": n.center.y.toString(),\n          \"[lookatRange]\": f.toString(),\n          \"[lookatTilt]\": \"0\",\n          \"[lookatHeading]\": t.rotation.toString(),\n          \"[lookatTerrainLon]\": n.center.x.toString(),\n          \"[lookatTerrainLat]\": n.center.y.toString(),\n          \"[lookatTerrainAlt]\": \"0\",\n          \"[cameraLon]\": n.center.x.toString(),\n          \"[cameraLat]\": n.center.y.toString(),\n          \"[cameraAlt]\": f.toString(),\n          \"[horizFov]\": \"60\",\n          \"[vertFov]\": \"60\",\n          \"[horizPixels]\": b.toString(),\n          \"[vertPixels]\": V.toString(),\n          \"[terrainEnabled]\": \"0\",\n          \"[clientVersion]\": i,\n          \"[kmlVersion]\": \"2.2\",\n          \"[clientName]\": \"ArcGIS API for JavaScript\",\n          \"[language]\": \"en-US\"\n        },\n        S = e => {\n          for (const i in e) {\n            let t;\n            for (t in v) e[i] = e[i].replace(t, v[t]);\n          }\n        },\n        I = l(s);\n      S(I);\n      let x = {};\n      null != o && (x = l(o), S(x));\n      const C = u(e.href);\n      C.query = {\n        ...C.query,\n        ...I,\n        ...x\n      };\n      return `${C.path}?${r(I)}`;\n    }\n    return e.href;\n  }\n  async _fetchService(e) {\n    const i = new C();\n    await this._loadVisualData(this.layer.url, i, e), this._kmlVisualData = i, this._refreshCollections();\n  }\n  _refreshCollections() {\n    this.allVisiblePoints.removeAll(), this.allVisiblePolylines.removeAll(), this.allVisiblePolygons.removeAll(), this.allVisibleMapImages.removeAll(), this.allVisiblePoints.addMany(this._kmlVisualData.allPoints.filter(e => this._isSublayerVisible(e.sublayerId)).map(({\n      item: e\n    }) => e)), this.allVisiblePolylines.addMany(this._kmlVisualData.allPolylines.filter(e => this._isSublayerVisible(e.sublayerId)).map(({\n      item: e\n    }) => e)), this.allVisiblePolygons.addMany(this._kmlVisualData.allPolygons.filter(e => this._isSublayerVisible(e.sublayerId)).map(({\n      item: e\n    }) => e)), this.allVisibleMapImages.addMany(this._kmlVisualData.allMapImages.filter(e => this._isSublayerVisible(e.sublayerId)).map(({\n      item: e\n    }) => e));\n  }\n  _isSublayerVisible(e) {\n    const i = this._kmlVisualData.allSublayers.get(e);\n    return !!i?.visibility && (-1 === i.parentFolderId || this._isSublayerVisible(i.parentFolderId));\n  }\n  _loadVisualData(e, i, t) {\n    return this._fetchParsedKML(e, t).then(async e => {\n      for (const s of e.sublayers) {\n        i.allSublayers.set(s.id, s);\n        const e = s.points ? await y(s.points) : [],\n          a = s.polylines ? await y(s.polylines) : [],\n          o = s.polygons ? await y(s.polygons) : [],\n          l = s.mapImages || [];\n        if (i.allPoints.push(...e.map(e => ({\n          item: e,\n          sublayerId: s.id\n        }))), i.allPolylines.push(...a.map(e => ({\n          item: e,\n          sublayerId: s.id\n        }))), i.allPolygons.push(...o.map(e => ({\n          item: e,\n          sublayerId: s.id\n        }))), i.allMapImages.push(...l.map(e => ({\n          item: e,\n          sublayerId: s.id\n        }))), s.networkLink) {\n          const e = await this._getViewDependentUrl(s.networkLink, this.view.state);\n          await this._loadVisualData(e, i, t);\n        }\n      }\n    });\n  }\n  _fetchParsedKML(e, i) {\n    return g(e, this.layer.spatialReference, this.layer.refreshInterval, i).then(e => w(e.data));\n  }\n  _removeMapImage(e) {\n    const i = this._bitmapIndex.get(e);\n    i && (this._mapImageContainer.removeChild(i), this._bitmapIndex.delete(e));\n  }\n};\ne([n()], j.prototype, \"_pointsView\", void 0), e([n()], j.prototype, \"_polylinesView\", void 0), e([n()], j.prototype, \"_polygonsView\", void 0), e([n()], j.prototype, \"updating\", void 0), j = e([h(\"esri.views.2d.layers.KMLLayerView2D\")], j);\nconst k = j;\nexport { k as default };"],
  "mappings": "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",
  "names": ["w", "t", "e", "y", "r", "o", "c", "g", "f", "b", "j", "D", "C", "E", "U", "a", "C", "f", "y", "a", "c", "e", "t", "i", "V", "w", "b", "o", "h", "g", "_", "v", "d"]
}
