{
  "version": 3,
  "sources": ["../../../../../../node_modules/@arcgis/core/portal/support/layersLoader.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport e from \"../../core/Error.js\";\nimport { parse as t } from \"../../layers/support/arcgisLayerUrl.js\";\nimport { fetchFeatureService as r } from \"../../layers/support/fetchService.js\";\nimport { LayerLoadContext as a } from \"../../layers/support/LayerLoadContext.js\";\nimport { populateGroupLayer as o } from \"../../layers/support/layersCreator.js\";\nimport { layerLookupMap as n } from \"../../layers/support/lazyLayerLoader.js\";\nimport s from \"../Portal.js\";\nimport { createForItemRead as i } from \"./jsonContext.js\";\nimport { getFirstLayerOrTable as l, preprocessFSItemData as c, populateSceneServiceItemData as u, getNumLayersAndTables as p, createSublayerData as y, instanceTypeToLayerType as f, getSublayersByLayerType as m, layerTypeToLayerModuleType as d } from \"./loadUtils.js\";\nimport { hasTypeKeyword as w } from \"./portalItemUtils.js\";\nimport { loadStyleRenderer as h } from \"../../renderers/support/styleUtils.js\";\nimport { fetchArcGISServiceJSON as I } from \"../../support/requestPresets.js\";\nasync function g(e, t) {\n  const r = e.instance.portalItem;\n  if (r?.id) return await r.load(t), b(e), e.validateItem && e.validateItem(r), L(e, t);\n}\nfunction b(t) {\n  const r = t.instance.portalItem;\n  if (!r?.type || !t.supportedTypes.includes(r.type)) throw new e(\"portal:invalid-layer-item-type\", \"Invalid layer item type '${type}', expected '${expectedType}'\", {\n    type: r?.type,\n    expectedType: t.supportedTypes.join(\", \")\n  });\n}\nasync function L(e, t) {\n  const r = e.instance,\n    o = r.portalItem;\n  if (!o) return;\n  const {\n      url: n,\n      title: s\n    } = o,\n    l = i(o, \"portal-item\");\n  if (\"group\" === r.type) return S(r, l, e);\n  n && \"media\" !== r.type && r.read({\n    url: n\n  }, l);\n  const c = new a(),\n    u = await M(e, c, t);\n  return u && r.read(u, l), r.resourceReferences = {\n    portalItem: o,\n    paths: l.readResourcePaths ?? []\n  }, \"subtype-group\" !== r.type && r.read({\n    title: s\n  }, l), h(r, l);\n}\nasync function S(t, r, a) {\n  const o = t.portalItem;\n  if (!t.sourceIsPortalItem) return;\n  const {\n    title: n,\n    type: s\n  } = o;\n  if (\"Group Layer\" === s) {\n    if (!w(o, \"Map\")) throw new e(\"portal:invalid-layer-item-typekeyword\", \"'Group Layer' item without 'Map' type keyword is not supported\");\n    return T(t);\n  }\n  return t.read({\n    title: n\n  }, r), v(t, a);\n}\nasync function T(e) {\n  const t = e.portalItem,\n    r = await t.fetchData(\"json\");\n  if (!r) return;\n  const a = i(t, \"web-map\");\n  e.read(r, a), await o(e, r, {\n    context: a\n  }), e.resourceReferences = {\n    portalItem: t,\n    paths: a.readResourcePaths ?? []\n  };\n}\nasync function v(t, r) {\n  let o;\n  const {\n    portalItem: n\n  } = t;\n  if (!n) return;\n  const s = n.type,\n    i = r.layerModuleTypeMap;\n  switch (s) {\n    case \"Feature Service\":\n    case \"Feature Collection\":\n      o = i.FeatureLayer;\n      break;\n    case \"Stream Service\":\n      o = i.StreamLayer;\n      break;\n    case \"Scene Service\":\n      o = i.SceneLayer;\n      break;\n    default:\n      throw new e(\"portal:unsupported-item-type-as-group\", `The item type '${s}' is not supported as a 'IGroupLayer'`);\n  }\n  const y = new a();\n  let [f, m] = await Promise.all([o(), M(r, y)]),\n    d = () => f;\n  if (\"Feature Service\" === s) {\n    const e = l(m)?.customParameters;\n    m = n.url ? await c(m, n.url, y) : {}, d = (await E(m, i)) || d;\n    const r = await k(n.url, {\n      customParameters: e,\n      loadContext: y\n    });\n    return await F(t, d, m, r);\n  }\n  return \"Scene Service\" === s && n.url && (m = await u(n, m, y)), p(m) > 0 ? await F(t, d, m) : await j(t, d);\n}\nasync function j(e, t) {\n  const {\n    portalItem: r\n  } = e;\n  if (!r?.url) return;\n  const a = await I(r.url);\n  a && F(e, t, {\n    layers: a.layers?.map(y),\n    tables: a.tables?.map(y)\n  });\n}\nasync function F(e, t, r, a) {\n  let o = r.layers || [];\n  const s = r.tables || [];\n  if (\"Feature Collection\" === e.portalItem?.type ? (o.forEach((e, t) => {\n    e.id = t, \"Table\" === e?.layerDefinition?.type && s.push(e);\n  }), o = o.filter(e => \"Table\" !== e?.layerDefinition?.type)) : (o.reverse(), s.reverse()), o.forEach(o => {\n    const n = a?.(o);\n    if (n || !a) {\n      const a = P(e, t(o), r, o, n);\n      e.add(a);\n    }\n  }), s.length) {\n    const t = await n.FeatureLayer();\n    s.forEach(o => {\n      const n = a?.(o);\n      if (n || !a) {\n        const a = P(e, t, r, o, n);\n        e.tables.add(a);\n      }\n    });\n  }\n}\nfunction P(e, t, r, a, o) {\n  const n = e.portalItem,\n    i = {\n      portalItem: n.clone(),\n      layerId: a.id\n    };\n  null != a.url && (i.url = a.url);\n  const l = new t(i);\n  if (\"sourceJSON\" in l && (l.sourceJSON = o), \"subtype-group\" !== l.type && \"catalog\" !== l.type && (l.sublayerTitleMode = \"service-name\"), \"Feature Collection\" === n.type) {\n    const e = {\n      origin: \"portal-item\",\n      portal: n.portal || s.getDefault()\n    };\n    l.read(a, e);\n    const t = r.showLegend;\n    null != t && l.read({\n      showLegend: t\n    }, e);\n  }\n  return l;\n}\nasync function M(e, t, r) {\n  if (!1 === e.supportsData) return;\n  const a = e.instance,\n    o = a.portalItem;\n  if (!o) return;\n  let n = null;\n  try {\n    n = await o.fetchData(\"json\", r);\n  } catch (s) {}\n  if (D(a)) {\n    let e = null;\n    const r = await x(o, n, t);\n    if ((n?.layers || n?.tables) && r > 0) {\n      if (null == a.layerId) {\n        const e = f(a.type),\n          t = e ? m(n, e)[0] : l(n);\n        t && (a.layerId = t.id);\n      }\n      e = C(n, a), \"OrientedImageryLayer\" === e?.layerType && \"oriented-imagery\" === a.type && a.supportedSourceTypes.add(\"Feature Layer\"), e && null != n.showLegend && (e.showLegend = n.showLegend);\n    }\n    return r > 1 && \"sublayerTitleMode\" in a && \"service-name\" !== a.sublayerTitleMode && (a.sublayerTitleMode = \"item-title-and-service-name\"), e;\n  }\n  return n;\n}\nasync function x(e, r, a) {\n  if (r?.layers && r?.tables) return p(r);\n  const o = t(e.url);\n  if (!o) return 1;\n  const n = await a.fetchServiceMetadata(o.url.path, {\n    customParameters: l(r)?.customParameters\n  }).catch(() => null);\n  return (r?.layers?.length ?? n?.layers?.length ?? 0) + (r?.tables?.length ?? n?.tables?.length ?? 0);\n}\nfunction C(e, t) {\n  const {\n      layerId: r\n    } = t,\n    a = e.layers?.find(e => e.id === r) || e.tables?.find(e => e.id === r);\n  return a && G(a, t) ? a : null;\n}\nfunction D(e) {\n  return \"stream\" !== e.type && \"layerId\" in e;\n}\nfunction G(e, t) {\n  const r = \"layerType\" in e && e.layerType,\n    {\n      type: a\n    } = t;\n  return !(\"feature\" === a && r && \"ArcGISFeatureLayer\" !== e.layerType || \"catalog\" === a && !r || \"oriented-imagery\" === a && !r || \"subtype-group\" === a && !r);\n}\nasync function k(e, t) {\n  const {\n    layersJSON: a\n  } = await r(e, t);\n  if (!a) return null;\n  const o = [...a.layers, ...a.tables];\n  return e => o.find(t => t.id === e.id);\n}\nasync function E(e, t) {\n  const {\n    layers: r\n  } = e;\n  if (!r?.length) return;\n  const a = new Set(),\n    o = [];\n  for (const {\n    layerType: i\n  } of r) {\n    const e = i ?? \"ArcGISFeatureLayer\";\n    if (a.has(e)) continue;\n    a.add(e);\n    const r = t[d(e)];\n    o.push(r());\n  }\n  const n = await Promise.all(o),\n    s = new Map();\n  return Array.from(a).forEach((e, t) => {\n    s.set(e, n[t]);\n  }), ({\n    layerType: e\n  }) => {\n    const t = e ?? \"ArcGISFeatureLayer\";\n    return s.get(t);\n  };\n}\nexport { g as load };"],
  "mappings": "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",
  "names": ["e", "t", "o", "n", "s", "c", "u", "a", "i", "d", "r", "C"]
}
