{
  "version": 3,
  "sources": ["../../../../../../node_modules/@arcgis/core/views/3d/webgl-engine/lib/Normals.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { clamp as t } from \"../../../../core/mathUtils.js\";\nimport { t as n, n as r } from \"../../../../chunks/vec32.js\";\nimport { create as o } from \"../../../../core/libs/gl-matrix-2/factories/vec3f64.js\";\nimport { newFloatArray as a } from \"../../../../geometry/support/FloatArray.js\";\nfunction s(t, n, r, o, a, s = 2) {\n  const e = 1 / (Math.abs(r) + Math.abs(o) + Math.abs(a)),\n    c = r * e,\n    f = o * e,\n    h = a <= 0 ? (c >= 0 ? 1 : -1) * (1 - Math.abs(f)) : c,\n    u = a <= 0 ? (f >= 0 ? 1 : -1) * (1 - Math.abs(c)) : f,\n    l = n * s;\n  t[l] = i(h), t[l + 1] = i(u);\n}\nfunction e(t) {\n  const n = t.length / 3,\n    r = new Int16Array(2 * n);\n  let o = 0;\n  for (let a = 0; a < n; ++a) s(r, a, t[o++], t[o++], t[o++]);\n  return r;\n}\nfunction c(t, r) {\n  const a = t.length / 3,\n    e = new Int16Array(2 * a);\n  let c = 0;\n  const f = o();\n  for (let o = 0; o < a; ++o) f[0] = t[c++], f[1] = t[c++], f[2] = t[c++], n(f, f, r), s(e, o, f[0], f[1], f[2]);\n  return e;\n}\nfunction f(t, n, o, a = 2) {\n  const s = o * a,\n    e = u(n[s]),\n    c = u(n[s + 1]),\n    f = 1 - Math.abs(e) - Math.abs(c);\n  t[2] = f, f < 0 ? (t[0] = (e >= 0 ? 1 : -1) * (1 - Math.abs(c)), t[1] = (c >= 0 ? 1 : -1) * (1 - Math.abs(e))) : (t[0] = e, t[1] = c), r(t, t);\n}\nfunction h(t, n = 2) {\n  const r = t.length / n,\n    s = a(3 * r),\n    e = o();\n  let c = 0;\n  for (let o = 0; o < r; ++o) f(e, t, o, n), s[c++] = e[0], s[c++] = e[1], s[c++] = e[2];\n  return s;\n}\nfunction i(n) {\n  return t(Math.round(32767 * n), -32767, 32767);\n}\nfunction u(n) {\n  return t(n / 32767, -1, 1);\n}\nexport { c as compressAndTransformNormals, s as compressNormal, e as compressNormals, u as decodeInt16, f as decompressNormal, h as decompressNormals, i as encodeInt16 };"],
  "mappings": ";;;;;;;;;;;;;AAQA,SAAS,EAAEA,IAAGC,IAAG,GAAG,GAAG,GAAGC,KAAI,GAAG;AAC/B,QAAMC,KAAI,KAAK,KAAK,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,IACnDC,KAAI,IAAID,IACRE,KAAI,IAAIF,IACR,IAAI,KAAK,KAAKC,MAAK,IAAI,IAAI,OAAO,IAAI,KAAK,IAAIC,EAAC,KAAKD,IACrDE,KAAI,KAAK,KAAKD,MAAK,IAAI,IAAI,OAAO,IAAI,KAAK,IAAID,EAAC,KAAKC,IACrD,IAAIJ,KAAIC;AACV,EAAAF,GAAE,CAAC,IAAI,EAAE,CAAC,GAAGA,GAAE,IAAI,CAAC,IAAI,EAAEM,EAAC;AAC7B;AACA,SAASH,GAAEH,IAAG;AACZ,QAAMC,KAAID,GAAE,SAAS,GACnB,IAAI,IAAI,WAAW,IAAIC,EAAC;AAC1B,MAAI,IAAI;AACR,WAAS,IAAI,GAAG,IAAIA,IAAG,EAAE,EAAG,GAAE,GAAG,GAAGD,GAAE,GAAG,GAAGA,GAAE,GAAG,GAAGA,GAAE,GAAG,CAAC;AAC1D,SAAO;AACT;AACA,SAAS,EAAEA,IAAG,GAAG;AACf,QAAM,IAAIA,GAAE,SAAS,GACnBG,KAAI,IAAI,WAAW,IAAI,CAAC;AAC1B,MAAIC,KAAI;AACR,QAAMC,KAAI,EAAE;AACZ,WAAS,IAAI,GAAG,IAAI,GAAG,EAAE,EAAG,CAAAA,GAAE,CAAC,IAAIL,GAAEI,IAAG,GAAGC,GAAE,CAAC,IAAIL,GAAEI,IAAG,GAAGC,GAAE,CAAC,IAAIL,GAAEI,IAAG,GAAG,EAAEC,IAAGA,IAAG,CAAC,GAAG,EAAEF,IAAG,GAAGE,GAAE,CAAC,GAAGA,GAAE,CAAC,GAAGA,GAAE,CAAC,CAAC;AAC7G,SAAOF;AACT;AACA,SAAS,EAAEH,IAAGC,IAAG,GAAG,IAAI,GAAG;AACzB,QAAMC,KAAI,IAAI,GACZC,KAAI,EAAEF,GAAEC,EAAC,CAAC,GACVE,KAAI,EAAEH,GAAEC,KAAI,CAAC,CAAC,GACdG,KAAI,IAAI,KAAK,IAAIF,EAAC,IAAI,KAAK,IAAIC,EAAC;AAClC,EAAAJ,GAAE,CAAC,IAAIK,IAAGA,KAAI,KAAKL,GAAE,CAAC,KAAKG,MAAK,IAAI,IAAI,OAAO,IAAI,KAAK,IAAIC,EAAC,IAAIJ,GAAE,CAAC,KAAKI,MAAK,IAAI,IAAI,OAAO,IAAI,KAAK,IAAID,EAAC,OAAOH,GAAE,CAAC,IAAIG,IAAGH,GAAE,CAAC,IAAII,KAAI,EAAEJ,IAAGA,EAAC;AAC/I;AASA,SAAS,EAAEO,IAAG;AACZ,SAAO,EAAE,KAAK,MAAM,QAAQA,EAAC,GAAG,QAAQ,KAAK;AAC/C;AACA,SAAS,EAAEA,IAAG;AACZ,SAAO,EAAEA,KAAI,OAAO,IAAI,CAAC;AAC3B;",
  "names": ["t", "n", "s", "e", "c", "f", "u", "n"]
}
