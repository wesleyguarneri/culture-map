{
  "version": 3,
  "sources": ["../../../../../../node_modules/@arcgis/core/layers/support/ExportImageParameters.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { _ as e } from \"../../chunks/tslib.es6.js\";\nimport r from \"../../core/Accessor.js\";\nimport { sqlAnd as s } from \"../../core/sql.js\";\nimport { property as t } from \"../../core/accessorSupport/decorators/property.js\";\nimport \"../../core/has.js\";\nimport \"../../core/Logger.js\";\nimport \"../../core/RandomLCG.js\";\nimport { subclass as i } from \"../../core/accessorSupport/decorators/subclass.js\";\nimport { isInScaleRange as a } from \"../../geometry/support/scaleUtils.js\";\nimport { getLayerFloorFilterClause as o } from \"./floorFilterUtils.js\";\nimport { isExportDynamic as l } from \"./sublayerUtils.js\";\nconst n = {\n  visible: \"visibleSublayers\",\n  definitionExpression: \"layerDefs\",\n  labelingInfo: \"hasDynamicLayers\",\n  labelsVisible: \"hasDynamicLayers\",\n  opacity: \"hasDynamicLayers\",\n  minScale: \"visibleSublayers\",\n  maxScale: \"visibleSublayers\",\n  renderer: \"hasDynamicLayers\",\n  source: \"hasDynamicLayers\"\n};\nlet y = class extends r {\n  constructor(e) {\n    super(e), this.floors = null, this.scale = 0;\n  }\n  destroy() {\n    this.layer = null;\n  }\n  get dynamicLayers() {\n    if (!this.hasDynamicLayers) return null;\n    const e = this.visibleSublayers.map(e => {\n      const r = o(this.floors, e);\n      return e.toExportImageJSON(r);\n    });\n    return e.length ? JSON.stringify(e) : null;\n  }\n  get hasDynamicLayers() {\n    return this.layer && l(this.visibleSublayers, this.layer.serviceSublayers, this.layer.gdbVersion);\n  }\n  set layer(e) {\n    this._get(\"layer\") !== e && (this._set(\"layer\", e), this.removeHandles(\"layer\"), e && this.addHandles([e.allSublayers.on(\"change\", () => this.notifyChange(\"visibleSublayers\")), e.on(\"sublayer-update\", e => this.notifyChange(n[e.propertyName]))], \"layer\"));\n  }\n  get layers() {\n    const e = this.visibleSublayers;\n    return e ? e.length ? \"show:\" + e.map(e => e.id).join(\",\") : \"show:-1\" : null;\n  }\n  get layerDefs() {\n    const e = !!this.floors?.length,\n      r = this.visibleSublayers.filter(r => null != r.definitionExpression || e && null != r.floorInfo);\n    return r.length ? JSON.stringify(r.reduce((e, r) => {\n      const t = o(this.floors, r),\n        i = s(t, r.definitionExpression);\n      return null != i && (e[r.id] = i), e;\n    }, {})) : null;\n  }\n  get version() {\n    this.commitProperty(\"layers\"), this.commitProperty(\"layerDefs\"), this.commitProperty(\"dynamicLayers\");\n    const e = this.layer;\n    return e && (e.commitProperty(\"dpi\"), e.commitProperty(\"imageFormat\"), e.commitProperty(\"imageTransparency\"), e.commitProperty(\"gdbVersion\")), (this._get(\"version\") || 0) + 1;\n  }\n  get visibleSublayers() {\n    const e = [];\n    if (!this.layer) return e;\n    const r = this.layer.sublayers,\n      s = this.scale,\n      t = r => {\n        r.visible && (0 === s || a(s, r.minScale, r.maxScale)) && (r.sublayers ? r.sublayers.forEach(t) : e.unshift(r));\n      };\n    r && r.forEach(t);\n    const i = this._get(\"visibleSublayers\");\n    return !i || i.length !== e.length || i.some((r, s) => e[s] !== r) ? e : i;\n  }\n  toJSON() {\n    const e = this.layer;\n    let r = {\n      dpi: e.dpi,\n      format: e.imageFormat,\n      transparent: e.imageTransparency,\n      gdbVersion: e.gdbVersion || null\n    };\n    return this.hasDynamicLayers && this.dynamicLayers ? r.dynamicLayers = this.dynamicLayers : r = {\n      ...r,\n      layers: this.layers,\n      layerDefs: this.layerDefs\n    }, r;\n  }\n};\ne([t({\n  readOnly: !0\n})], y.prototype, \"dynamicLayers\", null), e([t()], y.prototype, \"floors\", void 0), e([t({\n  readOnly: !0\n})], y.prototype, \"hasDynamicLayers\", null), e([t()], y.prototype, \"layer\", null), e([t({\n  readOnly: !0\n})], y.prototype, \"layers\", null), e([t({\n  readOnly: !0\n})], y.prototype, \"layerDefs\", null), e([t({\n  type: Number\n})], y.prototype, \"scale\", void 0), e([t({\n  readOnly: !0\n})], y.prototype, \"version\", null), e([t({\n  readOnly: !0\n})], y.prototype, \"visibleSublayers\", null), y = e([i(\"esri.layers.support.ExportImageParameters\")], y);\nexport { y as ExportImageParameters };"],
  "mappings": "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",
  "names": ["n", "y", "e", "r", "s"]
}
