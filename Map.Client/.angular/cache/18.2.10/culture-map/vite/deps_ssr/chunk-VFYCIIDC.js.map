{
  "version": 3,
  "sources": ["../../../../../../node_modules/@arcgis/core/geometry/HeightModelInfo.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { _ as e } from \"../chunks/tslib.es6.js\";\nimport { removeUnordered as t } from \"../core/arrayUtils.js\";\nimport { strict as r } from \"../core/jsonMap.js\";\nimport { JSONSupport as o } from \"../core/JSONSupport.js\";\nimport { unitFromRESTJSON as i, getVerticalUnitStringForSR as s } from \"../core/unitUtils.js\";\nimport n from \"../core/Warning.js\";\nimport { property as a } from \"../core/accessorSupport/decorators/property.js\";\nimport \"../core/has.js\";\nimport \"../core/Logger.js\";\nimport { reader as l } from \"../core/accessorSupport/decorators/reader.js\";\nimport { subclass as h } from \"../core/accessorSupport/decorators/subclass.js\";\nimport { writer as c } from \"../core/accessorSupport/decorators/writer.js\";\nvar d;\nconst p = r()({\n    orthometric: \"gravity-related-height\",\n    gravity_related_height: \"gravity-related-height\",\n    ellipsoidal: \"ellipsoidal\"\n  }),\n  u = p.jsonValues.slice();\nt(u, \"orthometric\");\nconst g = r()({\n  meter: \"meters\",\n  foot: \"feet\",\n  \"us-foot\": \"us-feet\",\n  \"clarke-foot\": \"clarke-feet\",\n  \"clarke-yard\": \"clarke-yards\",\n  \"clarke-link\": \"clarke-links\",\n  \"sears-yard\": \"sears-yards\",\n  \"sears-foot\": \"sears-feet\",\n  \"sears-chain\": \"sears-chains\",\n  \"benoit-1895-b-chain\": \"benoit-1895-b-chains\",\n  \"indian-yard\": \"indian-yards\",\n  \"indian-1937-yard\": \"indian-1937-yards\",\n  \"gold-coast-foot\": \"gold-coast-feet\",\n  \"sears-1922-truncated-chain\": \"sears-1922-truncated-chains\",\n  \"50-kilometers\": \"50-kilometers\",\n  \"150-kilometers\": \"150-kilometers\"\n});\nlet m = d = class extends o {\n  constructor(e) {\n    super(e), this.heightModel = \"gravity-related-height\", this.heightUnit = \"meters\", this.vertCRS = null;\n  }\n  writeHeightModel(e, t, r) {\n    return p.write(e, t, r);\n  }\n  readHeightModel(e, t, r) {\n    const o = p.read(e);\n    return o || (r?.messages && r.messages.push(f(e, {\n      context: r\n    })), null);\n  }\n  readHeightUnit(e, t, r) {\n    const o = g.read(e);\n    return o || (r?.messages && r.messages.push(y(e, {\n      context: r\n    })), null);\n  }\n  readHeightUnitService(e, t, r) {\n    const o = i(e) || g.read(e);\n    return o || (r?.messages && r.messages.push(y(e, {\n      context: r\n    })), null);\n  }\n  readVertCRS(e, t) {\n    return t.vertCRS || t.ellipsoid || t.geoid;\n  }\n  clone() {\n    return new d({\n      heightModel: this.heightModel,\n      heightUnit: this.heightUnit,\n      vertCRS: this.vertCRS\n    });\n  }\n  equals(e) {\n    return !!e && (this === e || this.heightModel === e.heightModel && this.heightUnit === e.heightUnit && this.vertCRS === e.vertCRS);\n  }\n  static deriveUnitFromSR(e, t) {\n    const r = s(t);\n    return new d({\n      heightModel: e.heightModel,\n      heightUnit: r ?? void 0,\n      vertCRS: e.vertCRS\n    });\n  }\n  write(e, t) {\n    return t = {\n      origin: \"web-scene\",\n      ...t\n    }, super.write(e, t);\n  }\n  static fromJSON(e) {\n    if (!e) return null;\n    const t = new d();\n    return t.read(e, {\n      origin: \"web-scene\"\n    }), t;\n  }\n};\nfunction y(e, t) {\n  return new n(\"height-unit:unsupported\", `Height unit of value '${e}' is not supported`, t);\n}\nfunction f(e, t) {\n  return new n(\"height-model:unsupported\", `Height model of value '${e}' is not supported`, t);\n}\ne([a({\n  type: p.apiValues,\n  constructOnly: !0,\n  json: {\n    origins: {\n      \"web-scene\": {\n        type: u,\n        default: \"ellipsoidal\"\n      }\n    }\n  }\n})], m.prototype, \"heightModel\", void 0), e([c(\"web-scene\", \"heightModel\")], m.prototype, \"writeHeightModel\", null), e([l([\"web-scene\", \"service\"], \"heightModel\")], m.prototype, \"readHeightModel\", null), e([a({\n  type: g.apiValues,\n  constructOnly: !0,\n  json: {\n    origins: {\n      \"web-scene\": {\n        type: g.jsonValues,\n        write: g.write\n      }\n    }\n  }\n})], m.prototype, \"heightUnit\", void 0), e([l(\"web-scene\", \"heightUnit\")], m.prototype, \"readHeightUnit\", null), e([l(\"service\", \"heightUnit\")], m.prototype, \"readHeightUnitService\", null), e([a({\n  type: String,\n  constructOnly: !0,\n  json: {\n    origins: {\n      \"web-scene\": {\n        write: !0\n      }\n    }\n  }\n})], m.prototype, \"vertCRS\", void 0), e([l(\"service\", \"vertCRS\", [\"vertCRS\", \"ellipsoid\", \"geoid\"])], m.prototype, \"readVertCRS\", null), m = d = e([h(\"esri.geometry.HeightModelInfo\")], m);\nconst v = m;\nexport { v as default };"],
  "mappings": "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",
  "names": ["e", "r", "o", "f", "y"]
}
