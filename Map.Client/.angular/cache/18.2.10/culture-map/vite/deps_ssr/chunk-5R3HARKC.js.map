{
  "version": 3,
  "sources": ["../../../../../../node_modules/@arcgis/core/layers/support/FieldsIndex.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport e from \"../../core/Error.js\";\nimport { isSerializable as i } from \"../../core/JSONSupport.js\";\nimport t from \"../../core/Logger.js\";\nimport { getOrCreateMapValue as s } from \"../../core/MapUtils.js\";\nimport { UnknownTimeZone as n } from \"../../core/sql/UnknownTimeZone.js\";\nimport { isDateField as r, isNumericField as l, isObjectIDField as o, isGlobalIDField as d, getFieldDefaultValue as a, isTimeOnlyField as m, normalizeFieldName as u } from \"./fieldUtils.js\";\nimport { utc as f, unknown as F, fromTimeReference as h } from \"../../time/timeZoneUtils.js\";\nimport { FixedOffsetZone as c, IANAZone as p } from \"luxon\";\nfunction y(e) {\n  return \"timeZone\" in e;\n}\nfunction _(e) {\n  return \"timeZone\" in e;\n}\nfunction g(e) {\n  return \"dateFieldsTimeZone\" in e;\n}\nconst T = new Map();\nclass Z {\n  static fromJSON(e) {\n    return new Z(e.fields, e.timeZoneByFieldName);\n  }\n  static fromLayer(e) {\n    return new Z(e.fields ?? [], S(e));\n  }\n  static fromLayerJSON(e) {\n    return new Z(e.fields ?? [], S(e));\n  }\n  constructor(e = [], i) {\n    this._fieldsMap = new Map(), this._normalizedFieldsMap = new Map(), this._dateFieldsSet = new Set(), this._numericFieldsSet = new Set(), this._requiredFields = null, this.dateFields = [], this.numericFields = [], this.fields = e || [], this._timeZoneByFieldName = i ? new Map(i) : null;\n    const t = [];\n    for (const s of this.fields) {\n      const e = s?.name,\n        i = M(e);\n      if (e && i) {\n        const n = w(e);\n        this._fieldsMap.set(e, s), this._fieldsMap.set(n, s), this._normalizedFieldsMap.set(i, s), t.push(`${n}:${s.type}:${this._timeZoneByFieldName?.get(e)}`), r(s) ? (this.dateFields.push(s), this._dateFieldsSet.add(s)) : l(s) && (this._numericFieldsSet.add(s), this.numericFields.push(s)), o(s) || d(s) || (s.editable = null == s.editable || !!s.editable, s.nullable = null == s.nullable || !!s.nullable);\n      }\n    }\n    t.sort(), this.uid = t.join();\n  }\n  get requiredFields() {\n    if (!this._requiredFields) {\n      this._requiredFields = [];\n      for (const e of this.fields) o(e) || d(e) || e.nullable || void 0 !== a(e) || this._requiredFields.push(e);\n    }\n    return this._requiredFields;\n  }\n  equals(e) {\n    return this.uid === e?.uid;\n  }\n  has(e) {\n    return null != this.get(e);\n  }\n  get(e) {\n    if (!e) return;\n    let i = this._fieldsMap.get(e);\n    return i || (i = this._fieldsMap.get(w(e)) ?? this._normalizedFieldsMap.get(M(e)), i && this._fieldsMap.set(e, i), i);\n  }\n  getTimeZone(i) {\n    const s = this.get(i && \"string\" != typeof i ? i.name : i);\n    return s ? this._timeZoneByFieldName ? this._timeZoneByFieldName.get(s.name) : \"date\" === s.type || \"esriFieldTypeDate\" === s.type ? (t.getLogger(\"esri.layers.support.FieldsIndex\").error(new e(\"getTimeZone:no-timezone-information\", `no time zone information for field '${s.name}'`)), f) : N.has(s.type) ? F : null : null;\n  }\n  getLuxonTimeZone(e) {\n    const i = this.getTimeZone(e);\n    return i ? i === F ? n.instance : i === f ? c.utcInstance : s(T, i, () => p.create(i)) : null;\n  }\n  isDateField(e) {\n    return this._dateFieldsSet.has(this.get(e));\n  }\n  isTimeOnlyField(e) {\n    return m(this.get(e));\n  }\n  isNumericField(e) {\n    return this._numericFieldsSet.has(this.get(e));\n  }\n  normalizeFieldName(e) {\n    return this.get(e)?.name ?? void 0;\n  }\n  toJSON() {\n    return {\n      fields: this.fields.map(e => i(e) ? e.toJSON() : e),\n      timeZoneByFieldName: this._timeZoneByFieldName ? Array.from(this._timeZoneByFieldName.entries()) : null\n    };\n  }\n}\nfunction w(e) {\n  return e.trim().toLowerCase();\n}\nfunction M(e) {\n  return u(e)?.toLowerCase() ?? \"\";\n}\nconst N = new Set([\"time-only\", \"date-only\", \"timestamp-offset\", \"esriFieldTypeDateOnly\", \"esriFieldTypeTimeOnly\", \"esriFieldTypeTimestampOffset\"]);\nfunction S(e) {\n  const i = new Map();\n  if (!e.fields) return i;\n  const t = !0 === e.datesInUnknownTimezone,\n    {\n      timeInfo: s,\n      editFieldsInfo: n\n    } = e,\n    r = (s ? \"startField\" in s ? s.startField : s.startTimeField : \"\") ?? \"\",\n    l = (s ? \"endField\" in s ? s.endField : s.endTimeField : \"\") ?? \"\",\n    o = g(e) ? e.dateFieldsTimeZone ?? null : e.dateFieldsTimeReference ? h(e.dateFieldsTimeReference) : null,\n    d = n ? y(n) ? n.timeZone ?? o : n.dateFieldsTimeReference ? h(n.dateFieldsTimeReference) : o ?? f : null,\n    a = s ? _(s) ? s.timeZone ?? o : s.timeReference ? h(s.timeReference) : o : null,\n    m = new Map([[w(n?.creationDateField ?? \"\"), d], [w(n?.editDateField ?? \"\"), d], [w(r), a], [w(l), a]]);\n  for (const {\n    name: u,\n    type: f\n  } of e.fields) if (N.has(f)) i.set(u, F);else if (\"date\" !== f && \"esriFieldTypeDate\" !== f) i.set(u, null);else if (t) i.set(u, F);else {\n    const e = m.get(w(u ?? \"\")) ?? o;\n    i.set(u, e);\n  }\n  return i;\n}\nexport { Z as default };"],
  "mappings": "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",
  "names": ["i", "t", "s", "e", "n", "r", "a", "f"]
}
