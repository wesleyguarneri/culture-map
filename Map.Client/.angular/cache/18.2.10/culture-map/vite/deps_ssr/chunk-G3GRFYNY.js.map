{
  "version": 3,
  "sources": ["../../../../../../node_modules/@arcgis/core/views/3d/analysis/support/measurementUtils.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { s as t, g as r, j as e, a as n, m as s, c as o, n as i, b as f } from \"../../../../chunks/vec32.js\";\nimport { create as l } from \"../../../../core/libs/gl-matrix-2/factories/vec3f64.js\";\nimport { g as a } from \"../../../../chunks/sphere.js\";\nimport { planeFromPoints as u } from \"../../support/mathUtils.js\";\nimport { geodesicArea as c } from \"../../../support/geodesicAreaMeasurementUtils.js\";\nfunction g(s, o) {\n  const i = a(o);\n  t(i, 0, 0, 0);\n  for (let t = 0; t < s.length; ++t) r(i, i, s[t]);\n  e(i, i, 1 / s.length);\n  let f = 0;\n  for (let t = 0; t < s.length; ++t) f = Math.max(f, n(i, s[t]));\n  o[3] = Math.sqrt(f);\n}\nfunction h(t, r) {\n  if (t.length < 3) throw new Error(\"need at least 3 points to fit a plane\");\n  u(t[0], t[1], t[2], r);\n}\nfunction p(t, r) {\n  return s(t, r) + t[3];\n}\nfunction m(t, r, e, n) {\n  const s = b;\n  return o(s.rings[0][0], t), o(s.rings[0][1], r), o(s.rings[0][2], e), o(s.rings[0][3], t), s.spatialReference = n, c(s);\n}\nfunction j(e, n = null, l = !0) {\n  const a = 1e-6,\n    u = (t, r) => {\n      if (0 === r[0] && 0 === r[1] && 0 === r[2]) return !1;\n      for (let e = 0; e < t.length; ++e) if (s(r, t[e]) < -a) return !1;\n      return !0;\n    };\n  if (0 === e.length) return !1;\n  if (1 === e.length) return n && o(n, e[0]), !0;\n  t(x, 0, 0, 0);\n  for (let t = 0; t < e.length; ++t) r(x, x, e[t]);\n  if (i(x, x), u(e, x)) return n && o(n, x), !0;\n  if (!l) return !1;\n  for (let t = 0; t < e.length; ++t) for (let r = 0; r < e.length; ++r) if (t !== r && (f(x, e[t], e[r]), i(x, x), u(e, x))) return n && o(n, x), !0;\n  return !1;\n}\nfunction M(t) {\n  return \"mouse\" !== t.pointerType || 0 === t.button;\n}\nconst b = {\n    hasM: !1,\n    hasZ: !0,\n    rings: [[l(), l(), l(), l()]],\n    spatialReference: null,\n    type: \"polygon\"\n  },\n  x = l();\nexport { h as bestFitPlane, g as boundingSphere, j as fitHemisphere, M as isPrimaryPointerAction, p as planePointDistance, m as triangleAreaGeodesic };"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;AASA,SAASA,GAAE,GAAGC,IAAG;AACf,QAAM,IAAI,EAAEA,EAAC;AACb,IAAE,GAAG,GAAG,GAAG,CAAC;AACZ,WAAS,IAAI,GAAG,IAAI,EAAE,QAAQ,EAAE,EAAG,GAAE,GAAG,GAAG,EAAE,CAAC,CAAC;AAC/C,IAAE,GAAG,GAAG,IAAI,EAAE,MAAM;AACpB,MAAI,IAAI;AACR,WAAS,IAAI,GAAG,IAAI,EAAE,QAAQ,EAAE,EAAG,KAAI,KAAK,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AAC7D,EAAAA,GAAE,CAAC,IAAI,KAAK,KAAK,CAAC;AACpB;AACA,SAAS,EAAE,GAAGC,IAAG;AACf,MAAI,EAAE,SAAS,EAAG,OAAM,IAAI,MAAM,uCAAuC;AACzE,IAAE,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAGA,EAAC;AACvB;AACA,SAASC,GAAE,GAAGD,IAAG;AACf,SAAO,EAAE,GAAGA,EAAC,IAAI,EAAE,CAAC;AACtB;AACA,SAAS,EAAE,GAAGA,IAAG,GAAGE,IAAG;AACrB,QAAM,IAAI;AACV,SAAO,EAAE,EAAE,MAAM,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,EAAE,EAAE,MAAM,CAAC,EAAE,CAAC,GAAGF,EAAC,GAAG,EAAE,EAAE,MAAM,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,EAAE,EAAE,MAAM,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,EAAE,mBAAmBE,IAAGH,GAAE,CAAC;AACxH;AACA,SAAS,EAAE,GAAGG,KAAI,MAAM,IAAI,MAAI;AAC9B,QAAM,IAAI,MACRC,KAAI,CAAC,GAAGH,OAAM;AACZ,QAAI,MAAMA,GAAE,CAAC,KAAK,MAAMA,GAAE,CAAC,KAAK,MAAMA,GAAE,CAAC,EAAG,QAAO;AACnD,aAASI,KAAI,GAAGA,KAAI,EAAE,QAAQ,EAAEA,GAAG,KAAI,EAAEJ,IAAG,EAAEI,EAAC,CAAC,IAAI,CAAC,EAAG,QAAO;AAC/D,WAAO;AAAA,EACT;AACF,MAAI,MAAM,EAAE,OAAQ,QAAO;AAC3B,MAAI,MAAM,EAAE,OAAQ,QAAOF,MAAK,EAAEA,IAAG,EAAE,CAAC,CAAC,GAAG;AAC5C,IAAE,GAAG,GAAG,GAAG,CAAC;AACZ,WAAS,IAAI,GAAG,IAAI,EAAE,QAAQ,EAAE,EAAG,GAAE,GAAG,GAAG,EAAE,CAAC,CAAC;AAC/C,MAAI,EAAE,GAAG,CAAC,GAAGC,GAAE,GAAG,CAAC,EAAG,QAAOD,MAAK,EAAEA,IAAG,CAAC,GAAG;AAC3C,MAAI,CAAC,EAAG,QAAO;AACf,WAAS,IAAI,GAAG,IAAI,EAAE,QAAQ,EAAE,EAAG,UAASF,KAAI,GAAGA,KAAI,EAAE,QAAQ,EAAEA,GAAG,KAAI,MAAMA,OAAM,EAAE,GAAG,EAAE,CAAC,GAAG,EAAEA,EAAC,CAAC,GAAG,EAAE,GAAG,CAAC,GAAGG,GAAE,GAAG,CAAC,GAAI,QAAOD,MAAK,EAAEA,IAAG,CAAC,GAAG;AAChJ,SAAO;AACT;AACA,SAAS,EAAE,GAAG;AACZ,SAAO,YAAY,EAAE,eAAe,MAAM,EAAE;AAC9C;AACA,IAAM,IAAI;AAAA,EACN,MAAM;AAAA,EACN,MAAM;AAAA,EACN,OAAO,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;AAAA,EAC5B,kBAAkB;AAAA,EAClB,MAAM;AACR;AANF,IAOE,IAAI,EAAE;",
  "names": ["g", "o", "r", "p", "n", "u", "e"]
}
