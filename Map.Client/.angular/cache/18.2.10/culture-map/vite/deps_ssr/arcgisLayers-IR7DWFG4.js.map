{
  "version": 3,
  "sources": ["../../../../../../node_modules/@arcgis/core/layers/support/arcgisLayers.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport e from \"../../core/Error.js\";\nimport { getFilename as r, urlToObject as a } from \"../../core/urlUtils.js\";\nimport { parse as t, parseNonStandardSublayerUrl as s } from \"./arcgisLayerUrl.js\";\nimport { findAssociatedFeatureService as l } from \"./associatedFeatureServiceUtils.js\";\nimport { getLayerModuleType as o, fetchFeatureService as n } from \"./fetchService.js\";\nimport { sceneServiceLayerTypeToClassName as c } from \"./layerUtils.js\";\nimport { layerLookupMap as i } from \"./lazyLayerLoader.js\";\nimport { fetchArcGISServiceJSON as u } from \"../../support/requestPresets.js\";\nconst y = {\n  FeatureLayer: !0,\n  SceneLayer: !0\n};\nasync function f(e) {\n  const {\n      properties: r,\n      url: a\n    } = e,\n    t = {\n      ...r,\n      url: a\n    },\n    s = await w(a, r?.customParameters),\n    {\n      Constructor: l,\n      layerId: o,\n      sourceJSON: n,\n      parsedUrl: c,\n      layers: i,\n      tables: u\n    } = s;\n  if (i.length + u.length === 0) return null != o && (t.layerId = o), null != n && (t.sourceJSON = n), new l(t);\n  const y = new (0, (await import(\"../GroupLayer.js\")).default)({\n    title: c.title\n  });\n  return await d(y, s, t), y;\n}\nfunction p(e, r) {\n  return e ? e.find(({\n    id: e\n  }) => e === r) : null;\n}\nfunction m(e, r, a, t, s) {\n  const l = {\n    ...s,\n    layerId: r\n  };\n  return null != e && (l.url = e), null != a && (l.sourceJSON = a), \"sublayerTitleMode\" in t.prototype && (l.sublayerTitleMode = \"service-name\"), new t(l);\n}\nasync function d(e, r, a) {\n  const t = r.sublayerConstructorProvider;\n  for (const {\n    id: s,\n    serverUrl: l\n  } of r.layers) {\n    const o = p(r.sublayerInfos, s),\n      n = m(l, s, o, (o && t?.(o)) ?? r.Constructor, a);\n    e.add(n);\n  }\n  if (r.tables.length) {\n    const t = await I(\"FeatureLayer\");\n    r.tables.forEach(({\n      id: s,\n      serverUrl: l\n    }) => {\n      const o = m(l, s, p(r.tableInfos, s), t, a);\n      e.tables.add(o);\n    });\n  }\n}\nasync function w(r, a) {\n  let s = t(r);\n  if (null == s && (s = await v(r, a)), null == s) throw new e(\"arcgis-layers:url-mismatch\", \"The url '${url}' is not a valid arcgis resource\", {\n    url: r\n  });\n  const {\n    serverType: l,\n    sublayer: n\n  } = s;\n  let i;\n  const f = {\n      FeatureServer: \"FeatureLayer\",\n      KnowledgeGraphServer: \"KnowledgeGraphLayer\",\n      StreamServer: \"StreamLayer\",\n      VectorTileServer: \"VectorTileLayer\",\n      VideoServer: \"VideoLayer\"\n    },\n    p = \"FeatureServer\" === l,\n    m = \"SceneServer\" === l,\n    d = {\n      parsedUrl: s,\n      Constructor: null,\n      layerId: p || m ? n ?? void 0 : void 0,\n      layers: [],\n      tables: []\n    };\n  switch (l) {\n    case \"MapServer\":\n      if (null != n) {\n        const {\n          type: t\n        } = await u(r, {\n          customParameters: a\n        });\n        switch (i = \"FeatureLayer\", t) {\n          case \"Catalog Layer\":\n            i = \"CatalogLayer\";\n            break;\n          case \"Catalog Dynamic Group Layer\":\n            throw new e(\"arcgis-layers:unsupported\", `fromUrl() not supported for \"${t}\" layers`);\n        }\n      } else {\n        i = (await L(r, a)) ? \"TileLayer\" : \"MapImageLayer\";\n      }\n      break;\n    case \"ImageServer\":\n      {\n        const e = await u(r, {\n            customParameters: a\n          }),\n          {\n            tileInfo: t,\n            cacheType: s\n          } = e;\n        i = t ? \"LERC\" !== t?.format?.toUpperCase() || s && \"elevation\" !== s.toLowerCase() ? \"ImageryTileLayer\" : \"ElevationLayer\" : \"ImageryLayer\";\n        break;\n      }\n    case \"SceneServer\":\n      {\n        const e = await u(s.url.path, {\n          customParameters: a\n        });\n        if (i = \"SceneLayer\", e) {\n          const r = e?.layers;\n          if (\"Voxel\" === e?.layerType) i = \"VoxelLayer\";else if (r?.length) {\n            const e = r[0]?.layerType;\n            null != e && null != c[e] && (i = c[e]);\n          }\n        }\n        break;\n      }\n    case \"3DTilesServer\":\n      throw new e(\"arcgis-layers:unsupported\", \"fromUrl() not supported for 3DTiles layers\");\n    case \"FeatureServer\":\n      if (i = \"FeatureLayer\", null != n) {\n        const e = await u(r, {\n          customParameters: a\n        });\n        d.sourceJSON = e, i = o(e.type);\n      }\n      break;\n    default:\n      i = f[l];\n  }\n  if (y[i] && null == n) {\n    const e = await b(r, l, a);\n    p && (d.sublayerInfos = e.layerInfos, d.tableInfos = e.tableInfos);\n    if (1 !== e.layers.length + e.tables.length) d.layers = e.layers, d.tables = e.tables, p && e.layerInfos?.length && (d.sublayerConstructorProvider = await g(e.layerInfos));else if (p || m) {\n      const r = e.layerInfos?.[0] ?? e.tableInfos?.[0];\n      if (d.layerId = e.layers[0]?.id ?? e.tables[0]?.id, d.sourceJSON = r, p) {\n        const e = r?.type;\n        i = o(e);\n      }\n    }\n  }\n  return d.Constructor = await I(i), d;\n}\nasync function v(e, t) {\n  const l = await u(e, {\n    customParameters: t\n  });\n  let o = null,\n    n = null;\n  const c = l.type;\n  if (\"Feature Layer\" === c || \"Table\" === c ? (o = \"FeatureServer\", n = l.id ?? null) : \"indexedVector\" === c ? o = \"VectorTileServer\" : l.hasOwnProperty(\"mapName\") ? o = \"MapServer\" : l.hasOwnProperty(\"bandCount\") && l.hasOwnProperty(\"pixelSizeX\") ? o = \"ImageServer\" : l.hasOwnProperty(\"maxRecordCount\") && l.hasOwnProperty(\"allowGeometryUpdates\") ? o = \"FeatureServer\" : l.hasOwnProperty(\"streamUrls\") ? o = \"StreamServer\" : S(l) ? (o = \"SceneServer\", n = l.id) : l.hasOwnProperty(\"layers\") && S(l.layers?.[0]) && (o = \"SceneServer\"), !o) return null;\n  const i = null != n ? s(e) : null;\n  return {\n    title: null != i && l.name || r(e),\n    serverType: o,\n    sublayer: n,\n    url: {\n      path: null != i ? i.serviceUrl : a(e).path\n    }\n  };\n}\nfunction S(e) {\n  return null != e && e.hasOwnProperty(\"store\") && e.hasOwnProperty(\"id\") && \"number\" == typeof e.id;\n}\nasync function b(e, r, a) {\n  let t,\n    s,\n    l = !1;\n  switch (r) {\n    case \"FeatureServer\":\n      {\n        const r = await n(e, {\n          customParameters: a\n        });\n        l = !!r.layersJSON, t = r.layersJSON || r.serviceJSON;\n        break;\n      }\n    case \"SceneServer\":\n      {\n        const r = await h(e, a);\n        t = r.serviceInfo, s = r.tableServerUrl;\n        break;\n      }\n    default:\n      t = await u(e, {\n        customParameters: a\n      });\n  }\n  const o = t?.layers,\n    c = t?.tables;\n  return {\n    layers: o?.map(e => ({\n      id: e.id\n    })).reverse() || [],\n    tables: c?.map(e => ({\n      serverUrl: s,\n      id: e.id\n    })).reverse() || [],\n    layerInfos: l ? o : [],\n    tableInfos: l ? c : []\n  };\n}\nasync function h(e, r) {\n  const a = await u(e, {\n      customParameters: r\n    }),\n    t = a.layers?.[0];\n  if (!t) return {\n    serviceInfo: a\n  };\n  try {\n    const {\n        serverUrl: t\n      } = await l(e),\n      s = await u(t, {\n        customParameters: r\n      }).catch(() => null);\n    return s && (a.tables = s.tables), {\n      serviceInfo: a,\n      tableServerUrl: t\n    };\n  } catch {\n    return {\n      serviceInfo: a\n    };\n  }\n}\nasync function I(e) {\n  return (0, i[e])();\n}\nasync function L(e, r) {\n  return (await u(e, {\n    customParameters: r\n  })).tileInfo;\n}\nasync function g(e) {\n  if (!e.length) return;\n  const r = new Set(),\n    a = [];\n  for (const {\n    type: l\n  } of e) r.has(l) || (r.add(l), a.push(I(o(l))));\n  const t = await Promise.all(a),\n    s = new Map();\n  return Array.from(r).forEach((e, r) => {\n    s.set(e, t[r]);\n  }), e => s.get(e.type);\n}\nexport { f as fromUrl };"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAYA,IAAM,IAAI;AAAA,EACR,cAAc;AAAA,EACd,YAAY;AACd;AACA,SAAe,EAAE,GAAG;AAAA;AAClB,UAAM;AAAA,MACF,YAAY;AAAA,MACZ,KAAKA;AAAA,IACP,IAAI,GACJC,KAAI,iCACC,IADD;AAAA,MAEF,KAAKD;AAAA,IACP,IACAE,KAAI,MAAM,EAAEF,IAAG,GAAG,gBAAgB,GAClC;AAAA,MACE,aAAa;AAAA,MACb,SAAS;AAAA,MACT,YAAY;AAAA,MACZ,WAAW;AAAA,MACX,QAAQG;AAAA,MACR,QAAQ;AAAA,IACV,IAAID;AACN,QAAIC,GAAE,SAAS,EAAE,WAAW,EAAG,QAAO,QAAQ,MAAMF,GAAE,UAAU,IAAI,QAAQ,MAAMA,GAAE,aAAa,IAAI,IAAI,EAAEA,EAAC;AAC5G,UAAMG,KAAI,KAAK,IAAI,MAAM,OAAO,0BAAkB,GAAG,SAAS;AAAA,MAC5D,OAAO,EAAE;AAAA,IACX,CAAC;AACD,WAAO,MAAMC,GAAED,IAAGF,IAAGD,EAAC,GAAGG;AAAA,EAC3B;AAAA;AACA,SAAS,EAAE,GAAG,GAAG;AACf,SAAO,IAAI,EAAE,KAAK,CAAC;AAAA,IACjB,IAAIE;AAAA,EACN,MAAMA,OAAM,CAAC,IAAI;AACnB;AACA,SAAS,EAAE,GAAG,GAAGN,IAAGC,IAAGC,IAAG;AACxB,QAAM,IAAI,iCACLA,KADK;AAAA,IAER,SAAS;AAAA,EACX;AACA,SAAO,QAAQ,MAAM,EAAE,MAAM,IAAI,QAAQF,OAAM,EAAE,aAAaA,KAAI,uBAAuBC,GAAE,cAAc,EAAE,oBAAoB,iBAAiB,IAAIA,GAAE,CAAC;AACzJ;AACA,SAAeI,GAAE,GAAG,GAAGL,IAAG;AAAA;AACxB,UAAMC,KAAI,EAAE;AACZ,eAAW;AAAA,MACT,IAAIC;AAAA,MACJ,WAAW;AAAA,IACb,KAAK,EAAE,QAAQ;AACb,YAAM,IAAI,EAAE,EAAE,eAAeA,EAAC,GAC5B,IAAI,EAAE,GAAGA,IAAG,IAAI,KAAKD,KAAI,CAAC,MAAM,EAAE,aAAaD,EAAC;AAClD,QAAE,IAAI,CAAC;AAAA,IACT;AACA,QAAI,EAAE,OAAO,QAAQ;AACnB,YAAMC,KAAI,MAAMM,GAAE,cAAc;AAChC,QAAE,OAAO,QAAQ,CAAC;AAAA,QAChB,IAAIL;AAAA,QACJ,WAAW;AAAA,MACb,MAAM;AACJ,cAAM,IAAI,EAAE,GAAGA,IAAG,EAAE,EAAE,YAAYA,EAAC,GAAGD,IAAGD,EAAC;AAC1C,UAAE,OAAO,IAAI,CAAC;AAAA,MAChB,CAAC;AAAA,IACH;AAAA,EACF;AAAA;AACA,SAAe,EAAE,GAAGA,IAAG;AAAA;AACrB,QAAIE,KAAI,EAAE,CAAC;AACX,QAAI,QAAQA,OAAMA,KAAI,MAAM,EAAE,GAAGF,EAAC,IAAI,QAAQE,GAAG,OAAM,IAAI,EAAE,8BAA8B,mDAAmD;AAAA,MAC5I,KAAK;AAAA,IACP,CAAC;AACD,UAAM;AAAA,MACJ,YAAY;AAAA,MACZ,UAAU;AAAA,IACZ,IAAIA;AACJ,QAAIC;AACJ,UAAMK,KAAI;AAAA,MACN,eAAe;AAAA,MACf,sBAAsB;AAAA,MACtB,cAAc;AAAA,MACd,kBAAkB;AAAA,MAClB,aAAa;AAAA,IACf,GACAC,KAAI,oBAAoB,GACxBC,KAAI,kBAAkB,GACtBL,KAAI;AAAA,MACF,WAAWH;AAAA,MACX,aAAa;AAAA,MACb,SAASO,MAAKC,KAAI,KAAK,SAAS;AAAA,MAChC,QAAQ,CAAC;AAAA,MACT,QAAQ,CAAC;AAAA,IACX;AACF,YAAQ,GAAG;AAAA,MACT,KAAK;AACH,YAAI,QAAQ,GAAG;AACb,gBAAM;AAAA,YACJ,MAAMT;AAAA,UACR,IAAI,MAAM,EAAE,GAAG;AAAA,YACb,kBAAkBD;AAAA,UACpB,CAAC;AACD,kBAAQG,KAAI,gBAAgBF,IAAG;AAAA,YAC7B,KAAK;AACH,cAAAE,KAAI;AACJ;AAAA,YACF,KAAK;AACH,oBAAM,IAAI,EAAE,6BAA6B,gCAAgCF,EAAC,UAAU;AAAA,UACxF;AAAA,QACF,OAAO;AACL,UAAAE,MAAK,MAAM,EAAE,GAAGH,EAAC,KAAK,cAAc;AAAA,QACtC;AACA;AAAA,MACF,KAAK,eACH;AACE,cAAM,IAAI,MAAM,EAAE,GAAG;AAAA,UACjB,kBAAkBA;AAAA,QACpB,CAAC,GACD;AAAA,UACE,UAAUC;AAAA,UACV,WAAWC;AAAA,QACb,IAAI;AACN,QAAAC,KAAIF,KAAI,WAAWA,IAAG,QAAQ,YAAY,KAAKC,MAAK,gBAAgBA,GAAE,YAAY,IAAI,qBAAqB,mBAAmB;AAC9H;AAAA,MACF;AAAA,MACF,KAAK,eACH;AACE,cAAM,IAAI,MAAM,EAAEA,GAAE,IAAI,MAAM;AAAA,UAC5B,kBAAkBF;AAAA,QACpB,CAAC;AACD,YAAIG,KAAI,cAAc,GAAG;AACvB,gBAAMQ,KAAI,GAAG;AACb,cAAI,YAAY,GAAG,UAAW,CAAAR,KAAI;AAAA,mBAAsBQ,IAAG,QAAQ;AACjE,kBAAML,KAAIK,GAAE,CAAC,GAAG;AAChB,oBAAQL,MAAK,QAAQ,EAAEA,EAAC,MAAMH,KAAI,EAAEG,EAAC;AAAA,UACvC;AAAA,QACF;AACA;AAAA,MACF;AAAA,MACF,KAAK;AACH,cAAM,IAAI,EAAE,6BAA6B,4CAA4C;AAAA,MACvF,KAAK;AACH,YAAIH,KAAI,gBAAgB,QAAQ,GAAG;AACjC,gBAAM,IAAI,MAAM,EAAE,GAAG;AAAA,YACnB,kBAAkBH;AAAA,UACpB,CAAC;AACD,UAAAK,GAAE,aAAa,GAAGF,KAAI,EAAE,EAAE,IAAI;AAAA,QAChC;AACA;AAAA,MACF;AACE,QAAAA,KAAIK,GAAE,CAAC;AAAA,IACX;AACA,QAAI,EAAEL,EAAC,KAAK,QAAQ,GAAG;AACrB,YAAM,IAAI,MAAM,EAAE,GAAG,GAAGH,EAAC;AACzB,MAAAS,OAAMJ,GAAE,gBAAgB,EAAE,YAAYA,GAAE,aAAa,EAAE;AACvD,UAAI,MAAM,EAAE,OAAO,SAAS,EAAE,OAAO,OAAQ,CAAAA,GAAE,SAAS,EAAE,QAAQA,GAAE,SAAS,EAAE,QAAQI,MAAK,EAAE,YAAY,WAAWJ,GAAE,8BAA8B,MAAMO,GAAE,EAAE,UAAU;AAAA,eAAYH,MAAKC,IAAG;AAC3L,cAAMC,KAAI,EAAE,aAAa,CAAC,KAAK,EAAE,aAAa,CAAC;AAC/C,YAAIN,GAAE,UAAU,EAAE,OAAO,CAAC,GAAG,MAAM,EAAE,OAAO,CAAC,GAAG,IAAIA,GAAE,aAAaM,IAAGF,IAAG;AACvE,gBAAMH,KAAIK,IAAG;AACb,UAAAR,KAAI,EAAEG,EAAC;AAAA,QACT;AAAA,MACF;AAAA,IACF;AACA,WAAOD,GAAE,cAAc,MAAME,GAAEJ,EAAC,GAAGE;AAAA,EACrC;AAAA;AACA,SAAe,EAAE,GAAGJ,IAAG;AAAA;AACrB,UAAM,IAAI,MAAM,EAAE,GAAG;AAAA,MACnB,kBAAkBA;AAAA,IACpB,CAAC;AACD,QAAI,IAAI,MACN,IAAI;AACN,UAAM,IAAI,EAAE;AACZ,QAAI,oBAAoB,KAAK,YAAY,KAAK,IAAI,iBAAiB,IAAI,EAAE,MAAM,QAAQ,oBAAoB,IAAI,IAAI,qBAAqB,EAAE,eAAe,SAAS,IAAI,IAAI,cAAc,EAAE,eAAe,WAAW,KAAK,EAAE,eAAe,YAAY,IAAI,IAAI,gBAAgB,EAAE,eAAe,gBAAgB,KAAK,EAAE,eAAe,sBAAsB,IAAI,IAAI,kBAAkB,EAAE,eAAe,YAAY,IAAI,IAAI,iBAAiB,EAAE,CAAC,KAAK,IAAI,eAAe,IAAI,EAAE,MAAM,EAAE,eAAe,QAAQ,KAAK,EAAE,EAAE,SAAS,CAAC,CAAC,MAAM,IAAI,gBAAgB,CAAC,EAAG,QAAO;AACpiB,UAAME,KAAI,QAAQ,IAAI,EAAE,CAAC,IAAI;AAC7B,WAAO;AAAA,MACL,OAAO,QAAQA,MAAK,EAAE,QAAQ,GAAE,CAAC;AAAA,MACjC,YAAY;AAAA,MACZ,UAAU;AAAA,MACV,KAAK;AAAA,QACH,MAAM,QAAQA,KAAIA,GAAE,aAAa,EAAE,CAAC,EAAE;AAAA,MACxC;AAAA,IACF;AAAA,EACF;AAAA;AACA,SAAS,EAAE,GAAG;AACZ,SAAO,QAAQ,KAAK,EAAE,eAAe,OAAO,KAAK,EAAE,eAAe,IAAI,KAAK,YAAY,OAAO,EAAE;AAClG;AACA,SAAe,EAAE,GAAG,GAAGH,IAAG;AAAA;AACxB,QAAIC,IACFC,IACA,IAAI;AACN,YAAQ,GAAG;AAAA,MACT,KAAK,iBACH;AACE,cAAMS,KAAI,MAAMV,GAAE,GAAG;AAAA,UACnB,kBAAkBD;AAAA,QACpB,CAAC;AACD,YAAI,CAAC,CAACW,GAAE,YAAYV,KAAIU,GAAE,cAAcA,GAAE;AAC1C;AAAA,MACF;AAAA,MACF,KAAK,eACH;AACE,cAAMA,KAAI,MAAME,GAAE,GAAGb,EAAC;AACtB,QAAAC,KAAIU,GAAE,aAAaT,KAAIS,GAAE;AACzB;AAAA,MACF;AAAA,MACF;AACE,QAAAV,KAAI,MAAM,EAAE,GAAG;AAAA,UACb,kBAAkBD;AAAA,QACpB,CAAC;AAAA,IACL;AACA,UAAM,IAAIC,IAAG,QACX,IAAIA,IAAG;AACT,WAAO;AAAA,MACL,QAAQ,GAAG,IAAI,CAAAK,QAAM;AAAA,QACnB,IAAIA,GAAE;AAAA,MACR,EAAE,EAAE,QAAQ,KAAK,CAAC;AAAA,MAClB,QAAQ,GAAG,IAAI,CAAAA,QAAM;AAAA,QACnB,WAAWJ;AAAA,QACX,IAAII,GAAE;AAAA,MACR,EAAE,EAAE,QAAQ,KAAK,CAAC;AAAA,MAClB,YAAY,IAAI,IAAI,CAAC;AAAA,MACrB,YAAY,IAAI,IAAI,CAAC;AAAA,IACvB;AAAA,EACF;AAAA;AACA,SAAeO,GAAE,GAAG,GAAG;AAAA;AACrB,UAAMb,KAAI,MAAM,EAAE,GAAG;AAAA,MACjB,kBAAkB;AAAA,IACpB,CAAC,GACDC,KAAID,GAAE,SAAS,CAAC;AAClB,QAAI,CAACC,GAAG,QAAO;AAAA,MACb,aAAaD;AAAA,IACf;AACA,QAAI;AACF,YAAM;AAAA,QACF,WAAWC;AAAA,MACb,IAAI,MAAMC,GAAE,CAAC,GACbA,KAAI,MAAM,EAAED,IAAG;AAAA,QACb,kBAAkB;AAAA,MACpB,CAAC,EAAE,MAAM,MAAM,IAAI;AACrB,aAAOC,OAAMF,GAAE,SAASE,GAAE,SAAS;AAAA,QACjC,aAAaF;AAAA,QACb,gBAAgBC;AAAA,MAClB;AAAA,IACF,QAAQ;AACN,aAAO;AAAA,QACL,aAAaD;AAAA,MACf;AAAA,IACF;AAAA,EACF;AAAA;AACA,SAAeO,GAAE,GAAG;AAAA;AAClB,YAAQ,GAAG,EAAE,CAAC,GAAG;AAAA,EACnB;AAAA;AACA,SAAe,EAAE,GAAG,GAAG;AAAA;AACrB,YAAQ,MAAM,EAAE,GAAG;AAAA,MACjB,kBAAkB;AAAA,IACpB,CAAC,GAAG;AAAA,EACN;AAAA;AACA,SAAeK,GAAE,GAAG;AAAA;AAClB,QAAI,CAAC,EAAE,OAAQ;AACf,UAAM,IAAI,oBAAI,IAAI,GAChBZ,KAAI,CAAC;AACP,eAAW;AAAA,MACT,MAAM;AAAA,IACR,KAAK,EAAG,GAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,GAAGA,GAAE,KAAKO,GAAE,EAAE,CAAC,CAAC,CAAC;AAC7C,UAAMN,KAAI,MAAM,QAAQ,IAAID,EAAC,GAC3BE,KAAI,oBAAI,IAAI;AACd,WAAO,MAAM,KAAK,CAAC,EAAE,QAAQ,CAACI,IAAGK,OAAM;AACrC,MAAAT,GAAE,IAAII,IAAGL,GAAEU,EAAC,CAAC;AAAA,IACf,CAAC,GAAG,CAAAL,OAAKJ,GAAE,IAAII,GAAE,IAAI;AAAA,EACvB;AAAA;",
  "names": ["a", "t", "s", "i", "y", "d", "e", "I", "f", "p", "m", "r", "g", "h"]
}
