{
  "version": 3,
  "sources": ["../../../../../../node_modules/@esri/calcite-components/dist/components/ExpandToggle.js"],
  "sourcesContent": ["/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\n * v2.13.2\n */\nimport { forceUpdate, h } from '@stencil/core/internal/client';\nimport { a as getElementDir } from './dom.js';\nimport { S as SLOTS$1 } from './action-group.js';\nimport { S as SLOTS } from './action-menu.js';\nconst groupBufferPx = 2;\nconst getAverage = arr => arr.reduce((p, c) => p + c, 0) / arr.length;\nconst geActionDimensions = actions => {\n  const actionsNotSlotted = actions.filter(action => action.slot !== SLOTS$1.menuActions);\n  const actionLen = actionsNotSlotted?.length;\n  return {\n    actionWidth: actionLen ? getAverage(actionsNotSlotted.map(action => action.clientWidth || 0)) : 0,\n    actionHeight: actionLen ? getAverage(actionsNotSlotted.map(action => action.clientHeight || 0)) : 0\n  };\n};\nconst getMaxActionCount = ({\n  width,\n  actionWidth,\n  layout,\n  height,\n  actionHeight,\n  groupCount\n}) => {\n  const maxContainerPx = layout === \"horizontal\" ? width : height;\n  const avgItemPx = layout === \"horizontal\" ? actionWidth : actionHeight;\n  return Math.floor((maxContainerPx - groupCount * groupBufferPx) / avgItemPx);\n};\nconst getOverflowCount = ({\n  layout,\n  actionCount,\n  actionWidth,\n  width,\n  actionHeight,\n  height,\n  groupCount\n}) => {\n  return Math.max(actionCount - getMaxActionCount({\n    width,\n    actionWidth,\n    layout,\n    height,\n    actionHeight,\n    groupCount\n  }), 0);\n};\nconst queryActions = el => {\n  return Array.from(el.querySelectorAll(\"calcite-action\")).filter(action => action.closest(\"calcite-action-menu\") ? action.slot === SLOTS.trigger : true);\n};\nconst overflowActions = ({\n  actionGroups,\n  expanded,\n  overflowCount\n}) => {\n  let needToSlotCount = overflowCount;\n  actionGroups.reverse().forEach(group => {\n    let slottedWithinGroupCount = 0;\n    const groupActions = queryActions(group).reverse();\n    groupActions.forEach(groupAction => {\n      if (groupAction.slot === SLOTS$1.menuActions) {\n        groupAction.removeAttribute(\"slot\");\n        groupAction.textEnabled = expanded;\n      }\n    });\n    if (needToSlotCount > 0) {\n      groupActions.some(groupAction => {\n        const unslottedActions = groupActions.filter(action => !action.slot);\n        if (unslottedActions.length > 1 && groupActions.length > 2 && !groupAction.closest(\"calcite-action-menu\")) {\n          groupAction.textEnabled = true;\n          groupAction.setAttribute(\"slot\", SLOTS$1.menuActions);\n          slottedWithinGroupCount++;\n          if (slottedWithinGroupCount > 1) {\n            needToSlotCount--;\n          }\n        }\n        return needToSlotCount < 1;\n      });\n    }\n    forceUpdate(group);\n  });\n};\nconst ICONS = {\n  chevronsLeft: \"chevrons-left\",\n  chevronsRight: \"chevrons-right\"\n};\nfunction getCalcitePosition(position, el) {\n  return position || el.closest(\"calcite-shell-panel\")?.position || \"start\";\n}\nfunction toggleChildActionText({\n  el,\n  expanded\n}) {\n  queryActions(el).filter(el => el.slot !== SLOTS$1.menuActions).forEach(action => action.textEnabled = expanded);\n  el.querySelectorAll(\"calcite-action-group, calcite-action-menu\").forEach(el => el.expanded = expanded);\n}\nconst setTooltipReference = ({\n  tooltip,\n  referenceElement,\n  expanded,\n  ref\n}) => {\n  if (tooltip) {\n    tooltip.referenceElement = !expanded && referenceElement ? referenceElement : null;\n  }\n  if (ref) {\n    ref(referenceElement);\n  }\n  return referenceElement;\n};\nconst ExpandToggle = ({\n  expanded,\n  expandText,\n  collapseText,\n  expandLabel,\n  collapseLabel,\n  toggle,\n  el,\n  position,\n  tooltip,\n  ref,\n  scale\n}) => {\n  const rtl = getElementDir(el) === \"rtl\";\n  const text = expanded ? collapseText : expandText;\n  const label = expanded ? collapseLabel : expandLabel;\n  const icons = [ICONS.chevronsLeft, ICONS.chevronsRight];\n  if (rtl) {\n    icons.reverse();\n  }\n  const end = getCalcitePosition(position, el) === \"end\";\n  const expandIcon = end ? icons[1] : icons[0];\n  const collapseIcon = end ? icons[0] : icons[1];\n  const actionNode = h(\"calcite-action\", {\n    icon: expanded ? expandIcon : collapseIcon,\n    id: \"expand-toggle\",\n    label: label,\n    onClick: toggle,\n    ref: referenceElement => setTooltipReference({\n      tooltip,\n      referenceElement,\n      expanded,\n      ref\n    }),\n    scale: scale,\n    text: text,\n    textEnabled: expanded,\n    title: !expanded && !tooltip ? text : null\n  });\n  return actionNode;\n};\nexport { ExpandToggle as E, getOverflowCount as a, geActionDimensions as g, overflowActions as o, queryActions as q, toggleChildActionText as t };\n\n"],
  "mappings": "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",
  "names": ["SLOTS", "el"]
}
