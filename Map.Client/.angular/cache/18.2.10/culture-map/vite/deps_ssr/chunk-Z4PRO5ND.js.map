{
  "version": 3,
  "sources": ["../../../../../../node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/attributes/VertexTextureCoordinates.glsl.js", "../../../../../../node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/shading/PhysicallyBasedRenderingParameters.glsl.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { neverReached as e } from \"../../../../../../core/compilerUtils.js\";\nimport { TextureCoordinateAttribute as t, TextureCoordinateAttributeType as r } from \"./TextureCoordinateAttribute.glsl.js\";\nimport { TextureAtlasLookup as o } from \"../util/TextureAtlasLookup.glsl.js\";\nimport { glsl as u } from \"../../shaderModules/interfaces.js\";\nfunction s(s, a) {\n  switch (s.include(t, a), a.textureCoordinateType) {\n    case r.Default:\n    case r.Compressed:\n      return void s.fragment.code.add(u`vec4 textureLookup(sampler2D tex, vec2 uv) {\nreturn texture(tex, uv);\n}`);\n    case r.Atlas:\n      return s.include(o), void s.fragment.code.add(u`vec4 textureLookup(sampler2D tex, vec2 uv) {\nreturn textureAtlasLookup(tex, uv, vuvRegion);\n}`);\n    default:\n      e(a.textureCoordinateType);\n    case r.None:\n    case r.COUNT:\n      return;\n  }\n}\nexport { s as VertexTextureCoordinates };", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { VertexTextureCoordinates as e } from \"../attributes/VertexTextureCoordinates.glsl.js\";\nimport { Float3DrawUniform as s } from \"../../shaderModules/Float3DrawUniform.js\";\nimport { Float3PassUniform as o } from \"../../shaderModules/Float3PassUniform.js\";\nimport { glsl as r } from \"../../shaderModules/interfaces.js\";\nimport { Texture2DDrawUniform as i } from \"../../shaderModules/Texture2DDrawUniform.js\";\nimport { Texture2DPassUniform as t } from \"../../shaderModules/Texture2DPassUniform.js\";\nimport { BindType as a } from \"../../shaderTechnique/BindType.js\";\nimport { GLTextureMaterialBindParameters as n } from \"../../../lib/GLTextureMaterial.js\";\nvar c;\n!function (e) {\n  e[e.Disabled = 0] = \"Disabled\", e[e.Normal = 1] = \"Normal\", e[e.Schematic = 2] = \"Schematic\", e[e.Water = 3] = \"Water\", e[e.WaterOnIntegratedMesh = 4] = \"WaterOnIntegratedMesh\", e[e.Simplified = 5] = \"Simplified\", e[e.TerrainWithWater = 6] = \"TerrainWithWater\", e[e.COUNT = 7] = \"COUNT\";\n}(c || (c = {}));\nclass u extends n {}\nfunction l(n, u) {\n  const l = n.fragment,\n    m = u.hasMetallicRoughnessTexture || u.hasEmissionTexture || u.hasOcclusionTexture;\n  if (u.pbrMode === c.Normal && m && n.include(e, u), u.pbrMode !== c.Schematic) {\n    if (u.pbrMode !== c.Disabled) {\n      if (u.pbrMode === c.Normal) {\n        l.code.add(r`vec3 mrr;\nvec3 emission;\nfloat occlusion;`);\n        const e = u.pbrTextureBindType;\n        u.hasMetallicRoughnessTexture && (l.uniforms.add(e === a.Pass ? new t(\"texMetallicRoughness\", e => e.textureMetallicRoughness) : new i(\"texMetallicRoughness\", e => e.textureMetallicRoughness)), l.code.add(r`void applyMetallnessAndRoughness(vec2 uv) {\nvec3 metallicRoughness = textureLookup(texMetallicRoughness, uv).rgb;\nmrr[0] *= metallicRoughness.b;\nmrr[1] *= metallicRoughness.g;\n}`)), u.hasEmissionTexture && (l.uniforms.add(e === a.Pass ? new t(\"texEmission\", e => e.textureEmissive) : new i(\"texEmission\", e => e.textureEmissive)), l.code.add(r`void applyEmission(vec2 uv) {\nemission *= textureLookup(texEmission, uv).rgb;\n}`)), u.hasOcclusionTexture ? (l.uniforms.add(e === a.Pass ? new t(\"texOcclusion\", e => e.textureOcclusion) : new i(\"texOcclusion\", e => e.textureOcclusion)), l.code.add(r`void applyOcclusion(vec2 uv) {\nocclusion *= textureLookup(texOcclusion, uv).r;\n}\nfloat getBakedOcclusion() {\nreturn occlusion;\n}`)) : l.code.add(r`float getBakedOcclusion() { return 1.0; }`), e === a.Pass ? l.uniforms.add(new o(\"emissionFactor\", e => e.emissiveFactor), new o(\"mrrFactors\", e => e.mrrFactors)) : l.uniforms.add(new s(\"emissionFactor\", e => e.emissiveFactor), new s(\"mrrFactors\", e => e.mrrFactors)), l.code.add(r`\n    void applyPBRFactors() {\n      mrr = mrrFactors;\n      emission = emissionFactor;\n      occlusion = 1.0;\n\n      ${u.hasMetallicRoughnessTexture ? r`applyMetallnessAndRoughness(${u.hasMetallicRoughnessTextureTransform ? r`metallicRoughnessUV` : \"vuv0\"});` : \"\"}\n\n      ${u.hasEmissionTexture ? r`applyEmission(${u.hasEmissiveTextureTransform ? r`emissiveUV` : \"vuv0\"});` : \"\"}\n\n      ${u.hasOcclusionTexture ? r`applyOcclusion(${u.hasOcclusionTextureTransform ? r`occlusionUV` : \"vuv0\"});` : \"\"}\n    }\n  `);\n      }\n    } else l.code.add(r`float getBakedOcclusion() { return 1.0; }`);\n  } else l.code.add(r`vec3 mrr = vec3(0.0, 0.6, 0.2);\nvec3 emission = vec3(0.0);\nfloat occlusion = 1.0;\nvoid applyPBRFactors() {}\nfloat getBakedOcclusion() { return 1.0; }`);\n}\nexport { u as PBRBindParameters, c as PBRMode, l as PhysicallyBasedRenderingParameters };"],
  "mappings": "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",
  "names": ["s", "a", "o", "e", "e", "l", "n", "s", "e", "o"]
}
