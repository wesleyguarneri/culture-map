{
  "version": 3,
  "sources": ["../../../../../../node_modules/@arcgis/core/views/3d/layers/support/TerrainTileTree3DDebugger.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { _ as e } from \"../../../../chunks/tslib.es6.js\";\nimport \"../../../../geometry.js\";\nimport { watch as r, initial as s } from \"../../../../core/reactiveUtils.js\";\nimport \"../../../../core/Logger.js\";\nimport \"../../../../core/has.js\";\nimport \"../../../../core/RandomLCG.js\";\nimport \"../../../../core/Error.js\";\nimport { subclass as t } from \"../../../../core/accessorSupport/decorators/subclass.js\";\nimport { toExtent as o } from \"../../../../geometry/support/aaBoundingRect.js\";\nimport { TileTreeDebugger as i } from \"../../../support/TileTreeDebugger.js\";\nimport a from \"../../../../geometry/Polygon.js\";\nlet m = class extends i {\n  constructor(e) {\n    super(e), this.enablePolygons = !1;\n  }\n  initialize() {\n    r(() => this.enabled, e => this.view.basemapTerrain.renderPatchBorders = e, s);\n  }\n  getTiles() {\n    const e = null != this.view.basemapTerrain.spatialReference ? this.view.basemapTerrain.spatialReference : null;\n    return this.view.basemapTerrain.test.getRenderedTiles().map(r => ({\n      ...r,\n      lij: r.lij,\n      geometry: a.fromExtent(o(r.extent, e))\n    }));\n  }\n};\nm = e([t(\"esri.views.3d.layers.support.TerrainTileTree3DDebugger\")], m);\nexport { m as TerrainTileTree3DDebugger };"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAeA,IAAI,IAAI,cAAcA,GAAE;AAAA,EACtB,YAAYC,IAAG;AACb,UAAMA,EAAC,GAAG,KAAK,iBAAiB;AAAA,EAClC;AAAA,EACA,aAAa;AACX,MAAE,MAAM,KAAK,SAAS,CAAAA,OAAK,KAAK,KAAK,eAAe,qBAAqBA,IAAG,CAAC;AAAA,EAC/E;AAAA,EACA,WAAW;AACT,UAAMA,KAAI,QAAQ,KAAK,KAAK,eAAe,mBAAmB,KAAK,KAAK,eAAe,mBAAmB;AAC1G,WAAO,KAAK,KAAK,eAAe,KAAK,iBAAiB,EAAE,IAAI,OAAM,iCAC7D,IAD6D;AAAA,MAEhE,KAAK,EAAE;AAAA,MACP,UAAU,EAAE,WAAW,EAAE,EAAE,QAAQA,EAAC,CAAC;AAAA,IACvC,EAAE;AAAA,EACJ;AACF;AACA,IAAI,EAAE,CAAC,EAAE,wDAAwD,CAAC,GAAG,CAAC;",
  "names": ["d", "e"]
}
