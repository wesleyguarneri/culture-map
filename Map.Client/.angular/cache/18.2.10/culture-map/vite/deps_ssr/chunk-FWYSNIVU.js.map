{
  "version": 3,
  "sources": ["../../../../../../node_modules/@arcgis/core/views/webgl/RenderbufferDescriptor.js", "../../../../../../node_modules/@arcgis/core/views/webgl/Renderbuffer.js", "../../../../../../node_modules/@arcgis/core/views/webgl/FramebufferObject.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { getBytesPerElementFormat as t } from \"./Util.js\";\nclass i {\n  constructor(t, i, h = i) {\n    this.internalFormat = t, this.width = i, this.height = h, this.multisampled = !1, this.samples = 1;\n  }\n}\nfunction h(i) {\n  return i.width <= 0 || i.height <= 0 || null == i.internalFormat ? 0 : i.width * i.height * t(i.internalFormat);\n}\nexport { i as RenderbufferDescriptor, h as estimateMemory };", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { ResourceType as e } from \"./enums.js\";\nimport { GLObjectType as t } from \"./GLObjectType.js\";\nimport { estimateMemory as r } from \"./RenderbufferDescriptor.js\";\nclass s {\n  constructor(r, s) {\n    this._context = r, this._descriptor = s, this.type = t.RenderBuffer, this._context.instanceCounter.increment(e.Renderbuffer, this);\n    const i = this._context.gl;\n    this.glName = i.createRenderbuffer(), this._context.bindRenderbuffer(this);\n    const {\n      width: n,\n      height: o,\n      internalFormat: h,\n      multisampled: d\n    } = s;\n    d ? i.renderbufferStorageMultisample(i.RENDERBUFFER, this.samples, h, n, o) : i.renderbufferStorage(i.RENDERBUFFER, h, n, o), this._context.bindRenderbuffer(null);\n  }\n  get descriptor() {\n    return this._descriptor;\n  }\n  get samples() {\n    const e = this._descriptor.samples,\n      t = this._context.parameters.maxSamples;\n    return e ? Math.min(e, t) : t;\n  }\n  get usedMemory() {\n    return r(this._descriptor);\n  }\n  resize(e, t) {\n    const r = this._descriptor;\n    if (r.width === e && r.height === t) return;\n    r.width = e, r.height = t;\n    const s = this._context.gl;\n    this._context.bindRenderbuffer(this), r.multisampled ? s.renderbufferStorageMultisample(s.RENDERBUFFER, this.samples, r.internalFormat, r.width, r.height) : s.renderbufferStorage(s.RENDERBUFFER, r.internalFormat, r.width, r.height), this._context.bindRenderbuffer(null);\n  }\n  dispose() {\n    this._context && (this._context.gl.deleteRenderbuffer(this.glName), this._context.instanceCounter.decrement(e.Renderbuffer, this), this._context = null);\n  }\n}\nexport { s as Renderbuffer };", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport \"../../core/has.js\";\nimport t from \"../../core/Logger.js\";\nimport { disposeMaybe as e } from \"../../core/maybe.js\";\nimport { BufferObject as i } from \"./BufferObject.js\";\nimport { webglDebugEnabled as r } from \"./checkWebGLError.js\";\nimport { ResourceType as s, ColorAttachment as h, PixelFormat as n, PixelType as o, DepthStencilAttachment as c, FramebufferTarget as a, TextureType as u, Usage as _, BufferType as f, RenderbufferFormat as l } from \"./enums.js\";\nimport { GLObjectType as T } from \"./GLObjectType.js\";\nimport { Renderbuffer as d } from \"./Renderbuffer.js\";\nimport { Texture as m } from \"./Texture.js\";\nconst p = () => t.getLogger(\"esri.views.webgl.FramebufferObject\");\nclass E {\n  constructor(t, e, i = null) {\n    this._context = t, this._glName = null, this._colorAttachments = new Map(), this._depthStencilBuffer = null, this._depthStencilTexture = null, this._initialized = !1, t.instanceCounter.increment(s.FramebufferObject, this);\n    const r = x(e) ? e : new m(this._context, e);\n    if (this._colorAttachments.set(h.COLOR_ATTACHMENT0, r), this._validateTextureDescriptor(r.descriptor), this._validateColorAttachmentPoint(h.COLOR_ATTACHMENT0), null != i) if (b(i)) this._depthStencilTexture = x(i) ? i : new m(this._context, i), this._validateTextureDescriptor(this._depthStencilTexture.descriptor);else {\n      const t = g(i) ? i : new d(this._context, i);\n      this._depthStencilBuffer = t, this._validateRenderBufferDescriptor(t.descriptor);\n    }\n  }\n  dispose() {\n    if (0 === this._colorAttachments.size && !this._glName) return;\n    const t = this._context.getBoundFramebufferObject();\n    if (this._colorAttachments.forEach((t, e) => this.detachColorTexture(e)?.dispose()), this.detachDepthStencilBuffer()?.dispose(), this.detachDepthStencilTexture()?.dispose(), this._glName) {\n      this._context.gl.deleteFramebuffer(this._glName), this._glName = null;\n    }\n    this._context.bindFramebuffer(t), this._context.instanceCounter.decrement(s.FramebufferObject, this);\n  }\n  get glName() {\n    return this._glName;\n  }\n  get colorTexture() {\n    return this._colorAttachments.get(h.COLOR_ATTACHMENT0);\n  }\n  get depthStencil() {\n    return this._depthStencilTexture || this._depthStencilBuffer;\n  }\n  get depthStencilTexture() {\n    return this._depthStencilTexture;\n  }\n  get width() {\n    const t = this._colorAttachments.get(h.COLOR_ATTACHMENT0);\n    return t?.descriptor?.width ?? 0;\n  }\n  get height() {\n    const t = this._colorAttachments.get(h.COLOR_ATTACHMENT0);\n    return t?.descriptor?.height ?? 0;\n  }\n  get usedMemory() {\n    return [...this._colorAttachments].reduce((t, [e, i]) => t + i.usedMemory, this.depthStencil?.usedMemory ?? 0);\n  }\n  getColorTexture(t) {\n    const e = this._colorAttachments.get(t);\n    return e && x(e) ? e : null;\n  }\n  get colorAttachments() {\n    return [...this._colorAttachments.keys()];\n  }\n  attachColorTexture(t, e = h.COLOR_ATTACHMENT0) {\n    if (!t) return;\n    this._validateColorAttachmentPoint(e);\n    const i = t.descriptor;\n    this._validateTextureDescriptor(i), this.detachColorTexture(e)?.dispose(), this._initialized && (this._context.bindFramebuffer(this), this._framebufferTexture2D(t.glName, e)), this._colorAttachments.set(e, t);\n  }\n  detachColorTexture(t = h.COLOR_ATTACHMENT0) {\n    const e = this._colorAttachments.get(t);\n    if (e) {\n      if (this._initialized) {\n        const e = this._context.getBoundFramebufferObject();\n        this._context.bindFramebuffer(this), this._framebufferTexture2D(null, t), this._context.bindFramebuffer(e);\n      }\n      return this._colorAttachments.delete(t), e;\n    }\n  }\n  setColorTextureTarget(t, e = h.COLOR_ATTACHMENT0) {\n    const i = this._colorAttachments.get(e);\n    i && this._framebufferTexture2D(i.glName, e, t);\n  }\n  attachDepthStencil(t) {\n    if (t) switch (t.type) {\n      case T.Texture:\n        return this._attachDepthStencilTexture(t);\n      case T.RenderBuffer:\n        return this._attachDepthStencilBuffer(t);\n    }\n  }\n  _attachDepthStencilTexture(t) {\n    if (null == t) return;\n    const e = t.descriptor;\n    e.pixelFormat !== n.DEPTH_STENCIL && e.pixelFormat !== n.DEPTH24_STENCIL8 && console.error(\"Depth/Stencil texture must have a pixel type of DEPTH_STENCIL!\"), e.dataType !== o.UNSIGNED_INT_24_8 && console.error(\"Depth/Stencil texture must have data type of UNSIGNED_INT_24_8!\"), this._validateTextureDescriptor(e), this._disposeDepthStencilAttachments(), this._initialized && (this._context.bindFramebuffer(this), this._framebufferTexture2D(t.glName, c)), this._depthStencilTexture?.dispose(), this._depthStencilTexture = t;\n  }\n  detachDepthStencilTexture() {\n    const t = this._depthStencilTexture;\n    if (t && this._initialized) {\n      const t = this._context.getBoundFramebufferObject();\n      this._context.bindFramebuffer(this), this._framebufferTexture2D(null, c), this._context.bindFramebuffer(t);\n    }\n    return this._depthStencilTexture = null, t;\n  }\n  _attachDepthStencilBuffer(t) {\n    if (null == t) return;\n    const e = t.descriptor;\n    if (this._validateRenderBufferDescriptor(e), this._disposeDepthStencilAttachments(), this._initialized) {\n      this._context.bindFramebuffer(this);\n      const i = this._context.gl,\n        r = this._getGLAttachmentPoint(e);\n      i.framebufferRenderbuffer(a.FRAMEBUFFER, r, i.RENDERBUFFER, t.glName);\n    }\n    this._depthStencilBuffer = t;\n  }\n  detachDepthStencilBuffer() {\n    const t = this._depthStencilBuffer;\n    if (t && this._initialized) {\n      const e = this._context.getBoundFramebufferObject();\n      this._context.bindFramebuffer(this);\n      const i = this._context.gl,\n        r = this._getGLAttachmentPoint(t.descriptor);\n      i.framebufferRenderbuffer(a.FRAMEBUFFER, r, i.RENDERBUFFER, null), this._context.bindFramebuffer(e);\n    }\n    return this._depthStencilBuffer = null, t;\n  }\n  copyToTexture(t, e, i, r, s, h, n) {\n    (t < 0 || e < 0 || s < 0 || h < 0) && console.error(\"Offsets cannot be negative!\"), (i <= 0 || r <= 0) && console.error(\"Copy width and height must be greater than zero!\");\n    const o = n.descriptor;\n    n.descriptor.target !== u.TEXTURE_2D && console.error(\"Texture target must be TEXTURE_2D!\"), (null == o?.width || null == o?.height || t + i > this.width || e + r > this.height || s + i > o.width || h + r > o.height) && console.error(\"Bad dimensions, the current input values will attempt to read or copy out of bounds!\");\n    const c = this._context,\n      a = c.bindTexture(n, m.TEXTURE_UNIT_FOR_UPDATES);\n    c.setActiveTexture(m.TEXTURE_UNIT_FOR_UPDATES), c.bindFramebuffer(this), c.gl.copyTexSubImage2D(u.TEXTURE_2D, 0, s, h, t, e, i, r), c.bindTexture(a, m.TEXTURE_UNIT_FOR_UPDATES);\n  }\n  readPixels(t, e, i, r, s, h, n) {\n    (i <= 0 || r <= 0) && console.error(\"Copy width and height must be greater than zero!\"), n || console.error(\"Target memory is not initialized!\"), this._context.bindFramebuffer(this), this._context.gl.readPixels(t, e, i, r, s, h, n);\n  }\n  async readPixelsAsync(t, e, r, s, h, n, o) {\n    const {\n        gl: c\n      } = this._context,\n      a = i.createPixelPack(this._context, _.STREAM_READ, o.byteLength);\n    this._context.bindBuffer(a), this._context.bindFramebuffer(this), c.readPixels(t, e, r, s, h, n, 0), this._context.unbindBuffer(f.PIXEL_PACK_BUFFER), await a.getSubDataAsync(o), a.dispose();\n  }\n  resize(t, e) {\n    if (this.width === t && this.height === e) return;\n    const i = {\n      width: t,\n      height: e\n    };\n    A(i, this._context.parameters.maxTextureSize), this._colorAttachments.forEach(t => t.resize(i.width, i.height)), this._depthStencilTexture?.resize(i.width, i.height), this._initialized && (A(i, this._context.parameters.maxRenderbufferSize), this._depthStencilBuffer?.resize(i.width, i.height), this._context.getBoundFramebufferObject() === this && this._context.bindFramebuffer(null), this._initialized = !1);\n  }\n  initializeAndBind(t = a.FRAMEBUFFER) {\n    const e = this._context.gl;\n    if (this._initialized) return void e.bindFramebuffer(t, this.glName);\n    this._glName && e.deleteFramebuffer(this._glName);\n    const i = e.createFramebuffer();\n    if (e.bindFramebuffer(t, i), this._colorAttachments.forEach((e, i) => this._framebufferTexture2D(e.glName, i, S(e), t)), this._depthStencilBuffer) {\n      const i = this._getGLAttachmentPoint(this._depthStencilBuffer.descriptor);\n      e.framebufferRenderbuffer(t, i, e.RENDERBUFFER, this._depthStencilBuffer.glName);\n    } else this._depthStencilTexture && this._framebufferTexture2D(this._depthStencilTexture.glName, e.DEPTH_STENCIL_ATTACHMENT, S(this._depthStencilTexture), t);\n    if (r()) {\n      e.checkFramebufferStatus(t) !== e.FRAMEBUFFER_COMPLETE && console.error(\"Framebuffer is incomplete!\");\n    }\n    this._glName = i, this._initialized = !0;\n  }\n  _framebufferTexture2D(t, e = h.COLOR_ATTACHMENT0, i = u.TEXTURE_2D, r = a.FRAMEBUFFER, s = 0) {\n    this._context.gl.framebufferTexture2D(r, e, i, t, s);\n  }\n  _disposeDepthStencilAttachments() {\n    const t = this._context.gl;\n    if (this._depthStencilBuffer) {\n      if (this._initialized) {\n        this._context.bindFramebuffer(this);\n        const e = this._getGLAttachmentPoint(this._depthStencilBuffer.descriptor);\n        t.framebufferRenderbuffer(a.FRAMEBUFFER, e, t.RENDERBUFFER, null);\n      }\n      this._depthStencilBuffer = e(this._depthStencilBuffer);\n    }\n    this._depthStencilTexture && (this._initialized && (this._context.bindFramebuffer(this), this._framebufferTexture2D(null, t.DEPTH_STENCIL_ATTACHMENT)), this._depthStencilTexture = e(this._depthStencilTexture));\n  }\n  _validateTextureDescriptor(t) {\n    t.target !== u.TEXTURE_2D && t.target !== u.TEXTURE_CUBE_MAP && console.error(\"Texture type must be TEXTURE_2D or TEXTURE_CUBE_MAP!\"), A(t, this._context.parameters.maxTextureSize), this._validateBufferDimensions(t);\n  }\n  _validateRenderBufferDescriptor(t) {\n    A(t, this._context.parameters.maxRenderbufferSize), this._validateBufferDimensions(t);\n  }\n  _validateBufferDimensions(t) {\n    t.width <= 0 && (t.width = this.width), t.height <= 0 && (t.height = this.height), this.width > 0 && this.height > 0 && (this.width === t.width && this.height === t.height || console.error(\"Attachment size must match framebuffer size!\"));\n  }\n  _getGLAttachmentPoint(t) {\n    switch (t.internalFormat) {\n      case l.DEPTH_COMPONENT16:\n      case l.DEPTH_COMPONENT24:\n      case l.DEPTH_COMPONENT32F:\n        return this._context.gl.DEPTH_ATTACHMENT;\n      case l.DEPTH24_STENCIL8:\n      case l.DEPTH32F_STENCIL8:\n      case l.DEPTH_STENCIL:\n        return this._context.gl.DEPTH_STENCIL_ATTACHMENT;\n      case l.STENCIL_INDEX8:\n        return this._context.gl.STENCIL_ATTACHMENT;\n    }\n  }\n  _validateColorAttachmentPoint(e) {\n    if (-1 === E._MAX_COLOR_ATTACHMENTS) {\n      const {\n        gl: t\n      } = this._context;\n      E._MAX_COLOR_ATTACHMENTS = t.getParameter(t.MAX_COLOR_ATTACHMENTS);\n    }\n    const i = e - h.COLOR_ATTACHMENT0;\n    i + 1 > E._MAX_COLOR_ATTACHMENTS && t.getLogger(\"esri.views.webgl.FrameBufferObject\").error(\"esri.FrameBufferObject\", `illegal attachment point for color attachment: ${i + 1}. Implementation supports up to ${E._MAX_COLOR_ATTACHMENTS} color attachments`);\n  }\n}\nfunction x(t) {\n  return null != t && \"type\" in t && t.type === T.Texture;\n}\nfunction g(t) {\n  return null != t && \"type\" in t && t.type === T.RenderBuffer;\n}\nfunction b(t) {\n  return x(t) || null != t && \"pixelFormat\" in t;\n}\nfunction A(t, e) {\n  const i = Math.max(t.width, t.height);\n  if (i > e) {\n    p().warn(`Resizing FBO attachment size ${t.width}x${t.height} to device limit ${e}`);\n    const r = e / i;\n    return t.width = Math.round(t.width * r), t.height = Math.round(t.height * r), !1;\n  }\n  return !0;\n}\nfunction S(t) {\n  return t.descriptor.target === u.TEXTURE_CUBE_MAP ? u.TEXTURE_CUBE_MAP_POSITIVE_X : u.TEXTURE_2D;\n}\nE._MAX_COLOR_ATTACHMENTS = -1;\nexport { E as FramebufferObject, A as ensureAttachmentMaxSize };"],
  "mappings": "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",
  "names": ["t", "i", "h", "r", "s", "i", "n", "h", "e", "t", "t", "e", "i", "r", "c", "n", "s", "h", "a", "A"]
}
