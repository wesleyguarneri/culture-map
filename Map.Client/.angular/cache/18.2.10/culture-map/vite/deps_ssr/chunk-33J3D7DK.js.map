{
  "version": 3,
  "sources": ["../../../../../../node_modules/@arcgis/core/views/2d/layers/features/support/Tile.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport e from \"../../../../../core/ArrayPool.js\";\nimport t from \"../../../../../geometry/Extent.js\";\nimport { create as i } from \"../../../../../geometry/support/aaBoundingRect.js\";\nimport s from \"../../../../../rest/support/QuantizationParameters.js\";\nimport o from \"../../../tiling/TileKey.js\";\nclass n {\n  constructor(e, t) {\n    this.key = new o(0, 0, 0, 0), this.bounds = i(), this.objectIds = new Set(), this.key.set(t);\n    const s = e.getLODInfoAt(this.key);\n    this.tileInfoView = e, this.tileInfoView.getTileBounds(this.bounds, this.key, !0), this.resolution = s.resolution, this.level = s.level, this.scale = s.scale, this.minScale = e.zoomToScale(s.level - 1), this.maxScale = e.zoomToScale(s.level + 1);\n  }\n  get lod() {\n    return this.tileInfoView.getLODInfoAt(this.key);\n  }\n  get id() {\n    return this.key.id;\n  }\n  get extent() {\n    return t.fromBounds(this.bounds, this.tileInfoView.tileInfo.spatialReference);\n  }\n  get transform() {\n    return {\n      originPosition: \"upperLeft\",\n      scale: [this.resolution, this.resolution],\n      translate: [this.bounds[0], this.bounds[3]]\n    };\n  }\n  createArcadeEvaluationOptions(e) {\n    return {\n      $view: {\n        scale: this.scale,\n        timeZone: e\n      }\n    };\n  }\n  createChildTiles() {\n    const t = this.key.getChildKeys(),\n      i = e.acquire();\n    for (let e = 0; e < t.length; e++) i[e] = new n(this.tileInfoView, t[e]);\n    return i;\n  }\n  getQuantizationParameters() {\n    return s.fromJSON({\n      mode: \"view\",\n      originPosition: \"upperLeft\",\n      tolerance: this.resolution,\n      extent: {\n        xmin: this.bounds[0],\n        ymin: this.bounds[1],\n        xmax: this.bounds[2],\n        ymax: this.bounds[3],\n        spatialReference: this.tileInfoView.tileInfo.spatialReference\n      }\n    });\n  }\n}\nexport { n as Tile };"],
  "mappings": ";;;;;;;;;;;;;;;;;;AASA,IAAM,IAAN,MAAM,GAAE;AAAA,EACN,YAAYA,IAAGC,IAAG;AAChB,SAAK,MAAM,IAAI,EAAE,GAAG,GAAG,GAAG,CAAC,GAAG,KAAK,SAAS,EAAE,GAAG,KAAK,YAAY,oBAAI,IAAI,GAAG,KAAK,IAAI,IAAIA,EAAC;AAC3F,UAAM,IAAID,GAAE,aAAa,KAAK,GAAG;AACjC,SAAK,eAAeA,IAAG,KAAK,aAAa,cAAc,KAAK,QAAQ,KAAK,KAAK,IAAE,GAAG,KAAK,aAAa,EAAE,YAAY,KAAK,QAAQ,EAAE,OAAO,KAAK,QAAQ,EAAE,OAAO,KAAK,WAAWA,GAAE,YAAY,EAAE,QAAQ,CAAC,GAAG,KAAK,WAAWA,GAAE,YAAY,EAAE,QAAQ,CAAC;AAAA,EACtP;AAAA,EACA,IAAI,MAAM;AACR,WAAO,KAAK,aAAa,aAAa,KAAK,GAAG;AAAA,EAChD;AAAA,EACA,IAAI,KAAK;AACP,WAAO,KAAK,IAAI;AAAA,EAClB;AAAA,EACA,IAAI,SAAS;AACX,WAAO,EAAE,WAAW,KAAK,QAAQ,KAAK,aAAa,SAAS,gBAAgB;AAAA,EAC9E;AAAA,EACA,IAAI,YAAY;AACd,WAAO;AAAA,MACL,gBAAgB;AAAA,MAChB,OAAO,CAAC,KAAK,YAAY,KAAK,UAAU;AAAA,MACxC,WAAW,CAAC,KAAK,OAAO,CAAC,GAAG,KAAK,OAAO,CAAC,CAAC;AAAA,IAC5C;AAAA,EACF;AAAA,EACA,8BAA8BA,IAAG;AAC/B,WAAO;AAAA,MACL,OAAO;AAAA,QACL,OAAO,KAAK;AAAA,QACZ,UAAUA;AAAA,MACZ;AAAA,IACF;AAAA,EACF;AAAA,EACA,mBAAmB;AACjB,UAAMC,KAAI,KAAK,IAAI,aAAa,GAC9B,IAAI,EAAE,QAAQ;AAChB,aAASD,KAAI,GAAGA,KAAIC,GAAE,QAAQD,KAAK,GAAEA,EAAC,IAAI,IAAI,GAAE,KAAK,cAAcC,GAAED,EAAC,CAAC;AACvE,WAAO;AAAA,EACT;AAAA,EACA,4BAA4B;AAC1B,WAAO,EAAE,SAAS;AAAA,MAChB,MAAM;AAAA,MACN,gBAAgB;AAAA,MAChB,WAAW,KAAK;AAAA,MAChB,QAAQ;AAAA,QACN,MAAM,KAAK,OAAO,CAAC;AAAA,QACnB,MAAM,KAAK,OAAO,CAAC;AAAA,QACnB,MAAM,KAAK,OAAO,CAAC;AAAA,QACnB,MAAM,KAAK,OAAO,CAAC;AAAA,QACnB,kBAAkB,KAAK,aAAa,SAAS;AAAA,MAC/C;AAAA,IACF,CAAC;AAAA,EACH;AACF;",
  "names": ["e", "t"]
}
