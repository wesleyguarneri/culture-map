{
  "version": 3,
  "sources": ["../../../../../../node_modules/@arcgis/core/layers/support/SceneModifications.js", "../../../../../../node_modules/@arcgis/core/layers/IntegratedMeshLayer.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { _ as r } from \"../../chunks/tslib.es6.js\";\nimport o from \"../../request.js\";\nimport t from \"../../core/Collection.js\";\nimport { JSONSupportMixin as e } from \"../../core/JSONSupport.js\";\nimport { urlToObject as s } from \"../../core/urlUtils.js\";\nimport { property as i } from \"../../core/accessorSupport/decorators/property.js\";\nimport \"../../core/has.js\";\nimport \"../../core/Logger.js\";\nimport \"../../core/RandomLCG.js\";\nimport { subclass as c } from \"../../core/accessorSupport/decorators/subclass.js\";\nimport p from \"./SceneModification.js\";\nvar m;\nlet n = m = class extends e(t.ofType(p)) {\n  constructor(r) {\n    super(r), this.url = null;\n  }\n  clone() {\n    return new m({\n      url: this.url,\n      items: this.items.map(r => r.clone())\n    });\n  }\n  toJSON(r) {\n    return this.toArray().map(o => o.toJSON(r)).filter(r => !!r.geometry);\n  }\n  static fromJSON(r, o) {\n    const t = new m();\n    for (const e of r) t.add(p.fromJSON(e, o));\n    return t;\n  }\n  static async fromUrl(r, t, e) {\n    const i = {\n        url: s(r),\n        origin: \"service\"\n      },\n      c = await o(r, {\n        responseType: \"json\",\n        signal: e?.signal\n      }),\n      n = t.toJSON(),\n      a = [];\n    for (const o of c.data) a.push(p.fromJSON({\n      ...o,\n      geometry: {\n        ...o.geometry,\n        spatialReference: n\n      }\n    }, i));\n    return new m({\n      url: r,\n      items: a\n    });\n  }\n};\nr([i({\n  type: String\n})], n.prototype, \"url\", void 0), n = m = r([c(\"esri.layers.support.SceneModifications\")], n);\nconst a = n;\nexport { a as default };", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { _ as e } from \"../chunks/tslib.es6.js\";\nimport t from \"../core/Error.js\";\nimport o from \"../core/Logger.js\";\nimport { MultiOriginJSONMixin as i } from \"../core/MultiOriginJSONSupport.js\";\nimport { throwIfAbortError as r } from \"../core/promiseUtils.js\";\nimport { on as s, sync as n } from \"../core/reactiveUtils.js\";\nimport { property as a } from \"../core/accessorSupport/decorators/property.js\";\nimport \"../core/has.js\";\nimport \"../core/RandomLCG.js\";\nimport { reader as p } from \"../core/accessorSupport/decorators/reader.js\";\nimport { subclass as m } from \"../core/accessorSupport/decorators/subclass.js\";\nimport { persistable as d } from \"../core/accessorSupport/decorators/persistable.js\";\nimport c from \"./Layer.js\";\nimport { APIKeyMixin as l } from \"./mixins/APIKeyMixin.js\";\nimport { ArcGISService as y } from \"./mixins/ArcGISService.js\";\nimport { CustomParametersMixin as h } from \"./mixins/CustomParametersMixin.js\";\nimport { OperationalLayer as f } from \"./mixins/OperationalLayer.js\";\nimport { PortalLayer as u } from \"./mixins/PortalLayer.js\";\nimport { ScaleRangeLayer as v } from \"./mixins/ScaleRangeLayer.js\";\nimport { SceneService as g, SaveOperationType as S } from \"./mixins/SceneService.js\";\nimport { elevationInfo as j } from \"./support/commonProperties.js\";\nimport { I3SNodePageDefinition as w, I3SMaterialDefinition as L, I3STextureSetDefinition as _, I3SGeometryDefinition as x } from \"./support/I3SLayerDefinitions.js\";\nimport I from \"./support/SceneModifications.js\";\nimport { logInvalidElevationInfoWarning as T, elevationModeRequiredMessage as M, featureExpressionUnsupportedMessage as O } from \"../support/elevationInfoUtils.js\";\nimport { f as b } from \"../chunks/persistableUrlUtils.js\";\nlet A = class extends g(y(f(u(v(i(h(l(c)))))))) {\n  constructor(...e) {\n    super(...e), this.geometryType = \"mesh\", this.operationalLayerType = \"IntegratedMeshLayer\", this.type = \"integrated-mesh\", this.nodePages = null, this.materialDefinitions = null, this.textureSetDefinitions = null, this.geometryDefinitions = null, this.serviceUpdateTimeStamp = null, this.profile = \"mesh-pyramids\", this.modifications = null, this._modificationsSource = null, this.path = null;\n  }\n  initialize() {\n    this.addHandles(s(() => this.modifications, \"after-changes\", () => this.modifications = this.modifications, n));\n  }\n  normalizeCtorArgs(e, t) {\n    return \"string\" == typeof e ? {\n      url: e,\n      ...t\n    } : e;\n  }\n  readModifications(e, t, o) {\n    this._modificationsSource = {\n      url: b(e, o),\n      context: o\n    };\n  }\n  set elevationInfo(e) {\n    this._set(\"elevationInfo\", e), this._validateElevationInfo();\n  }\n  async load(e) {\n    return this.addResolvingPromise(this._doLoad(e)), this;\n  }\n  async _doLoad(e) {\n    const t = e?.signal;\n    try {\n      await this.loadFromPortal({\n        supportedTypes: [\"Scene Service\"]\n      }, e);\n    } catch (o) {\n      r(o);\n    }\n    if (await this._fetchService(t), null != this._modificationsSource) {\n      const t = await I.fromUrl(this._modificationsSource.url, this.spatialReference, e);\n      this.setAtOrigin(\"modifications\", t, this._modificationsSource.context.origin), this._modificationsSource = null;\n    }\n    await this._fetchIndexAndUpdateExtent(this.nodePages, t);\n  }\n  beforeSave() {\n    if (null != this._modificationsSource) return this.load().then(() => {}, () => {});\n  }\n  async saveAs(e, t) {\n    return this._debouncedSaveOperations(S.SAVE_AS, {\n      ...t,\n      getTypeKeywords: () => this._getTypeKeywords(),\n      portalItemLayerType: \"integrated-mesh\"\n    }, e);\n  }\n  async save() {\n    const e = {\n      getTypeKeywords: () => this._getTypeKeywords(),\n      portalItemLayerType: \"integrated-mesh\"\n    };\n    return this._debouncedSaveOperations(S.SAVE, e);\n  }\n  validateLayer(e) {\n    if (e.layerType && \"IntegratedMesh\" !== e.layerType) throw new t(\"integrated-mesh-layer:layer-type-not-supported\", \"IntegratedMeshLayer does not support this layer type\", {\n      layerType: e.layerType\n    });\n    if (isNaN(this.version.major) || isNaN(this.version.minor)) throw new t(\"layer:service-version-not-supported\", \"Service version is not supported.\", {\n      serviceVersion: this.version.versionString,\n      supportedVersions: \"1.x\"\n    });\n    if (this.version.major > 1) throw new t(\"layer:service-version-too-new\", \"Service version is too new.\", {\n      serviceVersion: this.version.versionString,\n      supportedVersions: \"1.x\"\n    });\n  }\n  _getTypeKeywords() {\n    return [\"IntegratedMeshLayer\"];\n  }\n  _validateElevationInfo() {\n    const e = this.elevationInfo,\n      t = \"Integrated mesh layers\";\n    T(o.getLogger(this), M(t, \"absolute-height\", e)), T(o.getLogger(this), O(t, e));\n  }\n};\ne([a({\n  type: String,\n  readOnly: !0\n})], A.prototype, \"geometryType\", void 0), e([a({\n  type: [\"show\", \"hide\"]\n})], A.prototype, \"listMode\", void 0), e([a({\n  type: [\"IntegratedMeshLayer\"]\n})], A.prototype, \"operationalLayerType\", void 0), e([a({\n  json: {\n    read: !1\n  },\n  readOnly: !0\n})], A.prototype, \"type\", void 0), e([a({\n  type: w,\n  readOnly: !0\n})], A.prototype, \"nodePages\", void 0), e([a({\n  type: [L],\n  readOnly: !0\n})], A.prototype, \"materialDefinitions\", void 0), e([a({\n  type: [_],\n  readOnly: !0\n})], A.prototype, \"textureSetDefinitions\", void 0), e([a({\n  type: [x],\n  readOnly: !0\n})], A.prototype, \"geometryDefinitions\", void 0), e([a({\n  readOnly: !0\n})], A.prototype, \"serviceUpdateTimeStamp\", void 0), e([a({\n  type: I\n}), d({\n  origins: [\"web-scene\", \"portal-item\"],\n  type: \"resource\",\n  prefix: \"modifications\"\n})], A.prototype, \"modifications\", void 0), e([p([\"web-scene\", \"portal-item\"], \"modifications\")], A.prototype, \"readModifications\", null), e([a(j)], A.prototype, \"elevationInfo\", null), e([a({\n  type: String,\n  json: {\n    origins: {\n      \"web-scene\": {\n        read: !0,\n        write: !0\n      },\n      \"portal-item\": {\n        read: !0,\n        write: !0\n      }\n    },\n    read: !1\n  }\n})], A.prototype, \"path\", void 0), A = e([m(\"esri.layers.IntegratedMeshLayer\")], A);\nconst P = A;\nexport { P as default };"],
  "mappings": "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",
  "names": ["m", "n", "f", "o", "r", "t", "e", "i", "a", "e", "t", "o", "a", "C", "p", "y", "j"]
}
