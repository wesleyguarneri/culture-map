{
  "version": 3,
  "sources": ["../../../../../../node_modules/@arcgis/core/layers/ogc/wfsUtils.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport \"../../geometry.js\";\nimport e from \"../../request.js\";\nimport t from \"../../core/Error.js\";\nimport { cache as r, find as n } from \"../../core/iteratorUtils.js\";\nimport { isHTTPSProtocol as a, hasSameOrigin as o, toHTTPS as i } from \"../../core/urlUtils.js\";\nimport { initializeProjection as s, project as p } from \"../../geometry/projection.js\";\nimport { wgs84 as u, equals as l } from \"../../geometry/support/spatialReferenceUtils.js\";\nimport { featureGeometryTypeKebabDictionary as c } from \"../../geometry/support/typeUtils.js\";\nimport { getGeometryType as m } from \"../graphics/sources/geojson/geojson.js\";\nimport { visitXML as f, iterateXML as y } from \"./xmlUtils.js\";\nimport { isArcGISUrl as d } from \"../support/arcgisLayerUrl.js\";\nimport g from \"../support/Field.js\";\nimport { getFieldDefaultLength as w } from \"../support/fieldUtils.js\";\nimport b from \"../../geometry/Extent.js\";\nimport h from \"../../geometry/SpatialReference.js\";\nconst T = \"xlink:href\",\n  F = \"2.0.0\",\n  S = \"__esri_wfs_id__\",\n  x = \"wfs-layer:getWFSLayerTypeInfo-error\",\n  E = \"wfs-layer:empty-service\",\n  C = \"wfs-layer:feature-type-not-found\",\n  R = \"wfs-layer:geojson-not-supported\",\n  k = \"wfs-layer:kvp-encoding-not-supported\",\n  P = \"wfs-layer:malformed-json\",\n  j = \"wfs-layer:unknown-geometry-type\",\n  A = \"wfs-layer:unknown-field-type\",\n  N = \"wfs-layer:unsupported-spatial-reference\",\n  G = \"wfs-layer:unsupported-wfs-version\";\nasync function v(t, r) {\n  const n = U((await e(t, {\n    responseType: \"text\",\n    query: {\n      SERVICE: \"WFS\",\n      REQUEST: \"GetCapabilities\",\n      VERSION: F,\n      ...r?.customParameters\n    },\n    signal: r?.signal\n  })).data);\n  return L(t, n), n;\n}\nfunction U(e) {\n  const t = te(e);\n  ne(t), ae(t);\n  const n = t.firstElementChild,\n    a = r(O(n));\n  return {\n    operations: D(n),\n    get featureTypes() {\n      return Array.from(a());\n    },\n    readFeatureTypes: a\n  };\n}\nconst I = [\"json\", \"application/json\", \"geojson\", \"application/json; subtype=geojson\", \"application/geo+json\"];\nfunction M(e) {\n  for (const t of I) {\n    const r = e.findIndex(e => e.toLowerCase() === t);\n    if (r >= 0) return e[r];\n  }\n  return null;\n}\nfunction D(e) {\n  let r = !1;\n  const n = {\n      GetCapabilities: {\n        url: \"\"\n      },\n      DescribeFeatureType: {\n        url: \"\"\n      },\n      GetFeature: {\n        url: \"\",\n        outputFormat: null,\n        supportsPagination: !1\n      }\n    },\n    a = [],\n    o = [];\n  if (f(e, {\n    OperationsMetadata: {\n      Parameter: e => {\n        if (\"outputFormat\" === e.getAttribute(\"name\")) return {\n          AllowedValues: {\n            Value: ({\n              textContent: e\n            }) => {\n              e && a.push(e);\n            }\n          }\n        };\n      },\n      Operation: e => {\n        switch (e.getAttribute(\"name\")) {\n          case \"GetCapabilities\":\n            return {\n              DCP: {\n                HTTP: {\n                  Get: e => {\n                    n.GetCapabilities.url = e.getAttribute(T);\n                  }\n                }\n              }\n            };\n          case \"DescribeFeatureType\":\n            return {\n              DCP: {\n                HTTP: {\n                  Get: e => {\n                    n.DescribeFeatureType.url = e.getAttribute(T);\n                  }\n                }\n              }\n            };\n          case \"GetFeature\":\n            return {\n              DCP: {\n                HTTP: {\n                  Get: e => {\n                    n.GetFeature.url = e.getAttribute(T);\n                  }\n                }\n              },\n              Parameter: e => {\n                if (\"outputFormat\" === e.getAttribute(\"name\")) return {\n                  AllowedValues: {\n                    Value: ({\n                      textContent: e\n                    }) => {\n                      e && o.push(e);\n                    }\n                  }\n                };\n              }\n            };\n        }\n      },\n      Constraint: e => {\n        switch (e.getAttribute(\"name\")) {\n          case \"KVPEncoding\":\n            return {\n              DefaultValue: e => {\n                r = \"true\" === e.textContent.toLowerCase();\n              }\n            };\n          case \"ImplementsResultPaging\":\n            return {\n              DefaultValue: e => {\n                n.GetFeature.supportsPagination = \"true\" === e.textContent.toLowerCase();\n              }\n            };\n        }\n      }\n    }\n  }), n.GetFeature.outputFormat = M(o) ?? M(a), !r) throw new t(k, \"WFS service doesn't support key/value pair (KVP) encoding\");\n  if (null == n.GetFeature.outputFormat) throw new t(R, \"WFS service doesn't support GeoJSON output format\");\n  return n;\n}\nfunction L(e, t) {\n  a(e) && (o(e, t.operations.DescribeFeatureType.url, !0) && (t.operations.DescribeFeatureType.url = i(t.operations.DescribeFeatureType.url)), o(e, t.operations.GetFeature.url, !0) && (t.operations.GetFeature.url = i(t.operations.GetFeature.url)));\n}\nfunction V(e) {\n  const t = parseInt(e.textContent?.match(/(?<wkid>\\d+$)/i)?.groups?.wkid ?? \"\", 10);\n  if (!Number.isNaN(t)) return t;\n}\nfunction O(e) {\n  return y(e, {\n    FeatureTypeList: {\n      FeatureType: e => {\n        const t = {\n            typeName: \"undefined:undefined\",\n            name: \"\",\n            title: \"\",\n            description: \"\",\n            extent: null,\n            namespacePrefix: \"\",\n            namespaceUri: \"\",\n            defaultSpatialReference: 4326,\n            supportedSpatialReferences: []\n          },\n          r = new Set();\n        return f(e, {\n          Name: e => {\n            const {\n              name: r,\n              prefix: n\n            } = re(e.textContent);\n            t.typeName = `${n}:${r}`, t.name = r, t.namespacePrefix = n, t.namespaceUri = e.lookupNamespaceURI(n);\n          },\n          Abstract: e => {\n            t.description = e.textContent;\n          },\n          Title: e => {\n            t.title = e.textContent;\n          },\n          WGS84BoundingBox: e => {\n            t.extent = b.fromJSON($(e));\n          },\n          DefaultCRS: e => {\n            const n = V(e);\n            n && (t.defaultSpatialReference = n, r.add(n));\n          },\n          OtherCRS: e => {\n            const t = V(e);\n            t && r.add(t);\n          }\n        }), t.title || (t.title = t.name), r.add(4326), t.supportedSpatialReferences.push(...r), t;\n      }\n    }\n  });\n}\nfunction $(e) {\n  let t, r, n, a;\n  for (const o of e.children) switch (o.localName) {\n    case \"LowerCorner\":\n      [t, r] = o.textContent.split(\" \").map(e => Number.parseFloat(e));\n      break;\n    case \"UpperCorner\":\n      [n, a] = o.textContent.split(\" \").map(e => Number.parseFloat(e));\n  }\n  return {\n    xmin: t,\n    ymin: r,\n    xmax: n,\n    ymax: a,\n    spatialReference: u\n  };\n}\nfunction Y(e, t, r) {\n  return n(e, e => r ? e.name === t && e.namespaceUri === r : e.typeName === t || e.name === t);\n}\nasync function W(e, t, r, n = {}) {\n  const {\n      featureType: a,\n      extent: o\n    } = await X(e, t, r, n),\n    {\n      spatialReference: i\n    } = oe(e.operations.GetFeature.url, a, n.spatialReference),\n    {\n      fields: s,\n      geometryType: p,\n      swapXY: u,\n      objectIdField: l,\n      geometryField: c\n    } = await q(e, a, i, n);\n  return {\n    url: e.operations.GetCapabilities.url,\n    name: a.name,\n    namespaceUri: a.namespaceUri,\n    fields: s,\n    geometryField: c,\n    geometryType: p,\n    objectIdField: l,\n    spatialReference: n.spatialReference ?? new h({\n      wkid: a.defaultSpatialReference\n    }),\n    extent: o,\n    swapXY: u,\n    wfsCapabilities: e,\n    customParameters: n.customParameters\n  };\n}\nasync function X(e, r, n, a = {}) {\n  const o = e.readFeatureTypes(),\n    i = r ? Y(o, r, n) : o.next().value,\n    {\n      spatialReference: u = new h({\n        wkid: i?.defaultSpatialReference\n      })\n    } = a;\n  if (null == i) throw r ? new t(C, `The type '${r}' could not be found in the service`) : new t(E, \"The service is empty\");\n  let c = i.extent;\n  if (c && !l(c.spatialReference, u)) try {\n    await s(c.spatialReference, u, void 0, a), c = p(c, u);\n  } catch {\n    throw new t(N, \"Projection not supported\");\n  }\n  return {\n    extent: c,\n    spatialReference: u,\n    featureType: i\n  };\n}\nasync function q(e, r, n, a = {}) {\n  const {\n      typeName: o\n    } = r,\n    [i, s] = await Promise.allSettled([J(e.operations.DescribeFeatureType.url, o, a), _(e, o, n, a)]),\n    p = e => new t(x, `An error occurred while getting info about the feature type '${o}'`, {\n      error: e\n    });\n  if (\"rejected\" === i.status) throw p(i.reason);\n  if (\"rejected\" === s.status) throw p(s.reason);\n  const {\n      fields: u,\n      errors: l\n    } = i.value ?? {},\n    c = i.value?.geometryType || s.value?.geometryType,\n    m = s.value?.swapXY ?? !1;\n  if (null == c) throw new t(j, `The geometry type could not be determined for type '${o}`, {\n    typeName: o,\n    geometryType: c,\n    fields: u,\n    errors: l\n  });\n  return {\n    ...z(u ?? []),\n    geometryType: c,\n    swapXY: m\n  };\n}\nfunction z(e) {\n  const t = e.find(e => \"geometry\" === e.type);\n  let r = e.find(e => \"oid\" === e.type);\n  return e = e.filter(e => \"geometry\" !== e.type), r || (r = new g({\n    name: S,\n    type: \"oid\",\n    alias: S\n  }), e.unshift(r)), {\n    geometryField: t?.name ?? null,\n    objectIdField: r.name,\n    fields: e\n  };\n}\nasync function _(t, r, n, a = {}) {\n  let o,\n    i = !1;\n  const [s, p] = await Promise.all([K(t.operations.GetFeature.url, r, n, t.operations.GetFeature.outputFormat, {\n      ...a,\n      count: 1\n    }), e(t.operations.GetFeature.url, {\n      responseType: \"text\",\n      query: Z(r, n, void 0, {\n        ...a,\n        count: 1\n      }),\n      signal: a?.signal\n    })]),\n    u = \"FeatureCollection\" === s.type && s.features[0]?.geometry;\n  if (u) {\n    let e;\n    switch (o = c.fromJSON(m(u.type)), u.type) {\n      case \"Point\":\n        e = u.coordinates;\n        break;\n      case \"LineString\":\n      case \"MultiPoint\":\n        e = u.coordinates[0];\n        break;\n      case \"MultiLineString\":\n      case \"Polygon\":\n        e = u.coordinates[0][0];\n        break;\n      case \"MultiPolygon\":\n        e = u.coordinates[0][0][0];\n    }\n    const t = /<[^>]*pos[^>]*> *(-?\\d+(?:\\.\\d+)?) (-?\\d+(?:\\.\\d+)?)/.exec(p.data);\n    if (t) {\n      const r = e[0].toFixed(3),\n        n = e[1].toFixed(3),\n        a = parseFloat(t[1]).toFixed(3);\n      r === parseFloat(t[2]).toFixed(3) && n === a && (i = !0);\n    }\n  }\n  return {\n    geometryType: o,\n    swapXY: i\n  };\n}\nasync function J(t, r, n) {\n  return Q(r, (await e(t, {\n    responseType: \"text\",\n    query: {\n      SERVICE: \"WFS\",\n      REQUEST: \"DescribeFeatureType\",\n      VERSION: F,\n      TYPENAME: r,\n      TYPENAMES: r,\n      ...n?.customParameters\n    },\n    signal: n?.signal\n  })).data);\n}\nfunction Q(e, r) {\n  const {\n      name: a\n    } = re(e),\n    o = te(r);\n  ae(o);\n  const i = n(y(o.firstElementChild, {\n    element: e => e\n  }), e => e.getAttribute(\"name\") === a);\n  if (null != i) {\n    const e = i.getAttribute(\"type\"),\n      t = e ? n(y(o.firstElementChild, {\n        complexType: e => e\n      }), t => t.getAttribute(\"name\") === re(e).name) : n(y(i, {\n        complexType: e => e\n      }), () => !0);\n    if (t) return B(t);\n  }\n  throw new t(C, `Type '${e}' not found in document`, {\n    document: new XMLSerializer().serializeToString(o)\n  });\n}\nconst H = new Set([\"objectid\", \"fid\"]);\nfunction B(e) {\n  const r = [],\n    n = [];\n  let a;\n  const o = y(e, {\n    complexContent: {\n      extension: {\n        sequence: {\n          element: e => e\n        }\n      }\n    }\n  });\n  for (const i of o) {\n    const o = i.getAttribute(\"name\");\n    if (!o) continue;\n    let s, p;\n    if (i.hasAttribute(\"type\") ? s = re(i.getAttribute(\"type\")).name : f(i, {\n      simpleType: {\n        restriction: e => (s = re(e.getAttribute(\"base\")).name, {\n          maxLength: e => {\n            p = +e.getAttribute(\"value\");\n          }\n        })\n      }\n    }), !s) continue;\n    const u = \"true\" === i.getAttribute(\"nillable\");\n    let l = !1;\n    switch (s.toLowerCase()) {\n      case \"integer\":\n      case \"nonpositiveinteger\":\n      case \"negativeinteger\":\n      case \"long\":\n      case \"int\":\n      case \"short\":\n      case \"byte\":\n      case \"nonnegativeinteger\":\n      case \"unsignedlong\":\n      case \"unsignedint\":\n      case \"unsignedshort\":\n      case \"unsignedbyte\":\n      case \"positiveinteger\":\n        n.push(new g({\n          name: o,\n          alias: o,\n          type: \"integer\",\n          nullable: u,\n          length: w(\"integer\")\n        }));\n        break;\n      case \"float\":\n      case \"double\":\n      case \"decimal\":\n        n.push(new g({\n          name: o,\n          alias: o,\n          type: \"double\",\n          nullable: u,\n          length: w(\"double\")\n        }));\n        break;\n      case \"boolean\":\n      case \"string\":\n      case \"gyearmonth\":\n      case \"gyear\":\n      case \"gmonthday\":\n      case \"gday\":\n      case \"gmonth\":\n      case \"anyuri\":\n      case \"qname\":\n      case \"notation\":\n      case \"normalizedstring\":\n      case \"token\":\n      case \"language\":\n      case \"idrefs\":\n      case \"entities\":\n      case \"nmtoken\":\n      case \"nmtokens\":\n      case \"name\":\n      case \"ncname\":\n      case \"id\":\n      case \"idref\":\n      case \"entity\":\n      case \"duration\":\n      case \"time\":\n        n.push(new g({\n          name: o,\n          alias: o,\n          type: \"string\",\n          nullable: u,\n          length: p ?? w(\"string\")\n        }));\n        break;\n      case \"datetime\":\n      case \"date\":\n        n.push(new g({\n          name: o,\n          alias: o,\n          type: \"date\",\n          nullable: u,\n          length: p ?? w(\"date\")\n        }));\n        break;\n      case \"pointpropertytype\":\n        a = \"point\", l = !0;\n        break;\n      case \"multipointpropertytype\":\n        a = \"multipoint\", l = !0;\n        break;\n      case \"curvepropertytype\":\n      case \"multicurvepropertytype\":\n      case \"multilinestringpropertytype\":\n        a = \"polyline\", l = !0;\n        break;\n      case \"surfacepropertytype\":\n      case \"multisurfacepropertytype\":\n      case \"multipolygonpropertytype\":\n        a = \"polygon\", l = !0;\n        break;\n      case \"geometrypropertytype\":\n      case \"multigeometrypropertytype\":\n        l = !0, r.push(new t(j, `geometry type '${s}' is not supported`, {\n          type: new XMLSerializer().serializeToString(e)\n        }));\n        break;\n      default:\n        r.push(new t(A, `Unknown field type '${s}'`, {\n          type: new XMLSerializer().serializeToString(e)\n        }));\n    }\n    l && n.push(new g({\n      name: o,\n      alias: o,\n      type: \"geometry\",\n      nullable: u\n    }));\n  }\n  for (const t of n) if (\"integer\" === t.type && !t.nullable && H.has(t.name.toLowerCase())) {\n    t.type = \"oid\";\n    break;\n  }\n  return {\n    geometryType: a,\n    fields: n,\n    errors: r\n  };\n}\nasync function K(r, n, a, o, i) {\n  let {\n    data: s\n  } = await e(r, {\n    responseType: \"text\",\n    query: Z(n, a, o, i),\n    signal: i?.signal\n  });\n  s = s.replaceAll(/\": +(-?\\d+),(\\d+)(,)?/g, '\": $1.$2$3');\n  try {\n    return JSON.parse(s);\n  } catch (p) {\n    throw new t(P, \"Error while parsing the response\", {\n      response: s,\n      error: p\n    });\n  }\n}\nfunction Z(e, t, r, n) {\n  const a = \"number\" == typeof t ? t : t.wkid;\n  return {\n    SERVICE: \"WFS\",\n    REQUEST: \"GetFeature\",\n    VERSION: F,\n    TYPENAMES: e,\n    OUTPUTFORMAT: r,\n    SRSNAME: \"EPSG:\" + a,\n    STARTINDEX: n?.startIndex,\n    COUNT: n?.count,\n    ...n?.customParameters\n  };\n}\nasync function ee(t, r, n) {\n  const a = await e(t, {\n      responseType: \"text\",\n      query: {\n        SERVICE: \"WFS\",\n        REQUEST: \"GetFeature\",\n        VERSION: F,\n        TYPENAMES: r,\n        RESULTTYPE: \"hits\",\n        ...n?.customParameters\n      },\n      signal: n?.signal\n    }),\n    o = /numberMatched=[\"'](?<numberMatched>\\d+)[\"']/gi.exec(a.data);\n  if (o?.groups) return +o.groups.numberMatched;\n}\nfunction te(e) {\n  return new DOMParser().parseFromString(e.trim(), \"text/xml\");\n}\nfunction re(e) {\n  const [t, r] = e.split(\":\");\n  return {\n    prefix: r ? t : \"\",\n    name: r ?? t\n  };\n}\nfunction ne(e) {\n  const r = e.firstElementChild?.getAttribute(\"version\");\n  if (r && r !== F) throw new t(G, `Unsupported WFS version ${r}. Supported version: ${F}`);\n}\nfunction ae(e) {\n  let r = \"\",\n    n = \"\";\n  if (f(e.firstElementChild, {\n    Exception: e => (r = e.getAttribute(\"exceptionCode\"), {\n      ExceptionText: e => {\n        n = e.textContent;\n      }\n    })\n  }), r) throw new t(`wfs-layer:${r}`, n);\n}\nfunction oe(e, t, r) {\n  const n = {\n      wkid: t.defaultSpatialReference\n    },\n    a = null != r?.wkid ? {\n      wkid: r.wkid\n    } : n;\n  return {\n    spatialReference: a,\n    getFeatureSpatialReference: d(e) || a.wkid && t.supportedSpatialReferences.includes(a.wkid) ? {\n      wkid: a.wkid\n    } : {\n      wkid: t.defaultSpatialReference\n    }\n  };\n}\nexport { J as describeFeatureType, Y as findFeatureType, v as getCapabilities, K as getFeature, ee as getFeatureCount, X as getFeatureTypeInfo, oe as getGetFeatureSpatialReference, W as getWFSLayerInfo, Q as parseDescribeFeatureTypeResponse, U as parseGetCapabilitiesResponse, z as prepareWFSLayerFields, S as wfsOidFieldName };"],
  "mappings": "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",
  "names": ["F", "N", "G", "n", "U", "e", "o", "r", "t", "s", "p", "u", "K", "a"]
}
