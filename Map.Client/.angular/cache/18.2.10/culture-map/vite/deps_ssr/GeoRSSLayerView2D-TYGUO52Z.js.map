{
  "version": 3,
  "sources": ["../../../../../../node_modules/@arcgis/core/views/2d/layers/GeoRSSLayerView2D.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { _ as e } from \"../../../chunks/tslib.es6.js\";\nimport r from \"../../../PopupTemplate.js\";\nimport s from \"../../../core/Collection.js\";\nimport { watch as i, initial as t } from \"../../../core/reactiveUtils.js\";\nimport \"../../../core/Logger.js\";\nimport \"../../../core/has.js\";\nimport \"../../../core/RandomLCG.js\";\nimport \"../../../core/Error.js\";\nimport { subclass as o } from \"../../../core/accessorSupport/decorators/subclass.js\";\nimport p from \"../../../renderers/SimpleRenderer.js\";\nimport { fromJSON as a } from \"../../../renderers/support/jsonUtils.js\";\nimport l from \"../../../rest/support/FeatureSet.js\";\nimport { LayerView2DMixin as n } from \"./LayerView2D.js\";\nimport h from \"./graphics/GraphicContainer.js\";\nimport c from \"./graphics/GraphicsView2D.js\";\nimport m from \"../../layers/LayerView.js\";\nlet y = class extends n(m) {\n  constructor() {\n    super(...arguments), this._graphicsViewMap = {}, this._popupTemplates = new Map(), this.graphicsViews = [];\n  }\n  async hitTest(e, r) {\n    if (!this.graphicsViews.length) return null;\n    const s = this.layer;\n    return this.graphicsViews.reverse().flatMap(r => {\n      const i = this._popupTemplates.get(r),\n        t = r.hitTest(e);\n      for (const e of t) e.layer = s, e.sourceLayer = s, e.popupTemplate = i;\n      return t;\n    }).map(r => ({\n      type: \"graphic\",\n      graphic: r,\n      layer: s,\n      mapPoint: e\n    }));\n  }\n  update(e) {\n    if (this.graphicsViews) for (const r of this.graphicsViews) r.processUpdate(e);\n  }\n  attach() {\n    this.addAttachHandles([i(() => this.layer?.featureCollections, e => {\n      this._clear();\n      for (const {\n        popupInfo: i,\n        featureSet: t,\n        layerDefinition: o\n      } of e) {\n        const e = l.fromJSON(t),\n          p = new s(e.features),\n          n = o.drawingInfo,\n          m = i ? r.fromJSON(i) : null,\n          y = a(n.renderer),\n          g = new c({\n            requestUpdateCallback: () => this.requestUpdate(),\n            view: this.view,\n            graphics: p,\n            renderer: y,\n            container: new h(this.view.featuresTilingScheme)\n          });\n        this._graphicsViewMap[e.geometryType] = g, this._popupTemplates.set(g, m), \"polygon\" !== e.geometryType || this.layer.polygonSymbol ? \"polyline\" !== e.geometryType || this.layer.lineSymbol ? \"point\" !== e.geometryType || this.layer.pointSymbol || (this.layer.pointSymbol = y.symbol) : this.layer.lineSymbol = y.symbol : this.layer.polygonSymbol = y.symbol, this.graphicsViews.push(g), this.container.addChild(g.container);\n      }\n    }, t), i(() => this.layer?.polygonSymbol, e => {\n      this._graphicsViewMap.polygon.renderer = new p({\n        symbol: e\n      });\n    }, t), i(() => this.layer?.lineSymbol, e => {\n      this._graphicsViewMap.polyline.renderer = new p({\n        symbol: e\n      });\n    }, t), i(() => this.layer?.pointSymbol, e => {\n      this._graphicsViewMap.point.renderer = new p({\n        symbol: e\n      });\n    }, t)]);\n  }\n  detach() {\n    this._clear();\n  }\n  moveEnd() {}\n  viewChange() {\n    for (const e of this.graphicsViews) e.viewChange();\n  }\n  _clear() {\n    this.container.removeAllChildren();\n    for (const e of this.graphicsViews) e.destroy();\n    this._graphicsViewMap = {}, this._popupTemplates.clear(), this.graphicsViews.length = 0;\n  }\n};\ny = e([o(\"esri.views.2d.layers.GeoRSSLayerView2D\")], y);\nconst g = y;\nexport { g as default };"],
  "mappings": "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",
  "names": ["y", "e", "r", "t", "d", "p", "g", "V"]
}
