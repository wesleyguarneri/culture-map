{
  "version": 3,
  "sources": ["../../../../../../node_modules/@arcgis/core/layers/graphics/sources/support/MemorySourceWorker.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport e from \"../../../../core/Error.js\";\nimport { getJsonType as t, isPoint as i } from \"../../../../geometry/support/jsonUtils.js\";\nimport { wgs84 as s } from \"../../../../geometry/support/spatialReferenceUtils.js\";\nimport { convertFromFeatures as n, convertToFeature as r, convertFromFeature as a } from \"../../featureConversionUtils.js\";\nimport { initialObjectId as o, findLastObjectIdFromFeatures as l } from \"../../objectIdUtils.js\";\nimport u from \"../../data/FeatureStore.js\";\nimport { checkProjectionSupport as d, project as p } from \"../../data/projectionSupport.js\";\nimport { QueryEngine as f } from \"../../data/QueryEngine.js\";\nimport { createDefaultAttributesFunction as c, createDrawingInfo as m, createDefaultTemplate as y } from \"./clientSideDefaults.js\";\nimport { loadGeometryEngineForSimplify as h, createFeatureEditErrorResult as g, mixAttributes as I, createFeatureEditSuccessResult as F, simplify as b } from \"./sourceUtils.js\";\nimport j from \"../../../support/FieldsIndex.js\";\nimport { kebabDict as E } from \"../../../support/fieldType.js\";\nimport { getFieldDefaultLength as T, getFieldDefaultValue as _ } from \"../../../support/fieldUtils.js\";\nimport { utc as x } from \"../../../../time/timeZoneUtils.js\";\nconst R = s,\n  q = {\n    xmin: -180,\n    ymin: -90,\n    xmax: 180,\n    ymax: 90,\n    spatialReference: s\n  },\n  D = {\n    hasAttachments: !1,\n    capabilities: \"query, editing, create, delete, update\",\n    useStandardizedQueries: !0,\n    supportsCoordinatesQuantization: !0,\n    supportsReturningQueryGeometry: !0,\n    advancedQueryCapabilities: {\n      supportsQueryAttachments: !1,\n      supportsStatistics: !0,\n      supportsPercentileStatistics: !0,\n      supportsReturningGeometryCentroid: !0,\n      supportsQueryWithDistance: !0,\n      supportsDistinct: !0,\n      supportsReturningQueryExtent: !0,\n      supportsReturningGeometryProperties: !1,\n      supportsHavingClause: !0,\n      supportsOrderBy: !0,\n      supportsPagination: !0,\n      supportsQueryWithResultType: !1,\n      supportsSqlExpression: !0,\n      supportsDisjointSpatialRel: !0\n    }\n  };\nfunction O(e) {\n  return i(e) ? null != e.z : !!e.hasZ;\n}\nfunction w(e) {\n  return i(e) ? null != e.m : !!e.hasM;\n}\nclass S {\n  constructor() {\n    this._queryEngine = null, this._nextObjectId = null;\n  }\n  destroy() {\n    this._queryEngine?.destroy(), this._queryEngine = this._createDefaultAttributes = null;\n  }\n  async load(t) {\n    const i = [],\n      {\n        features: s\n      } = t,\n      n = this._inferLayerProperties(s, t.fields),\n      r = t.fields || [],\n      a = null != t.hasM ? t.hasM : !!n.hasM,\n      p = null != t.hasZ ? t.hasZ : !!n.hasZ,\n      h = !t.spatialReference && !n.spatialReference,\n      g = h ? R : t.spatialReference || n.spatialReference,\n      I = h ? q : null,\n      F = t.geometryType || n.geometryType,\n      b = !F;\n    let O = t.objectIdField || n.objectIdField,\n      w = t.timeInfo;\n    const S = new j(r);\n    if (!b && (h && i.push({\n      name: \"feature-layer:spatial-reference-not-found\",\n      message: \"Spatial reference not provided or found in features. Defaults to WGS84\"\n    }), !F)) throw new e(\"feature-layer:missing-property\", \"geometryType not set and couldn't be inferred from the provided features\");\n    if (!O) throw new e(\"feature-layer:missing-property\", \"objectIdField not set and couldn't be found in the provided fields\");\n    if (n.objectIdField && O !== n.objectIdField && (i.push({\n      name: \"feature-layer:duplicated-oid-field\",\n      message: `Provided objectIdField \"${O}\" doesn't match the field name \"${n.objectIdField}\", found in the provided fields`\n    }), O = n.objectIdField), O && !n.objectIdField) {\n      const e = S.get(O);\n      e ? (O = e.name, e.type = \"esriFieldTypeOID\", e.editable = !1, e.nullable = !1) : r.unshift({\n        alias: O,\n        name: O,\n        type: \"esriFieldTypeOID\",\n        editable: !1,\n        nullable: !1\n      });\n    }\n    for (const o of r) {\n      if (null == o.name && (o.name = o.alias), null == o.alias && (o.alias = o.name), !o.name) throw new e(\"feature-layer:invalid-field-name\", \"field name is missing\", {\n        field: o\n      });\n      if (o.name === O && (o.type = \"esriFieldTypeOID\"), !E.jsonValues.includes(o.type)) throw new e(\"feature-layer:invalid-field-type\", `invalid type for field \"${o.name}\"`, {\n        field: o\n      });\n      null == o.length && (o.length = T(o));\n    }\n    const v = {};\n    for (const e of r) if (\"esriFieldTypeOID\" !== e.type && \"esriFieldTypeGlobalID\" !== e.type) {\n      const t = _(e);\n      void 0 !== t && (v[e.name] = t);\n    }\n    if (w) {\n      if (w.startTimeField) {\n        const e = S.get(w.startTimeField);\n        e ? (w.startTimeField = e.name, e.type = \"esriFieldTypeDate\") : w.startTimeField = null;\n      }\n      if (w.endTimeField) {\n        const e = S.get(w.endTimeField);\n        e ? (w.endTimeField = e.name, e.type = \"esriFieldTypeDate\") : w.endTimeField = null;\n      }\n      if (w.trackIdField) {\n        const e = S.get(w.trackIdField);\n        e ? w.trackIdField = e.name : (w.trackIdField = null, i.push({\n          name: \"feature-layer:invalid-timeInfo-trackIdField\",\n          message: \"trackIdField is missing\",\n          details: {\n            timeInfo: w\n          }\n        }));\n      }\n      w.startTimeField || w.endTimeField || (i.push({\n        name: \"feature-layer:invalid-timeInfo\",\n        message: \"startTimeField and endTimeField are missing or invalid\",\n        details: {\n          timeInfo: w\n        }\n      }), w = null);\n    }\n    const Q = S.dateFields.length ? {\n      timeZoneIANA: t.dateFieldsTimeZone ?? x\n    } : null;\n    this._createDefaultAttributes = c(v, O);\n    const M = {\n      warnings: i,\n      featureErrors: [],\n      layerDefinition: {\n        ...D,\n        drawingInfo: m(F),\n        templates: y(v),\n        extent: I,\n        geometryType: F,\n        objectIdField: O,\n        fields: r,\n        hasZ: p,\n        hasM: a,\n        timeInfo: w,\n        dateFieldsTimeReference: Q\n      },\n      assignedObjectIds: {}\n    };\n    if (this._queryEngine = new f({\n      fieldsIndex: j.fromLayerJSON({\n        fields: r,\n        timeInfo: w,\n        dateFieldsTimeReference: Q\n      }),\n      geometryType: F,\n      hasM: a,\n      hasZ: p,\n      objectIdField: O,\n      spatialReference: g,\n      featureStore: new u({\n        geometryType: F,\n        hasM: a,\n        hasZ: p\n      }),\n      timeInfo: w,\n      cacheSpatialQueries: !0\n    }), !s?.length) return this._nextObjectId = o, M;\n    const Z = l(O, s);\n    return this._nextObjectId = Z + 1, await d(s, g), this._loadInitialFeatures(M, s);\n  }\n  async applyEdits(e) {\n    const {\n      spatialReference: t,\n      geometryType: i\n    } = this._queryEngine;\n    return await Promise.all([h(t, i), d(e.adds, t), d(e.updates, t)]), this._applyEdits(e);\n  }\n  queryFeatures(e, t = {}) {\n    return this._queryEngine.executeQuery(e, t.signal);\n  }\n  queryFeatureCount(e, t = {}) {\n    return this._queryEngine.executeQueryForCount(e, t.signal);\n  }\n  queryObjectIds(e, t = {}) {\n    return this._queryEngine.executeQueryForIds(e, t.signal);\n  }\n  queryExtent(e, t = {}) {\n    return this._queryEngine.executeQueryForExtent(e, t.signal);\n  }\n  querySnapping(e, t = {}) {\n    return this._queryEngine.executeQueryForSnapping(e, t.signal);\n  }\n  _inferLayerProperties(e, i) {\n    let s,\n      n,\n      r = null,\n      a = null,\n      o = null;\n    for (const l of e) {\n      const e = l.geometry;\n      if (null != e && (r || (r = t(e)), a || (a = e.spatialReference), null == s && (s = O(e)), null == n && (n = w(e)), r && a && null != s && null != n)) break;\n    }\n    if (i && i.length) {\n      let e = null;\n      i.some(t => {\n        const i = \"esriFieldTypeOID\" === t.type,\n          s = !t.type && t.name && \"objectid\" === t.name.toLowerCase();\n        return e = t, i || s;\n      }) && (o = e.name);\n    }\n    return {\n      geometryType: r,\n      spatialReference: a,\n      objectIdField: o,\n      hasM: n,\n      hasZ: s\n    };\n  }\n  async _loadInitialFeatures(e, i) {\n    const {\n        geometryType: s,\n        hasM: r,\n        hasZ: a,\n        objectIdField: o,\n        spatialReference: l,\n        featureStore: u,\n        fieldsIndex: d\n      } = this._queryEngine,\n      f = [];\n    for (const n of i) {\n      if (null != n.uid && (e.assignedObjectIds[n.uid] = -1), n.geometry && s !== t(n.geometry)) {\n        e.featureErrors.push(g(\"Incorrect geometry type.\"));\n        continue;\n      }\n      const i = this._createDefaultAttributes(),\n        r = I(d, i, n.attributes, !0);\n      r ? e.featureErrors.push(r) : (this._assignObjectId(i, n.attributes, !0), n.attributes = i, null != n.uid && (e.assignedObjectIds[n.uid] = n.attributes[o]), null != n.geometry && (n.geometry = p(n.geometry, n.geometry.spatialReference, l)), f.push(n));\n    }\n    u.addMany(n([], f, s, a, r, o));\n    const {\n      fullExtent: c,\n      timeExtent: m\n    } = await this._queryEngine.fetchRecomputedExtents();\n    if (e.layerDefinition.extent = c, m) {\n      const {\n        start: t,\n        end: i\n      } = m;\n      e.layerDefinition.timeInfo.timeExtent = [t, i];\n    }\n    return e;\n  }\n  async _applyEdits(e) {\n    const {\n        adds: t,\n        updates: i,\n        deletes: s\n      } = e,\n      n = {\n        addResults: [],\n        deleteResults: [],\n        updateResults: [],\n        uidToObjectId: {}\n      };\n    if (t?.length && this._applyAddEdits(n, t), i?.length && this._applyUpdateEdits(n, i), s?.length) {\n      for (const e of s) n.deleteResults.push(F(e));\n      this._queryEngine.featureStore.removeManyById(s);\n    }\n    const {\n      fullExtent: r,\n      timeExtent: a\n    } = await this._queryEngine.fetchRecomputedExtents();\n    return {\n      extent: r,\n      timeExtent: a,\n      featureEditResults: n\n    };\n  }\n  _applyAddEdits(e, i) {\n    const {\n        addResults: s\n      } = e,\n      {\n        geometryType: r,\n        hasM: a,\n        hasZ: o,\n        objectIdField: l,\n        spatialReference: u,\n        featureStore: d,\n        fieldsIndex: f\n      } = this._queryEngine,\n      c = [];\n    for (const n of i) {\n      if (n.geometry && r !== t(n.geometry)) {\n        s.push(g(\"Incorrect geometry type.\"));\n        continue;\n      }\n      const i = this._createDefaultAttributes(),\n        a = I(f, i, n.attributes);\n      if (a) s.push(a);else {\n        if (this._assignObjectId(i, n.attributes), n.attributes = i, null != n.uid) {\n          const t = n.attributes[l];\n          e.uidToObjectId[n.uid] = t;\n        }\n        if (null != n.geometry) {\n          const e = n.geometry.spatialReference ?? u;\n          n.geometry = p(b(n.geometry, e), e, u);\n        }\n        c.push(n), s.push(F(n.attributes[l]));\n      }\n    }\n    d.addMany(n([], c, r, o, a, l));\n  }\n  _applyUpdateEdits({\n    updateResults: e\n  }, i) {\n    const {\n      geometryType: s,\n      hasM: n,\n      hasZ: o,\n      objectIdField: l,\n      spatialReference: u,\n      featureStore: d,\n      fieldsIndex: f\n    } = this._queryEngine;\n    for (const c of i) {\n      const {\n          attributes: i,\n          geometry: m\n        } = c,\n        y = i?.[l];\n      if (null == y) {\n        e.push(g(`Identifier field ${l} missing`));\n        continue;\n      }\n      if (!d.has(y)) {\n        e.push(g(`Feature with object id ${y} missing`));\n        continue;\n      }\n      const h = r(d.getFeature(y), s, o, n);\n      if (null != m) {\n        if (s !== t(m)) {\n          e.push(g(\"Incorrect geometry type.\"));\n          continue;\n        }\n        const i = m.spatialReference ?? u;\n        h.geometry = p(b(m, i), i, u);\n      }\n      if (i) {\n        const t = I(f, h.attributes, i);\n        if (t) {\n          e.push(t);\n          continue;\n        }\n      }\n      d.add(a(h, s, o, n, l)), e.push(F(y));\n    }\n  }\n  _assignObjectId(e, t, i = !1) {\n    const s = this._queryEngine.objectIdField;\n    i && t && isFinite(t[s]) ? e[s] = t[s] : e[s] = this._nextObjectId++;\n  }\n}\nexport { S as default };"],
  "mappings": "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",
  "names": ["t", "i", "s", "n", "p", "g", "O", "w", "S", "o", "Z", "j", "e", "u", "d", "f", "r", "c", "m", "a", "y"]
}
