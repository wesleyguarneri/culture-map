{
  "version": 3,
  "sources": ["../../../../../../node_modules/@arcgis/core/layers/support/SimpleBandStatistics.js", "../../../../../../node_modules/@arcgis/core/layers/support/PixelBlock.js", "../../../../../../node_modules/@arcgis/core/layers/support/rasterFunctions/pixelUtils.js", "../../../../../../node_modules/@arcgis/core/layers/support/rasterFunctions/vectorFieldUtils.js", "../../../../../../node_modules/@arcgis/core/views/2d/engine/flow/dataUtils.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nclass l {\n  constructor(l = null, a = null, t = null) {\n    this.minValue = l, this.maxValue = a, this.noDataValue = t;\n  }\n}\nexport { l as SimpleBandStatistics };", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { _ as t } from \"../../chunks/tslib.es6.js\";\nimport e from \"../../core/Error.js\";\nimport { JSONSupport as s } from \"../../core/JSONSupport.js\";\nimport { clone as i } from \"../../core/lang.js\";\nimport l from \"../../core/Logger.js\";\nimport { property as r } from \"../../core/accessorSupport/decorators/property.js\";\nimport { cast as o } from \"../../core/accessorSupport/decorators/cast.js\";\nimport { subclass as n } from \"../../core/accessorSupport/decorators/subclass.js\";\nimport { SimpleBandStatistics as a } from \"./SimpleBandStatistics.js\";\nimport { getPixelValueRange as h } from \"./rasterFormats/pixelRangeUtils.js\";\nvar p;\nlet c = p = class extends s {\n  static createEmptyBand(t, e) {\n    return new (p.getPixelArrayConstructor(t))(e);\n  }\n  static combineBandMasks(t) {\n    if (t.length < 2) return t[0];\n    const e = t[0].length,\n      s = new Uint8Array(e).fill(255);\n    for (let i = 0; i < t.length; i++) {\n      const l = t[i];\n      for (let t = 0; t < e; t++) l[t] || (s[t] = 0);\n    }\n    return s;\n  }\n  static getPixelArrayConstructor(t) {\n    let e;\n    switch (t) {\n      case \"u1\":\n      case \"u2\":\n      case \"u4\":\n      case \"u8\":\n        e = Uint8Array;\n        break;\n      case \"u16\":\n        e = Uint16Array;\n        break;\n      case \"u32\":\n        e = Uint32Array;\n        break;\n      case \"s8\":\n        e = Int8Array;\n        break;\n      case \"s16\":\n        e = Int16Array;\n        break;\n      case \"s32\":\n        e = Int32Array;\n        break;\n      case \"f32\":\n      case \"c64\":\n      case \"c128\":\n      case \"unknown\":\n        e = Float32Array;\n        break;\n      case \"f64\":\n        e = Float64Array;\n    }\n    return e;\n  }\n  constructor(t) {\n    super(t), this.width = null, this.height = null, this.pixelType = \"f32\", this.validPixelCount = null, this.mask = null, this.maskIsAlpha = !1, this.premultiplyAlpha = !1, this.statistics = null, this.depthCount = 1;\n  }\n  castPixelType(t) {\n    if (!t) return \"f32\";\n    let e = t.toLowerCase();\n    return [\"u1\", \"u2\", \"u4\"].includes(e) ? e = \"u8\" : [\"unknown\", \"u8\", \"s8\", \"u16\", \"s16\", \"u32\", \"s32\", \"f32\", \"f64\"].includes(e) || (e = \"f32\"), e;\n  }\n  getPlaneCount() {\n    return this.pixels?.length;\n  }\n  addData(t) {\n    if (!t.pixels || t.pixels.length !== this.width * this.height) throw new e(\"pixelblock:invalid-or-missing-pixels\", \"add data requires valid pixels array that has same length defined by pixel block width * height\");\n    this.pixels || (this.pixels = []), this.statistics || (this.statistics = []), this.pixels.push(t.pixels), this.statistics.push(t.statistics ?? new a());\n  }\n  getAsRGBA() {\n    const t = new ArrayBuffer(this.width * this.height * 4);\n    switch (this.pixelType) {\n      case \"s8\":\n      case \"s16\":\n      case \"u16\":\n      case \"s32\":\n      case \"u32\":\n      case \"f32\":\n      case \"f64\":\n        this._fillFromNon8Bit(t);\n        break;\n      default:\n        this._fillFrom8Bit(t);\n    }\n    return new Uint8ClampedArray(t);\n  }\n  getAsRGBAFloat() {\n    const t = new Float32Array(this.width * this.height * 4);\n    return this._fillFrom32Bit(t), t;\n  }\n  updateStatistics() {\n    if (!this.pixels) return;\n    this.statistics = this.pixels.map(t => u(t, this.mask));\n    const t = this.mask;\n    let e = 0;\n    if (null != t) for (let s = 0; s < t.length; s++) t[s] && e++;else e = this.width * this.height;\n    this.validPixelCount = e;\n  }\n  clamp(t) {\n    if (!t || \"f64\" === t || \"f32\" === t || !this.pixels) return;\n    const [e, s] = h(t),\n      i = this.pixels,\n      l = this.width * this.height,\n      r = i.length;\n    let o, n, a;\n    const c = [];\n    for (let h = 0; h < r; h++) {\n      a = p.createEmptyBand(t, l), o = i[h];\n      for (let t = 0; t < l; t++) n = o[t], a[t] = n > s ? s : n < e ? e : n;\n      c.push(a);\n    }\n    this.pixels = c, this.pixelType = t;\n  }\n  extractBands(t) {\n    const {\n      pixels: e,\n      statistics: s\n    } = this;\n    if (null == t || 0 === t.length || !e || 0 === e.length) return this;\n    const i = e.length,\n      l = t.some(t => t >= e.length),\n      r = i === t.length && !t.some((t, e) => t !== e);\n    if (l || r) return this;\n    const o = this.bandMasks?.length === i ? t.map(t => this.bandMasks[t]) : void 0;\n    let {\n      mask: n,\n      validPixelCount: a\n    } = this;\n    const {\n      width: h,\n      height: c\n    } = this;\n    return o?.length && (n = p.combineBandMasks(o), a = n.filter(t => !!t).length), new p({\n      pixelType: this.pixelType,\n      width: h,\n      height: c,\n      mask: n,\n      bandMasks: o,\n      validPixelCount: a,\n      maskIsAlpha: this.maskIsAlpha,\n      pixels: t.map(t => e[t]),\n      statistics: s && t.map(t => s[t])\n    });\n  }\n  clone() {\n    const t = new p({\n      width: this.width,\n      height: this.height,\n      pixelType: this.pixelType,\n      maskIsAlpha: this.maskIsAlpha,\n      validPixelCount: this.validPixelCount\n    });\n    let e;\n    null != this.mask && (t.mask = new Uint8Array(this.mask)), this.bandMasks && (t.bandMasks = this.bandMasks.map(t => new Uint8Array(t)));\n    const s = p.getPixelArrayConstructor(this.pixelType);\n    if (this.pixels && this.pixels.length > 0) {\n      t.pixels = [];\n      const i = !!this.pixels[0].slice;\n      for (e = 0; e < this.pixels.length; e++) t.pixels[e] = i ? this.pixels[e].slice(0, this.pixels[e].length) : new s(this.pixels[e]);\n    }\n    if (this.statistics) for (t.statistics = [], e = 0; e < this.statistics.length; e++) t.statistics[e] = i(this.statistics[e]);\n    return t.premultiplyAlpha = this.premultiplyAlpha, t;\n  }\n  _fillFrom8Bit(t) {\n    const {\n      mask: e,\n      maskIsAlpha: s,\n      premultiplyAlpha: i,\n      pixels: r\n    } = this;\n    if (!t || !r?.length) return void l.getLogger(this).error(\"getAsRGBA()\", \"Unable to convert to RGBA. The input pixel block is empty.\");\n    let o, n, a, h;\n    o = n = a = r[0], r.length >= 3 ? (n = r[1], a = r[2]) : 2 === r.length && (n = r[1]);\n    const p = new Uint32Array(t),\n      c = this.width * this.height;\n    if (o.length === c) {\n      if (null != e && e.length === c) {\n        if (s) for (h = 0; h < c; h++) {\n          const t = e[h];\n          if (t) {\n            const e = t / 255;\n            p[h] = i ? t << 24 | a[h] * e << 16 | n[h] * e << 8 | o[h] * e : t << 24 | a[h] << 16 | n[h] << 8 | o[h];\n          }\n        } else for (h = 0; h < c; h++) e[h] && (p[h] = 255 << 24 | a[h] << 16 | n[h] << 8 | o[h]);\n      } else for (h = 0; h < c; h++) p[h] = 255 << 24 | a[h] << 16 | n[h] << 8 | o[h];\n    } else l.getLogger(this).error(\"getAsRGBA()\", \"Unable to convert to RGBA. The pixelblock is invalid.\");\n  }\n  _fillFromNon8Bit(t) {\n    const {\n      pixels: e,\n      mask: s,\n      statistics: i\n    } = this;\n    if (!t || !e?.length) return void l.getLogger(this).error(\"getAsRGBA()\", \"Unable to convert to RGBA. The input pixel block is empty.\");\n    const r = this.pixelType;\n    let o = 1,\n      n = 0,\n      a = 1;\n    if (i && i.length > 0) {\n      for (const t of i) if (null != t.minValue && (n = Math.min(n, t.minValue)), null != t.maxValue && null != t.minValue) {\n        const e = t.maxValue - t.minValue;\n        a = Math.max(a, e);\n      }\n      o = 255 / a;\n    } else {\n      let t = 255;\n      \"s8\" === r ? (n = -128, t = 127) : \"u16\" === r ? t = 65535 : \"s16\" === r ? (n = -32768, t = 32767) : \"u32\" === r ? t = 4294967295 : \"s32\" === r ? (n = -2147483648, t = 2147483647) : \"f32\" === r ? (n = -34e38, t = 34e38) : \"f64\" === r && (n = -Number.MAX_VALUE, t = Number.MAX_VALUE), o = 255 / (t - n);\n    }\n    const h = new Uint32Array(t),\n      p = this.width * this.height;\n    let c, u, g, f, m;\n    if (c = u = g = e[0], c.length !== p) return l.getLogger(this).error(\"getAsRGBA()\", \"Unable to convert to RGBA. The pixelblock is invalid.\");\n    if (e.length >= 2) {\n      if (u = e[1], e.length >= 3 && (g = e[2]), null != s && s.length === p) for (f = 0; f < p; f++) s[f] && (h[f] = 255 << 24 | (g[f] - n) * o << 16 | (u[f] - n) * o << 8 | (c[f] - n) * o);else for (f = 0; f < p; f++) h[f] = 255 << 24 | (g[f] - n) * o << 16 | (u[f] - n) * o << 8 | (c[f] - n) * o;\n    } else if (null != s && s.length === p) for (f = 0; f < p; f++) m = (c[f] - n) * o, s[f] && (h[f] = 255 << 24 | m << 16 | m << 8 | m);else for (f = 0; f < p; f++) m = (c[f] - n) * o, h[f] = 255 << 24 | m << 16 | m << 8 | m;\n  }\n  _fillFrom32Bit(t) {\n    const {\n      pixels: e,\n      mask: s\n    } = this;\n    if (!t || !e?.length) return l.getLogger(this).error(\"getAsRGBAFloat()\", \"Unable to convert to RGBA. The input pixel block is empty.\");\n    let i, r, o, n;\n    i = r = o = e[0], e.length >= 3 ? (r = e[1], o = e[2]) : 2 === e.length && (r = e[1]);\n    const a = this.width * this.height;\n    if (i.length !== a) return l.getLogger(this).error(\"getAsRGBAFloat()\", \"Unable to convert to RGBA. The pixelblock is invalid.\");\n    let h = 0;\n    if (null != s && s.length === a) for (n = 0; n < a; n++) t[h++] = i[n], t[h++] = r[n], t[h++] = o[n], t[h++] = 1 & s[n];else for (n = 0; n < a; n++) t[h++] = i[n], t[h++] = r[n], t[h++] = o[n], t[h++] = 1;\n  }\n};\nfunction u(t, e) {\n  let s = 1 / 0,\n    i = -1 / 0;\n  const l = t.length;\n  let r,\n    o = 0;\n  if (null != e) for (r = 0; r < l; r++) e[r] && (o = t[r], s = o < s ? o : s, i = o > i ? o : i);else for (r = 0; r < l; r++) o = t[r], s = o < s ? o : s, i = o > i ? o : i;\n  return new a(s, i);\n}\nt([r({\n  json: {\n    write: !0\n  }\n})], c.prototype, \"width\", void 0), t([r({\n  json: {\n    write: !0\n  }\n})], c.prototype, \"height\", void 0), t([r({\n  json: {\n    write: !0\n  }\n})], c.prototype, \"pixelType\", void 0), t([o(\"pixelType\")], c.prototype, \"castPixelType\", null), t([r({\n  json: {\n    write: !0\n  }\n})], c.prototype, \"validPixelCount\", void 0), t([r({\n  json: {\n    write: !0\n  }\n})], c.prototype, \"mask\", void 0), t([r({\n  json: {\n    write: !0\n  }\n})], c.prototype, \"maskIsAlpha\", void 0), t([r({\n  json: {\n    write: !0\n  }\n})], c.prototype, \"pixels\", void 0), t([r()], c.prototype, \"premultiplyAlpha\", void 0), t([r({\n  json: {\n    write: !0\n  }\n})], c.prototype, \"statistics\", void 0), t([r({\n  json: {\n    write: !0\n  }\n})], c.prototype, \"depthCount\", void 0), t([r({\n  json: {\n    write: !0\n  }\n})], c.prototype, \"noDataValues\", void 0), t([r({\n  json: {\n    write: !0\n  }\n})], c.prototype, \"bandMasks\", void 0), c = p = t([n(\"esri.layers.support.PixelBlock\")], c);\nconst g = c;\nexport { g as default };", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport t from \"../PixelBlock.js\";\nimport { getPixelValueRange as e } from \"../rasterFormats/pixelRangeUtils.js\";\nvar n, l;\n!function (t) {\n  t[t.matchAny = 0] = \"matchAny\", t[t.matchAll = 1] = \"matchAll\";\n}(n || (n = {})), function (t) {\n  t[t.bestMatch = 0] = \"bestMatch\", t[t.fail = 1] = \"fail\";\n}(l || (l = {}));\nconst i = 6;\nfunction o(t) {\n  return null != t && \"esri.layers.support.PixelBlock\" === t.declaredClass && t.pixels && t.pixels.length > 0;\n}\nfunction s(t, e) {\n  return e?.length && o(t) ? t.extractBands(e) : t;\n}\nfunction r(e) {\n  if (!e?.length || e.some(t => !o(t))) return null;\n  if (1 === e.length) return e[0]?.clone() ?? null;\n  const n = e,\n    {\n      width: l,\n      height: i,\n      pixelType: s\n    } = n[0];\n  if (n.some(t => t.width !== l || t.height !== i)) return null;\n  const r = n.map(({\n    mask: t\n  }) => t).filter(t => null != t);\n  let a = null;\n  r.length && (a = new Uint8Array(l * i), a.set(r[0]), r.length > 1 && m(r.slice(1), a));\n  const h = [];\n  n.forEach(({\n    pixels: t\n  }) => h.push(...t));\n  const f = n.map(({\n      statistics: t\n    }) => t).filter(t => t?.length),\n    c = [];\n  return f.forEach(t => c.push(...t)), new t({\n    pixelType: s,\n    width: l,\n    height: i,\n    mask: a,\n    pixels: h,\n    statistics: c.length ? c : null\n  });\n}\nfunction a(t) {\n  if (!t) return;\n  const e = t.colormap;\n  if (!e || 0 === e.length) return;\n  const n = e.sort((t, e) => t[0] - e[0]);\n  let l = 0;\n  n[0][0] < 0 && (l = n[0][0]);\n  const i = Math.max(256, n[n.length - 1][0] - l + 1),\n    o = new Uint8Array(4 * i),\n    s = [];\n  let r,\n    a = 0,\n    h = 0;\n  const f = 5 === n[0].length;\n  if (i > 65536) return n.forEach(t => {\n    s[t[0] - l] = f ? t.slice(1) : t.slice(1).concat([255]);\n  }), {\n    indexed2DColormap: s,\n    offset: l,\n    alphaSpecified: f\n  };\n  if (t.fillUnspecified) for (r = n[h], a = r[0] - l; a < i; a++) o[4 * a] = r[1], o[4 * a + 1] = r[2], o[4 * a + 2] = r[3], o[4 * a + 3] = f ? r[4] : 255, a === r[0] - l && (r = h === n.length - 1 ? r : n[++h]);else for (a = 0; a < n.length; a++) r = n[a], h = 4 * (r[0] - l), o[h] = r[1], o[h + 1] = r[2], o[h + 2] = r[3], o[h + 3] = f ? r[4] : 255;\n  return {\n    indexedColormap: o,\n    offset: l,\n    alphaSpecified: f\n  };\n}\nfunction h(t, e) {\n  if (!o(t)) return t;\n  if (!e || !e.indexedColormap && !e.indexed2DColormap) return t;\n  const n = t.clone(),\n    l = n.pixels;\n  let i = n.mask;\n  const s = n.width * n.height;\n  if (1 !== l.length) return t;\n  const {\n    indexedColormap: r,\n    indexed2DColormap: a,\n    offset: h,\n    alphaSpecified: f\n  } = e;\n  let c = 0;\n  const u = l[0],\n    p = new Uint8Array(u.length),\n    x = new Uint8Array(u.length),\n    d = new Uint8Array(u.length);\n  let m,\n    g = 0;\n  if (r) {\n    const t = r.length - 1;\n    if (null != i) for (c = 0; c < s; c++) i[c] && (g = 4 * (u[c] - h), g < h || g > t ? i[c] = 0 : (p[c] = r[g], x[c] = r[g + 1], d[c] = r[g + 2], i[c] = r[g + 3]));else {\n      for (i = new Uint8Array(s), c = 0; c < s; c++) g = 4 * (u[c] - h), g < h || g > t ? i[c] = 0 : (p[c] = r[g], x[c] = r[g + 1], d[c] = r[g + 2], i[c] = r[g + 3]);\n      n.mask = i;\n    }\n  } else if (a) if (null != i) for (c = 0; c < s; c++) i[c] && (m = a[u[c]], p[c] = m[0], x[c] = m[1], d[c] = m[2], i[c] = m[3]);else {\n    for (i = new Uint8Array(s), c = 0; c < s; c++) m = a[u[c]], p[c] = m[0], x[c] = m[1], d[c] = m[2], i[c] = m[3];\n    n.mask = i;\n  }\n  return n.pixels = [p, x, d], n.statistics = null, n.pixelType = \"u8\", n.maskIsAlpha = f, n;\n}\nfunction f(e, n) {\n  if (!o(e)) return null;\n  const {\n      pixels: l,\n      mask: i\n    } = e,\n    s = l.length;\n  let r = n.lut;\n  const {\n    offset: a\n  } = n;\n  r && 1 === r[0].length && (r = l.map(() => r));\n  const h = [],\n    f = n.outputPixelType || \"u8\";\n  for (let t = 0; t < s; t++) {\n    const e = c(l[t], i, r[t], a || 0, f);\n    h.push(e);\n  }\n  const u = new t({\n    width: e.width,\n    height: e.height,\n    pixels: h,\n    mask: i,\n    pixelType: f\n  });\n  return u.updateStatistics(), u;\n}\nfunction c(e, n, l, i, o) {\n  const s = e.length,\n    r = t.createEmptyBand(o, s);\n  if (n) for (let t = 0; t < s; t++) n[t] && (r[t] = l[e[t] - i]);else for (let t = 0; t < s; t++) r[t] = l[e[t] - i];\n  return r;\n}\nfunction u(t, e) {\n  if (!o(t)) return null;\n  const n = t.clone(),\n    {\n      pixels: l\n    } = n,\n    i = n.width * n.height,\n    s = e.length,\n    r = Math.floor(s / 2),\n    a = e[Math.floor(r)],\n    h = l[0];\n  let f,\n    c,\n    u,\n    p,\n    x,\n    d,\n    m = !1;\n  const g = new Uint8Array(i),\n    y = new Uint8Array(i),\n    w = new Uint8Array(i);\n  let k = n.mask;\n  const M = 4 === e[0].mappedColor.length;\n  for (k || (k = new Uint8Array(i), k.fill(M ? 255 : 1), n.mask = k), x = 0; x < i; x++) if (k[x]) {\n    for (f = h[x], m = !1, d = r, c = a, u = 0, p = s - 1; p - u > 1;) {\n      if (f === c.value) {\n        m = !0;\n        break;\n      }\n      f > c.value ? u = d : p = d, d = Math.floor((u + p) / 2), c = e[Math.floor(d)];\n    }\n    m || (f === e[u].value ? (c = e[u], m = !0) : f === e[p].value ? (c = e[p], m = !0) : f < e[u].value ? (m = !1, c = null) : f > e[u].value && (f < e[p].value ? (c = e[u], m = !0) : p === s - 1 ? (m = !1, c = null) : (c = e[p], m = !0))), m ? (g[x] = c.mappedColor[0], y[x] = c.mappedColor[1], w[x] = c.mappedColor[2], k[x] = c.mappedColor[3]) : g[x] = y[x] = w[x] = k[x] = 0;\n  }\n  return n.pixels = [g, y, w], n.mask = k, n.pixelType = \"u8\", n.maskIsAlpha = M, n;\n}\nfunction p(n, l) {\n  if (!o(n)) return null;\n  const {\n      width: i,\n      height: s\n    } = n,\n    {\n      inputRanges: r,\n      outputValues: a,\n      outputPixelType: h,\n      noDataRanges: f,\n      allowUnmatched: c,\n      isLastInputRangeInclusive: u\n    } = l,\n    p = n.pixels[0],\n    x = t.createEmptyBand(h, p.length),\n    d = n.mask,\n    m = new Uint8Array(i * s);\n  d ? m.set(d) : m.fill(255);\n  const g = n.pixelType.startsWith(\"f\") ? 1e-6 : 0,\n    y = r.map(t => t - g);\n  y[0] = r[0], y[y.length - 1] = r[r.length - 1] + (u ? 1e-6 : 0);\n  const w = r.length / 2,\n    [k, M] = e(h);\n  for (let t = 0; t < s; t++) for (let e = 0; e < i; e++) {\n    const n = t * i + e;\n    if (m[n]) {\n      const t = p[n];\n      let e = !1;\n      for (let l = w - 1; l >= 0; l--) if (t === y[2 * l] || t > y[2 * l] && t < y[2 * l + 1]) {\n        x[n] = a[l], e = !0;\n        break;\n      }\n      e || (c ? x[n] = t > M ? M : t < k ? k : t : m[n] = 0);\n    }\n  }\n  const A = f?.length;\n  if (A) for (let t = 0; t < s; t++) for (let e = 0; e < i; e++) {\n    const n = t * i + e;\n    if (!d || d[n]) {\n      const t = p[n];\n      for (let e = 0; e < A; e += 2) if (t >= f[e] && t <= f[e + 1]) {\n        x[n] = 0, m[n] = 0;\n        break;\n      }\n    }\n  }\n  return new t({\n    width: i,\n    height: s,\n    pixelType: h,\n    pixels: [x],\n    mask: m\n  });\n}\nfunction x(t, e, n, l) {\n  const i = null != n && n.length >= 2 ? new Set(n) : null,\n    o = 1 === n?.length ? n[0] : null,\n    s = !!e?.length;\n  for (let r = 0; r < t.length; r++) if (l[r]) {\n    const n = t[r];\n    if (s) {\n      let t = !1;\n      for (let l = 0; l < e.length; l += 2) if (n >= e[l] && n <= e[l + 1]) {\n        t = !0;\n        break;\n      }\n      t || (l[r] = 0);\n    }\n    l[r] && (n === o || i?.has(n)) && (l[r] = 0);\n  }\n}\nfunction d(t, e) {\n  const n = t[0].length;\n  for (let l = 0; l < n; l++) if (e[l]) {\n    let n = !1;\n    for (let e = 0; e < t.length; e++) if (t[e][l]) {\n      n = !0;\n      break;\n    }\n    n || (e[l] = 0);\n  }\n}\nfunction m(t, e) {\n  const n = t[0].length;\n  for (let l = 0; l < n; l++) if (e[l]) {\n    let n = !1;\n    for (let e = 0; e < t.length; e++) if (0 === t[e][l]) {\n      n = !0;\n      break;\n    }\n    n && (e[l] = 0);\n  }\n}\nfunction g(e, n) {\n  if (!o(e)) return null;\n  const {\n      width: l,\n      height: i,\n      pixels: s\n    } = e,\n    r = l * i,\n    a = new Uint8Array(r);\n  e.mask ? a.set(e.mask) : a.fill(255);\n  const h = s.length,\n    {\n      includedRanges: f,\n      noDataValues: u,\n      outputPixelType: p,\n      matchAll: g,\n      lookups: y\n    } = n;\n  if (y) {\n    const t = [];\n    for (let e = 0; e < h; e++) {\n      const n = y[e],\n        l = c(s[e], a, n.lut, n.offset || 0, \"u8\");\n      t.push(l);\n    }\n    1 === t.length ? a.set(t[0]) : g ? d(t, a) : m(t, a);\n  } else if (g) {\n    const t = [];\n    for (let e = 0; e < h; e++) {\n      const n = new Uint8Array(r);\n      n.set(a), x(s[e], f?.slice(2 * e, 2 * e + 2), u?.[e], n), t.push(n);\n    }\n    1 === t.length ? a.set(t[0]) : d(t, a);\n  } else for (let t = 0; t < h; t++) x(s[t], f?.slice(2 * t, 2 * t + 2), u?.[t], a);\n  return new t({\n    width: l,\n    height: i,\n    pixelType: p,\n    pixels: s,\n    mask: a\n  });\n}\nfunction y(n) {\n  const {\n    srcPixelType: l,\n    inputRanges: i,\n    outputValues: o,\n    allowUnmatched: s,\n    noDataRanges: r,\n    isLastInputRangeInclusive: a,\n    outputPixelType: h\n  } = n;\n  if (\"u8\" !== l && \"s8\" !== l && \"u16\" !== l && \"s16\" !== l) return null;\n  const f = l.includes(\"16\") ? 65536 : 256,\n    c = l.includes(\"s\") ? -f / 2 : 0,\n    u = t.createEmptyBand(h, f),\n    p = new Uint8Array(f);\n  s && p.fill(255);\n  const [x, d] = e(h);\n  if (i?.length && o?.length) {\n    const t = 1e-6,\n      e = i.map(e => e - t);\n    e[0] = i[0], a && (e[e.length - 1] = i[i.length - 1]);\n    for (let n = 0; n < e.length; n++) {\n      const t = o[n] > d ? d : o[n] < x ? x : o[n],\n        l = Math.ceil(e[2 * n] - c),\n        i = Math.floor(e[2 * n + 1] - c);\n      for (let e = l; e <= i; e++) u[e] = t, p[e] = 255;\n    }\n  }\n  if (r?.length) for (let t = 0; t < r.length; t++) {\n    const e = Math.ceil(r[2 * t] - c),\n      n = Math.floor(r[2 * t + 1] - c);\n    for (let t = e; t <= n; t++) p[t] = 0;\n  }\n  return {\n    lut: u,\n    offset: c,\n    mask: p\n  };\n}\nfunction w(t, e, n) {\n  if (\"u8\" !== t && \"s8\" !== t && \"u16\" !== t && \"s16\" !== t) return null;\n  const l = t.includes(\"16\") ? 65536 : 256,\n    i = t.includes(\"s\") ? -l / 2 : 0,\n    o = new Uint8Array(l);\n  if (e) for (let s = 0; s < e.length; s++) {\n    const t = Math.ceil(e[2 * s] - i),\n      n = Math.floor(e[2 * s + 1] - i);\n    for (let e = t; e <= n; e++) o[e] = 255;\n  } else o.fill(255);\n  if (n) for (let s = 0; s < n.length; s++) o[n[s] - i] = 0;\n  return {\n    lut: o,\n    offset: i\n  };\n}\nfunction k(t, e, n, l, i, o, s, r) {\n  return {\n    xmin: i <= n * t ? 0 : i < n * t + t ? i - n * t : t,\n    ymin: o <= l * e ? 0 : o < l * e + e ? o - l * e : e,\n    xmax: i + s <= n * t ? 0 : i + s < n * t + t ? i + s - n * t : t,\n    ymax: o + r <= l * e ? 0 : o + r < l * e + e ? o + r - l * e : e\n  };\n}\nfunction M(t, e) {\n  if (!t || 0 === t.length) return null;\n  const n = t.find(t => t.pixelBlock);\n  if (null == n?.pixelBlock) return null;\n  const l = (n.extent.xmax - n.extent.xmin) / n.pixelBlock.width,\n    i = (n.extent.ymax - n.extent.ymin) / n.pixelBlock.height,\n    o = .01 * Math.min(l, i),\n    s = t.sort((t, e) => Math.abs(t.extent.ymax - e.extent.ymax) > o ? e.extent.ymax - t.extent.ymax : Math.abs(t.extent.xmin - e.extent.xmin) > o ? t.extent.xmin - e.extent.xmin : 0),\n    r = Math.min.apply(null, s.map(t => t.extent.xmin)),\n    a = Math.min.apply(null, s.map(t => t.extent.ymin)),\n    h = Math.max.apply(null, s.map(t => t.extent.xmax)),\n    f = Math.max.apply(null, s.map(t => t.extent.ymax)),\n    c = {\n      x: Math.round((e.xmin - r) / l),\n      y: Math.round((f - e.ymax) / i)\n    },\n    u = {\n      width: Math.round((h - r) / l),\n      height: Math.round((f - a) / i)\n    },\n    p = {\n      width: Math.round((e.xmax - e.xmin) / l),\n      height: Math.round((e.ymax - e.ymin) / i)\n    };\n  if (Math.round(u.width / n.pixelBlock.width) * Math.round(u.height / n.pixelBlock.height) !== s.length || c.x < 0 || c.y < 0 || u.width < p.width || u.height < p.height) return null;\n  return {\n    extent: e,\n    pixelBlock: U(s.map(t => t.pixelBlock), u, {\n      clipOffset: c,\n      clipSize: p\n    })\n  };\n}\nfunction A(t, e, n, l, i, o) {\n  const {\n      width: s,\n      height: r\n    } = n.block,\n    {\n      x: a,\n      y: h\n    } = n.offset,\n    {\n      width: f,\n      height: c\n    } = n.mosaic,\n    u = k(s, r, l, i, a, h, f, c);\n  let p = 0,\n    x = 0;\n  if (o) {\n    const t = o.hasGCSSShiftTransform ? 360 : o.halfWorldWidth ?? 0,\n      e = s * o.resolutionX,\n      n = o.startX + l * e;\n    n < t && n + e > t ? x = o.rightPadding : n >= t && (p = o.leftMargin - o.rightPadding, x = 0);\n  }\n  if (u.xmax -= x, \"number\" != typeof e) for (let d = u.ymin; d < u.ymax; d++) {\n    const n = (i * r + d - h) * f + (l * s - a) + p,\n      o = d * s;\n    for (let l = u.xmin; l < u.xmax; l++) t[n + l] = e[o + l];\n  } else for (let d = u.ymin; d < u.ymax; d++) {\n    const n = (i * r + d - h) * f + (l * s - a) + p;\n    for (let l = u.xmin; l < u.xmax; l++) t[n + l] = e;\n  }\n}\nfunction U(e, n, l = {}) {\n  const {\n    clipOffset: i,\n    clipSize: s,\n    alignmentInfo: r,\n    blockWidths: a\n  } = l;\n  if (a) return b(e, n, {\n    blockWidths: a\n  });\n  const h = e.find(t => o(t));\n  if (null == h) return null;\n  const f = s ? s.width : n.width,\n    c = s ? s.height : n.height,\n    u = h.width,\n    p = h.height,\n    x = n.width / u,\n    d = n.height / p,\n    m = {\n      offset: i || {\n        x: 0,\n        y: 0\n      },\n      mosaic: s || n,\n      block: {\n        width: u,\n        height: p\n      }\n    },\n    g = h.pixelType,\n    y = t.getPixelArrayConstructor(g),\n    w = h.pixels.length,\n    k = [];\n  let M, U;\n  for (let t = 0; t < w; t++) {\n    U = new y(f * c);\n    for (let n = 0; n < d; n++) for (let l = 0; l < x; l++) {\n      const i = e[n * x + l];\n      o(i) && (M = i.pixels[t], A(U, M, m, l, n, r));\n    }\n    k.push(U);\n  }\n  const T = e.some(t => null == t || null != t.mask && t.mask.length > 0),\n    v = e.some(t => t?.bandMasks && t.bandMasks.length > 1),\n    B = T ? new Uint8Array(f * c) : void 0,\n    C = v ? [] : void 0;\n  if (B) {\n    for (let t = 0; t < d; t++) for (let n = 0; n < x; n++) {\n      const l = e[t * x + n],\n        i = null != l ? l.mask : null;\n      A(B, null != i ? i : l ? 255 : 0, m, n, t, r);\n    }\n    if (C) for (let t = 0; t < w; t++) {\n      const n = new Uint8Array(f * c);\n      for (let l = 0; l < d; l++) for (let i = 0; i < x; i++) {\n        const o = e[l * x + i],\n          s = o?.bandMasks?.[t] ?? o?.mask;\n        A(n, null != s ? s : o ? 255 : 0, m, i, l, r);\n      }\n      C.push(n);\n    }\n  }\n  const S = new t({\n    width: f,\n    height: c,\n    pixels: k,\n    pixelType: g,\n    bandMasks: C,\n    mask: B\n  });\n  return S.updateStatistics(), S;\n}\nfunction b(e, n, l) {\n  const i = e.find(t => null != t);\n  if (null == i) return null;\n  const s = e.some(t => null == t || !!t.mask),\n    {\n      width: r,\n      height: a\n    } = n,\n    h = s ? new Uint8Array(r * a) : null,\n    {\n      blockWidths: f\n    } = l,\n    c = [],\n    u = i.getPlaneCount(),\n    p = t.getPixelArrayConstructor(i.pixelType);\n  if (s) for (let t = 0, y = 0; t < e.length; y += f[t], t++) {\n    const n = e[t];\n    if (!o(n)) continue;\n    const l = n.mask;\n    for (let e = 0; e < a; e++) for (let i = 0; i < f[t]; i++) h[e * r + i + y] = null == l ? 255 : l[e * n.width + i];\n  }\n  const x = e.some(t => t?.bandMasks && t.bandMasks.length > 1),\n    d = x ? [] : void 0,\n    m = r * a;\n  for (let t = 0; t < u; t++) {\n    const n = new p(m),\n      l = x ? new Uint8Array(m) : void 0;\n    for (let i = 0, s = 0; i < e.length; s += f[i], i++) {\n      const h = e[i];\n      if (!o(h)) continue;\n      const c = h.pixels[t];\n      if (null != c) {\n        for (let t = 0; t < a; t++) for (let e = 0; e < f[i]; e++) n[t * r + e + s] = c[t * h.width + e];\n        if (l) {\n          const e = h.bandMasks?.[t] ?? h.mask;\n          for (let t = 0; t < a; t++) for (let n = 0; n < f[i]; n++) l[t * r + n + s] = e ? e[t * h.width + n] : 255;\n        }\n      }\n    }\n    c.push(n), d && l && d.push(l);\n  }\n  const g = new t({\n    width: r,\n    height: a,\n    mask: h,\n    bandMasks: d,\n    pixels: c,\n    pixelType: i.pixelType\n  });\n  return g.updateStatistics(), g;\n}\nfunction T(t, e, n) {\n  if (!o(t)) return null;\n  const {\n      width: l,\n      height: i\n    } = t,\n    s = e.x,\n    r = e.y,\n    a = n.width + s,\n    h = n.height + r;\n  if (s < 0 || r < 0 || a > l || h > i) return t;\n  if (0 === s && 0 === r && a === l && h === i) return t;\n  t.mask || (t.mask = new Uint8Array(l * i));\n  const f = t.mask;\n  for (let o = 0; o < i; o++) {\n    const t = o * l;\n    for (let e = 0; e < l; e++) f[t + e] = o < r || o >= h || e < s || e >= a ? 0 : 1;\n  }\n  return t.updateStatistics(), t;\n}\nfunction v(t) {\n  if (!o(t)) return null;\n  const e = t.clone(),\n    {\n      width: n,\n      height: l,\n      pixels: i\n    } = t,\n    s = i[0],\n    r = e.pixels[0],\n    a = t.mask;\n  for (let o = 2; o < l - 1; o++) {\n    const t = new Map();\n    for (let l = o - 2; l < o + 2; l++) for (let e = 0; e < 4; e++) {\n      const i = l * n + e;\n      S(t, s[i], a ? a[i] : 1);\n    }\n    r[o * n] = B(t), r[o * n + 1] = r[o * n + 2] = r[o * n];\n    let e = 3;\n    for (; e < n - 1; e++) {\n      let l = (o - 2) * n + e + 1;\n      S(t, s[l], a ? a[l] : 1), l = (o - 1) * n + e + 1, S(t, s[l], a ? a[l] : 1), l = o * n + e + 1, S(t, s[l], a ? a[l] : 1), l = (o + 1) * n + e + 1, S(t, s[l], a ? a[l] : 1), l = (o - 2) * n + e - 3, C(t, s[l], a ? a[l] : 1), l = (o - 1) * n + e - 3, C(t, s[l], a ? a[l] : 1), l = o * n + e - 3, C(t, s[l], a ? a[l] : 1), l = (o + 1) * n + e - 3, C(t, s[l], a ? a[l] : 1), r[o * n + e] = B(t);\n    }\n    r[o * n + e + 1] = r[o * n + e];\n  }\n  for (let o = 0; o < n; o++) r[o] = r[n + o] = r[2 * n + o], r[(l - 1) * n + o] = r[(l - 2) * n + o];\n  return e.updateStatistics(), e;\n}\nfunction B(t) {\n  if (0 === t.size) return 0;\n  let e = 0,\n    n = -1,\n    l = 0;\n  const i = t.keys();\n  let o = i.next();\n  for (; !o.done;) l = t.get(o.value), l > e && (n = o.value, e = l), o = i.next();\n  return n;\n}\nfunction C(t, e, n) {\n  if (0 === n) return;\n  const l = t.get(e);\n  1 === l ? t.delete(e) : t.set(e, l - 1);\n}\nfunction S(t, e, n) {\n  0 !== n && t.set(e, t.has(e) ? t.get(e) + 1 : 1);\n}\nfunction P(e, n, l) {\n  let {\n    x: i,\n    y: s\n  } = n;\n  const {\n    width: r,\n    height: a\n  } = l;\n  if (0 === i && 0 === s && a === e.height && r === e.width) return e;\n  const {\n      width: h,\n      height: f\n    } = e,\n    c = Math.max(0, s),\n    u = Math.max(0, i),\n    p = Math.min(i + r, h),\n    x = Math.min(s + a, f);\n  if (p < 0 || x < 0 || !o(e)) return null;\n  i = Math.max(0, -i), s = Math.max(0, -s);\n  const {\n      pixels: d\n    } = e,\n    m = r * a,\n    g = d.length,\n    y = [];\n  for (let o = 0; o < g; o++) {\n    const n = d[o],\n      l = t.createEmptyBand(e.pixelType, m);\n    for (let t = c; t < x; t++) {\n      const e = t * h;\n      let o = (t + s - c) * r + i;\n      for (let t = u; t < p; t++) l[o++] = n[e + t];\n    }\n    y.push(l);\n  }\n  const w = new Uint8Array(m),\n    k = e.mask;\n  for (let t = c; t < x; t++) {\n    const e = t * h;\n    let n = (t + s - c) * r + i;\n    for (let t = u; t < p; t++) w[n++] = k ? k[e + t] : 1;\n  }\n  const M = new t({\n    width: l.width,\n    height: l.height,\n    pixelType: e.pixelType,\n    pixels: y,\n    mask: w\n  });\n  return M.updateStatistics(), M;\n}\nfunction _(e, n = !0) {\n  if (!o(e)) return null;\n  const {\n      pixels: l,\n      width: i,\n      height: s,\n      mask: r,\n      pixelType: a\n    } = e,\n    h = [],\n    f = Math.round(i / 2),\n    c = Math.round(s / 2),\n    u = s - 1,\n    p = i - 1;\n  for (let o = 0; o < l.length; o++) {\n    const e = l[o],\n      r = t.createEmptyBand(a, f * c);\n    let x = 0;\n    for (let t = 0; t < s; t += 2) for (let l = 0; l < i; l += 2) {\n      const o = e[t * i + l];\n      if (n) {\n        const n = l === p ? o : e[t * i + l + 1],\n          s = t === u ? o : e[t * i + l + i],\n          a = l === p ? s : t === u ? n : e[t * i + l + i + 1];\n        r[x++] = (o + n + s + a) / 4;\n      } else r[x++] = o;\n    }\n    h.push(r);\n  }\n  let x = null;\n  if (null != r) {\n    x = new Uint8Array(f * c);\n    let t = 0;\n    for (let e = 0; e < s; e += 2) for (let l = 0; l < i; l += 2) {\n      const o = r[e * i + l];\n      if (n) {\n        const n = l === p ? o : r[e * i + l + 1],\n          s = e === u ? o : r[e * i + l + i],\n          a = l === p ? s : e === u ? n : r[e * i + l + i + 1];\n        x[t++] = o * n * s * a ? 1 : 0;\n      } else x[t++] = o;\n    }\n  }\n  return new t({\n    width: f,\n    height: c,\n    pixelType: a,\n    pixels: h,\n    mask: x\n  });\n}\nfunction W(t, e, n = 0, l = !0) {\n  if (!o(t)) return null;\n  const {\n    width: i,\n    height: s\n  } = e;\n  let {\n    width: r,\n    height: a\n  } = t;\n  const h = new Map(),\n    f = {\n      x: 0,\n      y: 0\n    },\n    c = 1 + n;\n  let u = t;\n  for (let o = 0; o < c; o++) {\n    const t = Math.ceil(r / i),\n      n = Math.ceil(a / s);\n    for (let l = 0; l < n; l++) {\n      f.y = l * s;\n      for (let n = 0; n < t; n++) {\n        f.x = n * i;\n        const t = P(u, f, e);\n        h.set(`${o}/${l}/${n}`, t);\n      }\n    }\n    o < c - 1 && (u = _(u, l)), r = Math.round(r / 2), a = Math.round(a / 2);\n  }\n  return h;\n}\nfunction E(t) {\n  const {\n    pixelBlock: e,\n    tileSize: n,\n    level: l,\n    row: i,\n    col: s,\n    useBilinear: r\n  } = t;\n  if (!o(e)) return null;\n  const {\n      width: a,\n      height: h\n    } = n,\n    f = 2 ** l,\n    c = f * a,\n    u = f * h;\n  let p = P(e, {\n    y: i * u,\n    x: s * c\n  }, {\n    width: c,\n    height: u\n  });\n  if (!p) return null;\n  for (let o = l; o > 0; o--) p = _(p, r);\n  return p;\n}\nfunction I(t, e, n, l, i = 0) {\n  const {\n      width: o,\n      height: s\n    } = t,\n    {\n      width: r,\n      height: a\n    } = e,\n    h = l.cols,\n    f = l.rows,\n    c = Math.ceil(r / h - .1 / h),\n    u = Math.ceil(a / f - .1 / f);\n  let p, x, d, m, g, y, w;\n  const k = c * h,\n    M = k * u * f,\n    A = new Float32Array(M),\n    U = new Float32Array(M),\n    b = new Uint32Array(M),\n    T = new Uint32Array(M);\n  let v,\n    B,\n    C = 0;\n  for (let S = 0; S < u; S++) for (let t = 0; t < c; t++) {\n    p = 12 * (S * c + t), x = n[p], d = n[p + 1], m = n[p + 2], g = n[p + 3], y = n[p + 4], w = n[p + 5];\n    for (let e = 0; e < f; e++) {\n      C = (S * f + e) * k + t * h, B = (e + .5) / f;\n      for (let t = 0; t < e; t++) v = (t + .5) / h, A[C + t] = (x * v + d * B + m) * o + i, U[C + t] = (g * v + y * B + w) * s + i, b[C + t] = Math.floor(A[C + t]), T[C + t] = Math.floor(U[C + t]);\n    }\n    p += 6, x = n[p], d = n[p + 1], m = n[p + 2], g = n[p + 3], y = n[p + 4], w = n[p + 5];\n    for (let e = 0; e < f; e++) {\n      C = (S * f + e) * k + t * h, B = (e + .5) / f;\n      for (let t = e; t < h; t++) v = (t + .5) / h, A[C + t] = (x * v + d * B + m) * o + i, U[C + t] = (g * v + y * B + w) * s + i, b[C + t] = Math.floor(A[C + t]), T[C + t] = Math.floor(U[C + t]);\n    }\n  }\n  return {\n    offsets_x: A,\n    offsets_y: U,\n    offsets_xi: b,\n    offsets_yi: T,\n    gridWidth: k\n  };\n}\nfunction R(t, e) {\n  const {\n      coefficients: n,\n      spacing: l\n    } = e,\n    {\n      offsets_x: i,\n      offsets_y: o,\n      gridWidth: s\n    } = I(t, t, n, {\n      rows: l[0],\n      cols: l[1]\n    }),\n    {\n      width: r,\n      height: a\n    } = t,\n    h = new Float32Array(r * a),\n    f = 180 / Math.PI;\n  for (let c = 0; c < a; c++) for (let t = 0; t < r; t++) {\n    const e = c * s + t,\n      n = 0 === c ? e : e - s,\n      l = c === a - 1 ? e : e + s,\n      u = i[n] - i[l],\n      p = o[l] - o[n];\n    if (isNaN(u) || isNaN(p)) h[c * r + t] = 90;else {\n      let e = Math.atan2(p, u) * f;\n      e = (360 + e) % 360, h[c * r + t] = e;\n    }\n  }\n  return h;\n}\nfunction D(e, n, l, i, s = \"nearest\") {\n  if (!o(e)) return null;\n  \"majority\" === s && (e = v(e));\n  const {\n      pixels: r,\n      mask: a,\n      bandMasks: h,\n      pixelType: f\n    } = e,\n    c = e.width,\n    u = e.height,\n    p = t.getPixelArrayConstructor(f),\n    x = r.length,\n    {\n      width: d,\n      height: m\n    } = n;\n  let g = !1;\n  for (let t = 0; t < l.length; t += 3) -1 === l[t] && -1 === l[t + 1] && -1 === l[t + 2] && (g = !0);\n  const {\n    offsets_x: y,\n    offsets_y: w,\n    offsets_xi: k,\n    offsets_yi: M,\n    gridWidth: A\n  } = I({\n    width: c,\n    height: u\n  }, n, l, i, \"majority\" === s ? .5 : 0);\n  let U;\n  const b = (t, e, n, l) => {\n      const i = t instanceof Float32Array || t instanceof Float64Array ? 0 : .5;\n      for (let o = 0; o < m; o++) {\n        U = o * A;\n        for (let s = 0; s < d; s++) {\n          if (y[U] < 0 || w[U] < 0) t[o * d + s] = 0;else if (l) t[o * d + s] = e[k[U] + M[U] * c];else {\n            const l = Math.floor(y[U]),\n              r = Math.floor(w[U]),\n              a = Math.ceil(y[U]),\n              h = Math.ceil(w[U]),\n              f = y[U] - l,\n              u = w[U] - r;\n            if (!n || n[l + r * c] && n[a + r * c] && n[l + h * c] && n[a + h * c]) {\n              const n = (1 - f) * e[l + r * c] + f * e[a + r * c],\n                p = (1 - f) * e[l + h * c] + f * e[a + h * c];\n              t[o * d + s] = (1 - u) * n + u * p + i;\n            } else t[o * d + s] = e[k[U] + M[U] * c];\n          }\n          U++;\n        }\n      }\n    },\n    T = [];\n  let B;\n  const C = h?.length === x,\n    S = [];\n  for (let t = 0; t < x; t++) {\n    if (C) {\n      const e = new Uint8Array(d * m);\n      b(e, h[t], h[t], !0), S.push(e);\n    }\n    B = new p(d * m), b(B, r[t], C ? h[t] : a, \"nearest\" === s || \"majority\" === s), T.push(B);\n  }\n  const P = new t({\n    width: d,\n    height: m,\n    pixelType: f,\n    pixels: T,\n    bandMasks: C ? S : void 0\n  });\n  if (null != a) P.mask = new Uint8Array(d * m), b(P.mask, a, a, !0);else if (g) {\n    P.mask = new Uint8Array(d * m);\n    for (let t = 0; t < d * m; t++) P.mask[t] = y[t] < 0 || w[t] < 0 ? 0 : 1;\n  }\n  return P.updateStatistics(), P;\n}\nexport { l as MissingBandAction, n as NoDataInterpretation, D as approximateTransform, P as clip, E as clipTile, h as colorize, r as compositeBands, a as createColormapLUT, w as createMaskLUT, y as createRemapLUT, s as extractBands, k as getClipBounds, R as getLocalArithmeticNorthRotations, I as interpolateOffsets, o as isValidPixelBlock, c as lookupBandValues, f as lookupPixels, g as mask, i as maxMapSizeGpu, U as mosaic, M as mosaicPixelData, p as remap, u as remapColor, v as resampleByMajority, T as setValidBoundary, W as split };", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { JSONMap as t } from \"../../../core/jsonMap.js\";\nimport e from \"../PixelBlock.js\";\nimport { isValidPixelBlock as n } from \"./pixelUtils.js\";\nconst r = new Map();\nr.set(\"meter-per-second\", 1), r.set(\"kilometer-per-hour\", .277778), r.set(\"knots\", .514444), r.set(\"feet-per-second\", .3048), r.set(\"mile-per-hour\", .44704);\nconst o = 180 / Math.PI,\n  i = 5,\n  s = new t({\n    esriMetersPerSecond: \"meter-per-second\",\n    esriKilometersPerHour: \"kilometer-per-hour\",\n    esriKnots: \"knots\",\n    esriFeetPerSecond: \"feet-per-second\",\n    esriMilesPerHour: \"mile-per-hour\"\n  });\nfunction a(t, e) {\n  return r.get(t) / r.get(e) || 1;\n}\nfunction h(t) {\n  return (450 - t) % 360;\n}\nfunction l(t, e = \"geographic\") {\n  const [n, r] = t,\n    i = Math.sqrt(n * n + r * r);\n  let s = Math.atan2(r, n) * o;\n  return s = (360 + s) % 360, \"geographic\" === e && (s = h(s)), [i, s];\n}\nfunction c(t, e = \"geographic\") {\n  let n = t[1];\n  \"geographic\" === e && (n = h(n)), n %= 360;\n  const r = t[0];\n  return [r * Math.cos(n / o), r * Math.sin(n / o)];\n}\nfunction u(t, e, r, o = \"geographic\") {\n  if (!n(t) || null == r) return t;\n  const i = \"vector-magdir\" === e ? t.clone() : f(t, e),\n    s = i.pixels[1];\n  for (let n = 0; n < s.length; n++) s[n] = \"geographic\" === o ? (s[n] + r[n] + 270) % 360 : (s[n] + 360 - r[n]) % 360;\n  return \"vector-magdir\" === e ? i : f(i, \"vector-magdir\");\n}\nfunction f(t, r, o = \"geographic\", i = 1) {\n  if (!n(t)) return t;\n  const {\n      pixels: s,\n      width: a,\n      height: h\n    } = t,\n    u = a * h,\n    f = s[0],\n    p = s[1],\n    m = t.pixelType.startsWith(\"f\") ? t.pixelType : \"f32\",\n    d = e.createEmptyBand(m, u),\n    g = e.createEmptyBand(m, u);\n  let x = 0;\n  for (let e = 0; e < h; e++) for (let t = 0; t < a; t++) \"vector-uv\" === r ? ([d[x], g[x]] = l([f[x], p[x]], o), d[x] *= i) : ([d[x], g[x]] = c([f[x], p[x]], o), d[x] *= i, g[x] *= i), x++;\n  const M = new e({\n    pixelType: m,\n    width: t.width,\n    height: t.height,\n    mask: t.mask,\n    validPixelCount: t.validPixelCount,\n    maskIsAlpha: t.maskIsAlpha,\n    pixels: [d, g]\n  });\n  return M.updateStatistics(), M;\n}\nfunction p(t, e, r = 1) {\n  if (1 === r || !n(t)) return t;\n  const o = t.clone(),\n    {\n      pixels: i,\n      width: s,\n      height: a\n    } = o,\n    h = i[0],\n    l = i[1];\n  let c = 0;\n  for (let n = 0; n < a; n++) for (let t = 0; t < s; t++) \"vector-uv\" === e ? (h[c] *= r, l[c] *= r) : h[c] *= r, c++;\n  return o.updateStatistics(), o;\n}\nfunction m(t, e, n, r, o) {\n  if (null == o || !o.spatialReference.equals(t.spatialReference)) return {\n    extent: t,\n    width: Math.round(e / r),\n    height: Math.round(n / r),\n    resolution: t.width / e\n  };\n  const i = o.xmin,\n    s = o.ymax,\n    a = (t.xmax - t.xmin) / e * r,\n    h = (t.ymax - t.ymin) / n * r,\n    l = (a + h) / 2;\n  return t.xmin = i + Math.floor((t.xmin - i) / a) * a, t.xmax = i + Math.ceil((t.xmax - i) / a) * a, t.ymin = s + Math.floor((t.ymin - s) / h) * h, t.ymax = s + Math.ceil((t.ymax - s) / h) * h, {\n    extent: t,\n    width: Math.round(t.width / a),\n    height: Math.round(t.height / h),\n    resolution: l\n  };\n}\nconst d = g(0, 0, 0);\nfunction g(t = 0, e = 0, n = Math.PI, r = !0) {\n  r && (n = (2 * Math.PI - n) % (2 * Math.PI));\n  const o = r ? -1 : 1,\n    i = 13 * o,\n    s = -7 * o,\n    a = -2 * o,\n    h = -16 * o,\n    l = 21.75,\n    [c, u] = M(0, e + i, n, l),\n    [f, p] = M(t - 5.5, e + s, n, l),\n    [m, d] = M(t + 5.5, e + s, n, l),\n    [g, x] = M(t - 1.5, e + a, n, l),\n    [k, w] = M(t + 1.5, e + a, n, l),\n    [y, P] = M(t - 1.5, e + h, n, l),\n    [b, v] = M(t + 1.5, e + h, n, l);\n  return [c, u, f, p, g, x, k, w, m, d, y, P, b, v];\n}\nfunction x(t = 0, e = Math.PI, n = !0) {\n  n && (e = (2 * Math.PI - e) % (2 * Math.PI));\n  const r = 10,\n    o = n ? -1 : 1,\n    s = 5 * o,\n    a = 20 * o,\n    h = 25 * o,\n    l = 45,\n    c = 0,\n    u = 0,\n    f = 2,\n    p = 0,\n    m = f * o,\n    d = n ? 1 : -1,\n    g = r / 2 * d;\n  let [x, k] = [c + g, u - a],\n    [w, y] = [x + f * d, k],\n    [P, b] = [w - p * d, y + m],\n    [v, I] = [c - g, u - h],\n    [A, _] = [v + p * d, I - m],\n    U = Math.ceil(t / i),\n    S = Math.floor(U / 10);\n  U -= 8 * S;\n  const D = [],\n    F = [];\n  for (let i = 0; i < U / 2; i++, S--) {\n    S <= 0 && U % 2 == 1 && i === (U - 1) / 2 && (v = c, A = v + p * d, I = (I + k) / 2, _ = I - m);\n    const [t, n] = M(v, I, e, l);\n    if (S > 0) {\n      const [r, o] = M(w, I, e, l),\n        [i, s] = M(x, k, e, l);\n      D.push(r), D.push(o), D.push(t), D.push(n), D.push(i), D.push(s);\n    } else {\n      const [r, o] = M(w, y, e, l),\n        [i, s] = M(P, b, e, l),\n        [a, h] = M(A, _, e, l);\n      F.push(t), F.push(n), F.push(a), F.push(h), F.push(i), F.push(s), F.push(r), F.push(o);\n    }\n    I += s, k += s, y += s, b += s, _ += s;\n  }\n  const [N, j] = M(c + g, u + a, e, l),\n    J = (r / 2 + f) * d,\n    [O, q] = M(c + J, u + a, e, l),\n    [B, E] = M(c + g, u - h, e, l),\n    [T, C] = M(c + J, u - h, e, l);\n  return {\n    pennants: D,\n    barbs: F,\n    shaft: [N, j, O, q, B, E, T, C]\n  };\n}\nfunction M(t, e, n, r = 1) {\n  const o = Math.sqrt(t * t + e * e) / r,\n    i = (2 * Math.PI + Math.atan2(e, t)) % (2 * Math.PI);\n  return [o, (2 * Math.PI + i - n) % (2 * Math.PI)];\n}\nconst k = [0, 1, 3, 6, 10, 16, 21, 27, 33, 40, 47, 55, 63],\n  w = [0, .5, 1, 1.5, 2],\n  y = [0, .25, .5, 1, 1.5, 2, 2.5, 3, 3.5, 4];\nfunction P(t, e, n, r) {\n  const o = a(r || \"knots\", n);\n  let i;\n  for (i = 1; i < e.length; i++) if (i === e.length - 1) {\n    if (t < e[i] * o) break;\n  } else if (t <= e[i] * o) break;\n  return Math.min(i - 1, e.length - 2);\n}\nfunction b(t, e, n, r, o) {\n  let i = 0;\n  switch (e) {\n    case \"beaufort_kn\":\n      i = P(t, k, \"knots\", n);\n      break;\n    case \"beaufort_km\":\n      i = P(t, k, \"kilometer-per-hour\", n);\n      break;\n    case \"beaufort_ft\":\n      i = P(t, k, \"feet-per-second\", n);\n      break;\n    case \"beaufort_m\":\n      i = P(t, k, \"meter-per-second\", n);\n      break;\n    case \"classified_arrow\":\n      i = P(t, o ?? [], r, n);\n      break;\n    case \"ocean_current_m\":\n      i = P(t, w, \"meter-per-second\", n);\n      break;\n    case \"ocean_current_kn\":\n      i = P(t, y, \"knots\", n);\n  }\n  return i;\n}\nfunction v(t, e) {\n  const {\n      style: n,\n      inputUnit: r,\n      outputUnit: o,\n      breakValues: i\n    } = e,\n    a = s.fromJSON(r),\n    h = s.fromJSON(o),\n    l = 7 * 6,\n    c = 15;\n  let u = 0,\n    f = 0;\n  const {\n      width: p,\n      height: m,\n      mask: x\n    } = t,\n    M = t.pixels[0],\n    k = t.pixels[1],\n    w = null != x ? x.filter(t => t > 0).length : p * m,\n    y = new Float32Array(w * l),\n    P = new Uint32Array(c * w),\n    v = e.invertDirection ? g(0, 0, 0, !1) : d;\n  for (let s = 0; s < m; s++) for (let t = 0; t < p; t++) {\n    const e = s * p + t;\n    if (!x || x[s * p + t]) {\n      const r = (k[e] + 360) % 360 / 180 * Math.PI,\n        o = b(M[e], n, a, h, i);\n      for (let n = 0; n < v.length; n += 2) y[u++] = (t + .5) / p, y[u++] = (s + .5) / m, y[u++] = v[n], y[u++] = v[n + 1] + r, y[u++] = o, y[u++] = M[e];\n      const c = 7 * (u / l - 1);\n      P[f++] = c, P[f++] = c + 1, P[f++] = c + 2, P[f++] = c + 0, P[f++] = c + 4, P[f++] = c + 3, P[f++] = c + 0, P[f++] = c + 2, P[f++] = c + 3, P[f++] = c + 2, P[f++] = c + 5, P[f++] = c + 3, P[f++] = c + 5, P[f++] = c + 6, P[f++] = c + 3;\n    }\n  }\n  return {\n    vertexData: y,\n    indexData: P\n  };\n}\nconst I = [];\nfunction A(t, e) {\n  if (0 === I.length) for (let i = 0; i < 30; i++) I.push(x(5 * i, 0, !e.invertDirection));\n  const n = a(s.fromJSON(e.inputUnit), \"knots\"),\n    {\n      width: r,\n      height: o,\n      mask: h\n    } = t,\n    l = t.pixels[0],\n    c = t.pixels[1],\n    u = 6,\n    f = [],\n    p = [];\n  let m = 0,\n    d = 0;\n  for (let s = 0; s < o; s++) for (let t = 0; t < r; t++) {\n    const e = s * r + t,\n      a = l[e] * n;\n    if ((!h || h[s * r + t]) && a >= i) {\n      const n = (c[e] + 360) % 360 / 180 * Math.PI,\n        {\n          pennants: i,\n          barbs: h,\n          shaft: l\n        } = I[Math.min(Math.floor(a / 5), 29)];\n      if (i.length + h.length === 0) continue;\n      let g = f.length / u;\n      const x = (t + .5) / r,\n        M = (s + .5) / o;\n      for (let t = 0; t < i.length; t += 2) f[m++] = x, f[m++] = M, f[m++] = i[t], f[m++] = i[t + 1] + n, f[m++] = 0, f[m++] = a;\n      for (let t = 0; t < h.length; t += 2) f[m++] = x, f[m++] = M, f[m++] = h[t], f[m++] = h[t + 1] + n, f[m++] = 0, f[m++] = a;\n      for (let t = 0; t < l.length; t += 2) f[m++] = x, f[m++] = M, f[m++] = l[t], f[m++] = l[t + 1] + n, f[m++] = 0, f[m++] = a;\n      for (let t = 0; t < i.length / 6; t++) p[d++] = g, p[d++] = g + 1, p[d++] = g + 2, g += 3;\n      for (let t = 0; t < h.length / 8; t++) p[d++] = g, p[d++] = g + 1, p[d++] = g + 2, p[d++] = g + 1, p[d++] = g + 2, p[d++] = g + 3, g += 4;\n      p[d++] = g + 0, p[d++] = g + 1, p[d++] = g + 2, p[d++] = g + 1, p[d++] = g + 3, p[d++] = g + 2, g += 4;\n    }\n  }\n  return {\n    vertexData: new Float32Array(f),\n    indexData: new Uint32Array(p)\n  };\n}\nfunction _(t, e) {\n  const n = 4 * 6;\n  let r = 0,\n    o = 0;\n  const {\n      width: h,\n      height: l,\n      mask: c\n    } = t,\n    u = t.pixels[0],\n    f = [],\n    p = [],\n    m = a(s.fromJSON(e.inputUnit), \"knots\"),\n    d = \"wind_speed\" === e.style ? i : Number.MAX_VALUE;\n  for (let i = 0; i < l; i++) for (let t = 0; t < h; t++) {\n    const e = u[i * h + t] * m;\n    if ((!c || c[i * h + t]) && e < d) {\n      for (let n = 0; n < 4; n++) f[r++] = (t + .5) / h, f[r++] = (i + .5) / l, f[r++] = n < 2 ? -.5 : .5, f[r++] = n % 2 == 0 ? -.5 : .5, f[r++] = 0, f[r++] = e;\n      const s = 4 * (r / n - 1);\n      p[o++] = s, p[o++] = s + 1, p[o++] = s + 2, p[o++] = s + 1, p[o++] = s + 2, p[o++] = s + 3;\n    }\n  }\n  return {\n    vertexData: new Float32Array(f),\n    indexData: new Uint32Array(p)\n  };\n}\nfunction U(t, e) {\n  return \"simple_scalar\" === e.style ? _(t, e) : \"wind_speed\" === e.style ? A(t, e) : v(t, e);\n}\nfunction S(t, n, r, o = [0, 0], i = .5) {\n  const {\n      width: s,\n      height: a,\n      mask: h\n    } = t,\n    [u, f] = t.pixels,\n    [p, m] = o,\n    d = Math.round((s - p) / r),\n    g = Math.round((a - m) / r),\n    x = d * g,\n    M = new Float32Array(x),\n    k = new Float32Array(x),\n    w = new Uint8Array(x),\n    y = \"vector-uv\" === n;\n  for (let e = 0; e < g; e++) for (let t = 0; t < d; t++) {\n    let n = 0;\n    const o = e * d + t,\n      g = Math.max(0, e * r + m),\n      x = Math.max(0, t * r + p),\n      P = Math.min(a, g + r),\n      b = Math.min(s, x + r);\n    for (let t = g; t < P; t++) for (let e = x; e < b; e++) {\n      const r = t * s + e;\n      if (!h || h[r]) {\n        n++;\n        const t = y ? [u[r], f[r]] : [u[r], (360 + f[r]) % 360],\n          [e, i] = y ? t : c(t);\n        M[o] += e, k[o] += i;\n      }\n    }\n    if (n >= (P - g) * (b - x) * (1 - i)) {\n      w[o] = 1;\n      const [t, e] = l([M[o] / n, k[o] / n]);\n      M[o] = t, k[o] = e;\n    } else w[o] = 0, M[o] = 0, k[o] = 0;\n  }\n  const P = new e({\n    width: d,\n    height: g,\n    pixels: [M, k],\n    mask: w\n  });\n  return P.updateStatistics(), P;\n}\nexport { u as convertToLocalDirections, f as convertVectorFieldData, p as convertVectorFieldUnit, U as createVFMesh, _ as createVFMeshScalar, a as getUnitConversionFactor, S as sampleVectorField, m as snapImageToSymbolTile, s as unitKebabDict, l as uvComponentToVector };", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport \"../../../../geometry.js\";\nimport has from \"../../../../core/has.js\";\nimport t from \"../../../../core/Logger.js\";\nimport { deg2rad as e } from \"../../../../core/mathUtils.js\";\nimport { throwIfAborted as n } from \"../../../../core/promiseUtils.js\";\nimport r from \"../../../../core/RandomLCG.js\";\nimport { getInfo as o } from \"../../../../geometry/support/spatialReferenceUtils.js\";\nimport l from \"../../../../geometry/Extent.js\";\nconst i = () => t.getLogger(\"esri.views.2d.engine.flow.dataUtils\"),\n  a = 10;\nasync function s(t, e, r, o) {\n  const l = performance.now(),\n    s = c(e, r),\n    f = performance.now(),\n    h = u(e, s, r.width, r.height),\n    p = performance.now(),\n    g = m(h, !0),\n    y = performance.now(),\n    x = \"Streamlines\" === t ? d(g, a) : w(g),\n    M = performance.now();\n  return has(\"esri-2d-profiler\") && (i().info(\"I.1\", \"_createFlowFieldFromData (ms)\", Math.round(f - l)), i().info(\"I.2\", \"_getStreamlines (ms)\", Math.round(p - f)), i().info(\"I.3\", \"createAnimatedLinesData (ms)\", Math.round(y - p)), i().info(\"I.4\", \"create{Streamlines|Particles}Mesh (ms)\", Math.round(M - y)), i().info(\"I.5\", \"createFlowMesh (ms)\", Math.round(M - l)), i().info(\"I.6\", \"Mesh size (bytes)\", x.vertexData.buffer.byteLength + x.indexData.buffer.byteLength)), await Promise.resolve(), n(o), x;\n}\nfunction c(t, e) {\n  const n = h(e.data, e.width, e.height, t.smoothing);\n  if (t.interpolate) {\n    return (t, r) => {\n      const o = Math.floor(t),\n        l = Math.floor(r);\n      if (o < 0 || o >= e.width) return [0, 0];\n      if (l < 0 || l >= e.height) return [0, 0];\n      const i = t - o,\n        a = r - l,\n        s = o,\n        c = l,\n        f = o < e.width - 1 ? o + 1 : o,\n        u = l < e.height - 1 ? l + 1 : l,\n        h = n[2 * (c * e.width + s)],\n        m = n[2 * (c * e.width + f)],\n        d = n[2 * (u * e.width + s)],\n        w = n[2 * (u * e.width + f)],\n        p = n[2 * (c * e.width + s) + 1],\n        g = n[2 * (c * e.width + f) + 1];\n      return [(h * (1 - a) + d * a) * (1 - i) + (m * (1 - a) + w * a) * i, (p * (1 - a) + n[2 * (u * e.width + s) + 1] * a) * (1 - i) + (g * (1 - a) + n[2 * (u * e.width + f) + 1] * a) * i];\n    };\n  }\n  return (t, r) => {\n    const o = Math.round(t),\n      l = Math.round(r);\n    return o < 0 || o >= e.width || l < 0 || l >= e.height ? [0, 0] : [n[2 * (l * e.width + o)], n[2 * (l * e.width + o) + 1]];\n  };\n}\nfunction f(t, e, n, r, o, l, i, a, s) {\n  const c = [];\n  let f = n,\n    u = r,\n    h = 0,\n    [m, d] = e(f, u);\n  m *= t.velocityScale, d *= t.velocityScale;\n  const w = Math.sqrt(m * m + d * d);\n  let p, g;\n  c.push({\n    x: f,\n    y: u,\n    t: h,\n    speed: w\n  });\n  for (let y = 0; y < t.verticesPerLine; y++) {\n    let [n, r] = e(f, u);\n    n *= t.velocityScale, r *= t.velocityScale;\n    const m = Math.sqrt(n * n + r * r);\n    if (m < t.minSpeedThreshold) return c;\n    const d = n / m,\n      w = r / m;\n    f += d * t.segmentLength, u += w * t.segmentLength;\n    if (h += t.segmentLength / m, Math.acos(d * p + w * g) > t.maxTurnAngle) return c;\n    if (t.collisions) {\n      const t = Math.round(f * s),\n        e = Math.round(u * s);\n      if (t < 0 || t > i - 1 || e < 0 || e > a - 1) return c;\n      const n = l[e * i + t];\n      if (-1 !== n && n !== o) return c;\n      l[e * i + t] = o;\n    }\n    c.push({\n      x: f,\n      y: u,\n      t: h,\n      speed: m\n    }), p = d, g = w;\n  }\n  return c;\n}\nfunction u(t, e, n, o) {\n  const l = [],\n    i = new r(),\n    a = 1 / Math.max(t.lineCollisionWidth, 1),\n    s = Math.round(n * a),\n    c = Math.round(o * a),\n    u = new Int32Array(s * c);\n  for (let r = 0; r < u.length; r++) u[r] = -1;\n  const h = [];\n  for (let r = 0; r < o; r += t.lineSpacing) for (let e = 0; e < n; e += t.lineSpacing) h.push({\n    x: e,\n    y: r,\n    sort: i.getFloat()\n  });\n  h.sort((t, e) => t.sort - e.sort);\n  for (const {\n    x: r,\n    y: m\n  } of h) if (i.getFloat() < t.density) {\n    const n = f(t, e, r, m, l.length, u, s, c, a);\n    if (n.length < 2) continue;\n    l.push(n);\n  }\n  return l;\n}\nfunction h(t, e, n, r) {\n  if (0 === r) return t;\n  const o = Math.round(3 * r),\n    l = new Array(2 * o + 1);\n  let i = 0;\n  for (let c = -o; c <= o; c++) {\n    const t = Math.exp(-c * c / (r * r));\n    l[c + o] = t, i += t;\n  }\n  for (let c = -o; c <= o; c++) l[c + o] /= i;\n  const a = new Float32Array(t.length);\n  for (let c = 0; c < n; c++) for (let n = 0; n < e; n++) {\n    let r = 0,\n      i = 0;\n    for (let a = -o; a <= o; a++) {\n      if (n + a < 0 || n + a >= e) continue;\n      const s = l[a + o];\n      r += s * t[2 * (c * e + (n + a))], i += s * t[2 * (c * e + (n + a)) + 1];\n    }\n    a[2 * (c * e + n)] = r, a[2 * (c * e + n) + 1] = i;\n  }\n  const s = new Float32Array(t.length);\n  for (let c = 0; c < e; c++) for (let t = 0; t < n; t++) {\n    let r = 0,\n      i = 0;\n    for (let s = -o; s <= o; s++) {\n      if (t + s < 0 || t + s >= n) continue;\n      const f = l[s + o];\n      r += f * a[2 * ((t + s) * e + c)], i += f * a[2 * ((t + s) * e + c) + 1];\n    }\n    s[2 * (t * e + c)] = r, s[2 * (t * e + c) + 1] = i;\n  }\n  return s;\n}\nfunction m(t, e) {\n  const n = new r(),\n    o = t.reduce((t, e) => t + e.length, 0),\n    l = new Float32Array(4 * o),\n    i = new Array(t.length);\n  let a = 0,\n    s = 0;\n  for (const r of t) {\n    const t = a;\n    for (const e of r) l[4 * a] = e.x, l[4 * a + 1] = e.y, l[4 * a + 2] = e.t, l[4 * a + 3] = e.speed, a++;\n    i[s++] = {\n      startVertex: t,\n      numberOfVertices: r.length,\n      totalTime: r[r.length - 1].t,\n      timeSeed: e ? n.getFloat() : 0\n    };\n  }\n  return {\n    lineVertices: l,\n    lineDescriptors: i\n  };\n}\nfunction d(t, e) {\n  const n = 9,\n    {\n      lineVertices: r,\n      lineDescriptors: o\n    } = t;\n  let l = 0,\n    i = 0;\n  for (const m of o) {\n    l += 2 * m.numberOfVertices;\n    i += 6 * (m.numberOfVertices - 1);\n  }\n  const a = new Float32Array(l * n),\n    s = new Uint32Array(i);\n  let c = 0,\n    f = 0;\n  function u() {\n    s[f++] = c - 2, s[f++] = c, s[f++] = c - 1, s[f++] = c, s[f++] = c + 1, s[f++] = c - 1;\n  }\n  function h(t, e, r, o, l, i, s, f) {\n    const u = c * n;\n    let h = 0;\n    a[u + h++] = t, a[u + h++] = e, a[u + h++] = 1, a[u + h++] = r, a[u + h++] = i, a[u + h++] = s, a[u + h++] = o / 2, a[u + h++] = l / 2, a[u + h++] = f, c++, a[u + h++] = t, a[u + h++] = e, a[u + h++] = -1, a[u + h++] = r, a[u + h++] = i, a[u + h++] = s, a[u + h++] = -o / 2, a[u + h++] = -l / 2, a[u + h++] = f, c++;\n  }\n  for (const m of o) {\n    const {\n      totalTime: t,\n      timeSeed: n\n    } = m;\n    let o = null,\n      l = null,\n      i = null,\n      a = null,\n      s = null,\n      c = null;\n    for (let f = 0; f < m.numberOfVertices; f++) {\n      const d = r[4 * (m.startVertex + f)],\n        w = r[4 * (m.startVertex + f) + 1],\n        p = r[4 * (m.startVertex + f) + 2],\n        g = r[4 * (m.startVertex + f) + 3];\n      let y = null,\n        x = null,\n        M = null,\n        A = null;\n      if (f > 0) {\n        y = d - o, x = w - l;\n        const r = Math.sqrt(y * y + x * x);\n        if (y /= r, x /= r, f > 1) {\n          let t = y + s,\n            n = x + c;\n          const r = Math.sqrt(t * t + n * n);\n          t /= r, n /= r;\n          const o = Math.min(1 / (t * y + n * x), e);\n          t *= o, n *= o, M = -n, A = t;\n        } else M = -x, A = y;\n        null !== M && null !== A && (h(o, l, i, M, A, t, n, g), u());\n      }\n      o = d, l = w, i = p, s = y, c = x, a = g;\n    }\n    h(o, l, i, -c, s, t, n, a);\n  }\n  return {\n    vertexData: a,\n    indexData: s\n  };\n}\nfunction w(t) {\n  const e = 16,\n    n = 1,\n    r = 2,\n    {\n      lineVertices: o,\n      lineDescriptors: l\n    } = t;\n  let i = 0,\n    a = 0;\n  for (const U of l) {\n    const t = U.numberOfVertices - 1;\n    i += 4 * t * 2, a += 6 * t * 2;\n  }\n  const s = new Float32Array(i * e),\n    c = new Uint32Array(a);\n  let f,\n    u,\n    h,\n    m,\n    d,\n    w,\n    p,\n    g,\n    y,\n    x,\n    M,\n    A,\n    I,\n    V,\n    F = 0,\n    v = 0;\n  function D() {\n    c[v++] = F - 8, c[v++] = F - 7, c[v++] = F - 6, c[v++] = F - 7, c[v++] = F - 5, c[v++] = F - 6, c[v++] = F - 4, c[v++] = F - 3, c[v++] = F - 2, c[v++] = F - 3, c[v++] = F - 1, c[v++] = F - 2;\n  }\n  function b(t, o, l, i, a, c, f, u, h, m, d, w, p, g) {\n    const y = F * e;\n    let x = 0;\n    for (const e of [n, r]) for (const n of [1, 2, 3, 4]) s[y + x++] = t, s[y + x++] = o, s[y + x++] = l, s[y + x++] = i, s[y + x++] = f, s[y + x++] = u, s[y + x++] = h, s[y + x++] = m, s[y + x++] = e, s[y + x++] = n, s[y + x++] = p, s[y + x++] = g, s[y + x++] = a / 2, s[y + x++] = c / 2, s[y + x++] = d / 2, s[y + x++] = w / 2, F++;\n  }\n  function S(t, e) {\n    let n = y + M,\n      r = x + A;\n    const o = Math.sqrt(n * n + r * r);\n    n /= o, r /= o;\n    const l = y * n + x * r;\n    n /= l, r /= l;\n    let i = M + I,\n      a = A + V;\n    const s = Math.sqrt(i * i + a * a);\n    i /= s, a /= s;\n    const c = M * i + A * a;\n    i /= c, a /= c, b(f, u, h, m, -r, n, d, w, p, g, -a, i, t, e), D();\n  }\n  function k(t, e, n, r, o, l) {\n    if (y = M, x = A, M = I, A = V, null == y && null == x && (y = M, x = A), null != d && null != w) {\n      I = t - d, V = e - w;\n      const n = Math.sqrt(I * I + V * V);\n      I /= n, V /= n;\n    }\n    null != y && null != x && S(o, l), f = d, u = w, h = p, m = g, d = t, w = e, p = n, g = r;\n  }\n  function L(t, e) {\n    y = M, x = A, M = I, A = V, null == y && null == x && (y = M, x = A), null != y && null != x && S(t, e);\n  }\n  for (const U of l) {\n    f = null, u = null, h = null, m = null, d = null, w = null, p = null, g = null, y = null, x = null, M = null, A = null, I = null, V = null;\n    const {\n      totalTime: t,\n      timeSeed: e\n    } = U;\n    for (let n = 0; n < U.numberOfVertices; n++) {\n      k(o[4 * (U.startVertex + n)], o[4 * (U.startVertex + n) + 1], o[4 * (U.startVertex + n) + 2], o[4 * (U.startVertex + n) + 3], t, e);\n    }\n    L(t, e);\n  }\n  return {\n    vertexData: s,\n    indexData: c\n  };\n}\nfunction p(t, n) {\n  const r = n.pixels,\n    {\n      width: o,\n      height: l\n    } = n,\n    i = new Float32Array(o * l * 2),\n    a = n.mask || new Uint8Array(o * l * 2);\n  if (n.mask || a.fill(255), \"vector-uv\" === t) for (let e = 0; e < o * l; e++) i[2 * e] = r[0][e], i[2 * e + 1] = -r[1][e];else if (\"vector-magdir\" === t) for (let s = 0; s < o * l; s++) {\n    const t = r[0][s],\n      n = e(r[1][s]),\n      o = Math.cos(n - Math.PI / 2),\n      l = Math.sin(n - Math.PI / 2);\n    i[2 * s] = o * t, i[2 * s + 1] = l * t;\n  }\n  return {\n    data: i,\n    mask: a,\n    width: o,\n    height: l\n  };\n}\nasync function g(t, e, n, r, a, s) {\n  const c = performance.now(),\n    f = o(e.spatialReference);\n  if (!f) {\n    const o = await y(t, e, n, r, a, s);\n    return has(\"esri-2d-profiler\") && i().info(\"I.7\", \"loadImagery, early exit (ms)\", Math.round(performance.now() - c)), has(\"esri-2d-profiler\") && i().info(\"I.9\", \"Number of parts\", 1), o;\n  }\n  const [u, h] = f.valid,\n    m = h - u,\n    d = Math.ceil(e.width / m),\n    w = e.width / d,\n    p = Math.round(n / d);\n  let g = e.xmin;\n  const x = [],\n    M = performance.now();\n  for (let o = 0; o < d; o++) {\n    const n = new l({\n      xmin: g,\n      xmax: g + w,\n      ymin: e.ymin,\n      ymax: e.ymax,\n      spatialReference: e.spatialReference\n    });\n    x.push(y(t, n, p, r, a, s)), g += w;\n  }\n  const A = await Promise.all(x);\n  has(\"esri-2d-profiler\") && i().info(\"I.8\", \"All calls to _fetchPart (ms)\", Math.round(performance.now() - M)), has(\"esri-2d-profiler\") && i().info(\"I.9\", \"Number of parts\", A.length);\n  const I = {\n    data: new Float32Array(n * r * 2),\n    mask: new Uint8Array(n * r),\n    width: n,\n    height: r\n  };\n  let V = 0;\n  for (const o of A) {\n    for (let t = 0; t < o.height; t++) for (let e = 0; e < o.width; e++) V + e >= n || (I.data[2 * (t * n + V + e)] = o.data[2 * (t * o.width + e)], I.data[2 * (t * n + V + e) + 1] = o.data[2 * (t * o.width + e) + 1], I.mask[t * n + V + e] = o.mask[t * o.width + e]);\n    V += o.width;\n  }\n  return has(\"esri-2d-profiler\") && i().info(\"I.10\", \"loadImagery, general exit (ms)\", Math.round(performance.now() - c)), I;\n}\nasync function y(t, e, n, r, o, l) {\n  const i = {\n    requestProjectedLocalDirections: !0,\n    signal: l\n  };\n  if (null != o && (i.timeExtent = o), \"imagery\" === t.type) {\n    await t.load({\n      signal: l\n    });\n    const o = t.rasterInfo.dataType,\n      a = await t.fetchImage(e, n, r, i);\n    return null == a?.pixelData?.pixelBlock ? {\n      data: new Float32Array(n * r * 2),\n      mask: new Uint8Array(n * r),\n      width: n,\n      height: r\n    } : p(o, a.pixelData.pixelBlock);\n  }\n  await t.load({\n    signal: l\n  });\n  const a = t.serviceRasterInfo.dataType,\n    s = await t.fetchPixels(e, n, r, i);\n  return null == s?.pixelBlock ? {\n    data: new Float32Array(n * r * 2),\n    mask: new Uint8Array(n * r),\n    width: n,\n    height: r\n  } : p(a, s.pixelBlock);\n}\nexport { m as createAnimatedLinesData, s as createFlowMesh, w as createParticlesMesh, d as createStreamlinesMesh, g as loadImagery };"],
  "mappings": "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",
  "names": ["l", "a", "t", "t", "e", "s", "i", "l", "r", "o", "n", "a", "c", "h", "p", "u", "g", "f", "m", "n", "l", "t", "e", "t", "n", "l", "i", "s", "r", "a", "h", "f", "c", "o", "u", "p", "x", "d", "m", "g", "y", "w", "k", "M", "A", "U", "T", "v", "B", "C", "S", "b", "P", "r", "o", "i", "s", "n", "a", "t", "e", "h", "l", "c", "u", "f", "p", "m", "d", "g", "x", "M", "k", "w", "y", "P", "b", "v", "I", "A", "_", "U", "S", "D", "B", "E", "T", "C", "i", "a", "s", "t", "e", "r", "o", "l", "c", "f", "h", "u", "p", "g", "m", "y", "x", "d", "w", "M", "n", "A", "U", "I", "v", "D", "b", "S", "k"]
}
