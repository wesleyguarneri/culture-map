{
  "version": 3,
  "sources": ["../../../../../../node_modules/@arcgis/core/core/workers/request.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport t from \"../Error.js\";\nfunction e(e, s) {\n  let a = s.responseType;\n  a ? \"array-buffer\" !== a && \"blob\" !== a && \"json\" !== a && \"native\" !== a && \"native-request-init\" !== a && \"text\" !== a && (a = \"text\") : a = \"json\", s.responseType = a;\n  const r = s.signal;\n  return delete s.signal, globalThis.invokeStaticMessage(\"request\", {\n    url: e,\n    options: s\n  }, {\n    signal: r\n  }).then(async n => {\n    let o, i, l, u, c;\n    if (n.data) if (n.data instanceof ArrayBuffer) {\n      if (!(\"json\" !== a && \"text\" !== a && \"blob\" !== a || (o = new Blob([n.data]), \"json\" !== a && \"text\" !== a || (u = await o.text(), \"json\" !== a)))) {\n        try {\n          i = JSON.parse(u || null);\n        } catch (p) {\n          const a = {\n            ...p,\n            url: e,\n            requestOptions: s\n          };\n          throw new t(\"request:server\", p.message, a);\n        }\n        if (i.error) {\n          const a = {\n            ...i.error,\n            url: e,\n            requestOptions: s\n          };\n          throw new t(\"request:server\", i.error.message, a);\n        }\n      }\n    } else \"native\" === a && (n.data.signal = r, l = await fetch(n.data.url, n.data), n.httpStatus = l.status);\n    switch (a) {\n      case \"blob\":\n        c = o;\n        break;\n      case \"json\":\n        c = i;\n        break;\n      case \"native\":\n        c = l;\n        break;\n      case \"text\":\n        c = u;\n        break;\n      default:\n        c = n.data;\n    }\n    return {\n      data: c,\n      httpStatus: n.httpStatus,\n      requestOptions: s,\n      ssl: n.ssl,\n      url: e\n    };\n  });\n}\nexport { e as execute };"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,EAAEA,IAAGC,IAAG;AACf,MAAI,IAAIA,GAAE;AACV,MAAI,mBAAmB,KAAK,WAAW,KAAK,WAAW,KAAK,aAAa,KAAK,0BAA0B,KAAK,WAAW,MAAM,IAAI,UAAU,IAAI,QAAQA,GAAE,eAAe;AACzK,QAAM,IAAIA,GAAE;AACZ,SAAO,OAAOA,GAAE,QAAQ,WAAW,oBAAoB,WAAW;AAAA,IAChE,KAAKD;AAAA,IACL,SAASC;AAAA,EACX,GAAG;AAAA,IACD,QAAQ;AAAA,EACV,CAAC,EAAE,KAAK,CAAM,MAAK;AACjB,QAAI,GAAG,GAAG,GAAG,GAAG;AAChB,QAAI,EAAE,KAAM,KAAI,EAAE,gBAAgB,aAAa;AAC7C,UAAI,EAAE,WAAW,KAAK,WAAW,KAAK,WAAW,MAAM,IAAI,IAAI,KAAK,CAAC,EAAE,IAAI,CAAC,GAAG,WAAW,KAAK,WAAW,MAAM,IAAI,MAAM,EAAE,KAAK,GAAG,WAAW,MAAM;AACnJ,YAAI;AACF,cAAI,KAAK,MAAM,KAAK,IAAI;AAAA,QAC1B,SAAS,GAAG;AACV,gBAAMC,KAAI,iCACL,IADK;AAAA,YAER,KAAKF;AAAA,YACL,gBAAgBC;AAAA,UAClB;AACA,gBAAM,IAAI,EAAE,kBAAkB,EAAE,SAASC,EAAC;AAAA,QAC5C;AACA,YAAI,EAAE,OAAO;AACX,gBAAMA,KAAI,iCACL,EAAE,QADG;AAAA,YAER,KAAKF;AAAA,YACL,gBAAgBC;AAAA,UAClB;AACA,gBAAM,IAAI,EAAE,kBAAkB,EAAE,MAAM,SAASC,EAAC;AAAA,QAClD;AAAA,MACF;AAAA,IACF,MAAO,cAAa,MAAM,EAAE,KAAK,SAAS,GAAG,IAAI,MAAM,MAAM,EAAE,KAAK,KAAK,EAAE,IAAI,GAAG,EAAE,aAAa,EAAE;AACnG,YAAQ,GAAG;AAAA,MACT,KAAK;AACH,YAAI;AACJ;AAAA,MACF,KAAK;AACH,YAAI;AACJ;AAAA,MACF,KAAK;AACH,YAAI;AACJ;AAAA,MACF,KAAK;AACH,YAAI;AACJ;AAAA,MACF;AACE,YAAI,EAAE;AAAA,IACV;AACA,WAAO;AAAA,MACL,MAAM;AAAA,MACN,YAAY,EAAE;AAAA,MACd,gBAAgBD;AAAA,MAChB,KAAK,EAAE;AAAA,MACP,KAAKD;AAAA,IACP;AAAA,EACF,EAAC;AACH;",
  "names": ["e", "s", "a"]
}
