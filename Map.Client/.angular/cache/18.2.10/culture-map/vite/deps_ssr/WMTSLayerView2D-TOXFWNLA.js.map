{
  "version": 3,
  "sources": ["../../../../../../node_modules/@arcgis/core/views/2d/layers/WMTSLayerView2D.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { _ as e } from \"../../../chunks/tslib.es6.js\";\nimport t from \"../../../core/Logger.js\";\nimport { isAbortError as i } from \"../../../core/promiseUtils.js\";\nimport { property as s } from \"../../../core/accessorSupport/decorators/property.js\";\nimport \"../../../core/has.js\";\nimport \"../../../core/RandomLCG.js\";\nimport { subclass as r } from \"../../../core/accessorSupport/decorators/subclass.js\";\nimport { equals as a } from \"../../../geometry/support/spatialReferenceUtils.js\";\nimport { BitmapTileLayerView2D as l } from \"./BitmapTileLayerView2D.js\";\nimport { LayerView2DMixin as o } from \"./LayerView2D.js\";\nimport { resampleImage as h } from \"./support/imageUtils.js\";\nimport n from \"../tiling/TileInfoView.js\";\nimport c from \"../tiling/TileKey.js\";\nimport u from \"../tiling/TileQueue.js\";\nimport f from \"../tiling/TileStrategy.js\";\nimport p from \"../../layers/LayerView.js\";\nimport d from \"../../layers/RefreshableLayerView.js\";\nconst m = new Set([102113, 102100, 3857, 3785, 900913]),\n  y = [0, 0];\nlet _ = class extends d(l(o(p))) {\n  constructor() {\n    super(...arguments), this._tileStrategy = null, this._fetchQueue = null, this.layer = null;\n  }\n  get tileMatrixSet() {\n    const e = this._getTileMatrixSetBySpatialReference(this.layer.activeLayer);\n    return e ? (e.id !== this.layer.activeLayer.tileMatrixSetId && (this.layer.activeLayer.tileMatrixSetId = e.id), e) : null;\n  }\n  update(e) {\n    this._fetchQueue.pause(), this._fetchQueue.state = e.state, this._tileStrategy.update(e), this._fetchQueue.resume();\n  }\n  attach() {\n    const e = this.tileMatrixSet?.tileInfo;\n    e && (this._tileInfoView = new n(e), this._fetchQueue = new u({\n      tileInfoView: this._tileInfoView,\n      concurrency: 16,\n      process: (e, t) => this.fetchTile(e, t)\n    }), this._tileStrategy = new f({\n      cachePolicy: \"keep\",\n      resampling: !0,\n      acquireTile: e => this.acquireTile(e),\n      releaseTile: e => this.releaseTile(e),\n      tileInfoView: this._tileInfoView\n    }), this.addAttachHandles(this._updatingHandles.add(() => [this.layer?.activeLayer?.styleId, this.tileMatrixSet], () => this.doRefresh())), super.attach());\n  }\n  detach() {\n    super.detach(), this._tileStrategy?.destroy(), this._fetchQueue?.destroy(), this._fetchQueue = this._tileStrategy = this._tileInfoView = null;\n  }\n  viewChange() {\n    this.requestUpdate();\n  }\n  moveEnd() {\n    this.requestUpdate();\n  }\n  supportsSpatialReference(e) {\n    return this.layer.activeLayer.tileMatrixSets?.some(t => a(t.tileInfo?.spatialReference, e)) ?? !1;\n  }\n  async doRefresh() {\n    if (this.attached) {\n      if (this.suspended) return this._tileStrategy.clear(), void this.requestUpdate();\n      this._fetchQueue.reset(), this._tileStrategy.refresh(e => this._updatingHandles.addPromise(this._enqueueTileFetch(e)));\n    }\n  }\n  acquireTile(e) {\n    const t = this._bitmapView.createTile(e),\n      i = t.bitmap;\n    return [i.x, i.y] = this._tileInfoView.getTileCoords(y, t.key), i.resolution = this._tileInfoView.getTileResolution(t.key), [i.width, i.height] = this._tileInfoView.tileInfo.size, this._updatingHandles.addPromise(this._enqueueTileFetch(t)), this._bitmapView.addChild(t), this.requestUpdate(), t;\n  }\n  releaseTile(e) {\n    this._fetchQueue.abort(e.key.id), this._bitmapView.removeChild(e), e.once(\"detach\", () => e.destroy()), this.requestUpdate();\n  }\n  async fetchTile(e, t = {}) {\n    const s = \"tilemapCache\" in this.layer ? this.layer.tilemapCache : null,\n      {\n        signal: r,\n        resamplingLevel: a = 0\n      } = t;\n    if (!s) return this._fetchImage(e, r);\n    const l = new c(0, 0, 0, 0);\n    let o;\n    try {\n      await s.fetchAvailabilityUpsample(e.level, e.row, e.col, l, {\n        signal: r\n      }), o = await this._fetchImage(l, r);\n    } catch (n) {\n      if (i(n)) throw n;\n      if (a < 3) {\n        const i = this._tileInfoView.getTileParentId(e.id);\n        if (i) {\n          const s = new c(i),\n            r = await this.fetchTile(s, {\n              ...t,\n              resamplingLevel: a + 1\n            });\n          return h(this._tileInfoView, r, s, e);\n        }\n      }\n      throw n;\n    }\n    return h(this._tileInfoView, o, l, e);\n  }\n  canResume() {\n    const e = super.canResume();\n    return e ? null !== this.tileMatrixSet : e;\n  }\n  async _enqueueTileFetch(e) {\n    if (!this._fetchQueue.has(e.key.id)) {\n      try {\n        const t = await this._fetchQueue.push(e.key);\n        e.bitmap.source = t, e.bitmap.width = this._tileInfoView.tileInfo.size[0], e.bitmap.height = this._tileInfoView.tileInfo.size[1], e.once(\"attach\", () => this.requestUpdate());\n      } catch (s) {\n        i(s) || t.getLogger(this).error(s);\n      }\n      this.requestUpdate();\n    }\n  }\n  async _fetchImage(e, t) {\n    return this.layer.fetchImageBitmapTile(e.level, e.row, e.col, {\n      signal: t\n    });\n  }\n  _getTileMatrixSetBySpatialReference(e) {\n    const t = this.view.spatialReference;\n    if (!e.tileMatrixSets) return null;\n    let i = e.tileMatrixSets.find(e => a(e.tileInfo?.spatialReference, t));\n    return !i && t.isWebMercator && (i = e.tileMatrixSets.find(e => m.has(e.tileInfo?.spatialReference.wkid ?? -1))), i;\n  }\n};\ne([s({\n  readOnly: !0\n})], _.prototype, \"tileMatrixSet\", null), _ = e([r(\"esri.views.2d.layers.WMTSLayerView2D\")], _);\nconst w = _;\nexport { w as default };"],
  "mappings": "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",
  "names": ["m", "y", "r", "e", "i", "a", "n", "s"]
}
