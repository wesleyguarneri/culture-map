{
  "version": 3,
  "sources": ["../../../../../../node_modules/@arcgis/core/support/elevationInfoUtils.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { verticalLengthUnitFromSpatialReference as e, convertUnit as n } from \"../core/unitUtils.js\";\nimport { getMetersPerUnit as t } from \"../symbols/support/unitConversionUtils.js\";\nfunction o(e) {\n  return e ? j : z;\n}\nfunction r(e, n) {\n  return n?.mode ? n.mode : o(e).mode;\n}\nfunction u(e, n) {\n  return null != n ? n : o(e);\n}\nfunction i(e, n) {\n  return r(null != e && e.hasZ, n);\n}\nfunction s(e, n) {\n  return u(null != e && !!e.hasZ, n);\n}\nfunction l(e) {\n  const n = g(e);\n  return i(e.geometry, n);\n}\nfunction a(e) {\n  const n = g(e),\n    t = i(e.geometry, n),\n    o = null != n && \"on-the-ground\" !== t ? R(n) : 0,\n    r = n?.featureExpressionInfo;\n  return {\n    mode: t,\n    offset: o,\n    featureExpressionInfo: r\n  };\n}\nfunction f(e) {\n  return v(a(e));\n}\nfunction c(e) {\n  return v(e) || d(e);\n}\nfunction d(e) {\n  return \"0\" === e?.featureExpressionInfo?.expression;\n}\nfunction v(e) {\n  if (!e) return !1;\n  if (\"on-the-ground\" === e.mode) return !1;\n  const n = e?.featureExpressionInfo ? e.featureExpressionInfo.expression : null;\n  return !(!n || \"0\" === n);\n}\nfunction g(e) {\n  return e.layer && \"elevationInfo\" in e.layer ? e.layer.elevationInfo : null;\n}\nfunction h(t, o) {\n  if (!t?.offset) return 0;\n  const {\n    offset: r,\n    unit: u\n  } = t;\n  if (\"decimal-degrees\" === u) return 0;\n  const i = \"unknown\" !== u && u ? u : \"meters\",\n    s = e(o);\n  return s ? n(r, i, s) : 0;\n}\nfunction p(e, n, t) {\n  if (!t?.mode) return;\n  const o = e.hasZ ? e.z : 0,\n    r = h(t, e.spatialReference);\n  switch (t.mode) {\n    case \"absolute-height\":\n      return o - r;\n    case \"on-the-ground\":\n      return 0;\n    case \"relative-to-ground\":\n      return o - ((n.elevationProvider.getElevation(e.x, e.y, o, e.spatialReference, \"ground\") ?? 0) + r);\n    case \"relative-to-scene\":\n      return o - ((n.elevationProvider.getElevation(e.x, e.y, o, e.spatialReference, \"scene\") ?? 0) + r);\n  }\n}\nfunction m(e, n, t, o = null) {\n  return E(e, n.x, n.y, n.hasZ ? n.z : 0, n.spatialReference, t, o);\n}\nfunction x(e, n, t, o, r = null) {\n  return E(e, n[0], n[1], n.length > 2 ? n[2] : 0, t, o, r);\n}\nfunction E(e, n, t, o, r, u, i = null) {\n  if (null == u) return;\n  const s = null != i ? i.mode : \"absolute-height\";\n  if (\"on-the-ground\" === s) return 0;\n  const {\n    absoluteZ: l\n  } = b(n, t, o, r, e, u);\n  return I(l, n, t, o, r, e, i, s);\n}\nfunction b(e, n, t, o, r, u) {\n  const i = h(u, o);\n  switch (u.mode) {\n    case \"absolute-height\":\n      return {\n        absoluteZ: t + i,\n        elevation: 0\n      };\n    case \"on-the-ground\":\n      {\n        const t = r.elevationProvider.getElevation(e, n, 0, o, \"ground\") ?? 0;\n        return {\n          absoluteZ: t,\n          elevation: t\n        };\n      }\n    case \"relative-to-ground\":\n      {\n        const u = r.elevationProvider.getElevation(e, n, t, o, \"ground\") ?? 0;\n        return {\n          absoluteZ: t + u + i,\n          elevation: u\n        };\n      }\n    case \"relative-to-scene\":\n      {\n        const u = r.elevationProvider.getElevation(e, n, t, o, \"scene\") ?? 0;\n        return {\n          absoluteZ: t + u + i,\n          elevation: u\n        };\n      }\n  }\n}\nfunction I(e, n, t, o, r, u, i, s) {\n  const l = h(i, r);\n  switch (s) {\n    case \"absolute-height\":\n      return e - l;\n    case \"relative-to-ground\":\n      return e - ((u.elevationProvider.getElevation(n, t, o, r, \"ground\") ?? 0) + l);\n    case \"relative-to-scene\":\n      return e - ((u.elevationProvider.getElevation(n, t, o, r, \"scene\") ?? 0) + l);\n  }\n}\nfunction y(e, n) {\n  if (null == n) return !1;\n  const {\n    mode: t\n  } = n;\n  return null != t && (\"scene\" === e && \"relative-to-scene\" === t || \"ground\" === e && \"absolute-height\" !== t);\n}\nfunction Z(e, n, t) {\n  return t && t.mode !== n ? `${e} only support ${n} elevation mode` : null;\n}\nfunction P(e, n, t) {\n  return t?.mode === n ? `${e} do not support ${n} elevation mode` : null;\n}\nfunction w(e, n) {\n  return null != n?.featureExpressionInfo && \"0\" !== n.featureExpressionInfo.expression ? `${e} do not support featureExpressionInfo` : null;\n}\nfunction $(e, n) {\n  n && e.warn(\".elevationInfo=\", n);\n}\nfunction R(e) {\n  return (e?.offset ?? 0) * t(e?.unit);\n}\nconst j = {\n    mode: \"absolute-height\",\n    offset: 0\n  },\n  z = {\n    mode: \"on-the-ground\",\n    offset: null\n  };\nexport { j as absoluteHeightElevationInfo, y as elevationContextAffectsAlignment, Z as elevationModeRequiredMessage, P as elevationModeUnsupportedMessage, d as featureExpressionInfoIsZero, w as featureExpressionUnsupportedMessage, m as getConvertedElevation, x as getConvertedElevationFromVector, E as getConvertedElevationFromXYZ, u as getEffectiveElevationInfo, r as getEffectiveElevationMode, h as getElevationOffset, R as getElevationOffsetInMeters, s as getGeometryEffectiveElevationInfo, i as getGeometryEffectiveElevationMode, a as getGraphicEffectiveElevationInfo, l as getGraphicEffectiveElevationMode, p as getZForElevationMode, v as hasEffectiveFeatureExpressionInfo, c as hasFeatureExpressionInfo, f as hasGraphicFeatureExpressionInfo, $ as logInvalidElevationInfoWarning, z as onTheGroundElevationInfo, b as zValueInAbsoluteHeightMode };"],
  "mappings": "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",
  "names": ["j", "r", "o", "u", "i", "s", "l", "t"]
}
