{
  "version": 3,
  "sources": ["../../../../../../node_modules/@arcgis/core/rest/query/operations/queryTopFeatures.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport t from \"../../../request.js\";\nimport { urlToObject as e, join as r } from \"../../../core/urlUtils.js\";\nimport { getJsonType as n } from \"../../../geometry/support/jsonUtils.js\";\nimport { normalizeCentralMeridian as o } from \"../../../geometry/support/normalizeUtils.js\";\nimport { srToRESTValue as i } from \"../../../geometry/support/spatialReferenceUtils.js\";\nimport { mapParameters as s } from \"../../operations/urlUtils.js\";\nimport { applyFeatureSetZUnitScaling as l } from \"./queryZScale.js\";\nconst u = \"Layer does not support extent calculation.\";\nfunction y(t, e) {\n  const r = t.geometry,\n    o = t.toJSON(),\n    s = o;\n  if (null != r && (s.geometry = JSON.stringify(r), s.geometryType = n(r), s.inSR = i(r.spatialReference)), o.topFilter?.groupByFields && (s.topFilter.groupByFields = o.topFilter.groupByFields.join(\",\")), o.topFilter?.orderByFields && (s.topFilter.orderByFields = o.topFilter.orderByFields.join(\",\")), o.topFilter && (s.topFilter = JSON.stringify(s.topFilter)), o.objectIds && (s.objectIds = o.objectIds.join(\",\")), o.orderByFields && (s.orderByFields = o.orderByFields.join(\",\")), o.outFields && !(e?.returnCountOnly || e?.returnExtentOnly || e?.returnIdsOnly) ? o.outFields.includes(\"*\") ? s.outFields = \"*\" : s.outFields = o.outFields.join(\",\") : delete s.outFields, o.outSR ? s.outSR = i(o.outSR) : r && o.returnGeometry && (s.outSR = s.inSR), o.returnGeometry && delete o.returnGeometry, o.timeExtent) {\n    const t = o.timeExtent,\n      {\n        start: e,\n        end: r\n      } = t;\n    null == e && null == r || (s.time = e === r ? e : `${e ?? \"null\"},${r ?? \"null\"}`), delete o.timeExtent;\n  }\n  return s;\n}\nasync function p(t, e, r, n) {\n  const o = await a(t, e, \"json\", n);\n  return l(e, r, o.data), o;\n}\nasync function m(t, e, r) {\n  return null != e.timeExtent && e.timeExtent.isEmpty ? {\n    data: {\n      objectIds: []\n    }\n  } : a(t, e, \"json\", r, {\n    returnIdsOnly: !0\n  });\n}\nasync function d(t, e, r) {\n  return null != e.timeExtent && e.timeExtent.isEmpty ? {\n    data: {\n      count: 0,\n      extent: null\n    }\n  } : a(t, e, \"json\", r, {\n    returnExtentOnly: !0,\n    returnCountOnly: !0\n  }).then(t => {\n    const e = t.data;\n    if (e.hasOwnProperty(\"extent\")) return t;\n    if (e.features) throw new Error(u);\n    if (e.hasOwnProperty(\"count\")) throw new Error(u);\n    return t;\n  });\n}\nfunction c(t, e, r) {\n  return null != e.timeExtent && e.timeExtent.isEmpty ? Promise.resolve({\n    data: {\n      count: 0\n    }\n  }) : a(t, e, \"json\", r, {\n    returnIdsOnly: !0,\n    returnCountOnly: !0\n  });\n}\nfunction a(n, i, l, u = {}, p = {}) {\n  const m = \"string\" == typeof n ? e(n) : n,\n    d = i.geometry ? [i.geometry] : [];\n  return u.responseType = \"json\", o(d, null, u).then(e => {\n    const n = e?.[0];\n    null != n && ((i = i.clone()).geometry = n);\n    const o = s({\n      ...m.query,\n      f: l,\n      ...p,\n      ...y(i, p)\n    });\n    return t(r(m.path, \"queryTopFeatures\"), {\n      ...u,\n      query: {\n        ...o,\n        ...u.query\n      }\n    });\n  });\n}\nexport { c as executeQueryForTopCount, d as executeQueryForTopExtents, m as executeQueryForTopIds, p as executeTopFeaturesQuery, y as queryToQueryStringParameters };"],
  "mappings": "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",
  "names": ["t", "e", "r", "p", "d", "u", "m", "n"]
}
