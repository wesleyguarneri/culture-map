{
  "version": 3,
  "sources": ["../../../../../../node_modules/@arcgis/core/views/support/angularMeasurementUtils.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { cyclicalDegrees as e, Cyclical as t } from \"../../core/Cyclical.js\";\nimport { createAngle as r, convertRotationType as i } from \"../../core/quantityUtils.js\";\nimport { convertUnit as o } from \"../../core/unitUtils.js\";\nimport { angle as n } from \"../../core/libs/gl-matrix-2/math/vec2.js\";\nimport { UNIT_Y as a, create as s } from \"../../core/libs/gl-matrix-2/factories/vec2f64.js\";\nimport { s as c, e as l, c as u } from \"../../chunks/vec32.js\";\nimport { create as f } from \"../../core/libs/gl-matrix-2/factories/vec3f64.js\";\nimport { projectVectorToVector as m } from \"../../geometry/projection/projectVectorToVector.js\";\nimport { geodesicCompatibleSpatialReference as g, inverseGeodeticSolver as p, directGeodeticSolver as v, InverseGeodeticSolverResult as d } from \"../../geometry/support/geodesicUtils.js\";\nimport { equals as h } from \"../../geometry/support/spatialReferenceUtils.js\";\nvar j;\nfunction R(e, t) {\n  if (null == e || null == t) return;\n  const i = b(e, t);\n  return null != i ? r(i, \"radians\", \"geographic\") : void 0;\n}\n!function (e) {\n  e.Absolute = \"absolute\", e.Relative = \"relative\", e.RelativeBilateral = \"relative-bilateral\";\n}(j || (j = {}));\nconst b = (() => {\n    const e = f(),\n      t = f();\n    return (r, i) => (c(e, r.x, r.y, r.z ?? 0), c(t, i.x, i.y, i.z ?? 0), y(e, t, r.spatialReference, i.spatialReference));\n  })(),\n  y = (() => {\n    const e = s(),\n      t = f(),\n      r = f();\n    return (i, s, c, u) => {\n      if (l(i, s)) return;\n      const f = g(c),\n        v = g(u);\n      if (f && v && h(f, v) && m(i, c, t, f) && m(s, u, r, v)) {\n        const {\n          azimuth: e\n        } = p(k, t, r, f);\n        return null != e ? o(e, \"degrees\", \"radians\") : void 0;\n      }\n      e[0] = s[0] - i[0], e[1] = s[1] - i[1];\n      let d = n(a, e);\n      return e[0] < 0 && (d = q - d), d;\n    };\n  })();\nfunction x(e, t, r, i = j.Absolute) {\n  if (t && r) switch (i) {\n    case j.Absolute:\n      return R(t, r);\n    case j.Relative:\n      return w(z(e, t, r), j.Relative);\n    case j.RelativeBilateral:\n      return w(z(e, t, r), j.RelativeBilateral);\n  }\n}\nfunction z(e, t, i) {\n  if (!e || !t || !i) return;\n  const o = b(e, t),\n    n = b(t, i);\n  return null != o && null != n ? r(n - o, \"radians\", \"geographic\") : void 0;\n}\nfunction w(e, t) {\n  if (null != e) switch (t) {\n    case j.Absolute:\n      return A(e);\n    case j.Relative:\n      {\n        const t = T(e);\n        let i = I.normalize(t, 0, !0);\n        return -180 === i && (i = 180), r(i, \"degrees\", \"geographic\");\n      }\n    case j.RelativeBilateral:\n      {\n        const t = T(e),\n          i = Math.abs(I.normalize(t, 0, !0));\n        return r(i, \"degrees\", \"geographic\");\n      }\n  }\n}\nfunction A(e) {\n  const t = T(e),\n    i = C.normalize(t, 0, !0);\n  return r(i, \"degrees\", \"geographic\");\n}\nfunction B(e, t, n) {\n  let a = o(e.value, e.unit, \"degrees\");\n  return a = i(a, e.rotationType, n), a = o(a, \"degrees\", t), r(a, t, n);\n}\nconst M = (() => {\n  const e = f();\n  return (t, r, n, a, s, l = \"geodesic\") => {\n    u(e, r);\n    const f = T(s);\n    if (\"geodesic\" === l) {\n      const i = g(n);\n      if (i && m(e, n, e, i)) return v(t, e, f, a, i), t[2] = r[2], !!m(t, i, t, n);\n    }\n    const p = i(f, \"geographic\", \"arithmetic\"),\n      d = o(p, \"degrees\", \"radians\"),\n      h = r[0] + a * Math.cos(d),\n      j = r[1] + a * Math.sin(d),\n      R = r[2];\n    return c(t, h, j, R), !0;\n  };\n})();\nfunction T(e) {\n  if (null != e) return i(V(e), e.rotationType, \"geographic\");\n}\nfunction U(e) {\n  if (null != e) return i(V(e), e.rotationType, \"arithmetic\");\n}\nfunction V(e) {\n  return o(e.value, e.unit, \"degrees\");\n}\nconst k = new d(),\n  q = 2 * Math.PI,\n  C = e,\n  I = new t(-180, 180);\nexport { j as DirectionMode, B as convertAngle, R as directionBetweenPoints, x as directionForVertices, U as getDegreesArithmetic, T as getDegreesGeographic, w as getNormalizedDirection, A as getNormalizedGeographicOrientation, M as pointFromDistanceAlongAzimuth, y as radiansGeographicBetweenVec };"],
  "mappings": "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",
  "names": ["j", "b", "o", "r", "n", "G", "e", "z", "A", "t", "r", "n", "a", "j", "R"]
}
