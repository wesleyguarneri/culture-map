{
  "version": 3,
  "sources": ["../../../../../../node_modules/@arcgis/core/layers/support/ElevationQuery.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { result as e } from \"../../core/asyncUtils.js\";\nimport t from \"../../core/Error.js\";\nimport { assertIsSome as i } from \"../../core/maybe.js\";\nimport { whenOrAbort as n, throwIfAbortError as o } from \"../../core/promiseUtils.js\";\nimport { getMetersPerUnitForSR as l } from \"../../core/unitUtils.js\";\nimport s from \"../../geometry/Multipoint.js\";\nimport a from \"../../geometry/Point.js\";\nimport r from \"../../geometry/Polyline.js\";\nimport { initializeProjection as c, project as u } from \"../../geometry/projection.js\";\nimport { fromExtent as h, create as f, contains as p } from \"../../geometry/support/aaBoundingRect.js\";\nimport { MultiTileElevationSampler as m } from \"./ElevationSampler.js\";\nimport { ElevationTile as d } from \"./ElevationTile.js\";\nimport { TileKey as y } from \"./TileKey.js\";\nclass T {\n  async queryAll(e, i, n) {\n    if (!(e = n?.ignoreInvisibleLayers ? e.filter(e => e.visible) : e.slice()).length) throw new t(\"elevation-query:invalid-layer\", \"Elevation queries require at least one elevation layer to fetch tiles from\");\n    const o = w.fromGeometry(i);\n    let l = !1;\n    n?.returnSampleInfo || (l = !0);\n    const s = {\n        ...R,\n        ...n,\n        returnSampleInfo: !0\n      },\n      a = await this.query(e[e.length - 1], o, s),\n      r = await this._queryAllContinue(e, a, s);\n    return r.geometry = r.geometry.export(), l && delete r.sampleInfo, r;\n  }\n  async query(e, i, n) {\n    if (!e) throw new t(\"elevation-query:invalid-layer\", \"Elevation queries require an elevation layer to fetch tiles from\");\n    if (!i || !(i instanceof w) && \"point\" !== i.type && \"multipoint\" !== i.type && \"polyline\" !== i.type) throw new t(\"elevation-query:invalid-geometry\", \"Only point, polyline and multipoint geometries can be used to query elevation\");\n    const o = {\n        ...R,\n        ...n\n      },\n      l = new x(e, i.spatialReference, o),\n      s = o.signal;\n    return await e.load({\n      signal: s\n    }), await q(l, i, s), await this._selectTiles(l, s), await F(l, s), j(l), b(l, s);\n  }\n  async createSampler(e, i, n) {\n    if (!e) throw new t(\"elevation-query:invalid-layer\", \"Elevation queries require an elevation layer to fetch tiles from\");\n    if (!i || \"extent\" !== i.type) throw new t(\"elevation-query:invalid-extent\", \"Invalid or undefined extent\");\n    const o = {\n      ...R,\n      ...n\n    };\n    return this._createSampler(e, i, o);\n  }\n  async createSamplerAll(e, i, n) {\n    if (!(e = n?.ignoreInvisibleLayers ? e.filter(e => e.visible) : e.slice()).length) throw new t(\"elevation-query:invalid-layer\", \"Elevation queries require at least one elevation layer to fetch tiles from\");\n    if (!i || \"extent\" !== i.type) throw new t(\"elevation-query:invalid-extent\", \"Invalid or undefined extent\");\n    const o = {\n        ...R,\n        ...n,\n        returnSampleInfo: !0\n      },\n      l = await this._createSampler(e[e.length - 1], i, o);\n    return this._createSamplerAllContinue(e, i, l, o);\n  }\n  async _createSampler(e, t, i, n) {\n    const o = i.signal;\n    await e.load({\n      signal: o\n    });\n    const l = t.spatialReference,\n      s = e.tileInfo.spatialReference;\n    l.equals(s) || (await c([{\n      source: l,\n      dest: s\n    }], {\n      signal: o\n    }), t = u(t, s));\n    const a = new _(e, t, i, n);\n    return await this._selectTiles(a, o), await F(a, o), new m(a.elevationTiles, a.layer.tileInfo, a.options.noDataValue);\n  }\n  async _createSamplerAllContinue(e, t, i, n) {\n    if (e.pop(), !e.length) return i;\n    const o = i.samplers.filter(e => !e.tile.hasNoDataValues).map(e => h(e.extent)),\n      l = await this._createSampler(e[e.length - 1], t, n, o);\n    if (0 === l.samplers.length) return i;\n    const s = i.samplers.concat(l.samplers),\n      a = new m(s, n.noDataValue);\n    return this._createSamplerAllContinue(e, t, a, n);\n  }\n  async _queryAllContinue(e, t, n) {\n    const o = e.pop(),\n      l = t.geometry.coordinates,\n      s = t.sampleInfo;\n    i(s);\n    const a = [],\n      r = [];\n    for (let i = 0; i < l.length; i++) {\n      const t = s[i];\n      t.demResolution >= 0 ? t.source || (t.source = o) : e.length && (a.push(l[i]), r.push(i));\n    }\n    if (!e.length || 0 === a.length) return t;\n    const c = t.geometry.clone(a),\n      u = await this.query(e[e.length - 1], c, n),\n      h = u.sampleInfo;\n    if (!h) throw new Error(\"no sampleInfo\");\n    return r.forEach((e, t) => {\n      l[e].z = u.geometry.coordinates[t].z, s[e].demResolution = h[t].demResolution;\n    }), this._queryAllContinue(e, t, n);\n  }\n  async _selectTiles(e, i) {\n    \"geometry\" === e.type && I(e);\n    const n = e.options.demResolution;\n    if (\"number\" == typeof n) C(e, n);else if (\"finest-contiguous\" === n) await this._selectTilesFinestContiguous(e, i);else {\n      if (\"auto\" !== n) throw new t(\"elevation-query:invalid-dem-resolution\", `Invalid dem resolution value '${n}', expected a number, \"finest-contiguous\" or \"auto\"`);\n      await this._selectTilesAuto(e, i);\n    }\n  }\n  async _selectTilesFinestContiguous(e, t) {\n    const {\n        tileInfo: i,\n        tilemapCache: n\n      } = e.layer,\n      o = E(i, n, e.options.minDemResolution);\n    await this._selectTilesFinestContiguousAt(e, o, t);\n  }\n  async _selectTilesFinestContiguousAt(e, i, l) {\n    const s = e.layer;\n    if (e.selectTilesAtLOD(i), i < 0) return;\n    const a = s.tilemapCache,\n      r = e.getTilesToFetch();\n    try {\n      if (a && !L(a)) await n(Promise.all(r.map(e => a.fetchAvailability(e.level, e.row, e.col, {\n        signal: l\n      }))), l);else if (await F(e, l), !e.allElevationTilesFetched()) throw e.clearElevationTiles(), new t(\"elevation-query:has-unavailable-tiles\");\n    } catch (c) {\n      o(c), await this._selectTilesFinestContiguousAt(e, i - 1, l);\n    }\n  }\n  async _selectTilesAuto(t, i) {\n    M(t), S(t);\n    const l = t.layer.tilemapCache;\n    if (!l || L(l)) return this._selectTilesAutoPrefetchUpsample(t, i);\n    const s = t.getTilesToFetch(),\n      a = {},\n      r = s.map(async t => {\n        const n = new y(null, 0, 0, 0, f()),\n          s = await e(l.fetchAvailabilityUpsample(t.level, t.row, t.col, n, {\n            signal: i\n          }));\n        !1 !== s.ok ? null != t.id && (a[t.id] = n) : o(s.error);\n      });\n    await n(Promise.all(r), i), t.remapTiles(a);\n  }\n  async _selectTilesAutoPrefetchUpsample(e, t) {\n    const i = e.layer.tileInfo;\n    await F(e, t);\n    let n = !1;\n    e.forEachTileToFetch((e, t) => {\n      i.upsampleTile(e) ? n = !0 : t();\n    }), n && (await this._selectTilesAutoPrefetchUpsample(e, t));\n  }\n}\nclass w {\n  export() {\n    return this._exporter(this.coordinates, this.spatialReference);\n  }\n  clone(e) {\n    const t = new w();\n    return t.geometry = this.geometry, t.spatialReference = this.spatialReference, t.coordinates = e || this.coordinates.map(e => e.clone()), t._exporter = this._exporter, t;\n  }\n  async project(e, t) {\n    if (this.spatialReference.equals(e)) return this.clone();\n    await c([{\n      source: this.spatialReference,\n      dest: e\n    }], {\n      signal: t\n    });\n    const i = new s({\n        spatialReference: this.spatialReference,\n        points: this.coordinates.map(e => [e.x, e.y])\n      }),\n      n = u(i, e);\n    if (!n) return null;\n    const o = this.coordinates.map((e, t) => {\n        const i = e.clone(),\n          o = n.points[t];\n        return i.x = o[0], i.y = o[1], i;\n      }),\n      l = this.clone(o);\n    return l.spatialReference = e, l;\n  }\n  static fromGeometry(e) {\n    const t = new w();\n    if (t.geometry = e, t.spatialReference = e.spatialReference, e instanceof w) t.coordinates = e.coordinates.map(e => e.clone()), t._exporter = (t, i) => {\n      const n = e.clone(t);\n      return n.spatialReference = i, n;\n    };else switch (e.type) {\n      case \"point\":\n        {\n          const i = e,\n            {\n              hasZ: n,\n              hasM: o\n            } = i;\n          t.coordinates = n && o ? [new v(i.x, i.y, i.z, i.m)] : n ? [new v(i.x, i.y, i.z)] : o ? [new v(i.x, i.y, null, i.m)] : [new v(i.x, i.y)], t._exporter = (t, i) => e.hasM ? new a(t[0].x, t[0].y, t[0].z, t[0].m, i) : new a(t[0].x, t[0].y, t[0].z, i);\n          break;\n        }\n      case \"multipoint\":\n        {\n          const i = e,\n            {\n              hasZ: n,\n              hasM: o\n            } = i;\n          t.coordinates = n && o ? i.points.map(e => new v(e[0], e[1], e[2], e[3])) : n ? i.points.map(e => new v(e[0], e[1], e[2])) : o ? i.points.map(e => new v(e[0], e[1], null, e[2])) : i.points.map(e => new v(e[0], e[1])), t._exporter = (t, i) => e.hasM ? new s({\n            points: t.map(e => [e.x, e.y, e.z, e.m]),\n            hasZ: !0,\n            hasM: !0,\n            spatialReference: i\n          }) : new s(t.map(e => [e.x, e.y, e.z]), i);\n          break;\n        }\n      case \"polyline\":\n        {\n          const i = e,\n            n = [],\n            o = [],\n            {\n              hasZ: l,\n              hasM: s\n            } = e;\n          let a = 0;\n          for (const e of i.paths) if (o.push([a, a + e.length]), a += e.length, l && s) for (const t of e) n.push(new v(t[0], t[1], t[2], t[3]));else if (l) for (const t of e) n.push(new v(t[0], t[1], t[2]));else if (s) for (const t of e) n.push(new v(t[0], t[1], null, t[2]));else for (const t of e) n.push(new v(t[0], t[1]));\n          t.coordinates = n, t._exporter = (t, i) => {\n            const n = e.hasM ? t.map(e => [e.x, e.y, e.z, e.m]) : t.map(e => [e.x, e.y, e.z]),\n              l = o.map(e => n.slice(e[0], e[1]));\n            return new r({\n              paths: l,\n              hasM: e.hasM,\n              hasZ: !0,\n              spatialReference: i\n            });\n          };\n          break;\n        }\n    }\n    return t;\n  }\n}\nclass v {\n  constructor(e, t, i = null, n = null, o = null, l = null) {\n    this.x = e, this.y = t, this.z = i, this.m = n, this.tile = o, this.elevationTile = l;\n  }\n  clone() {\n    return new v(this.x, this.y, this.z, this.m);\n  }\n}\nclass g {\n  constructor(e, t) {\n    this.layer = e, this.options = t;\n  }\n}\nclass x extends g {\n  constructor(e, t, i) {\n    super(e, i), this.outSpatialReference = t, this.type = \"geometry\";\n  }\n  selectTilesAtLOD(e) {\n    if (e < 0) this.geometry.coordinates.forEach(e => e.tile = null);else {\n      const {\n          tileInfo: t,\n          tilemapCache: i\n        } = this.layer,\n        n = D(t, i)[e].level;\n      this.geometry.coordinates.forEach(e => e.tile = t.tileAt(n, e.x, e.y));\n    }\n  }\n  allElevationTilesFetched() {\n    return !this.geometry.coordinates.some(e => !e.elevationTile);\n  }\n  clearElevationTiles() {\n    for (const e of this.geometry.coordinates) e.elevationTile !== this.outsideExtentTile && (e.elevationTile = null);\n  }\n  populateElevationTiles(e) {\n    for (const t of this.geometry.coordinates) !t.elevationTile && t.tile?.id && (t.elevationTile = e[t.tile.id]);\n  }\n  remapTiles(e) {\n    for (const t of this.geometry.coordinates) {\n      const i = t.tile?.id;\n      t.tile = i ? e[i] : null;\n    }\n  }\n  getTilesToFetch() {\n    const e = {},\n      t = [];\n    for (const i of this.geometry.coordinates) {\n      const n = i.tile;\n      if (!n) continue;\n      const o = i.tile?.id;\n      i.elevationTile || !o || e[o] || (e[o] = n, t.push(n));\n    }\n    return t;\n  }\n  forEachTileToFetch(e) {\n    for (const t of this.geometry.coordinates) t.tile && !t.elevationTile && e(t.tile, () => {\n      t.tile = null;\n    });\n  }\n}\nclass _ extends g {\n  constructor(e, t, i, n) {\n    super(e, i), this.type = \"extent\", this.elevationTiles = [], this._candidateTiles = [], this._fetchedCandidates = new Set(), this.extent = t.clone().intersection(e.fullExtent), this.maskExtents = n;\n  }\n  selectTilesAtLOD(e, t) {\n    const i = this._maximumLodForRequests(t),\n      n = Math.min(i, e);\n    n < 0 ? this._candidateTiles.length = 0 : this._selectCandidateTilesCoveringExtentAt(n);\n  }\n  _maximumLodForRequests(e) {\n    const {\n        tileInfo: t,\n        tilemapCache: i\n      } = this.layer,\n      n = D(t, i);\n    if (!e) return n.length - 1;\n    const o = this.extent;\n    if (null == o) return -1;\n    for (let l = n.length - 1; l >= 0; l--) {\n      const i = n[l],\n        s = i.resolution * t.size[0],\n        a = i.resolution * t.size[1];\n      if (Math.ceil(o.width / s) * Math.ceil(o.height / a) <= e) return l;\n    }\n    return -1;\n  }\n  allElevationTilesFetched() {\n    return this._candidateTiles.length === this.elevationTiles.length;\n  }\n  clearElevationTiles() {\n    this.elevationTiles.length = 0, this._fetchedCandidates.clear();\n  }\n  populateElevationTiles(e) {\n    for (const t of this._candidateTiles) {\n      const i = t.id && e[t.id];\n      i && (this._fetchedCandidates.add(t), this.elevationTiles.push(i));\n    }\n  }\n  remapTiles(e) {\n    this._candidateTiles = z(this._candidateTiles.map(t => e[t.id]));\n  }\n  getTilesToFetch() {\n    return this._candidateTiles;\n  }\n  forEachTileToFetch(e, t) {\n    const i = this._candidateTiles;\n    this._candidateTiles = [], i.forEach(i => {\n      if (this._fetchedCandidates.has(i)) return void (t && t(i));\n      let n = !1;\n      e(i, () => n = !0), n ? t && t(i) : this._candidateTiles.push(i);\n    }), this._candidateTiles = z(this._candidateTiles, t);\n  }\n  _selectCandidateTilesCoveringExtentAt(e) {\n    this._candidateTiles.length = 0;\n    const t = this.extent;\n    if (null == t) return;\n    const {\n        tileInfo: i,\n        tilemapCache: n\n      } = this.layer,\n      o = D(i, n)[e],\n      l = i.tileAt(o.level, t.xmin, t.ymin),\n      s = l.extent;\n    if (null == s) return;\n    const a = o.resolution * i.size[0],\n      r = o.resolution * i.size[1],\n      c = Math.ceil((t.xmax - s[0]) / a),\n      u = Math.ceil((t.ymax - s[1]) / r);\n    for (let h = 0; h < u; h++) for (let e = 0; e < c; e++) {\n      const t = new y(null, l.level, l.row - h, l.col + e);\n      i.updateTileInfo(t), this._tileIsMasked(t) || this._candidateTiles.push(t);\n    }\n  }\n  _tileIsMasked(e) {\n    return !!this.maskExtents && this.maskExtents.some(t => e.extent && p(t, e.extent));\n  }\n}\nfunction E(e, t, i = 0) {\n  const n = D(e, t);\n  let o = n.length - 1;\n  if (i > 0) {\n    const t = i / l(e.spatialReference),\n      s = n.findIndex(e => e.resolution < t);\n    0 === s ? o = 0 : s > 0 && (o = s - 1);\n  }\n  return o;\n}\nconst R = {\n  maximumAutoTileRequests: 20,\n  noDataValue: 0,\n  returnSampleInfo: !1,\n  demResolution: \"auto\",\n  minDemResolution: 0\n};\nasync function q(e, i, n) {\n  let o;\n  const l = e.layer.tileInfo.spatialReference;\n  if (i instanceof w ? o = await i.project(l, n) : (await c([{\n    source: i.spatialReference,\n    dest: l\n  }], {\n    signal: n\n  }), o = u(i, l)), !o) throw new t(\"elevation-query:spatial-reference-mismatch\", `Cannot query elevation in '${i.spatialReference.wkid}' on an elevation service in '${l.wkid}'`);\n  e.geometry = w.fromGeometry(o);\n}\nfunction I(e) {\n  if (null == e.layer.fullExtent) return;\n  const t = new d(null);\n  t.sample = () => e.options.noDataValue, e.outsideExtentTile = t;\n  const i = e.layer.fullExtent;\n  e.geometry.coordinates.forEach(e => {\n    const n = e.x,\n      o = e.y;\n    (n < i.xmin || n > i.xmax || o < i.ymin || o > i.ymax) && (e.elevationTile = t);\n  });\n}\nfunction A(e, t) {\n  const {\n      tileInfo: i,\n      tilemapCache: n\n    } = e.layer,\n    o = t / l(i.spatialReference),\n    s = D(i, n);\n  let a = s[0],\n    r = 0;\n  for (let l = 1; l < s.length; l++) {\n    const e = s[l];\n    Math.abs(e.resolution - o) < Math.abs(a.resolution - o) && (a = e, r = l);\n  }\n  return r;\n}\nfunction C(e, t) {\n  const i = A(e, t);\n  e.selectTilesAtLOD(i);\n}\nfunction M(e) {\n  const {\n      tileInfo: t,\n      tilemapCache: i\n    } = e.layer,\n    n = E(t, i, e.options.minDemResolution);\n  e.selectTilesAtLOD(n, e.options.maximumAutoTileRequests);\n}\nfunction D(e, t) {\n  const i = e.lods;\n  if (L(t)) {\n    const {\n      effectiveMinLOD: e,\n      effectiveMaxLOD: n\n    } = t;\n    return i.filter(t => t.level >= e && t.level <= n);\n  }\n  return i;\n}\nasync function F(e, t) {\n  const i = e.getTilesToFetch(),\n    o = {},\n    l = e.options.cache,\n    s = e.options.noDataValue,\n    a = i.map(async i => {\n      if (null == i.id) return;\n      const n = `${e.layer.uid}:${i.id}:${s}`,\n        a = null != l ? l.get(n) : null,\n        r = null != a ? a : await e.layer.fetchTile(i.level, i.row, i.col, {\n          noDataValue: s,\n          signal: t\n        });\n      null != l && l.put(n, r), o[i.id] = new d(i, r);\n    });\n  await n(Promise.allSettled(a), t), e.populateElevationTiles(o);\n}\nfunction S(e) {\n  const t = e.layer.tileInfo;\n  let i = 0;\n  const n = {},\n    o = e => {\n      null != e.id && (e.id in n ? n[e.id]++ : (n[e.id] = 1, i++));\n    },\n    l = e => {\n      if (null == e.id) return;\n      const t = n[e.id];\n      1 === t ? (delete n[e.id], i--) : n[e.id] = t - 1;\n    };\n  e.forEachTileToFetch(o, l);\n  let s = !0;\n  for (; s && (s = !1, e.forEachTileToFetch(n => {\n    i <= e.options.maximumAutoTileRequests || (l(n), t.upsampleTile(n) && (s = !0), o(n));\n  }, l), s););\n}\nfunction j(e) {\n  e.geometry.coordinates.forEach(t => {\n    const i = t.elevationTile;\n    let n = e.options.noDataValue;\n    if (i) {\n      const e = i.sample(t.x, t.y);\n      null != e ? n = e : t.elevationTile = null;\n    }\n    t.z = n;\n  });\n}\nfunction z(e, t) {\n  const i = {},\n    n = [];\n  for (const l of e) {\n    const e = l.id;\n    e && !i[e] ? (i[e] = l, n.push(l)) : t && t(l);\n  }\n  const o = n.sort((e, t) => e.level - t.level);\n  return o.filter((e, i) => {\n    for (let n = 0; n < i; n++) {\n      const i = o[n].extent;\n      if (i && e.extent && p(i, e.extent)) return t && t(e), !1;\n    }\n    return !0;\n  });\n}\nasync function b(e, t) {\n  const n = await e.geometry.project(e.outSpatialReference, t);\n  i(n);\n  const o = {\n    geometry: n.export(),\n    noDataValue: e.options.noDataValue\n  };\n  return e.options.returnSampleInfo && (o.sampleInfo = k(e)), e.geometry.coordinates.forEach(e => {\n    e.tile = null, e.elevationTile = null;\n  }), o;\n}\nfunction k(e) {\n  const t = e.layer.tileInfo,\n    i = l(t.spatialReference);\n  return e.geometry.coordinates.map(n => {\n    let o = -1;\n    if (n.elevationTile && n.elevationTile !== e.outsideExtentTile) {\n      o = t.lodAt(n.elevationTile.tile.level).resolution * i;\n    }\n    return {\n      demResolution: o\n    };\n  });\n}\nfunction L(e) {\n  return null != e?.tileInfo;\n}\nexport { T as ElevationQuery, w as GeometryDescriptor, E as getFinestLodIndex };"],
  "mappings": "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",
  "names": ["n", "e", "o", "s", "R", "a", "t", "_", "u", "h", "i", "l"]
}
