{
  "version": 3,
  "sources": ["../../../../../../node_modules/@arcgis/core/views/layers/ImageryTileLayerView.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { _ as e } from \"../../chunks/tslib.es6.js\";\nimport t from \"../../Graphic.js\";\nimport r from \"../../core/Error.js\";\nimport { property as i } from \"../../core/accessorSupport/decorators/property.js\";\nimport \"../../core/has.js\";\nimport \"../../core/Logger.js\";\nimport \"../../core/RandomLCG.js\";\nimport { subclass as s } from \"../../core/accessorSupport/decorators/subclass.js\";\nimport { combineTimeExtent as a } from \"../../layers/support/timeSupport.js\";\nimport { getDefaultDatumTransformationForDataset as o, projectDatasetExtent as n } from \"../../layers/support/rasterFunctions/rasterProjectionHelper.js\";\nimport { getFetchPopupTemplate as l } from \"./support/popupUtils.js\";\nconst u = u => {\n  let p = class extends u {\n    constructor() {\n      super(...arguments), this._rasterFieldPrefix = \"Raster.\", this.layer = null, this.view = null, this.tileInfo = null;\n    }\n    get fullExtent() {\n      return this._getfullExtent();\n    }\n    get timeExtent() {\n      return a(this.layer, this.view?.timeExtent, this._get(\"timeExtent\"));\n    }\n    get hasTilingEffects() {\n      return !!(this.layer.renderer && \"dynamicRangeAdjustment\" in this.layer.renderer && this.layer.renderer.dynamicRangeAdjustment);\n    }\n    get datumTransformation() {\n      return o(this.layer.fullExtent, this.view.spatialReference, !0);\n    }\n    supportsSpatialReference(e) {\n      return !!n(this.layer.serviceRasterInfo, e);\n    }\n    async fetchPopupFeaturesAtLocation(e, i) {\n      const {\n        layer: s\n      } = this;\n      if (!e) throw new r(\"imageryTileLayerView:fetchPopupFeatures\", \"Nothing to fetch without area\", {\n        layer: s\n      });\n      const {\n          popupEnabled: a\n        } = s,\n        o = l(s, i);\n      if (!a || null == o) return [];\n      const n = [],\n        {\n          value: u,\n          magdirValue: p,\n          processedValue: c\n        } = await s.identify(e, {\n          timeExtent: this.timeExtent,\n          signal: i?.signal\n        });\n      let m = \"\";\n      if (u?.length) {\n        m = \"imagery-tile\" === s.type && s.hasStandardTime() && null != u[0] ? u.map(e => s.getStandardTimeValue(e)).join(\", \") : u.join(\", \");\n        const e = {\n            ObjectId: 0\n          },\n          r = \"Raster.ServicePixelValue\";\n        e[r] = \"imagery-tile\" === s.type && \"Function\" === s.raster.datasetFormat ? c?.join(\", \") : m, e[r + \".Raw\"] = m;\n        const i = s.raster?.rasterInfo ?? s.serviceRasterInfo,\n          a = i?.attributeTable;\n        if (null != a) {\n          const {\n              fields: t,\n              features: i\n            } = a,\n            s = t.find(({\n              name: e\n            }) => \"value\" === e.toLowerCase()),\n            o = e[r],\n            n = s ? i.find(e => String(e.attributes[s.name]) === o) : null;\n          if (n) for (const r in n.attributes) if (n.attributes.hasOwnProperty(r)) {\n            e[this._rasterFieldPrefix + r] = n.attributes[r];\n          }\n        }\n        const o = i?.dataType;\n        \"vector-magdir\" !== o && \"vector-uv\" !== o || (e[\"Raster.Magnitude\"] = p?.[0], e[\"Raster.Direction\"] = p?.[1]);\n        const l = new t({\n          geometry: this.fullExtent.clone(),\n          attributes: e,\n          layer: s,\n          sourceLayer: s\n        });\n        n.push(l);\n      }\n      return n;\n    }\n    _getfullExtent() {\n      return n(this.layer.serviceRasterInfo, this.view.spatialReference);\n    }\n  };\n  return e([i()], p.prototype, \"fullExtent\", null), e([i()], p.prototype, \"layer\", void 0), e([i({\n    readOnly: !0\n  })], p.prototype, \"timeExtent\", null), e([i()], p.prototype, \"view\", void 0), e([i()], p.prototype, \"tileInfo\", void 0), e([i({\n    readOnly: !0\n  })], p.prototype, \"hasTilingEffects\", null), e([i()], p.prototype, \"datumTransformation\", null), p = e([s(\"esri.views.layers.ImageryTileLayerView\")], p), p;\n};\nexport { u as default };"],
  "mappings": "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",
  "names": ["u", "p", "e", "i", "s", "a", "o", "n", "r"]
}
