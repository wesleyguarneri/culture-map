{
  "version": 3,
  "sources": ["../../../../../../node_modules/@arcgis/core/views/2d/layers/WMSLayerView2D.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { _ as e } from \"../../../chunks/tslib.es6.js\";\nimport t from \"../../../core/Logger.js\";\nimport { destroyMaybe as r } from \"../../../core/maybe.js\";\nimport { isAbortError as i } from \"../../../core/promiseUtils.js\";\nimport { watch as s } from \"../../../core/reactiveUtils.js\";\nimport { property as a } from \"../../../core/accessorSupport/decorators/property.js\";\nimport \"../../../core/has.js\";\nimport \"../../../core/RandomLCG.js\";\nimport { subclass as o } from \"../../../core/accessorSupport/decorators/subclass.js\";\nimport n from \"../../../geometry/Extent.js\";\nimport { BitmapContainer as p } from \"../engine/BitmapContainer.js\";\nimport { LayerView2DMixin as m } from \"./LayerView2D.js\";\nimport h from \"./support/ExportStrategy.js\";\nimport c from \"../../layers/LayerView.js\";\nimport d from \"../../layers/RefreshableLayerView.js\";\nimport u from \"../../layers/WMSLayerView.js\";\nlet g = class extends u(d(m(c))) {\n  constructor() {\n    super(...arguments), this.bitmapContainer = new p();\n  }\n  supportsSpatialReference(e) {\n    return this.layer.serviceSupportsSpatialReference(e);\n  }\n  update(e) {\n    this.strategy.update(e).catch(e => {\n      i(e) || t.getLogger(this).error(e);\n    });\n  }\n  attach() {\n    const {\n        layer: e\n      } = this,\n      {\n        imageMaxHeight: t,\n        imageMaxWidth: r\n      } = e;\n    this.bitmapContainer = new p(), this.container.addChild(this.bitmapContainer), this.strategy = new h({\n      container: this.bitmapContainer,\n      fetchSource: this.fetchImage.bind(this),\n      requestUpdate: this.requestUpdate.bind(this),\n      imageMaxHeight: t,\n      imageMaxWidth: r,\n      imageRotationSupported: !1,\n      imageNormalizationSupported: !1,\n      hidpi: !1\n    }), this.addAttachHandles(s(() => this.exportImageVersion, () => this.requestUpdate()));\n  }\n  detach() {\n    this.strategy = r(this.strategy), this.container.removeAllChildren();\n  }\n  viewChange() {}\n  moveEnd() {\n    this.requestUpdate();\n  }\n  createFetchPopupFeaturesQuery(e) {\n    const {\n        view: t,\n        bitmapContainer: r\n      } = this,\n      {\n        x: i,\n        y: s\n      } = e,\n      {\n        spatialReference: a\n      } = t;\n    let o,\n      p = 0,\n      m = 0;\n    if (r.children.some(e => {\n      const {\n          width: t,\n          height: r,\n          resolution: h,\n          x: c,\n          y: d\n        } = e,\n        u = c + h * t,\n        g = d - h * r;\n      return i >= c && i <= u && s <= d && s >= g && (o = new n({\n        xmin: c,\n        ymin: g,\n        xmax: u,\n        ymax: d,\n        spatialReference: a\n      }), p = t, m = r, !0);\n    }), !o) return null;\n    const h = o.width / p,\n      c = Math.round((i - o.xmin) / h),\n      d = Math.round((o.ymax - s) / h);\n    return {\n      extent: o,\n      width: p,\n      height: m,\n      x: c,\n      y: d\n    };\n  }\n  async doRefresh() {\n    this.requestUpdate();\n  }\n  isUpdating() {\n    return this.strategy.updating || this.updateRequested;\n  }\n  fetchImage(e, t, r, i) {\n    return this.layer.fetchImageBitmap(e, t, r, {\n      timeExtent: this.timeExtent,\n      ...i\n    });\n  }\n};\ne([a()], g.prototype, \"strategy\", void 0), e([a()], g.prototype, \"updating\", void 0), g = e([o(\"esri.views.2d.layers.WMSLayerView2D\")], g);\nconst y = g;\nexport { y as default };"],
  "mappings": "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",
  "names": ["y", "a", "e", "i", "m", "t", "r", "h", "c", "d", "u", "g"]
}
