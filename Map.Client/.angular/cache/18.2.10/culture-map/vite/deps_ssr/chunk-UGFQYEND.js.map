{
  "version": 3,
  "sources": ["../../../../../../node_modules/@arcgis/core/support/popupUtils.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport e from \"../PopupTemplate.js\";\nimport { isFieldEditable as t, isRasterPixelValueField as n, getDisplayFieldName as i, isFieldVisibleByDefault as o } from \"../layers/support/fieldUtils.js\";\nimport r from \"../popup/content/AttachmentsContent.js\";\nimport \"../popup/content/Content.js\";\nimport \"../popup/content/CustomContent.js\";\nimport \"../popup/content/ExpressionContent.js\";\nimport s from \"../popup/content/FieldsContent.js\";\nimport \"../popup/content/MediaContent.js\";\nimport \"../popup/content/RelationshipContent.js\";\nimport \"../popup/content/TextContent.js\";\nimport l from \"../popup/FieldInfo.js\";\nimport a from \"../popup/support/FieldInfoFormat.js\";\nfunction p({\n  displayField: t,\n  editFieldsInfo: n,\n  fields: i,\n  objectIdField: o,\n  title: r\n}, s) {\n  if (!i) return null;\n  const l = w({\n    editFieldsInfo: n,\n    fields: i,\n    objectIdField: o\n  }, s);\n  if (!l.length) return null;\n  const a = y({\n      titleBase: r,\n      fields: i,\n      displayField: t\n    }),\n    p = j();\n  return new e({\n    title: a,\n    content: p,\n    fieldInfos: l\n  });\n}\nfunction u(t) {\n  const {\n      fields: n,\n      featureReduction: i,\n      title: o\n    } = t,\n    r = i.fields;\n  if (!r) return null;\n  const s = b(r, n ?? []);\n  if (!s.length) return null;\n  const l = C();\n  return new e({\n    title: o,\n    content: l,\n    fieldInfos: s\n  });\n}\nconst c = (e, t) => t.visibleFieldNames ? t.visibleFieldNames.has(e.name) : o(e, t);\nfunction f(e, t) {\n  const n = e;\n  return t && (e = e.filter(e => !t.includes(e.type))), e === n && (e = e.slice()), e.sort(d), e;\n}\nfunction d(e, t) {\n  return \"oid\" === e.type ? -1 : \"oid\" === t.type ? 1 : v(e) ? -1 : v(t) ? 1 : (e.alias || e.name).toLocaleLowerCase().localeCompare((t.alias || t.name).toLocaleLowerCase());\n}\nfunction m(e, t) {\n  return new s({\n    fieldInfos: w(e, t).filter(e => e.visible)\n  });\n}\nfunction w(e, n) {\n  const i = n?.visibleFieldNames;\n  return f(e.fields ?? [], n?.ignoreFieldTypes || I).map(n => new l({\n    fieldName: n.name,\n    isEditable: t(n, e),\n    label: n.alias,\n    format: g(n),\n    visible: c(n, {\n      ...e,\n      visibleFieldNames: i\n    })\n  }));\n}\nfunction b(e, t) {\n  return e.map(e => new l({\n    fieldName: e.name,\n    isEditable: !1,\n    label: e.alias,\n    format: F(e, t),\n    visible: !0\n  }));\n}\nfunction F(e, t) {\n  const {\n    onStatisticField: n,\n    onStatisticExpression: i,\n    statisticType: o\n  } = e;\n  if (n) {\n    const e = t.find(e => n === e.name);\n    if (e) return g(e);\n  }\n  return \"number\" === i?.returnType ? new a({\n    digitSeparator: !0,\n    places: 2\n  }) : \"count\" === o ? new a({\n    digitSeparator: !0,\n    places: 0\n  }) : void 0;\n}\nfunction g(e) {\n  switch (e.type) {\n    case \"small-integer\":\n    case \"integer\":\n    case \"single\":\n      return new a({\n        digitSeparator: !0,\n        places: 0\n      });\n    case \"double\":\n      return new a({\n        digitSeparator: !0,\n        places: 2\n      });\n    case \"string\":\n      return n(e.name) ? new a({\n        digitSeparator: !0,\n        places: 0\n      }) : void 0;\n    default:\n      return;\n  }\n}\nfunction j() {\n  return [new s(), new r()];\n}\nfunction C() {\n  return [new s()];\n}\nfunction y(e) {\n  const t = i(e),\n    {\n      titleBase: n\n    } = e;\n  return t ? `${n}: {${t.trim()}}` : n ?? \"\";\n}\nfunction v(e) {\n  if (\"name\" === (e.name && e.name.toLowerCase())) return !0;\n  const t = e.alias?.toLowerCase();\n  return \"name\" === t;\n}\nconst I = [\"geometry\", \"blob\", \"raster\", \"guid\", \"xml\"];\nexport { w as createFieldInfos, m as createFieldsContent, p as createPopupTemplate, u as createPopupTemplateForFeatureReduction };"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAgBA,SAAS,EAAE;AAAA,EACT,cAAc;AAAA,EACd,gBAAgBA;AAAA,EAChB,QAAQC;AAAA,EACR,eAAe;AAAA,EACf,OAAO;AACT,GAAG,GAAG;AACJ,MAAI,CAACA,GAAG,QAAO;AACf,QAAM,IAAI,EAAE;AAAA,IACV,gBAAgBD;AAAA,IAChB,QAAQC;AAAA,IACR,eAAe;AAAA,EACjB,GAAG,CAAC;AACJ,MAAI,CAAC,EAAE,OAAQ,QAAO;AACtB,QAAM,IAAI,EAAE;AAAA,IACR,WAAW;AAAA,IACX,QAAQA;AAAA,IACR,cAAc;AAAA,EAChB,CAAC,GACDC,KAAI,EAAE;AACR,SAAO,IAAI,EAAE;AAAA,IACX,OAAO;AAAA,IACP,SAASA;AAAA,IACT,YAAY;AAAA,EACd,CAAC;AACH;AAkBA,IAAMC,KAAI,CAAC,GAAG,MAAM,EAAE,oBAAoB,EAAE,kBAAkB,IAAI,EAAE,IAAI,IAAI,EAAE,GAAG,CAAC;AAClF,SAAS,EAAE,GAAG,GAAG;AACf,QAAMC,KAAI;AACV,SAAO,MAAM,IAAI,EAAE,OAAO,CAAAC,OAAK,CAAC,EAAE,SAASA,GAAE,IAAI,CAAC,IAAI,MAAMD,OAAM,IAAI,EAAE,MAAM,IAAI,EAAE,KAAK,CAAC,GAAG;AAC/F;AACA,SAAS,EAAE,GAAG,GAAG;AACf,SAAO,UAAU,EAAE,OAAO,KAAK,UAAU,EAAE,OAAO,IAAI,EAAE,CAAC,IAAI,KAAK,EAAE,CAAC,IAAI,KAAK,EAAE,SAAS,EAAE,MAAM,kBAAkB,EAAE,eAAe,EAAE,SAAS,EAAE,MAAM,kBAAkB,CAAC;AAC5K;AAMA,SAAS,EAAE,GAAGE,IAAG;AACf,QAAMC,KAAID,IAAG;AACb,SAAO,EAAE,EAAE,UAAU,CAAC,GAAGA,IAAG,oBAAoB,CAAC,EAAE,IAAI,CAAAA,OAAK,IAAI,EAAE;AAAA,IAChE,WAAWA,GAAE;AAAA,IACb,YAAY,EAAEA,IAAG,CAAC;AAAA,IAClB,OAAOA,GAAE;AAAA,IACT,QAAQ,EAAEA,EAAC;AAAA,IACX,SAASE,GAAEF,IAAG,iCACT,IADS;AAAA,MAEZ,mBAAmBC;AAAA,IACrB,EAAC;AAAA,EACH,CAAC,CAAC;AACJ;AA4BA,SAAS,EAAE,GAAG;AACZ,UAAQ,EAAE,MAAM;AAAA,IACd,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AACH,aAAO,IAAI,EAAE;AAAA,QACX,gBAAgB;AAAA,QAChB,QAAQ;AAAA,MACV,CAAC;AAAA,IACH,KAAK;AACH,aAAO,IAAI,EAAE;AAAA,QACX,gBAAgB;AAAA,QAChB,QAAQ;AAAA,MACV,CAAC;AAAA,IACH,KAAK;AACH,aAAO,GAAE,EAAE,IAAI,IAAI,IAAI,EAAE;AAAA,QACvB,gBAAgB;AAAA,QAChB,QAAQ;AAAA,MACV,CAAC,IAAI;AAAA,IACP;AACE;AAAA,EACJ;AACF;AACA,SAAS,IAAI;AACX,SAAO,CAAC,IAAI,EAAE,GAAG,IAAI,EAAE,CAAC;AAC1B;AAIA,SAAS,EAAE,GAAG;AACZ,QAAM,IAAI,EAAE,CAAC,GACX;AAAA,IACE,WAAWE;AAAA,EACb,IAAI;AACN,SAAO,IAAI,GAAGA,EAAC,MAAM,EAAE,KAAK,CAAC,MAAMA,MAAK;AAC1C;AACA,SAAS,EAAE,GAAG;AACZ,MAAI,YAAY,EAAE,QAAQ,EAAE,KAAK,YAAY,GAAI,QAAO;AACxD,QAAM,IAAI,EAAE,OAAO,YAAY;AAC/B,SAAO,WAAW;AACpB;AACA,IAAM,IAAI,CAAC,YAAY,QAAQ,UAAU,QAAQ,KAAK;",
  "names": ["n", "i", "p", "c", "n", "e", "n", "i", "c", "n"]
}
