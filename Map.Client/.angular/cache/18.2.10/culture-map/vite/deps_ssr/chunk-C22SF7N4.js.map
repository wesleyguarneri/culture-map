{
  "version": 3,
  "sources": ["../../../../../../node_modules/@arcgis/core/views/3d/terrain/TilingScheme.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport \"../../../geometry.js\";\nimport e from \"../../../core/Error.js\";\nimport \"../../../core/has.js\";\nimport { deg2rad as t, floatEqualAbsolute as i, floatEqualRelative as s } from \"../../../core/mathUtils.js\";\nimport { getMetersPerUnitForSR as r } from \"../../../core/unitUtils.js\";\nimport l from \"../../../geometry/Extent.js\";\nimport n from \"../../../geometry/SpatialReference.js\";\nimport { create as o } from \"../../../geometry/support/aaBoundingRect.js\";\nimport { isGeographic as a } from \"../../../geometry/support/spatialReferenceUtils.js\";\nimport { x2lon as h, y2lat as c } from \"../../../geometry/support/webMercatorUtils.js\";\nimport m from \"../../../layers/support/LOD.js\";\nimport u from \"../../../layers/support/TileInfo.js\";\nimport p from \"../../../geometry/Point.js\";\nconst g = 12;\nclass f {\n  constructor(e) {\n    const t = f.checkUnsupported(e);\n    if (null != t) throw t;\n    const i = e;\n    this.spatialReference = i.spatialReference, this._isWebMercator = this.spatialReference.isWebMercator, this._isGCS = a(this.spatialReference), this.origin = [i.origin.x, i.origin.y], this.pixelSize = i.size[0], this.dpi = i.dpi;\n    const s = i.lods.reduce((e, t) => (t.level < e.minLod.level && (e.minLod = t), e.max = Math.max(e.max, t.level), e), {\n        minLod: i.lods[0],\n        max: -1 / 0\n      }),\n      r = s.minLod,\n      l = 2 ** r.level;\n    let n = r.resolution * l,\n      o = r.scale * l;\n    this.levels = new Array(s.max + 1);\n    for (let a = 0; a < this.levels.length; a++) this.levels[a] = {\n      resolution: n,\n      scale: o,\n      tileSize: [n * i.size[0], n * i.size[1]]\n    }, n /= 2, o /= 2;\n  }\n  clone() {\n    return new f(this.toTileInfo());\n  }\n  toTileInfo() {\n    return new u({\n      dpi: this.dpi,\n      origin: new p({\n        x: this.origin[0],\n        y: this.origin[1],\n        spatialReference: this.spatialReference\n      }),\n      size: [this.pixelSize, this.pixelSize],\n      spatialReference: this.spatialReference,\n      lods: this.levels.map((e, t) => new m({\n        level: t,\n        scale: e.scale,\n        resolution: e.resolution\n      }))\n    });\n  }\n  getExtent(e, t, i, s) {\n    const r = this.levels[e],\n      l = r.tileSize[0],\n      n = r.tileSize[1];\n    s[0] = this.origin[0] + i * l, s[2] = this.origin[0] + (i + 1) * l, s[3] = this.origin[1] - t * n, s[1] = this.origin[1] - (t + 1) * n;\n  }\n  convertExtentToRadians(e, i) {\n    this._isWebMercator ? (i[0] = h(e[0]), i[1] = c(e[1]), i[2] = h(e[2]), i[3] = c(e[3])) : this._isGCS && (i[0] = t(e[0]), i[1] = t(e[1]), i[2] = t(e[2]), i[3] = t(e[3]));\n  }\n  getExtentGeometry(e, t, i, s = new l()) {\n    return this.getExtent(e, t, i, v), s.spatialReference = this.spatialReference, s.xmin = v[0], s.ymin = v[1], s.xmax = v[2], s.ymax = v[3], s.zmin = void 0, s.zmax = void 0, s;\n  }\n  ensureMaxLod(e) {\n    if (null == e) return !1;\n    let t = !1;\n    for (; this.levels.length <= e;) {\n      const {\n          resolution: e,\n          scale: i\n        } = this.levels[this.levels.length - 1],\n        s = e / 2 * this.pixelSize;\n      this.levels.push({\n        resolution: e / 2,\n        scale: i / 2,\n        tileSize: [s, s]\n      }), t = !0;\n    }\n    return t;\n  }\n  capMaxLod(e) {\n    this.levels.length > e + 1 && (this.levels.length = e + 1);\n  }\n  getMaxLod() {\n    return this.levels.length - 1;\n  }\n  scaleAtLevel(e) {\n    return this.levels[0].scale / 2 ** e;\n  }\n  levelAtScale(e) {\n    const t = this.levels[0].scale;\n    return e >= t ? 0 : Math.log(t / e) * Math.LOG2E;\n  }\n  resolutionAtLevel(e) {\n    return this.levels[0].resolution / 2 ** e;\n  }\n  compatibleWith(e, t = 1 / 0) {\n    if (f.checkUnsupported(e)) return !1;\n    const s = new f(e);\n    if (!s.spatialReference.equals(this.spatialReference)) return !1;\n    if (s.pixelSize !== this.pixelSize) return !1;\n    const r = Math.min(this.levels.length - 1, s.levels.length - 1, t),\n      l = this.levels[r].resolution;\n    let n = .5 * l;\n    if (!i(s.origin[0], this.origin[0], n) || !i(s.origin[1], this.origin[1], n)) return !1;\n    return n = .5 * l / 2 ** r / this.pixelSize * g, i(l, s.levels[r].resolution, n);\n  }\n  rootTilesInExtent(e, t = null, i = 1 / 0) {\n    const s = new Array(),\n      r = this.levels[0].tileSize;\n    if (null == e || 0 === r[0] || 0 === r[1]) return s;\n    f.computeRowColExtent(e, r, this.origin, v);\n    let l = v[1],\n      n = v[3],\n      o = v[0],\n      a = v[2];\n    const h = a - o,\n      c = n - l;\n    if (h * c > i) {\n      const e = Math.floor(Math.sqrt(i));\n      c > e && (l = l + Math.floor(.5 * c) - Math.floor(.5 * e), n = l + e), h > e && (o = o + Math.floor(.5 * h) - Math.floor(.5 * e), a = o + e);\n    }\n    for (let m = l; m < n; m++) for (let e = o; e < a; e++) s.push([0, m, e]);\n    return null != t && (t[0] = this.origin[0] + o * r[0], t[1] = this.origin[1] - n * r[1], t[2] = this.origin[0] + a * r[0], t[3] = this.origin[1] - l * r[1]), s;\n  }\n  static computeRowColExtent(e, t, i, s) {\n    const r = .001 * (e[2] - e[0] + (e[3] - e[1]));\n    s[0] = Math.max(0, Math.floor((e[0] + r - i[0]) / t[0])), s[2] = Math.max(0, Math.ceil((e[2] - r - i[0]) / t[0])), s[1] = Math.max(0, Math.floor((i[1] - e[3] + r) / t[1])), s[3] = Math.max(0, Math.ceil((i[1] - e[1] - r) / t[1]));\n  }\n  static isPowerOfTwo(e) {\n    const t = e.lods,\n      i = t[0].resolution * 2 ** t[0].level;\n    return !t.some(e => !s(e.resolution, i / 2 ** e.level));\n  }\n  static hasGapInLevels(e) {\n    const t = e.lods.map(e => e.level);\n    t.sort((e, t) => e - t);\n    for (let i = 1; i < t.length; i++) if (t[i] !== t[0] + i) return !0;\n    return !1;\n  }\n  static tileSizeSupported(e) {\n    const t = e.size[1];\n    return t === e.size[0] && !(t & t - 1) && t >= 128 && t <= 512;\n  }\n  static hasOriginPerLODs(e) {\n    const t = e.origin;\n    return e.lods.some(e => null != e.origin && (e.origin[0] !== t.x || e.origin[1] !== t.y));\n  }\n  static getMissingTileInfoError() {\n    return new e(\"tilingscheme:tile-info-missing\", \"Tiling scheme must have tiling information\");\n  }\n  static checkUnsupported(t) {\n    return null == t ? x() : t.lods.length < 1 ? new e(\"tilingscheme:generic\", \"Tiling scheme must have at least one level\") : f.isPowerOfTwo(t) ? f.hasGapInLevels(t) ? new e(\"tilingscheme:gaps\", \"Tiling scheme levels must not have gaps between min and max level\") : f.tileSizeSupported(t) ? f.hasOriginPerLODs(t) ? new e(\"tilingscheme:multiple-origin\", \"Tiling scheme levels must not have their own origin\") : null : new e(\"tilingscheme:tile-size\", \"Tiles must be square and size must be one of [128, 256, 512]\") : new e(\"tilingscheme:power-of-two\", \"Tiling scheme must be power of two\");\n  }\n  static fromExtent(e, t) {\n    const i = e[2] - e[0],\n      s = e[3] - e[1],\n      l = r(t),\n      n = 1.2 * Math.max(i, s),\n      o = 256,\n      a = n / o,\n      h = a * l * (96 / .0254),\n      c = new f(new u({\n        size: [o, o],\n        origin: new p({\n          x: e[0] - .5 * (n - i),\n          y: e[3] + .5 * (n - s)\n        }),\n        lods: [new m({\n          level: 0,\n          resolution: a,\n          scale: h\n        })],\n        spatialReference: t\n      }));\n    return c.ensureMaxLod(20), c;\n  }\n  static makeWebMercatorAuxiliarySphere(e) {\n    const t = new f(f.WebMercatorAuxiliarySphereTileInfo);\n    return t.ensureMaxLod(e), t;\n  }\n  static makeGCSWithTileSize(e, t = 256, i = 16) {\n    const s = 256 / t,\n      r = new f(new u({\n        size: [t, t],\n        origin: new p({\n          x: -180,\n          y: 90,\n          spatialReference: e\n        }),\n        spatialReference: e,\n        lods: [new m({\n          level: 0,\n          resolution: .703125 * s,\n          scale: 295497598.570834 * s\n        })]\n      }));\n    return r.ensureMaxLod(i), r;\n  }\n  get test() {}\n}\nfunction x() {\n  return new e(\"tilingscheme:tile-info-missing\", \"Tiling scheme must have tiling information\");\n}\nf.WebMercatorAuxiliarySphereTileInfo = new u({\n  size: [256, 256],\n  origin: new p({\n    x: -20037508.342787,\n    y: 20037508.342787,\n    spatialReference: n.WebMercator\n  }),\n  spatialReference: n.WebMercator,\n  lods: [new m({\n    level: 0,\n    resolution: 156543.03392800014,\n    scale: 591657527.591555\n  })]\n}), f.WebMercatorAuxiliarySphere = f.makeWebMercatorAuxiliarySphere(19);\nconst v = o();\nexport { f as TilingScheme, x as getMissingTileInfoError };"],
  "mappings": "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",
  "names": ["f", "s", "e", "t", "p", "h"]
}
