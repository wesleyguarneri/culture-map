{
  "version": 3,
  "sources": ["../../../../../../node_modules/@arcgis/core/views/3d/layers/Lyr3DWorker.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { Lyr3DWasmWorkerOutputStatus as s } from \"../../../layers/ILyr3DWasmPerSceneView.js\";\nimport { loadLyr3DWorkerWASM as t } from \"../../../libs/lyr3d/Lyr3DModule.js\";\nlet e, n;\nasync function r(t) {\n  if (await o(), t.inputs.length < 1) return {\n    result: {\n      status: s.Failed,\n      error: \"\",\n      jobDescJson: \"\",\n      data: new Uint8Array(0),\n      missingInputUrls: []\n    },\n    transferList: []\n  };\n  const e = {\n    ptrs: [],\n    sizes: []\n  };\n  for (const s of t.inputs) {\n    const t = n._malloc(s.byteLength);\n    new Uint8Array(n.HEAPU8.buffer, t, s.byteLength).set(new Uint8Array(s)), e.ptrs.push(t), e.sizes.push(s.byteLength);\n  }\n  const r = n.process(t.jobDescJson, e, t.isMissingResourceCase),\n    i = r.status === s.Succeeded && r.data,\n    a = r.status === s.MissingInputs && r.missingInputUrls.length > 0;\n  if (i) {\n    const s = r.data.slice();\n    r.data = s;\n  } else a && (r.jobDescJson = r.jobDescJson.slice(0), r.originalInputs = t.inputs);\n  for (let s = 0; s < e.ptrs.length; ++s) n._free(e.ptrs[s]);\n  const u = [];\n  if (i) u.push(r.data.buffer);else if (a) for (const s of t.inputs) u.push(s);\n  return {\n    result: r,\n    transferList: u\n  };\n}\nfunction i() {\n  n && (n.uninitialize_lyr3d_worker_wasm(), n = null);\n}\nfunction o() {\n  return n ? Promise.resolve() : (e || (e = t().then(s => {\n    n = s, n.initialize_lyr3d_worker_wasm(), e = null;\n  })), e);\n}\nexport { i as destroyWasm, o as initialize, r as process };"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMA,IAAIA;AAAJ,IAAO;AACP,SAAe,EAAE,GAAG;AAAA;AAClB,QAAI,MAAM,EAAE,GAAG,EAAE,OAAO,SAAS,EAAG,QAAO;AAAA,MACzC,QAAQ;AAAA,QACN,QAAQ,EAAE;AAAA,QACV,OAAO;AAAA,QACP,aAAa;AAAA,QACb,MAAM,IAAI,WAAW,CAAC;AAAA,QACtB,kBAAkB,CAAC;AAAA,MACrB;AAAA,MACA,cAAc,CAAC;AAAA,IACjB;AACA,UAAMA,KAAI;AAAA,MACR,MAAM,CAAC;AAAA,MACP,OAAO,CAAC;AAAA,IACV;AACA,eAAW,KAAK,EAAE,QAAQ;AACxB,YAAMC,KAAI,EAAE,QAAQ,EAAE,UAAU;AAChC,UAAI,WAAW,EAAE,OAAO,QAAQA,IAAG,EAAE,UAAU,EAAE,IAAI,IAAI,WAAW,CAAC,CAAC,GAAGD,GAAE,KAAK,KAAKC,EAAC,GAAGD,GAAE,MAAM,KAAK,EAAE,UAAU;AAAA,IACpH;AACA,UAAME,KAAI,EAAE,QAAQ,EAAE,aAAaF,IAAG,EAAE,qBAAqB,GAC3DG,KAAID,GAAE,WAAW,EAAE,aAAaA,GAAE,MAClC,IAAIA,GAAE,WAAW,EAAE,iBAAiBA,GAAE,iBAAiB,SAAS;AAClE,QAAIC,IAAG;AACL,YAAM,IAAID,GAAE,KAAK,MAAM;AACvB,MAAAA,GAAE,OAAO;AAAA,IACX,MAAO,OAAMA,GAAE,cAAcA,GAAE,YAAY,MAAM,CAAC,GAAGA,GAAE,iBAAiB,EAAE;AAC1E,aAAS,IAAI,GAAG,IAAIF,GAAE,KAAK,QAAQ,EAAE,EAAG,GAAE,MAAMA,GAAE,KAAK,CAAC,CAAC;AACzD,UAAMI,KAAI,CAAC;AACX,QAAID,GAAG,CAAAC,GAAE,KAAKF,GAAE,KAAK,MAAM;AAAA,aAAW,EAAG,YAAW,KAAK,EAAE,OAAQ,CAAAE,GAAE,KAAK,CAAC;AAC3E,WAAO;AAAA,MACL,QAAQF;AAAA,MACR,cAAcE;AAAA,IAChB;AAAA,EACF;AAAA;AACA,SAAS,IAAI;AACX,QAAM,EAAE,+BAA+B,GAAG,IAAI;AAChD;AACA,SAAS,IAAI;AACX,SAAO,IAAI,QAAQ,QAAQ,KAAKJ,OAAMA,KAAI,EAAE,EAAE,KAAK,OAAK;AACtD,QAAI,GAAG,EAAE,6BAA6B,GAAGA,KAAI;AAAA,EAC/C,CAAC,IAAIA;AACP;",
  "names": ["e", "t", "r", "i", "u"]
}
