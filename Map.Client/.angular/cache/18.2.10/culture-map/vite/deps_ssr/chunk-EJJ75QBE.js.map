{
  "version": 3,
  "sources": ["../../../../../../node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/output/OutputDepth.glsl.js", "../../../../../../node_modules/@arcgis/core/views/3d/webgl/RenderNode.js", "../../../../../../node_modules/@arcgis/core/views/3d/webgl-engine/effects/ssao/SSAOBlurTechnique.js", "../../../../../../node_modules/@arcgis/core/views/3d/webgl-engine/effects/ssao/SSAONoiseData.js", "../../../../../../node_modules/@arcgis/core/views/3d/webgl-engine/effects/ssao/SSAOParameters.js", "../../../../../../node_modules/@arcgis/core/views/3d/webgl-engine/effects/ssao/SSAOTechnique.js", "../../../../../../node_modules/@arcgis/core/views/3d/webgl-engine/effects/ssao/SSAO.js", "../../../../../../node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/shading/EvaluateAmbientOcclusion.glsl.js", "../../../../../../node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/shading/EvaluateSceneLighting.glsl.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { ShaderOutput as t } from \"../ShaderOutput.js\";\nimport { Rgba4FloatEncoding as a } from \"../util/RgbaFloat16Encoding.glsl.js\";\nimport { glsl as o } from \"../../shaderModules/interfaces.js\";\nfunction e(e, d) {\n  switch (d.output) {\n    case t.Shadow:\n    case t.ShadowHighlight:\n    case t.ShadowExcludeHighlight:\n    case t.ViewshedShadow:\n      e.fragment.include(a), e.fragment.code.add(o`float _calculateFragDepth(const in float depth) {\nconst float SLOPE_SCALE = 2.0;\nconst float BIAS = 20.0 * .000015259;\nfloat m = max(abs(dFdx(depth)), abs(dFdy(depth)));\nreturn depth + SLOPE_SCALE * m + BIAS;\n}\nvoid outputDepth(float _linearDepth) {\nfragColor = floatToRgba4(_calculateFragDepth(_linearDepth));\n}`);\n  }\n}\nexport { e as OutputDepth };", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { _ as e } from \"../../../chunks/tslib.es6.js\";\nimport r from \"../../../core/Accessor.js\";\nimport t from \"../../../core/Error.js\";\nimport { watch as i, initial as s } from \"../../../core/reactiveUtils.js\";\nimport { property as n } from \"../../../core/accessorSupport/decorators/property.js\";\nimport { subclass as o } from \"../../../core/accessorSupport/decorators/subclass.js\";\nimport { RenderRequestType as d } from \"../webgl-engine/lib/basicInterfaces.js\";\nlet a = class extends r {\n  constructor(e) {\n    super(e), this.view = null, this.consumes = {\n      required: []\n    }, this.produces = \"composite-color\", this._context = null, this._dirty = !0;\n  }\n  initialize() {\n    this.addHandles([i(() => this.view.ready, e => {\n      e && this.view._stage?.renderer.addRenderNode(this);\n    }, s)]);\n  }\n  destroy() {\n    this.view._stage?.renderer?.removeRenderNode(this);\n  }\n  render() {\n    throw new t(\"RenderNode:render-function-not-implemented\", \"render() is not implemented.\");\n  }\n  get camera() {\n    return this.view.state.camera.clone();\n  }\n  get sunLight() {\n    return this.bindParameters.lighting.legacy;\n  }\n  get gl() {\n    return this.view._stage.renderView.renderingContext.gl;\n  }\n  acquireOutputFramebuffer() {\n    const e = this._frameBuffer?.getTexture()?.descriptor,\n      r = this.view._stage.renderer.fboCache.acquire(e?.width ?? 640, e?.height ?? 480, this.produces);\n    return r.fbo?.initializeAndBind(), r;\n  }\n  bindRenderTarget() {\n    return this._frameBuffer?.fbo?.initializeAndBind(), this._frameBuffer;\n  }\n  requestRender(e) {\n    e === d.UPDATE && this.view._stage?.renderView.requestRender(e), this._dirty = !0;\n  }\n  resetWebGLState() {\n    this.renderingContext.resetState(), this.renderingContext.bindFramebuffer(this._frameBuffer?.fbo);\n  }\n  get fboCache() {\n    return this.view._stage.renderer.fboCache;\n  }\n  get bindParameters() {\n    return this._context.bindParameters;\n  }\n  get renderingContext() {\n    return this.view._stage.renderView.renderingContext;\n  }\n  updateAnimation() {\n    return !!this._dirty && (this._dirty = !1, !0);\n  }\n  doRender(e, r) {\n    this._context = r, this._frameBuffer = e.find(({\n      name: e\n    }) => e === this.produces);\n    try {\n      return this.render(e);\n    } finally {\n      this._frameBuffer = null;\n    }\n  }\n};\ne([n({\n  constructOnly: !0\n})], a.prototype, \"view\", void 0), e([n({\n  constructOnly: !0\n})], a.prototype, \"consumes\", void 0), e([n()], a.prototype, \"produces\", void 0), a = e([o(\"esri.views.3d.webgl.RenderNode\")], a);\nconst c = a;\nexport { c as default };", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { ReloadableShaderModule as r } from \"../../core/shaderTechnique/ReloadableShaderModule.js\";\nimport { ShaderTechnique as e } from \"../../core/shaderTechnique/ShaderTechnique.js\";\nimport { Default3D as i } from \"../../lib/DefaultVertexAttributeLocations.js\";\nimport { Program as o } from \"../../lib/Program.js\";\nimport { S as t } from \"../../../../../chunks/SSAOBlur.glsl.js\";\nimport { makePipelineState as s, defaultColorWriteParams as l } from \"../../../../webgl/renderState.js\";\nclass a extends e {\n  initializeProgram(r) {\n    return new o(r.rctx, a.shader.get().build(), i);\n  }\n  initializePipeline() {\n    return s({\n      colorWrite: l\n    });\n  }\n}\na.shader = new r(t, () => import(\"../../shaders/SSAOBlur.glsl.js\"));\nexport { a as SSAOBlurTechnique };", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nconst e = \"eXKEvZaUc66cjIKElE1jlJ6MjJ6Ufkl+jn2fcXp5jBx7c6KEflSGiXuXeW6OWs+tfqZ2Yot2Y7Zzfo2BhniEj3xoiXuXj4eGZpqEaHKDWjSMe7palFlzc3BziYOGlFVzg6Zzg7CUY5JrjFF7eYJ4jIKEcyyEonSXe7qUfqZ7j3xofqZ2c4R5lFZ5Y0WUbppoe1l2cIh2ezyUho+BcHN2cG6DbpqJhqp2e1GcezhrdldzjFGUcyxjc3aRjDyEc1h7Sl17c6aMjH92pb6Mjpd4dnqBjMOEhqZleIOBYzB7gYx+fnqGjJuEkWlwnCx7fGl+c4hjfGyRe5qMlNOMfnqGhIWHc6OMi4GDc6aMfqZuc6aMzqJzlKZ+lJ6Me3qRfoFue0WUhoR5UraEa6qMkXiPjMOMlJOGe7JrUqKMjK6MeYRzdod+Sl17boiPc6qEeYBlcIh2c1WEe7GDiWCDa0WMjEmMdod+Y0WcdntzhmN8WjyMjKJjiXtzgYxYaGd+a89zlEV7e2GJfnd+lF1rcK5zc4p5cHuBhL6EcXp5eYB7fnh8iX6HjIKEeaxuiYOGc66RfG2Ja5hzjlGMjEmMe9OEgXuPfHyGhPeEdl6JY02McGuMfnqGhFiMa3WJfnx2l4hwcG1uhmN8c0WMc39og1GBbrCEjE2EZY+JcIh2cIuGhIWHe0mEhIVrc09+gY5+eYBlnCyMhGCDl3drfmmMgX15aGd+gYx+fnuRfnhzY1SMsluJfnd+hm98WtNrcIuGh4SEj0qPdkqOjFF7jNNjdnqBgaqUjMt7boeBhnZ4jDR7c5pze4GGjEFrhLqMjHyMc0mUhKZze4WEa117kWlwbpqJjHZ2eX2Bc09zeId+e0V7WlF7jHJ2l72BfId8l3eBgXyBe897jGl7c66cgW+Xc76EjKNbgaSEjGx4fId8jFFjgZB8cG6DhlFziZhrcIh2fH6HgUqBgXiPY8dahGFzjEmMhEFre2dxhoBzc5SGfleGe6alc7aUeYBlhKqUdlp+cH5za4OEczxza0Gcc4J2jHZ5iXuXjH2Jh5yRjH2JcFx+hImBjH+MpddCl3dreZeJjIt8ZW18bm1zjoSEeIOBlF9oh3N7hlqBY4+UeYFwhLJjeYFwaGd+gUqBYxiEYot2fqZ2ondzhL6EYyiEY02Ea0VjgZB8doaGjHxoc66cjEGEiXuXiXWMiZhreHx8frGMe75rY02Ec5pzfnhzlEp4a3VzjM+EhFFza3mUY7Zza1V5e2iMfGyRcziEhDyEkXZ2Y4OBnCx7g5t2eyBjgV6EhEFrcIh2dod+c4Z+nJ5zjm15jEmUeYxijJp7nL6clIpjhoR5WrZraGd+fnuRa6pzlIiMg6ZzfHx5foh+eX1ufnB5eX1ufnB5aJt7UqKMjIh+e3aBfm5lbYSBhGFze6J4c39oc0mUc4Z+e0V7fKFVe0WEdoaGY02Ec4Z+Y02EZYWBfH6HgU1+gY5+hIWUgW+XjJ57ebWRhFVScHuBfJ6PhBx7WqJzlM+Ujpd4gHZziX6HjHmEgZN+lJt5boiPe2GJgX+GjIGJgHZzeaxufnB5hF2JtdN7jJ57hp57hK6ElFVzg6ZzbmiEbndzhIWHe3uJfoFue3qRhJd2j3xoc65zlE1jc3p8lE1jhniEgXJ7e657vZaUc3qBh52BhIF4aHKDa9drgY5+c52GWqZzbpqJe8tjnM+UhIeMfo2BfGl+hG1zSmmMjKJjZVaGgX15c1lze0mEp4OHa3mUhIWHhDyclJ6MeYOJkXiPc0VzhFiMlKaEboSJa5Jze41re3qRhn+HZYWBe0mEc4p5fnORbox5lEp4hGFjhGGEjJuEc1WEhLZjeHeGa7KlfHx2hLaMeX1ugY5+hIWHhKGPjMN7c1WEho1zhoBzZYx7fnhzlJt5exyUhFFziXtzfmmMa6qMYyiEiXxweV12kZSMeWqXSl17fnhzxmmMrVGEe1mcc4p5eHeGjK6MgY5+doaGa6pzlGV7g1qBh4KHkXiPeW6OaKqafqZ2eXZ5e1V7jGd7boSJc3BzhJd2e0mcYot2h1RoY8dahK6EQmWEWjx7e1l2lL6UgXyBdnR4eU9zc0VreX1umqaBhld7fo2Bc6KEc5Z+hDyEcIeBWtNrfHyGe5qMhMuMe5qMhEGEbVVupcNzg3aHhIF4boeBe0mEdlptc39ofFl5Y8uUlJOGiYt2UmGEcyxjjGx4jFF7a657ZYWBnElzhp57iXtrgZN+tfOEhIOBjE2HgU1+e8tjjKNbiWCDhE15gUqBgYN7fnqGc66ce9d7iYSBj0qPcG6DnGGcT3eGa6qMZY+JlIiMl4hwc3aRdnqBlGV7eHJ2hLZjfnuRhDyEeX6MSk17g6Z+c6aUjHmEhIF4gXyBc76EZW18fGl+fkl+jCxrhoVwhDyUhIqGlL2DlI6EhJd2tdN7eYORhEGMa2Faa6pzc3Bzc4R5lIRznM+UY9eMhDycc5Z+c4p5c4iGY117pb6MgXuPrbJafnx2eYOJeXZ5e657hDyEcziElKZjfoB5eHeGj4WRhGGEe6KGeX1utTStc76EhFGJnCyMa5hzfH6HnNeceYB7hmN8gYuMhIVrczSMgYF8h3N7c5pza5hzjJqEYIRdgYuMlL2DeYRzhGGEeX1uhLaEc4iGeZ1zdl6JhrVteX6Me2iMfm5lWqJzSpqEa6pzdnmchHx2c6OMhNdrhoR5g3aHczxzeW52gV6Ejm15frGMc0Vzc4Z+l3drfniJe+9rWq5rlF1rhGGEhoVwe9OEfoh+e7pac09+c3qBY0lrhDycdnp2lJ6MiYOGhGCDc3aRlL2DlJt5doaGdnp2gYF8gWeOjF2Uc4R5c5Z+jEmMe7KEc4mEeYJ4dmyBe0mcgXiPbqJ7eYB7fmGGiYSJjICGlF1reZ2PnElzbpqJfH6Hc39oe4WEc5eJhK6EhqyJc3qBgZB8c09+hEmEaHKDhFGJc5SGiXWMUpaEa89zc6OMnCyMiXtrho+Be5qMc7KEjJ57dmN+hKGPjICGbmiEe7prdod+hGCDdnmchBx7eX6MkXZ2hGGEa657hm98jFFjY5JreYOJgY2EjHZ2a295Y3FajJ6Mc1J+YzB7e4WBjF2Uc4R5eV12gYxzg1qBeId+c9OUc5pzjFFjgY5+hFiMlIaPhoR5lIpjjIKBlNdSe7KEeX2BfrGMhIqGc65zjE2UhK6EklZ+QmWEeziMWqZza3VzdnR4foh+gYF8n3iJiZhrnKp7gYF8eId+lJ6Me1lrcIuGjKJjhmN8c66MjFF7a6prjJ6UnJ5zezyUfruRWlF7nI5zfHyGe657h4SEe8tjhBx7jFFjc09+c39ojICMeZeJeXt+YzRzjHZ2c0WEcIeBeXZ5onSXkVR+gYJ+eYFwdldzgYF7eX2BjJ6UiXuXlE1jh4SEe1mchLJjc4Z+hqZ7eXZ5bm1zlL6Ue5p7iWeGhKqUY5pzjKJjcIeBe8t7gXyBYIRdlEp4a3mGnK6EfmmMZpqEfFl5gYxzjKZuhGFjhoKGhHx2fnx2eXuMe3aBiWeGvbKMe6KGa5hzYzB7gZOBlGV7hmN8hqZlYot2Y117a6pzc6KEfId8foB5rctrfneJfJ6PcHN2hFiMc5pzjH92c0VzgY2EcElzdmCBlFVzg1GBc65zY4OBboeBcHiBeYJ4ewxzfHx5lIRzlEmEnLKEbk1zfJ6PhmN8eYBljBiEnMOEiXxwezyUcIeBe76EdsKEeX2BdnR4jGWUrXWMjGd7fkl+j4WRlEGMa5Jzho+BhDyEfnqMeXt+g3aHlE1jczClhNN7ZW18eHx8hGFjZW18iXWMjKJjhH57gYuMcIuGWjyMe4ZtjJuExmmMj4WRdntzi4GDhFFzYIRdnGGcjJp7Y0F7e4WEkbCGiX57fnSHa657a6prhBCMe3Z+SmmMjH92eHJ2hK6EY1FzexhrvbKMnI5za4OEfnd+eXuMhImBe897hLaMjN+EfG+BeIOBhF1+eZeJi4GDkXZ2eXKEgZ6Ejpd4c2GHa1V5e5KUfqZuhCx7jKp7lLZrg11+hHx2hFWUoot2nI5zgbh5mo9zvZaUe3qRbqKMfqZ2kbCGhFiM\";\nexport { e as noiseData };", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { create as s } from \"../../../../../core/libs/gl-matrix-2/factories/vec2f64.js\";\nimport { NoParameters as e } from \"../../core/shaderModules/interfaces.js\";\nclass r extends e {\n  constructor() {\n    super(...arguments), this.projScale = 1;\n  }\n}\nclass t extends r {\n  constructor() {\n    super(...arguments), this.intensity = 1;\n  }\n}\nclass c extends e {}\nclass o extends c {\n  constructor() {\n    super(...arguments), this.blurSize = s();\n  }\n}\nexport { o as BlurDrawParameters, r as BlurPassParameters, c as SSAODrawParameters, t as SSAOPassParameters };", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { ReloadableShaderModule as e } from \"../../core/shaderTechnique/ReloadableShaderModule.js\";\nimport { ShaderTechnique as r } from \"../../core/shaderTechnique/ShaderTechnique.js\";\nimport { Default3D as i } from \"../../lib/DefaultVertexAttributeLocations.js\";\nimport { Program as o } from \"../../lib/Program.js\";\nimport { S as t } from \"../../../../../chunks/SSAO.glsl.js\";\nimport { makePipelineState as s, defaultColorWriteParams as a } from \"../../../../webgl/renderState.js\";\nclass l extends r {\n  initializeProgram(e) {\n    return new o(e.rctx, l.shader.get().build(), i);\n  }\n  initializePipeline() {\n    return s({\n      colorWrite: a\n    });\n  }\n}\nl.shader = new e(t, () => import(\"../../shaders/SSAO.glsl.js\"));\nexport { l as SSAOTechnique };", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { _ as e } from \"../../../../../chunks/tslib.es6.js\";\nimport { clamp as r } from \"../../../../../core/mathUtils.js\";\nimport { disposeMaybe as s } from \"../../../../../core/maybe.js\";\nimport { watch as t } from \"../../../../../core/reactiveUtils.js\";\nimport { Milliseconds as i } from \"../../../../../core/time.js\";\nimport { property as o } from \"../../../../../core/accessorSupport/decorators/property.js\";\nimport \"../../../../../core/has.js\";\nimport \"../../../../../core/Logger.js\";\nimport \"../../../../../core/RandomLCG.js\";\nimport { subclass as a } from \"../../../../../core/accessorSupport/decorators/subclass.js\";\nimport { set as n } from \"../../../../../core/libs/gl-matrix-2/math/vec2.js\";\nimport { ColorFormat as m } from \"../../../webgl/formats.js\";\nimport c from \"../../../webgl/RenderNode.js\";\nimport { distanceFadeEnd as u, distanceFadeStart as h } from \"../../core/shaderLibrary/shading/ScreenSpaceConstants.js\";\nimport { SSAOBlurTechnique as p } from \"./SSAOBlurTechnique.js\";\nimport { noiseData as l } from \"./SSAONoiseData.js\";\nimport { SSAOPassParameters as d, BlurDrawParameters as b } from \"./SSAOParameters.js\";\nimport { SSAOTechnique as f } from \"./SSAOTechnique.js\";\nimport { RenderRequestType as T } from \"../../lib/basicInterfaces.js\";\nimport { g as _ } from \"../../../../../chunks/SSAO.glsl.js\";\nimport { TextureWrapMode as w, PixelFormat as q, DepthStencilAttachment as x, ClearBufferBit as P } from \"../../../../webgl/enums.js\";\nimport { Texture as j } from \"../../../../webgl/Texture.js\";\nimport { TextureDescriptor as S } from \"../../../../webgl/TextureDescriptor.js\";\nconst g = 2;\nlet y = class extends c {\n  constructor(e) {\n    super(e), this.consumes = {\n      required: [\"normals\"]\n    }, this.produces = \"ssao\", this.isEnabled = () => !1, this._enableTime = i(0), this._passParameters = new d(), this._drawParameters = new b();\n  }\n  initialize() {\n    const e = Uint8Array.from(atob(l), e => e.charCodeAt(0)),\n      r = new S();\n    r.wrapMode = w.CLAMP_TO_EDGE, r.pixelFormat = q.RGB, r.wrapMode = w.REPEAT, r.hasMipmap = !0, r.width = 32, r.height = 32, this._passParameters.noiseTexture = new j(this.renderingContext, r, e), this._ssaoTechnique = this.techniques.acquire(f), this._blurTechnique = this.techniques.acquire(p), this.addHandles(t(() => this.isEnabled(), () => this._enableTime = i(0)));\n  }\n  destroy() {\n    this._passParameters.noiseTexture = s(this._passParameters.noiseTexture), this._blurTechnique.release(), this._ssaoTechnique.release();\n  }\n  render(e) {\n    const s = this.bindParameters,\n      t = e.find(({\n        name: e\n      }) => \"normals\" === e),\n      o = t?.getTexture(),\n      a = t?.getTexture(x),\n      c = this.fboCache,\n      p = s.camera,\n      l = p.fullViewport[2],\n      d = p.fullViewport[3],\n      b = Math.round(l / g),\n      f = Math.round(d / g);\n    if (!this._ssaoTechnique.compiled || !this._blurTechnique.compiled) return this._enableTime = i(performance.now()), this.requestRender(), c.acquire(b, f, \"ssao\", m.RED);\n    0 === this._enableTime && (this._enableTime = i(performance.now()));\n    const w = this.renderingContext,\n      q = this.view.qualitySettings.fadeDuration,\n      j = p.relativeElevation,\n      S = r((u - j) / (u - h), 0, 1),\n      y = q > 0 ? Math.min(q, performance.now() - this._enableTime) / q : 1,\n      A = y * S;\n    this._passParameters.normalTexture = o, this._passParameters.depthTexture = a, this._passParameters.projScale = 1 / p.computeScreenPixelSizeAtDist(1), this._passParameters.intensity = 4 * E / _(p) ** 6 * A;\n    const R = c.acquire(l, d, \"ssao input\", m.RG);\n    w.unbindTexture(R.fbo.colorTexture), w.bindFramebuffer(R.fbo), w.setViewport(0, 0, l, d), w.bindTechnique(this._ssaoTechnique, s, this._passParameters, this._drawParameters), w.screen.draw();\n    const v = c.acquire(b, f, \"ssao blur\", m.RED);\n    w.unbindTexture(v.fbo.colorTexture), w.bindFramebuffer(v.fbo), this._drawParameters.colorTexture = R.getTexture(), n(this._drawParameters.blurSize, 0, g / d), w.bindTechnique(this._blurTechnique, s, this._passParameters, this._drawParameters), w.setViewport(0, 0, b, f), w.screen.draw(), R.release();\n    const O = c.acquire(b, f, \"ssao\", m.RED);\n    return w.unbindTexture(O.fbo.colorTexture), w.bindFramebuffer(O.fbo), w.setViewport(0, 0, l, d), w.setClearColor(1, 1, 1, 0), w.clear(P.COLOR_BUFFER_BIT), this._drawParameters.colorTexture = v.getTexture(), n(this._drawParameters.blurSize, g / l, 0), w.bindTechnique(this._blurTechnique, s, this._passParameters, this._drawParameters), w.setViewport(0, 0, b, f), w.screen.draw(), w.setViewport4fv(p.fullViewport), v.release(), y < 1 && this.requestRender(T.UPDATE), O;\n  }\n};\ne([o()], y.prototype, \"consumes\", void 0), e([o()], y.prototype, \"produces\", void 0), e([o({\n  constructOnly: !0\n})], y.prototype, \"techniques\", void 0), e([o({\n  constructOnly: !0\n})], y.prototype, \"isEnabled\", void 0), y = e([a(\"esri.views.3d.webgl-engine.effects.ssao.SSAO\")], y);\nconst E = .5;\nexport { y as SSAO, g as blurSizePixels };", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { glsl as e } from \"../../shaderModules/interfaces.js\";\nimport { Texture2DPassUniform as s } from \"../../shaderModules/Texture2DPassUniform.js\";\nimport { blurSizePixels as r } from \"../../../effects/ssao/SSAO.js\";\nfunction t(t, o) {\n  const a = t.fragment;\n  o.receiveAmbientOcclusion ? (a.uniforms.add(new s(\"ssaoTex\", (e, s) => s.ssao?.getTexture())), a.constants.add(\"blurSizePixelsInverse\", \"float\", 1 / r), a.code.add(e`float evaluateAmbientOcclusionInverse() {\nvec2 ssaoTextureSizeInverse = 1.0 / vec2(textureSize(ssaoTex, 0));\nreturn texture(ssaoTex, gl_FragCoord.xy * blurSizePixelsInverse * ssaoTextureSizeInverse).r;\n}\nfloat evaluateAmbientOcclusion() {\nreturn 1.0 - evaluateAmbientOcclusionInverse();\n}`)) : a.code.add(e`float evaluateAmbientOcclusionInverse() { return 1.0; }\nfloat evaluateAmbientOcclusion() { return 0.0; }`);\n}\nexport { t as EvaluateAmbientOcclusion };", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport { neverReached as i } from \"../../../../../../core/compilerUtils.js\";\nimport { EvaluateAmbientLighting as n } from \"./EvaluateAmbientLighting.glsl.js\";\nimport { EvaluateAmbientOcclusion as e } from \"./EvaluateAmbientOcclusion.glsl.js\";\nimport { addMainLightDirection as o, addMainLightIntensity as t, MainLighting as a } from \"./MainLighting.glsl.js\";\nimport { PhysicallyBasedRendering as r } from \"./PhysicallyBasedRendering.glsl.js\";\nimport { PBRMode as l } from \"./PhysicallyBasedRenderingParameters.glsl.js\";\nimport { PiUtils as c } from \"./PiUtils.glsl.js\";\nimport { BooleanPassUniform as d } from \"../../shaderModules/BooleanPassUniform.js\";\nimport { FloatPassUniform as s } from \"../../shaderModules/FloatPassUniform.js\";\nimport { glsl as m } from \"../../shaderModules/interfaces.js\";\nimport { ambientBoost as g } from \"../../../lighting/SceneLighting.js\";\nfunction u(i) {\n  i.constants.add(\"ambientBoostFactor\", \"float\", g);\n}\nfunction h(i) {\n  i.uniforms.add(new s(\"lightingGlobalFactor\", (i, n) => n.lighting.globalFactor));\n}\nfunction p(g, p) {\n  const v = g.fragment;\n  switch (g.include(e, p), p.pbrMode !== l.Disabled && g.include(r, p), g.include(n, p), g.include(c), v.code.add(m`\n    const float GAMMA_SRGB = 2.1;\n    const float INV_GAMMA_SRGB = 0.4761904;\n    ${p.pbrMode === l.Disabled ? \"\" : \"const vec3 GROUND_REFLECTANCE = vec3(0.2);\"}\n  `), u(v), h(v), o(v), v.code.add(m`\n    float additionalDirectedAmbientLight(vec3 vPosWorld) {\n      float vndl = dot(${p.spherical ? m`normalize(vPosWorld)` : m`vec3(0.0, 0.0, 1.0)`}, mainLightDirection);\n      return smoothstep(0.0, 1.0, clamp(vndl * 2.5, 0.0, 1.0));\n    }\n  `), t(v), v.code.add(m`vec3 evaluateAdditionalLighting(float ambientOcclusion, vec3 vPosWorld) {\nfloat additionalAmbientScale = additionalDirectedAmbientLight(vPosWorld);\nreturn (1.0 - ambientOcclusion) * additionalAmbientScale * ambientBoostFactor * lightingGlobalFactor * mainLightIntensity;\n}`), p.pbrMode) {\n    case l.Disabled:\n    case l.WaterOnIntegratedMesh:\n    case l.Water:\n      g.include(a), v.code.add(m`vec3 evaluateSceneLighting(vec3 normalWorld, vec3 albedo, float shadow, float ssao, vec3 additionalLight)\n{\nvec3 mainLighting = evaluateMainLighting(normalWorld, shadow);\nvec3 ambientLighting = calculateAmbientIrradiance(normalWorld, ssao);\nvec3 albedoLinear = pow(albedo, vec3(GAMMA_SRGB));\nvec3 totalLight = mainLighting + ambientLighting + additionalLight;\ntotalLight = min(totalLight, vec3(PI));\nvec3 outColor = vec3((albedoLinear / PI) * totalLight);\nreturn pow(outColor, vec3(INV_GAMMA_SRGB));\n}`);\n      break;\n    case l.Normal:\n    case l.Schematic:\n      v.code.add(m`const float fillLightIntensity = 0.25;\nconst float horizonLightDiffusion = 0.4;\nconst float additionalAmbientIrradianceFactor = 0.02;\nvec3 evaluateSceneLightingPBR(vec3 normal, vec3 albedo, float shadow, float ssao, vec3 additionalLight, vec3 viewDir, vec3 normalGround, vec3 mrr, vec3 _emission, float additionalAmbientIrradiance)\n{\nvec3 viewDirection = -viewDir;\nvec3 h = normalize(viewDirection + mainLightDirection);\nPBRShadingInfo inputs;\ninputs.NdotL = clamp(dot(normal, mainLightDirection), 0.001, 1.0);\ninputs.NdotV = clamp(abs(dot(normal, viewDirection)), 0.001, 1.0);\ninputs.NdotH = clamp(dot(normal, h), 0.0, 1.0);\ninputs.VdotH = clamp(dot(viewDirection, h), 0.0, 1.0);\ninputs.NdotNG = clamp(dot(normal, normalGround), -1.0, 1.0);\nvec3 reflectedView = normalize(reflect(viewDirection, normal));\ninputs.RdotNG = clamp(dot(reflectedView, normalGround), -1.0, 1.0);\ninputs.albedoLinear = pow(albedo, vec3(GAMMA_SRGB));\ninputs.ssao = ssao;\ninputs.metalness = mrr[0];\ninputs.roughness = clamp(mrr[1] * mrr[1], 0.001, 0.99);`), v.code.add(m`inputs.f0 = (0.16 * mrr[2] * mrr[2]) * (1.0 - inputs.metalness) + inputs.albedoLinear * inputs.metalness;\ninputs.f90 = vec3(clamp(dot(inputs.f0, vec3(50.0 * 0.33)), 0.0, 1.0));\ninputs.diffuseColor = inputs.albedoLinear * (vec3(1.0) - inputs.f0) * (1.0 - inputs.metalness);`), p.useFillLights ? v.uniforms.add(new d(\"hasFillLights\", (i, n) => n.enableFillLights)) : v.constants.add(\"hasFillLights\", \"bool\", !1), v.code.add(m`vec3 ambientDir = vec3(5.0 * normalGround[1] - normalGround[0] * normalGround[2], - 5.0 * normalGround[0] - normalGround[2] * normalGround[1], normalGround[1] * normalGround[1] + normalGround[0] * normalGround[0]);\nambientDir = ambientDir != vec3(0.0) ? normalize(ambientDir) : normalize(vec3(5.0, -1.0, 0.0));\ninputs.NdotAmbDir = hasFillLights ? abs(dot(normal, ambientDir)) : 1.0;\nvec3 mainLightIrradianceComponent = inputs.NdotL * (1.0 - shadow) * mainLightIntensity;\nvec3 fillLightsIrradianceComponent = inputs.NdotAmbDir * mainLightIntensity * fillLightIntensity;\nvec3 ambientLightIrradianceComponent = calculateAmbientIrradiance(normal, ssao) + additionalLight;\ninputs.skyIrradianceToSurface = ambientLightIrradianceComponent + mainLightIrradianceComponent + fillLightsIrradianceComponent ;\ninputs.groundIrradianceToSurface = GROUND_REFLECTANCE * ambientLightIrradianceComponent + mainLightIrradianceComponent + fillLightsIrradianceComponent ;`), v.uniforms.add(new s(\"lightingSpecularStrength\", (i, n) => n.lighting.mainLight.specularStrength), new s(\"lightingEnvironmentStrength\", (i, n) => n.lighting.mainLight.environmentStrength)), v.code.add(m`vec3 horizonRingDir = inputs.RdotNG * normalGround - reflectedView;\nvec3 horizonRingH = normalize(viewDirection + horizonRingDir);\ninputs.NdotH_Horizon = dot(normal, horizonRingH);\nvec3 mainLightRadianceComponent = lightingSpecularStrength * normalDistribution(inputs.NdotH, inputs.roughness) * mainLightIntensity * (1.0 - shadow);\nvec3 horizonLightRadianceComponent = lightingEnvironmentStrength * normalDistribution(inputs.NdotH_Horizon, min(inputs.roughness + horizonLightDiffusion, 1.0)) * mainLightIntensity * fillLightIntensity;\nvec3 ambientLightRadianceComponent = lightingEnvironmentStrength * calculateAmbientRadiance(ssao) + additionalLight;\nfloat normalDirectionModifier = mix(1., min(mix(0.1, 2.0, (inputs.NdotNG + 1.) * 0.5), 1.0), clamp(inputs.roughness * 5.0, 0.0 , 1.0));\ninputs.skyRadianceToSurface = (ambientLightRadianceComponent + horizonLightRadianceComponent) * normalDirectionModifier + mainLightRadianceComponent;\ninputs.groundRadianceToSurface = 0.5 * GROUND_REFLECTANCE * (ambientLightRadianceComponent + horizonLightRadianceComponent) * normalDirectionModifier + mainLightRadianceComponent;\ninputs.averageAmbientRadiance = ambientLightIrradianceComponent[1] * (1.0 + GROUND_REFLECTANCE[1]);`), v.code.add(m`\n        vec3 reflectedColorComponent = evaluateEnvironmentIllumination(inputs);\n        vec3 additionalMaterialReflectanceComponent = inputs.albedoLinear * additionalAmbientIrradiance;\n        vec3 emissionComponent = _emission == vec3(0.0) ? _emission : pow(_emission, vec3(GAMMA_SRGB));\n        vec3 outColorLinear = reflectedColorComponent + additionalMaterialReflectanceComponent + emissionComponent;\n        ${p.pbrMode !== l.Schematic || p.hasColorTexture ? m`vec3 outColor = pow(blackLevelSoftCompression(outColorLinear, inputs), vec3(INV_GAMMA_SRGB));` : m`vec3 outColor = pow(max(vec3(0.0), outColorLinear - 0.005 * inputs.averageAmbientRadiance), vec3(INV_GAMMA_SRGB));`}\n        return outColor;\n      }\n    `);\n      break;\n    case l.Simplified:\n    case l.TerrainWithWater:\n      g.include(a), v.code.add(m`const float roughnessTerrain = 0.5;\nconst float specularityTerrain = 0.5;\nconst vec3 fresnelReflectionTerrain = vec3(0.04);\nvec3 evaluatePBRSimplifiedLighting(vec3 n, vec3 c, float shadow, float ssao, vec3 al, vec3 vd, vec3 nup) {\nvec3 viewDirection = -vd;\nvec3 h = normalize(viewDirection + mainLightDirection);\nfloat NdotL = clamp(dot(n, mainLightDirection), 0.001, 1.0);\nfloat NdotV = clamp(abs(dot(n, viewDirection)), 0.001, 1.0);\nfloat NdotH = clamp(dot(n, h), 0.0, 1.0);\nfloat NdotNG = clamp(dot(n, nup), -1.0, 1.0);\nvec3 albedoLinear = pow(c, vec3(GAMMA_SRGB));\nfloat lightness = 0.3 * albedoLinear[0] + 0.5 * albedoLinear[1] + 0.2 * albedoLinear[2];\nvec3 f0 = (0.85 * lightness + 0.15) * fresnelReflectionTerrain;\nvec3 f90 =  vec3(clamp(dot(f0, vec3(50.0 * 0.33)), 0.0, 1.0));\nvec3 mainLightIrradianceComponent = (1. - shadow) * NdotL * mainLightIntensity;\nvec3 ambientLightIrradianceComponent = calculateAmbientIrradiance(n, ssao) + al;\nvec3 ambientSky = ambientLightIrradianceComponent + mainLightIrradianceComponent;\nvec3 indirectDiffuse = ((1.0 - NdotNG) * mainLightIrradianceComponent + (1.0 + NdotNG ) * ambientSky) * 0.5;\nvec3 outDiffColor = albedoLinear * (1.0 - f0) * indirectDiffuse / PI;\nvec3 mainLightRadianceComponent = normalDistribution(NdotH, roughnessTerrain) * mainLightIntensity;\nvec2 dfg = prefilteredDFGAnalytical(roughnessTerrain, NdotV);\nvec3 specularColor = f0 * dfg.x + f90 * dfg.y;\nvec3 specularComponent = specularityTerrain * specularColor * mainLightRadianceComponent;\nvec3 outColorLinear = outDiffColor + specularComponent;\nvec3 outColor = pow(outColorLinear, vec3(INV_GAMMA_SRGB));\nreturn outColor;\n}`);\n      break;\n    default:\n      i(p.pbrMode);\n    case l.COUNT:\n  }\n}\nexport { p as EvaluateSceneLighting, u as addAmbientBoostFactor, h as addLightingGlobalFactor };"],
  "mappings": "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",
  "names": ["e", "d", "o", "a", "a", "e", "r", "c", "a", "r", "O", "S", "_", "t", "e", "r", "n", "t", "c", "o", "l", "r", "e", "O", "S", "_", "t", "y", "c", "e", "t", "o", "r", "l", "a", "s", "p", "d", "S", "R", "v", "O", "t", "o", "a", "s", "e", "u", "o", "i", "n", "g", "p", "v", "t", "c", "r", "a", "s"]
}
